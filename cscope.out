cscope 15 $HOME/ics2022 -q 0000009675 0001484019
	@abstract-machine/am/include/am.h

1 #i‚de‡
AM_H__


2 
	#AM_H__


	)

4 
	~<°döt.h
>

5 
	~<°ddef.h
>

6 
	~<°dboﬁ.h
>

7 #ö˛udê
ARCH_H


11 
	#MMAP_NONE
 0x00000000

12 
	#MMAP_READ
 0x00000001

13 
	#MMAP_WRITE
 0x00000002

14 

	)

17 *
	m°¨t
, *
	míd
;

18 } 
	tAªa
;

21 
C⁄ãxt
 
	tC⁄ãxt
;

26 
	mEVENT_NULL
 = 0,

27 
	mEVENT_YIELD
, 
	mEVENT_SYSCALL
, 
	mEVENT_PAGEFAULT
, 
	mEVENT_ERROR
,

28 
	mEVENT_IRQ_TIMER
, 
	mEVENT_IRQ_IODEV
,

29 } 
	mevít
;

30 
uöçå_t
 
	mˇu£
, 
	mªf
;

31 c⁄° *
	mmsg
;

32 } 
	tEvít
;

37 
	mpgsize
;

38 
Aªa
 
	m¨ó
;

39 *
	m±r
;

40 } 
	tAddrS∑˚
;

42 #ifde‡
__˝lu•lus


47 
Aªa
 
hóp
;

48 
putch
 (
ch
);

49 
hÆt
 (
code
Ë
__©åibuã__
((
__n‹ëu∫__
));

52 
boﬁ
 
i€_öô
 ();

53 
i€_ªad
 (
ªg
, *
buf
);

54 
i€_wrôe
 (
ªg
, *
buf
);

55 
	~"amdev.h
"

58 
boﬁ
 
˘e_öô
 (
C⁄ãxt
 *(*
h™dÀr
)(
Evít
 
ev
, C⁄ãxà*
˘x
));

59 
yõld
 ();

60 
boﬁ
 
õ«bÀd
 ();

61 
i£t
 (
boﬁ
 
íabÀ
);

62 
C⁄ãxt
 *
kc⁄ãxt
 (
Aªa
 
k°ack
, (*
íåy
)(*), *
¨g
);

65 
boﬁ
 
vme_öô
 (*(*
pgÆloc
)(), (*
pg‰ì
)(*));

66 
¥Ÿe˘
 (
AddrS∑˚
 *
as
);

67 
u≈rŸe˘
 (
AddrS∑˚
 *
as
);

68 
m≠
 (
AddrS∑˚
 *
as
, *
vaddr
, *
∑ddr
, 
¥Ÿ
);

69 
C⁄ãxt
 *
uc⁄ãxt
 (
AddrS∑˚
 *
as
, 
Aªa
 
k°ack
, *
íåy
);

72 
boﬁ
 
m≥_öô
 ((*
íåy
)());

73 
˝u_cou¡
 ();

74 
˝u_cuºít
 ();

75 
©omic_xchg
 (*
addr
, 
√wvÆ
);

77 #ifde‡
__˝lu•lus


	@abstract-machine/am/include/amdev.h

1 #i‚de‡
__AMDEV_H__


2 
	#__AMDEV_H__


	)

6 
	#AM_DEVREG
(
id
, 
ªg
, 
≥rm
, ...) \

7 íum { 
AM_
##
ªg
 = (
id
) }; \

8 °ru˘ { 
__VA_ARGS__
; } 
	tAM_
##
	tªg
##
	t_T
;

	)

10 
AM_DEVREG
–1, 
UART_CONFIG
, 
RD
, 
boﬁ
 
¥e£¡
);

11 
AM_DEVREG
–2, 
UART_TX
, 
WR
, 
d©a
);

12 
AM_DEVREG
–3, 
UART_RX
, 
RD
, 
d©a
);

13 
AM_DEVREG
–4, 
TIMER_CONFIG
, 
RD
, 
boﬁ
 
¥e£¡
, 
has_πc
);

14 
AM_DEVREG
–5, 
TIMER_RTC
, 
RD
, 
yór
, 
m⁄th
, 
day
, 
hour
, 
möuã
, 
£c⁄d
);

15 
AM_DEVREG
–6, 
TIMER_UPTIME
, 
RD
, 
uöt64_t
 
us
);

16 
AM_DEVREG
–7, 
INPUT_CONFIG
, 
RD
, 
boﬁ
 
¥e£¡
);

17 
AM_DEVREG
–8, 
INPUT_KEYBRD
, 
RD
, 
boﬁ
 
keydown
; 
keycode
);

18 
AM_DEVREG
–9, 
GPU_CONFIG
, 
RD
, 
boﬁ
 
¥e£¡
, 
has_ac˚l
; 
width
, 
height
, 
vmemsz
);

19 
AM_DEVREG
(10, 
GPU_STATUS
, 
RD
, 
boﬁ
 
ªady
);

20 
AM_DEVREG
(11, 
GPU_FBDRAW
, 
WR
, 
x
, 
y
; *
pixñs
; 
w
, 
h
; 
boﬁ
 
sync
);

21 
AM_DEVREG
(12, 
GPU_MEMCPY
, 
WR
, 
uöt32_t
 
de°
; *
§c
; 
size
);

22 
AM_DEVREG
(13, 
GPU_RENDER
, 
WR
, 
uöt32_t
 
roŸ
);

23 
AM_DEVREG
(14, 
AUDIO_CONFIG
, 
RD
, 
boﬁ
 
¥e£¡
; 
bufsize
);

24 
AM_DEVREG
(15, 
AUDIO_CTRL
, 
WR
, 
‰eq
, 
ch™√ls
, 
ßm∂es
);

25 
AM_DEVREG
(16, 
AUDIO_STATUS
, 
RD
, 
cou¡
);

26 
AM_DEVREG
(17, 
AUDIO_PLAY
, 
WR
, 
Aªa
 
buf
);

27 
AM_DEVREG
(18, 
DISK_CONFIG
, 
RD
, 
boﬁ
 
¥e£¡
; 
blksz
, 
blk˙t
);

28 
AM_DEVREG
(19, 
DISK_STATUS
, 
RD
, 
boﬁ
 
ªady
);

29 
AM_DEVREG
(20, 
DISK_BLKIO
, 
WR
, 
boﬁ
 
wrôe
; *
buf
; 
blkno
, 
blk˙t
);

30 
AM_DEVREG
(21, 
NET_CONFIG
, 
RD
, 
boﬁ
 
¥e£¡
);

31 
AM_DEVREG
(22, 
NET_STATUS
, 
RD
, 
rx_Àn
, 
tx_Àn
);

32 
AM_DEVREG
(23, 
NET_TX
, 
WR
, 
Aªa
 
buf
);

33 
AM_DEVREG
(24, 
NET_RX
, 
WR
, 
Aªa
 
buf
);

37 
	#AM_KEYS
(
_
) \

38 
	`_
(
ESCAPE
Ë_(
F1
Ë_(
F2
Ë_(
F3
Ë_(
F4
Ë_(
F5
Ë_(
F6
Ë_(
F7
Ë_(
F8
Ë_(
F9
Ë_(
F10
Ë_(
F11
Ë_(
F12
) \

39 
	`_
(
GRAVE
Ë_(1Ë_(2Ë_(3Ë_(4Ë_(5Ë_(6Ë_(7Ë_(8Ë_(9Ë_(0Ë_(
MINUS
Ë_(
EQUALS
Ë_(
BACKSPACE
) \

40 
	`_
(
TAB
Ë_(
Q
Ë_(
W
Ë_(
E
Ë_(
R
Ë_(
T
Ë_(
Y
Ë_(
U
Ë_(
I
Ë_(
O
Ë_(
P
Ë_(
LEFTBRACKET
Ë_(
RIGHTBRACKET
Ë_(
BACKSLASH
) \

41 
	`_
(
CAPSLOCK
Ë_(
A
Ë_(
S
Ë_(
D
Ë_(
F
Ë_(
G
Ë_(
H
Ë_(
J
Ë_(
K
Ë_(
L
Ë_(
SEMICOLON
Ë_(
APOSTROPHE
Ë_(
RETURN
) \

42 
	`_
(
LSHIFT
Ë_(
Z
Ë_(
X
Ë_(
C
Ë_(
V
Ë_(
B
Ë_(
N
Ë_(
M
Ë_(
COMMA
Ë_(
PERIOD
Ë_(
SLASH
Ë_(
RSHIFT
) \

43 
	`_
(
LCTRL
Ë_(
APPLICATION
Ë_(
LALT
Ë_(
SPACE
Ë_(
RALT
Ë_(
RCTRL
) \

44 
	`_
(
UP
Ë_(
DOWN
Ë_(
LEFT
Ë_(
RIGHT
Ë_(
INSERT
Ë_(
DELETE
Ë_(
HOME
Ë_(
END
Ë_(
PAGEUP
Ë_(
PAGEDOWN
)

	)

46 
	#AM_KEY_NAMES
(
key
Ë
AM_KEY_
##key,

	)

48 
	mAM_KEY_NONE
 = 0,

49 
AM_KEYS
(
AM_KEY_NAMES
)

54 
	#AM_GPU_TEXTURE
 1

	)

55 
	#AM_GPU_SUBTREE
 2

	)

56 
	#AM_GPU_NULL
 0xffffffff

	)

58 
uöt32_t
 
	tgpu±r_t
;

60 
	sgpu_ãxtuªdesc
 {

61 
uöt16_t
 
	mw
, 
	mh
;

62 
gpu±r_t
 
	mpixñs
;

63 } 
__©åibuã__
((
∑cked
));

65 
	sgpu_ˇnvas
 {

66 
uöt16_t
 
	mty≥
, 
	mw
, 
	mh
, 
	mx1
, 
	my1
, 
	mw1
, 
	mh1
;

67 
gpu±r_t
 
	msiblög
;

69 
gpu±r_t
 
	mchûd
;

70 
gpu_ãxtuªdesc
 
	mãxtuª
;

72 } 
__©åibuã__
((
∑cked
));

	@abstract-machine/am/include/arch/mips32-nemu.h

1 #i‚de‡
__ARCH_H__


2 
	#__ARCH_H__


	)

4 
	sC⁄ãxt
 {

6 
uöçå_t
 
	mhi
, 
	mg¥
[32], 
	mïc
, 
	mˇu£
, 
	mlo
, 
	m°©us
;

7 *
	mpdú
;

10 
	#GPR1
 
g¥
[2]

11 
	#GPR2
 
g¥
[0]

	)

12 
	#GPR3
 
g¥
[0]

	)

13 
	#GPR4
 
g¥
[0]

	)

14 
	#GPRx
 
g¥
[0]

	)

	@abstract-machine/am/include/arch/native.h

1 #i‚de‡
ARCH_H__


2 
	#ARCH_H__


	)

4 #i‚de‡
__USE_GNU


5 
	#__USE_GNU


	)

8 
	~<uc⁄ãxt.h
>

10 
	sC⁄ãxt
 {

11 
uöçå_t
 
	mk•
;

12 *
	mvm_hód
;

13 
uc⁄ãxt_t
 
	muc
;

15 
uöt8_t
 
	mªdz⁄e
[128];

18 
	#GPR1
 
uc
.
uc_mc⁄ãxt
.
gªgs
[
REG_RDI
]

	)

19 
	#GPR2
 
uc
.
uc_mc⁄ãxt
.
gªgs
[
REG_RSI
]

	)

20 
	#GPR3
 
uc
.
uc_mc⁄ãxt
.
gªgs
[
REG_RDX
]

	)

21 
	#GPR4
 
uc
.
uc_mc⁄ãxt
.
gªgs
[
REG_RCX
]

	)

22 
	#GPRx
 
uc
.
uc_mc⁄ãxt
.
gªgs
[
REG_RAX
]

	)

24 #unde‡
__USE_GNU


	@abstract-machine/am/include/arch/riscv32-nemu.h

1 #i‚de‡
ARCH_H__


2 
	#ARCH_H__


	)

4 
	sC⁄ãxt
 {

6 
uöçå_t
 
	mmïc
, 
	mmˇu£
, 
	mg¥
[32], 
	mm°©us
;

7 *
	mpdú
;

10 
	#GPR1
 
g¥
[17]

11 
	#GPR2
 
g¥
[0]

	)

12 
	#GPR3
 
g¥
[0]

	)

13 
	#GPR4
 
g¥
[0]

	)

14 
	#GPRx
 
g¥
[0]

	)

	@abstract-machine/am/include/arch/riscv64-mycpu.h

1 #i‚de‡
ARCH_H__


2 
	#ARCH_H__


	)

4 
	sC⁄ãxt
 {

6 
uöçå_t
 
	mmïc
, 
	mmˇu£
, 
	mg¥
[32], 
	mm°©us
;

9 
	#GPR1
 
g¥
[17]

10 
	#GPR2
 
g¥
[0]

	)

11 
	#GPR3
 
g¥
[0]

	)

12 
	#GPR4
 
g¥
[0]

	)

13 
	#GPRx
 
g¥
[0]

	)

	@abstract-machine/am/include/arch/riscv64-nemu.h

1 #i‚de‡
ARCH_H__


2 
	#ARCH_H__


	)

4 
	sC⁄ãxt
 {

6 
uöçå_t
 
	mmïc
, 
	mmˇu£
, 
	mg¥
[32], 
	mm°©us
;

7 *
	mpdú
;

10 
	#GPR1
 
g¥
[17]

11 
	#GPR2
 
g¥
[0]

	)

12 
	#GPR3
 
g¥
[0]

	)

13 
	#GPR4
 
g¥
[0]

	)

14 
	#GPRx
 
g¥
[0]

	)

	@abstract-machine/am/include/arch/spike.h

1 #i‚de‡
ARCH_H__


2 
	#ARCH_H__


	)

4 
	sC⁄ãxt
 {

5 
uöçå_t
 
	mg¥
[1];

8 
	#GPR1
 
g¥
[0]

	)

9 
	#GPR2
 
g¥
[0]

	)

10 
	#GPR3
 
g¥
[0]

	)

11 
	#GPR4
 
g¥
[0]

	)

12 
	#GPRx
 
g¥
[0]

	)

	@abstract-machine/am/include/arch/x86-nemu.h

1 #i‚de‡
ARCH_H__


2 
	#ARCH_H__


	)

4 
	sC⁄ãxt
 {

6 
uöçå_t
 
	mesi
, 
	mebx
, 
	móx
, 
	meù
, 
	medx
, 
	meÊags
, 
	mecx
, 
	mcs
, 
	me•
, 
	medi
, 
	mebp
;

7 *
	m¸3
;

8 
	múq
;

11 
	#GPR1
 
óx


	)

12 
	#GPR2
 
eù


	)

13 
	#GPR3
 
eù


	)

14 
	#GPR4
 
eù


	)

15 
	#GPRx
 
eù


	)

	@abstract-machine/am/include/arch/x86-qemu.h

1 #i‚de‡
ARCH_H__


2 
	#ARCH_H__


	)

4 
	sC⁄ãxt
 {

5 *
	m¸3
;

6 
uöt32_t
 
	mds
, 
	móx
, 
	mebx
, 
	mecx
, 
	medx
,

7 
	me•0
, 
	mesi
, 
	medi
, 
	mebp
,

8 
	meù
, 
	mcs
, 
	meÊags
, 
	me•
, 
	mss3
;

11 
	#GPR1
 
óx


	)

12 
	#GPR2
 
ebx


	)

13 
	#GPR3
 
ecx


	)

14 
	#GPR4
 
edx


	)

15 
	#GPRx
 
óx


	)

	@abstract-machine/am/include/arch/x86_64-qemu.h

1 #i‚de‡
ARCH_H__


2 
	#ARCH_H__


	)

4 
	sC⁄ãxt
 {

5 *
	m¸3
;

6 
uöt64_t
 
	møx
, 
	mrbx
, 
	mrcx
, 
	mrdx
,

7 
	mrbp
, 
	mrsi
, 
	mrdi
,

8 
	mr8
, 
	mr9
, 
	mr10
, 
	mr11
,

9 
	mr12
, 
	mr13
, 
	mr14
, 
	mr15
,

10 
	mrù
, 
	mcs
, 
	mrÊags
,

11 
	mr•
, 
	mss
, 
	mr•0
;

15 
	#GPR1
 
rdi


	)

16 
	#GPR2
 
rsi


	)

17 
	#GPR3
 
rdx


	)

18 
	#GPR4
 
rcx


	)

19 
	#GPRx
 
øx


	)

	@abstract-machine/am/src/mips/mips32.h

1 #i‚de‡
MIPS32_H__


2 
	#MIPS32_H__


	)

4 
	~<°döt.h
>

6 
ölöe
 
uöt8_t
 
	$öb
(
uöçå_t
 
addr
Ë{  *(vﬁ©ûê
uöt8_t
 *Ôddr; 
	}
}

7 
ölöe
 
uöt16_t
 
	$öw
(
uöçå_t
 
addr
Ë{  *(vﬁ©ûê
uöt16_t
 *Ôddr; 
	}
}

8 
ölöe
 
uöt32_t
 
	$öl
(
uöçå_t
 
addr
Ë{  *(vﬁ©ûê
uöt32_t
 *Ôddr; 
	}
}

10 
ölöe
 
	$outb
(
uöçå_t
 
addr
, 
uöt8_t
 
d©a
Ë{ *(vﬁ©ûêuöt8_à*Ôdd∏d©a; 
	}
}

11 
ölöe
 
	$outw
(
uöçå_t
 
addr
, 
uöt16_t
 
d©a
Ë{ *(vﬁ©ûêuöt16_à*Ôdd∏d©a; 
	}
}

12 
ölöe
 
	$oué
(
uöçå_t
 
addr
, 
uöt32_t
 
d©a
Ë{ *(vﬁ©ûêuöt32_à*Ôdd∏d©a; 
	}
}

14 
	#PTE_V
 0x2

	)

15 
	#PTE_D
 0x4

	)

18 
	#PTXSHFT
 12

19 
	#PDXSHFT
 22

20 

	)

21 
	#PDX
(
va
Ë(((
uöt32_t
)(vaË>> 
PDXSHFT
Ë& 0x3ff)

	)

22 
	#PTX
(
va
Ë(((
uöt32_t
)(vaË>> 
PTXSHFT
Ë& 0x3ff)

	)

	@abstract-machine/am/src/mips/nemu/cte.c

1 
	~<am.h
>

2 
	~<mùs/mùs32.h
>

3 
	~<klib.h
>

5 
	gC⁄ãxt
* (*
	gu£r_h™dÀr
)(
	gEvít
, C⁄ãxt*Ë
NULL
;

7 
ölöe
 
boﬁ
 
	$gë_CU0
(
C⁄ãxt
 *
c
Ë{  (c->
°©us
 >> 28Ë& 0x1; 
	}
}

9 
C⁄ãxt
* 
	$__am_úq_h™dÀ
(
C⁄ãxt
 *
c
) {

10 i‡(
u£r_h™dÀr
) {

11 
Evít
 
ev
 = {0};

12 
uöt32_t
 
ex_code
 = 0;

13 
ex_code
) {

14 : 
ev
.
evít
 = 
EVENT_ERROR
; ;

17 
c
 = 
	`u£r_h™dÀr
(
ev
, c);

18 
	`as£π
(
c
 !
NULL
);

21  
c
;

22 
	}
}

24 
__am_asm_å≠
();

26 
	#EX_ENTRY
 0x80000180

	)

28 
boﬁ
 
	$˘e_öô
(
C⁄ãxt
*(*
h™dÀr
)(
Evít
, Context*)) {

30 c⁄° 
uöt32_t
 
j_›code
 = 0x08000000;

31 
uöt32_t
 
ö°r
 = 
j_›code
 | (((uöt32_t)
__am_asm_å≠
 >> 2) & 0x3ffffff);

32 *(
uöt32_t
 *)
EX_ENTRY
 = 
ö°r
;

33 *(
uöt32_t
 *)(
EX_ENTRY
 + 4) = 0;

34 *(
uöt32_t
 *)0x80000000 = 
ö°r
;

35 *(
uöt32_t
 *)(0x80000000 + 4) = 0;

38 
u£r_h™dÀr
 = 
h™dÀr
;

40  
åue
;

41 
	}
}

43 
C⁄ãxt
 *
	$kc⁄ãxt
(
Aªa
 
k°ack
, (*
íåy
)(*), *
¨g
) {

44  
NULL
;

45 
	}
}

47 
	$yõld
() {

48 
asm
 volatile("syscall 1");

49 
	}
}

51 
boﬁ
 
	$õ«bÀd
() {

52  
Ál£
;

53 
	}
}

55 
	$i£t
(
boﬁ
 
íabÀ
) {

56 
	}
}

	@abstract-machine/am/src/mips/nemu/vme.c

1 
	~<am.h
>

2 
	~<√mu.h
>

4 
	#USER_SPACE
 
	`RANGE
(0x40000000, 0x80000000)

	)

6 * (*
	gpgÆloc_u§
)(Ë
NULL
;

7 (*
pg‰ì_u§
)(*Ë
NULL
;

8 
vme_íabÀ
 = 0;

10 
boﬁ
 
	$vme_öô
(* (*
pgÆloc_f
)(), (*
pg‰ì_f
)(*)) {

11 
pgÆloc_u§
 = 
pgÆloc_f
;

12 
pg‰ì_u§
 = 
pg‰ì_f
;

13 
vme_íabÀ
 = 1;

15  
åue
;

16 
	}
}

18 
	$¥Ÿe˘
(
AddrS∑˚
 *
as
) {

19 
as
->
±r
 = (
PTE
*)(
	`pgÆloc_u§
(
PGSIZE
));

20 
as
->
pgsize
 = 
PGSIZE
;

21 
as
->
¨ó
 = 
USER_SPACE
;

22 
	}
}

24 
	$u≈rŸe˘
(
AddrS∑˚
 *
as
) {

25 
	}
}

27 
PTE
 *
	gcur_pdú
 = 
NULL
;

28 
	$__am_gë_cur_as
(
C⁄ãxt
 *
c
) {

29 
c
->
pdú
 = 
cur_pdú
;

30 
	}
}

32 
	$__am_swôch
(
C⁄ãxt
 *
c
) {

33 i‡(
vme_íabÀ
 && 
c
->
pdú
 !
NULL
) {

34 
cur_pdú
 = 
c
->
pdú
;

36 
	}
}

38 
	$m≠
(
AddrS∑˚
 *
as
, *
va
, *
∑
, 
¥Ÿ
) {

39 
	}
}

41 
C⁄ãxt
 *
	$uc⁄ãxt
(
AddrS∑˚
 *
as
, 
Aªa
 
k°ack
, *
íåy
) {

42  
NULL
;

43 
	}
}

	@abstract-machine/am/src/native/cte.c

1 
	~<sys/time.h
>

2 
	~<°rög.h
>

3 
	~"∂©f‹m.h
"

5 
	#TIMER_HZ
 100

	)

6 
	#SYSCALL_INSTR_LEN
 7

	)

8 
	gC⁄ãxt
* (*
	gu£r_h™dÀr
)(
	gEvít
, C⁄ãxt*Ë
NULL
;

10 
__am_kc⁄ãxt_°¨t
();

11 
__am_swôch
(
C⁄ãxt
 *
c
);

12 
__am_ö_u£r•a˚
(*
addr
);

13 
__am_pmem_¥Ÿe˘
();

14 
__am_pmem_u≈rŸe˘
();

16 
	$__am_∑nic_⁄_ªtu∫
(Ë{ 
	`∑nic
("shouldÇŸÑóch hîe\n"); 
	}
}

18 
	$úq_h™dÀ
(
C⁄ãxt
 *
c
) {

19 
c
->
vm_hód
 = 
this˝u
->vm_head;

20 
c
->
k•
 = 
this˝u
->ksp;

22 i‡(
this˝u
->
ev
.
evít
 =
EVENT_ERROR
) {

23 
uöçå_t
 
rù
 = 
c
->
uc
.
uc_mc⁄ãxt
.
gªgs
[
REG_RIP
];

24 
	`¥ötf
("Unhandle signal '%s'átÑip = %p, badaddr = %p, cause = 0x%x\n",

25 
this˝u
->
ev
.
msg
, 
rù
,Åhis˝u->ev.
ªf
,Åhis˝u->ev.
ˇu£
);

26 
	`as£π
(0);

28 
c
 = 
	`u£r_h™dÀr
(
this˝u
->
ev
, c);

29 
	`as£π
(
c
 !
NULL
);

31 
	`__am_swôch
(
c
);

34 (*
p
)(
C⁄ãxt
 *
c
Ë(*)(
uöçå_t
)0x100008;

35 
	`p
(
c
);

36 
	`__am_∑nic_⁄_ªtu∫
();

37 
	}
}

39 
	$£tup_°ack
(
uöçå_t
 
evít
, 
uc⁄ãxt_t
 *
uc
) {

40 *
rù
 = (*)
uc
->
uc_mc⁄ãxt
.
gªgs
[
REG_RIP
];

41 
uöt8_t
 
_°¨t
, 
_ëext
;

42 
å≠_‰om_u£r
 = 
	`__am_ö_u£r•a˚
(
rù
);

43 
sig«l_ß„
 = 
	`IN_RANGE
(
rù
, 
	`RANGE
(&
_°¨t
, &
_ëext
)Ë|| 
å≠_‰om_u£r
 ||

46 (
rù
 =(*)&
sig¥ocmask
 + 13);

48 i‡(((
evít
 =
EVENT_IRQ_IODEV
Ë|| (evíà=
EVENT_IRQ_TIMER
)Ë&& !
sig«l_ß„
) {

59 i‡(
å≠_‰om_u£r
Ë
	`__am_pmem_u≈rŸe˘
();

62 i‡(
evít
 =
EVENT_SYSCALL
Ë{ 
rù
 +
SYSCALL_INSTR_LEN
; }

63 
uc
->
uc_mc⁄ãxt
.
gªgs
[
REG_RIP
] = (
uöçå_t
)
rù
;

66 
uöçå_t
 
r•
 = 
å≠_‰om_u£r
 ? 
this˝u
->
k•
 : 
uc
->
uc_mc⁄ãxt
.
gªgs
[
REG_RSP
];

67 
r•
 -(
C⁄ãxt
);

69 i‡((
r•
 + 8) % 16 != 0)Ñsp -= 8;

70 
C⁄ãxt
 *
c
 = (*)
r•
;

73 
c
->
uc
 = *uc;

76 
	`__am_gë_öå_sigmask
(&
uc
->
uc_sigmask
);

79 
uc
->
uc_mc⁄ãxt
.
gªgs
[
REG_RDI
] = (
uöçå_t
)
c
;

80 
uc
->
uc_mc⁄ãxt
.
gªgs
[
REG_RIP
] = (
uöçå_t
)
úq_h™dÀ
;

81 
uc
->
uc_mc⁄ãxt
.
gªgs
[
REG_RSP
] = (
uöçå_t
)
c
;

82 
	}
}

84 
	$úë
(
uc⁄ãxt_t
 *
uc
) {

85 
C⁄ãxt
 *
c
 = (*)
uc
->
uc_mc⁄ãxt
.
gªgs
[
REG_RDI
];

87 *
uc
 = 
c
->uc;

88 
this˝u
->
k•
 = 
c
->ksp;

89 i‡(
	`__am_ö_u£r•a˚
((*)
uc
->
uc_mc⁄ãxt
.
gªgs
[
REG_RIP
])Ë
	`__am_pmem_¥Ÿe˘
();

90 
	}
}

92 
	$sig_h™dÀr
(
sig
, 
sigöfo_t
 *
öfo
, *
uc⁄ãxt
) {

93 
this˝u
->
ev
 = (
Evít
) {0};

94 
this˝u
->
ev
.
evít
 = 
EVENT_ERROR
;

95 
sig
) {

96 
SIGUSR1
: 
this˝u
->
ev
.
evít
 = 
EVENT_IRQ_IODEV
; ;

97 
SIGUSR2
: 
this˝u
->
ev
.
evít
 = 
EVENT_YIELD
; ;

98 
SIGVTALRM
: 
this˝u
->
ev
.
evít
 = 
EVENT_IRQ_TIMER
; ;

99 
SIGSEGV
:

100 i‡(
öfo
->
si_code
 =
SEGV_ACCERR
) {

101 (
uöçå_t
)
öfo
->
si_addr
) {

102 0x100000: 
this˝u
->
ev
.
evít
 = 
EVENT_SYSCALL
; ;

103 0x100008: 
	`úë
(
uc⁄ãxt
); ;

106 i‡(
	`__am_ö_u£r•a˚
(
öfo
->
si_addr
)) {

107 
	`as£π
(
this˝u
->
ev
.
evít
 =
EVENT_ERROR
);

108 
this˝u
->
ev
.
evít
 = 
EVENT_PAGEFAULT
;

109 
öfo
->
si_code
) {

110 
SEGV_MAPERR
: 
this˝u
->
ev
.
ˇu£
 = 
MMAP_READ
; ;

112 
SEGV_ACCERR
: 
this˝u
->
ev
.
ˇu£
 = 
MMAP_WRITE
; ;

113 : 
	`as£π
(0);

115 
this˝u
->
ev
.
ªf
 = (
uöçå_t
)
öfo
->
si_addr
;

120 i‡(
this˝u
->
ev
.
evít
 =
EVENT_ERROR
) {

121 
this˝u
->
ev
.
ªf
 = (
uöçå_t
)
öfo
->
si_addr
;

122 
this˝u
->
ev
.
ˇu£
 = (
uöçå_t
)
öfo
->
si_code
;

123 
this˝u
->
ev
.
msg
 = 
	`°rsig«l
(
sig
);

125 
	`£tup_°ack
(
this˝u
->
ev
.
evít
, 
uc⁄ãxt
);

126 
	}
}

129 
	$ö°Æl_sig«l_h™dÀr
() {

130 
siga˘i⁄
 
s
;

131 
	`mem£t
(&
s
, 0, (s));

132 
s
.
ß_siga˘i⁄
 = 
sig_h™dÀr
;

133 
s
.
ß_Êags
 = 
SA_SIGINFO
 | 
SA_RESTART
 | 
SA_ONSTACK
;

134 
	`__am_gë_öå_sigmask
(&
s
.
ß_mask
);

136 
ªt
 = 
	`siga˘i⁄
(
SIGVTALRM
, &
s
, 
NULL
);

137 
	`as£π
(
ªt
 == 0);

138 
ªt
 = 
	`siga˘i⁄
(
SIGUSR1
, &
s
, 
NULL
);

139 
	`as£π
(
ªt
 == 0);

140 
ªt
 = 
	`siga˘i⁄
(
SIGUSR2
, &
s
, 
NULL
);

141 
	`as£π
(
ªt
 == 0);

142 
ªt
 = 
	`siga˘i⁄
(
SIGSEGV
, &
s
, 
NULL
);

143 
	`as£π
(
ªt
 == 0);

144 
	}
}

147 
	$__am_öô_timî_úq
() {

148 
	`i£t
(0);

150 
ôimîvÆ
 
ô
 = {};

151 
ô
.
ô_vÆue
.
tv_£c
 = 0;

152 
ô
.
ô_vÆue
.
tv_u£c
 = 1000000 / 
TIMER_HZ
;

153 
ô
.
ô_öãrvÆ
 = it.
ô_vÆue
;

154 
ªt
 = 
	`£tôimî
(
ITIMER_VIRTUAL
, &
ô
, 
NULL
);

155 
	`as£π
(
ªt
 == 0);

156 
	}
}

158 
boﬁ
 
	$˘e_öô
(
C⁄ãxt
*(*
h™dÀr
)(
Evít
, Context*)) {

159 
u£r_h™dÀr
 = 
h™dÀr
;

161 
	`ö°Æl_sig«l_h™dÀr
();

162 
	`__am_öô_timî_úq
();

163  
åue
;

164 
	}
}

166 
C⁄ãxt
* 
	$kc⁄ãxt
(
Aªa
 
k°ack
, (*
íåy
)(*), *
¨g
) {

167 
C⁄ãxt
 *
c
 = (C⁄ãxt*)
k°ack
.
íd
 - 1;

169 
	`__am_gë_exam∂e_uc
(
c
);

170 
c
->
uc
.
uc_mc⁄ãxt
.
gªgs
[
REG_RIP
] = (
uöçå_t
)
__am_kc⁄ãxt_°¨t
;

171 
c
->
uc
.
uc_mc⁄ãxt
.
gªgs
[
REG_RSP
] = (
uöçå_t
)
k°ack
.
íd
;

173 
ªt
 = 
	`sigem±y£t
(&(
c
->
uc
.
uc_sigmask
));

174 
	`as£π
(
ªt
 == 0);

176 
c
->
vm_hód
 = 
NULL
;

178 
c
->
GPR1
 = (
uöçå_t
)
¨g
;

179 
c
->
GPR2
 = (
uöçå_t
)
íåy
;

180  
c
;

181 
	}
}

183 
	$yõld
() {

184 
	`øi£
(
SIGUSR2
);

185 
	}
}

187 
boﬁ
 
	$õ«bÀd
() {

188 
sig£t_t
 
£t
;

189 
ªt
 = 
	`sig¥ocmask
(0, 
NULL
, &
£t
);

190 
	`as£π
(
ªt
 == 0);

191  
	`__am_is_sigmask_°i
(&
£t
);

192 
	}
}

194 
	$i£t
(
boﬁ
 
íabÀ
) {

195 
sig£t_t
 
__am_öå_sigmask
;

197 
ªt
 = 
	`sig¥ocmask
(
íabÀ
 ? 
SIG_UNBLOCK
 : 
SIG_BLOCK
, &
__am_öå_sigmask
, 
NULL
);

198 
	`as£π
(
ªt
 == 0);

199 
	}
}

	@abstract-machine/am/src/native/ioe.c

1 
	~<am.h
>

2 
	~<klib-ma¸os.h
>

4 
boﬁ
 
	g__am_has_i€
 = 
Ál£
;

5 
boﬁ
 
	gi€_öô_d⁄e
 = 
Ál£
;

7 
__am_timî_öô
();

8 
__am_gpu_öô
();

9 
__am_öput_öô
();

10 
__am_audio_öô
();

11 
__am_disk_öô
();

12 
__am_öput_c⁄fig
(
AM_INPUT_CONFIG_T
 *);

13 
__am_timî_c⁄fig
(
AM_TIMER_CONFIG_T
 *);

14 
__am_timî_πc
(
AM_TIMER_RTC_T
 *);

15 
__am_timî_u±ime
(
AM_TIMER_UPTIME_T
 *);

16 
__am_öput_keybrd
(
AM_INPUT_KEYBRD_T
 *);

17 
__am_gpu_c⁄fig
(
AM_GPU_CONFIG_T
 *);

18 
__am_gpu_°©us
(
AM_GPU_STATUS_T
 *);

19 
__am_gpu_fbdøw
(
AM_GPU_FBDRAW_T
 *);

20 
__am_audio_c⁄fig
(
AM_AUDIO_CONFIG_T
 *);

21 
__am_audio_˘æ
(
AM_AUDIO_CTRL_T
 *);

22 
__am_audio_°©us
(
AM_AUDIO_STATUS_T
 *);

23 
__am_audio_∂ay
(
AM_AUDIO_PLAY_T
 *);

24 
__am_disk_c⁄fig
(
AM_DISK_CONFIG_T
 *
cfg
);

25 
__am_disk_°©us
(
AM_DISK_STATUS_T
 *
°©
);

26 
__am_disk_blkio
(
AM_DISK_BLKIO_T
 *
io
);

27 
	$__am_u¨t_c⁄fig
(
AM_UART_CONFIG_T
 *
cfg
Ë{ cfg->
¥e£¡
 = 
Ál£
; 
	}
}

28 
	$__am_√t_c⁄fig
 (
AM_NET_CONFIG_T
 *
cfg
Ë{ cfg->
¥e£¡
 = 
Ál£
; 
	}
}

30 (*
	th™dÀr_t
)(*
	tbuf
);

31 *
lut
[128] = {

32 [
AM_TIMER_CONFIG
] = 
__am_timî_c⁄fig
,

33 [
AM_TIMER_RTC
 ] = 
__am_timî_πc
,

34 [
AM_TIMER_UPTIME
] = 
__am_timî_u±ime
,

35 [
AM_INPUT_CONFIG
] = 
__am_öput_c⁄fig
,

36 [
AM_INPUT_KEYBRD
] = 
__am_öput_keybrd
,

37 [
AM_GPU_CONFIG
 ] = 
__am_gpu_c⁄fig
,

38 [
AM_GPU_FBDRAW
 ] = 
__am_gpu_fbdøw
,

39 [
AM_GPU_STATUS
 ] = 
__am_gpu_°©us
,

40 [
AM_UART_CONFIG
 ] = 
__am_u¨t_c⁄fig
,

41 [
AM_AUDIO_CONFIG
] = 
__am_audio_c⁄fig
,

42 [
AM_AUDIO_CTRL
 ] = 
__am_audio_˘æ
,

43 [
AM_AUDIO_STATUS
] = 
__am_audio_°©us
,

44 [
AM_AUDIO_PLAY
 ] = 
__am_audio_∂ay
,

45 [
AM_DISK_CONFIG
 ] = 
__am_disk_c⁄fig
,

46 [
AM_DISK_STATUS
 ] = 
__am_disk_°©us
,

47 [
AM_DISK_BLKIO
 ] = 
__am_disk_blkio
,

48 [
AM_NET_CONFIG
 ] = 
__am_√t_c⁄fig
,

49 
	}
};

51 
boﬁ
 
	$i€_öô
() {

52 
	`∑nic_⁄
(
	`˝u_cuºít
() != 0, "call ioe_init() in other CPUs");

53 
	`∑nic_⁄
(
i€_öô_d⁄e
, "double-initialization");

54 
__am_has_i€
 = 
åue
;

55  
åue
;

56 
	}
}

58 
	$Áû
(*
buf
Ë{ 
	`∑nic
("ac˚s†n⁄exi°Ñegi°î"); 
	}
}

60 
	$__am_i€_öô
() {

61 
i
 = 0; i < 
	`LENGTH
(
lut
); i++)

62 i‡(!
lut
[
i
]Ëlut[i] = 
Áû
;

63 
	`__am_timî_öô
();

64 
	`__am_gpu_öô
();

65 
	`__am_öput_öô
();

66 
	`__am_audio_öô
();

67 
	`__am_disk_öô
();

68 
i€_öô_d⁄e
 = 
åue
;

69 
	}
}

71 
	$do_io
(
ªg
, *
buf
) {

72 i‡(!
i€_öô_d⁄e
) {

73 
	`__am_i€_öô
();

75 ((
h™dÀr_t
)
lut
[
ªg
])(
buf
);

76 
	}
}

78 
	$i€_ªad
 (
ªg
, *
buf
Ë{ 
	`do_io
‘eg, buf); 
	}
}

79 
	$i€_wrôe
(
ªg
, *
buf
Ë{ 
	`do_io
‘eg, buf); 
	}
}

	@abstract-machine/am/src/native/ioe/audio.c

1 
	#_GNU_SOURCE


	)

2 
	~<f˙é.h
>

3 
	~<uni°d.h
>

4 
	~<klib.h
>

5 
	~<SDL2/SDL.h
>

7 
	grfd
 = -1, 
	gwfd
 = -1;

8 vﬁ©ûê
	gcou¡
 = 0;

10 
	$__am_audio_öô
() {

11 
fds
[2];

12 
ªt
 = 
	`pùe2
(
fds
, 
O_NONBLOCK
);

13 
	`as£π
(
ªt
 == 0);

14 
rfd
 = 
fds
[0];

15 
wfd
 = 
fds
[1];

16 
	}
}

18 
	$audio_∂ay
(*
u£rd©a
, 
uöt8_t
 *
°ªam
, 
Àn
) {

19 
ƒód
 = 
Àn
;

20 i‡(
cou¡
 < 
Àn
Ë
ƒód
 = count;

21 
b
 = 0;

22 
b
 < 
ƒód
) {

23 
n
 = 
	`ªad
(
rfd
, 
°ªam
, 
ƒód
);

24 i‡(
n
 > 0Ë
b
 +=Ç;

27 
cou¡
 -
ƒód
;

28 i‡(
Àn
 > 
ƒód
) {

29 
	`mem£t
(
°ªam
 + 
ƒód
, 0, 
Àn
 -Çread);

31 
	}
}

33 
	$audio_wrôe
(
uöt8_t
 *
buf
, 
Àn
) {

34 
nwrôe
 = 0;

35 
nwrôe
 < 
Àn
) {

36 
n
 = 
	`wrôe
(
wfd
, 
buf
, 
Àn
);

37 i‡(
n
 == -1)Ç = 0;

38 
cou¡
 +
n
;

39 
nwrôe
 +
n
;

41 
	}
}

43 
	$__am_audio_˘æ
(
AM_AUDIO_CTRL_T
 *
˘æ
) {

44 
SDL_AudioS≥c
 
s
 = {};

45 
s
.
‰eq
 = 
˘æ
->freq;

46 
s
.
f‹m©
 = 
AUDIO_S16SYS
;

47 
s
.
ch™√ls
 = 
˘æ
->channels;

48 
s
.
ßm∂es
 = 
˘æ
->samples;

49 
s
.
ˇŒback
 = 
audio_∂ay
;

50 
s
.
u£rd©a
 = 
NULL
;

52 
cou¡
 = 0;

53 
ªt
 = 
	`SDL_InôSubSy°em
(
SDL_INIT_AUDIO
);

54 i‡(
ªt
 == 0) {

55 
	`SDL_O≥nAudio
(&
s
, 
NULL
);

56 
	`SDL_Pau£Audio
(0);

58 
	}
}

60 
	$__am_audio_°©us
(
AM_AUDIO_STATUS_T
 *
°©
) {

61 
°©
->
cou¡
 = count;

62 
	}
}

64 
	$__am_audio_∂ay
(
AM_AUDIO_PLAY_T
 *
˘l
) {

65 
Àn
 = 
˘l
->
buf
.
íd
 - cé->buf.
°¨t
;

66 
	`audio_wrôe
(
˘l
->
buf
.
°¨t
, 
Àn
);

67 
	}
}

69 
	$__am_audio_c⁄fig
(
AM_AUDIO_CONFIG_T
 *
cfg
) {

70 
cfg
->
¥e£¡
 = 
åue
;

71 
cfg
->
bufsize
 = 
	`f˙é
(
rfd
, 
F_GETPIPE_SZ
);

72 
	}
}

	@abstract-machine/am/src/native/ioe/disk.c

1 
	~<am.h
>

2 
	~<°dlib.h
>

3 
	~<°dio.h
>

4 
	~<as£π.h
>

6 
	#BLKSZ
 512

	)

8 
	gdisk_size
 = 0;

9 
FILE
 *
	gÂ
 = 
NULL
;

11 
	$__am_disk_öô
() {

12 c⁄° *
diskimg
 = 
	`gëív
("diskimg");

13 i‡(
diskimg
) {

14 
Â
 = 
	`f›í
(
diskimg
, "r+");

15 i‡(
Â
) {

16 
	`f£ek
(
Â
, 0, 
SEEK_END
);

17 
disk_size
 = (
	`·ñl
(
Â
) + 511) / 512;

18 
	`ªwöd
(
Â
);

21 
	}
}

23 
	$__am_disk_c⁄fig
(
AM_DISK_CONFIG_T
 *
cfg
) {

24 
cfg
->
¥e£¡
 = (
Â
 !
NULL
);

25 
cfg
->
blksz
 = 
BLKSZ
;

26 
cfg
->
blk˙t
 = 
disk_size
;

27 
	}
}

29 
	$__am_disk_°©us
(
AM_DISK_STATUS_T
 *
°©
) {

30 
°©
->
ªady
 = 1;

31 
	}
}

33 
	$__am_disk_blkio
(
AM_DISK_BLKIO_T
 *
io
) {

34 i‡(
Â
) {

35 
	`f£ek
(
Â
, 
io
->
blkno
 * 
BLKSZ
, 
SEEK_SET
);

36 
ªt
;

37 i‡(
io
->
wrôe
Ë
ªt
 = 
	`fwrôe
(io->
buf
, io->
blk˙t
 * 
BLKSZ
, 1, 
Â
);

38 
ªt
 = 
	`‰ód
(
io
->
buf
, io->
blk˙t
 * 
BLKSZ
, 1, 
Â
);

39 
	`as£π
(
ªt
 == 1);

41 
	}
}

	@abstract-machine/am/src/native/ioe/gpu.c

1 
	~<am.h
>

2 
	~<SDL2/SDL.h
>

3 
	~<„nv.h
>

6 #ifde‡
MODE_800x600


7 
	#W
 800

	)

8 
	#H
 600

	)

10 
	#W
 400

	)

11 
	#H
 300

	)

14 
	#FPS
 60

	)

16 
	#RMASK
 0x00ff0000

	)

17 
	#GMASK
 0x0000ff00

	)

18 
	#BMASK
 0x000000ff

	)

19 
	#AMASK
 0x00000000

	)

21 
SDL_Wödow
 *
	gwödow
 = 
NULL
;

22 
SDL_SurÁ˚
 *
	gsurÁ˚
 = 
NULL
;

24 
Uöt32
 
	$ãxtuª_sync
(
Uöt32
 
öãrvÆ
, *
∑øm
) {

25 
	`SDL_BlôSˇÀd
(
surÁ˚
, 
NULL
, 
	`SDL_GëWödowSurÁ˚
(
wödow
), NULL);

26 
	`SDL_Upd©eWödowSurÁ˚
(
wödow
);

27  
öãrvÆ
;

28 
	}
}

30 
	$__am_gpu_öô
() {

31 
	`SDL_Inô
(
SDL_INIT_VIDEO
 | 
SDL_INIT_TIMER
);

32 
wödow
 = 
	`SDL_Cª©eWödow
("Native Application",

33 
SDL_WINDOWPOS_UNDEFINED
, SDL_WINDOWPOS_UNDEFINED,

34 #ifde‡
MODE_800x600


35 
W
, 
H
,

37 
W
 * 2, 
H
 * 2,

39 
SDL_WINDOW_SHOWN
);

40 
surÁ˚
 = 
	`SDL_Cª©eRGBSurÁ˚
(
SDL_SWSURFACE
, 
W
, 
H
, 32,

41 
RMASK
, 
GMASK
, 
BMASK
, 
AMASK
);

42 
	`SDL_AddTimî
(1000 / 
FPS
, 
ãxtuª_sync
, 
NULL
);

43 
	}
}

45 
	$__am_gpu_c⁄fig
(
AM_GPU_CONFIG_T
 *
cfg
) {

46 *
cfg
 = (
AM_GPU_CONFIG_T
) {

47 .
¥e£¡
 = 
åue
, .
has_ac˚l
 = 
Ál£
,

48 .
width
 = 
W
, .
height
 = 
H
,

49 .
vmemsz
 = 0

51 
	}
}

53 
	$__am_gpu_°©us
(
AM_GPU_STATUS_T
 *
°©
) {

54 
°©
->
ªady
 = 
åue
;

55 
	}
}

57 
	$__am_gpu_fbdøw
(
AM_GPU_FBDRAW_T
 *
˘l
) {

58 
x
 = 
˘l
->x, 
y
 = cé->y, 
w
 = cé->w, 
h
 = ctl->h;

59 i‡(
w
 =0 || 
h
 == 0) ;

60 
	`„˛óªx˚±
(-1);

61 
SDL_SurÁ˚
 *
s
 = 
	`SDL_Cª©eRGBSurÁ˚From
(
˘l
->
pixñs
, 
w
, 
h
, 32, w * (
uöt32_t
),

62 
RMASK
, 
GMASK
, 
BMASK
, 
AMASK
);

63 
SDL_Re˘
 
ª˘
 = { .
x
 = x, .
y
 = y };

64 
	`SDL_BlôSurÁ˚
(
s
, 
NULL
, 
surÁ˚
, &
ª˘
);

65 
	`SDL_FªeSurÁ˚
(
s
);

66 
	}
}

	@abstract-machine/am/src/native/ioe/input.c

1 
	~<am.h
>

2 
	~<SDL2/SDL.h
>

4 
	#KEYDOWN_MASK
 0x8000

	)

6 
	#KEY_QUEUE_LEN
 1024

	)

7 
	gkey_queue
[
KEY_QUEUE_LEN
] = {};

8 
	gkey_f
 = 0, 
	gkey_r
 = 0;

9 
SDL_muãx
 *
	gkey_queue_lock
 = 
NULL
;

11 
	#XX
(
k
Ë[
SDL_SCANCODE_
##k] = 
AM_KEY_
##k,

	)

12 
	gkeym≠
[256] = {

13 
AM_KEYS
(
XX
)

16 
	$evít_thªad
(*
¨gs
) {

17 
SDL_Evít
 
evít
;

19 
	`SDL_WaôEvít
(&
evít
);

20 
evít
.
ty≥
) {

21 
SDL_QUIT
: 
	`hÆt
(0);

22 
SDL_KEYDOWN
:

23 
SDL_KEYUP
: {

24 
SDL_Keysym
 
k
 = 
evít
.
key
.
keysym
;

25 
keydown
 = 
evít
.
key
.
ty≥
 =
SDL_KEYDOWN
;

26 
sˇncode
 = 
k
.scancode;

27 i‡(
keym≠
[
sˇncode
] != 0) {

28 
am_code
 = 
keym≠
[
sˇncode
] | (
keydown
 ? 
KEYDOWN_MASK
 : 0);

29 
	`SDL_LockMuãx
(
key_queue_lock
);

30 
key_queue
[
key_r
] = 
am_code
;

31 
key_r
 = (key_∏+ 1Ë% 
KEY_QUEUE_LEN
;

32 
	`SDL_U∆ockMuãx
(
key_queue_lock
);

33 
	`__am_£nd_kbd_öå
();

34 
	`__am_£nd_kbd_öå
();

40 
	}
}

42 
	$__am_öput_öô
() {

43 
key_queue_lock
 = 
	`SDL_Cª©eMuãx
();

44 
	`SDL_Cª©eThªad
(
evít_thªad
, "evíàthªad", 
NULL
);

45 
	}
}

47 
	$__am_öput_c⁄fig
(
AM_INPUT_CONFIG_T
 *
cfg
) {

48 
cfg
->
¥e£¡
 = 
åue
;

49 
	}
}

51 
	$__am_öput_keybrd
(
AM_INPUT_KEYBRD_T
 *
kbd
) {

52 
k
 = 
AM_KEY_NONE
;

54 
	`SDL_LockMuãx
(
key_queue_lock
);

55 i‡(
key_f
 !
key_r
) {

56 
k
 = 
key_queue
[
key_f
];

57 
key_f
 = (key_‡+ 1Ë% 
KEY_QUEUE_LEN
;

59 
	`SDL_U∆ockMuãx
(
key_queue_lock
);

61 
kbd
->
keydown
 = (
k
 & 
KEYDOWN_MASK
 ? 
åue
 : 
Ál£
);

62 
kbd
->
keycode
 = 
k
 & ~
KEYDOWN_MASK
;

63 
	}
}

	@abstract-machine/am/src/native/ioe/timer.c

1 
	~<am.h
>

2 
	~<sys/time.h
>

3 
	~<time.h
>

5 
timevÆ
 
	gboŸ_time
 = {};

7 
	$__am_timî_c⁄fig
(
AM_TIMER_CONFIG_T
 *
cfg
) {

8 
cfg
->
¥e£¡
 = cfg->
has_πc
 = 
åue
;

9 
	}
}

11 
	$__am_timî_πc
(
AM_TIMER_RTC_T
 *
πc
) {

12 
time_t
 
t
 = 
	`time
(
NULL
);

13 
tm
 *tm = 
	`loˇ…ime
(&
t
);

14 
πc
->
£c⁄d
 = 
tm
->
tm_£c
;

15 
πc
->
möuã
 = 
tm
->
tm_mö
;

16 
πc
->
hour
 = 
tm
->
tm_hour
;

17 
πc
->
day
 = 
tm
->
tm_mday
;

18 
πc
->
m⁄th
 = 
tm
->
tm_m⁄
 + 1;

19 
πc
->
yór
 = 
tm
->
tm_yór
 + 1900;

20 
	}
}

22 
	$__am_timî_u±ime
(
AM_TIMER_UPTIME_T
 *
u±ime
) {

23 
timevÆ
 
now
;

24 
	`gëtimeofday
(&
now
, 
NULL
);

25 
£c⁄ds
 = 
now
.
tv_£c
 - 
boŸ_time
.tv_sec;

26 
u£c⁄ds
 = 
now
.
tv_u£c
 - 
boŸ_time
.tv_usec;

27 
u±ime
->
us
 = 
£c⁄ds
 * 1000000 + (
u£c⁄ds
 + 500);

28 
	}
}

30 
	$__am_timî_öô
() {

31 
	`gëtimeofday
(&
boŸ_time
, 
NULL
);

32 
	}
}

	@abstract-machine/am/src/native/mpe.c

1 
	~<°d©omic.h
>

2 
	~"∂©f‹m.h
"

4 
	g__am_m≥_öô
 = 0;

5 
boﬁ
 
__am_has_i€
;

6 
__am_i€_öô
();

8 
boﬁ
 
	$m≥_öô
((*
íåy
)()) {

9 
__am_m≥_öô
 = 1;

11 
sync_pùe
[2];

12 
	`as£π
(0 =
	`pùe
(
sync_pùe
));

14 
i
 = 1; i < 
	`˝u_cou¡
(); i++) {

15 i‡(
	`f‹k
() == 0) {

16 
ch
;

17 
	`as£π
(
	`ªad
(
sync_pùe
[0], &
ch
, 1) == 1);

18 
	`as£π
(
ch
 == '+');

19 
	`˛o£
(
sync_pùe
[0]); close(sync_pipe[1]);

21 
this˝u
->
˝uid
 = 
i
;

22 
	`__am_öô_timî_úq
();

23 
	`íåy
();

27 i‡(
__am_has_i€
) {

28 
	`__am_i€_öô
();

31 
i
 = 1; i < 
	`˝u_cou¡
(); i++) {

32 
	`as£π
(
	`wrôe
(
sync_pùe
[1], "+", 1) == 1);

34 
	`˛o£
(
sync_pùe
[0]); close(sync_pipe[1]);

36 
	`íåy
();

37 
	`∑nic
("MPÉntry shouldÇotÑeturn\n");

38 
	}
}

40 
	$˝u_cou¡
() {

41 
__am_n˝u
;

42  
__am_n˝u
;

43 
	}
}

45 
	$˝u_cuºít
() {

46  
this˝u
->
˝uid
;

47 
	}
}

49 
	$©omic_xchg
(*
addr
, 
√wvÆ
) {

50  
	`©omic_exch™ge
((*)
addr
, 
√wvÆ
);

51 
	}
}

	@abstract-machine/am/src/native/platform.c

1 
	#_GNU_SOURCE


	)

2 
	~<sys/mm™.h
>

3 
	~<sys/auxv.h
>

4 
	~<dlf˙.h
>

5 
	~<ñf.h
>

6 
	~<°dlib.h
>

7 
	~<°dio.h
>

8 
	~"∂©f‹m.h
"

10 
	#MAX_CPU
 16

	)

11 
	#TRAP_PAGE_START
 (*)0x100000

	)

12 
	#PMEM_START
 (*)0x1000000

13 
	#PMEM_SIZE
 (128 * 1024 * 1024)

14 
pmem_fd
 = 0;

	)

15 *
	gpmem
 = 
NULL
;

16 
uc⁄ãxt_t
 
	guc_exam∂e
 = {};

17 
	gsys_pgsz
;

18 *(*
	gmem˝y_libc
)(*, c⁄° *, 
	gsize_t
Ë
NULL
;

19 
sig£t_t
 
	g__am_öå_sigmask
 = {};

20 
__am_˝u_t
 *
	g__am_˝u_°ru˘
 = 
NULL
;

21 
	g__am_n˝u
 = 0;

22 
	g__am_pgsize
;

24 
	$ßve_c⁄ãxt_h™dÀr
(
sig
, 
sigöfo_t
 *
öfo
, *
uc⁄ãxt
) {

25 
	`mem˝y_libc
(&
uc_exam∂e
, 
uc⁄ãxt
, (uc_example));

26 
	}
}

28 
	$ßve_exam∂e_c⁄ãxt
() {

34 
siga˘i⁄
 
s
;

35 *(*
mem£t_libc
)(*, , 
size_t
Ë
	`dlsym
(
RTLD_NEXT
, "memset");

36 
	`mem£t_libc
(&
s
, 0, (s));

37 
s
.
ß_siga˘i⁄
 = 
ßve_c⁄ãxt_h™dÀr
;

38 
s
.
ß_Êags
 = 
SA_SIGINFO
;

39 
ªt
 = 
	`siga˘i⁄
(
SIGUSR1
, &
s
, 
NULL
);

40 
	`as£π
(
ªt
 == 0);

42 
	`øi£
(
SIGUSR1
);

44 
s
.
ß_Êags
 = 0;

45 
s
.
ß_h™dÀr
 = 
SIG_DFL
;

46 
ªt
 = 
	`siga˘i⁄
(
SIGUSR1
, &
s
, 
NULL
);

47 
	`as£π
(
ªt
 == 0);

48 
	}
}

50 
	$£tup_sigÆt°ack
() {

51 
°ack_t
 
ss
;

52 
ss
.
ss_•
 = 
this˝u
->
sig°ack
;

53 
ss
.
ss_size
 = (
this˝u
->
sig°ack
);

54 
ss
.
ss_Êags
 = 0;

55 
ªt
 = 
	`sigÆt°ack
(&
ss
, 
NULL
);

56 
	`as£π
(
ªt
 == 0);

57 
	}
}

59 
maö
(c⁄° *
¨gs
);

61 
	$öô_∂©f‹m
(Ë
	`__©åibuã__
((
c⁄°ru˘‹
));

62 
	$öô_∂©f‹m
() {

64 
pmem_fd
 = 
	`memfd_¸óã
("pmem", 0);

65 
	`as£π
(
pmem_fd
 != -1);

66 
	`as£π
(0 =
	`·runˇã
(
pmem_fd
, 
PMEM_SIZE
));

68 
pmem
 = 
	`mm≠
(
PMEM_START
, 
PMEM_SIZE
, 
PROT_READ
 | 
PROT_WRITE
 | 
PROT_EXEC
,

69 
MAP_SHARED
 | 
MAP_FIXED
, 
pmem_fd
, 0);

70 
	`as£π
(
pmem
 != (*)-1);

73 
this˝u
 = 
	`mm≠
(
NULL
, (*this˝u), 
PROT_READ
 | 
PROT_WRITE
,

74 
MAP_PRIVATE
 | 
MAP_ANONYMOUS
, -1, 0);

75 
	`as£π
(
this˝u
 != (*)-1);

76 
this˝u
->
˝uid
 = 0;

77 
this˝u
->
vm_hód
 = 
NULL
;

80 
sys_pgsz
 = 
	`sysc⁄f
(
_SC_PAGESIZE
);

81 *
ªt
 = 
	`mm≠
(
TRAP_PAGE_START
, 
sys_pgsz
, 
PROT_NONE
,

82 
MAP_SHARED
 | 
MAP_ANONYMOUS
 | 
MAP_FIXED
, -1, 0);

83 
	`as£π
(
ªt
 != (*)-1);

86 
mem˝y_libc
 = 
	`dlsym
(
RTLD_NEXT
, "memcpy");

87 
	`as£π
(
mem˝y_libc
 !
NULL
);

90 
Elf64_Phdr
 *
phdr
 = (*)
	`gëauxvÆ
(
AT_PHDR
);

91 
phnum
 = ()
	`gëauxvÆ
(
AT_PHNUM
);

92 
i
;

93 
ªt2
;

94 
i
 = 0; i < 
phnum
; i ++) {

95 i‡(
phdr
[
i
].
p_ty≥
 =
PT_LOAD
 && (phdr[i].
p_Êags
 & 
PF_W
)) {

97 
íd
;

98 *
vaddr
 = (*)&
íd
 - 
phdr
[
i
].
p_memsz
;

99 
uöçå_t
 
∑d
 = (uöçå_t)
vaddr
 & 0xfff;

100 *
vaddr_Æign
 = 
vaddr
 - 
∑d
;

101 
uöçå_t
 
size
 = 
phdr
[
i
].
p_memsz
 + 
∑d
;

102 *
ãmp_mem
 = 
	`mm≠
(
NULL
, 
size
, 
PROT_READ
 | 
PROT_WRITE
, 
MAP_PRIVATE
 | 
MAP_ANONYMOUS
, -1, 0);

103 
	`as£π
(
ãmp_mem
 != (*)-1);

106 
	`mem˝y_libc
(
ãmp_mem
, 
vaddr_Æign
, 
size
);

110 *(*
mm≠_libc
)(*, 
size_t
, , , , 
off_t
Ë
	`dlsym
(
RTLD_NEXT
, "mmap");

111 
	`as£π
(
mm≠_libc
 !
NULL
);

114 *(*vﬁ©ûê
mem˝y_libc_ãmp
)(*, c⁄° *, 
size_t
Ë
mem˝y_libc
;

117 
ªt2
 = 
	`munm≠
(
vaddr_Æign
, 
size
);

118 
	`as£π
(
ªt2
 == 0);

121 
ªt
 = 
	`mm≠_libc
(
vaddr_Æign
, 
size
, 
PROT_READ
 | 
PROT_WRITE
 | 
PROT_EXEC
,

122 
MAP_SHARED
 | 
MAP_FIXED
 | 
MAP_ANONYMOUS
, -1, 0);

123 
	`as£π
(
ªt
 =
vaddr_Æign
);

126 
	`mem˝y_libc_ãmp
(
vaddr_Æign
, 
ãmp_mem
, 
size
);

129 
ªt2
 = 
	`munm≠
(
ãmp_mem
, 
size
);

130 
	`as£π
(
ªt2
 == 0);

135 
hóp
 = 
	`RANGE
(
pmem
,Ömem + 
PMEM_SIZE
);

138 
ªt2
 = 
	`sigem±y£t
(&
__am_öå_sigmask
);

139 
	`as£π
(
ªt2
 == 0);

140 
ªt2
 = 
	`sigadd£t
(&
__am_öå_sigmask
, 
SIGVTALRM
);

141 
	`as£π
(
ªt2
 == 0);

142 
ªt2
 = 
	`sigadd£t
(&
__am_öå_sigmask
, 
SIGUSR1
);

143 
	`as£π
(
ªt2
 == 0);

146 
	`£tup_sigÆt°ack
();

149 
	`ßve_exam∂e_c⁄ãxt
();

150 
uc_exam∂e
.
uc_mc⁄ãxt
.
Âªgs
 = 
NULL
;

151 
	`__am_gë_öå_sigmask
(&
uc_exam∂e
.
uc_sigmask
);

154 
	`i£t
(0);

157 c⁄° *
smp
 = 
	`gëív
("smp");

158 
__am_n˝u
 = 
smp
 ? 
	`©oi
(smp) : 1;

159 
	`as£π
(0 < 
__am_n˝u
 && __am_n˝u <
MAX_CPU
);

162 c⁄° *
pgsize
 = 
	`gëív
("pgsize");

163 
__am_pgsize
 = 
pgsize
 ? 
	`©oi
’gsizeË: 
sys_pgsz
;

164 
	`as£π
(
__am_pgsize
 > 0 && __am_pgsizê% 
sys_pgsz
 == 0);

167 
	`£tbuf
(
°dout
, 
NULL
);

169 c⁄° *
¨gs
 = 
	`gëív
("mainargs");

170 
	`hÆt
(
	`maö
(
¨gs
 ?árgs : ""));

171 
	}
}

173 
	$__am_exô_∂©f‹m
(
code
) {

175 
__am_m≥_öô
;

176 i‡(
__am_m≥_öô
 && 
	`˝u_cou¡
(Ë> 1Ë
	`kûl
(0, 
SIGKILL
);

177 
	`exô
(
code
);

178 
	}
}

180 
	$__am_pmem_m≠
(*
va
, *
∑
, 
¥Ÿ
) {

182 
mm≠_¥Ÿ
 = 
PROT_NONE
;

185 i‡(
¥Ÿ
 & 
MMAP_READ
Ë
mm≠_¥Ÿ
 |
PROT_READ
 | 
PROT_EXEC
;

186 i‡(
¥Ÿ
 & 
MMAP_WRITE
Ë
mm≠_¥Ÿ
 |
PROT_WRITE
;

187 *
ªt
 = 
	`mm≠
(
va
, 
__am_pgsize
, 
mm≠_¥Ÿ
,

188 
MAP_SHARED
 | 
MAP_FIXED
, 
pmem_fd
, (
uöçå_t
)(
∑
 - 
pmem
));

189 
	`as£π
(
ªt
 != (*)-1);

190 
	}
}

192 
	$__am_pmem_unm≠
(*
va
) {

193 
ªt
 = 
	`munm≠
(
va
, 
__am_pgsize
);

194 
	`as£π
(
ªt
 == 0);

195 
	}
}

197 
	$__am_gë_exam∂e_uc
(
C⁄ãxt
 *
r
) {

198 
	`mem˝y_libc
(&
r
->
uc
, &
uc_exam∂e
, (uc_example));

199 
	}
}

201 
	$__am_gë_öå_sigmask
(
sig£t_t
 *
s
) {

202 
	`mem˝y_libc
(
s
, &
__am_öå_sigmask
, (__am_intr_sigmask));

203 
	}
}

205 
	$__am_is_sigmask_°i
(
sig£t_t
 *
s
) {

206  !
	`sigismembî
(
s
, 
SIGVTALRM
);

207 
	}
}

209 
	$__am_£nd_kbd_öå
() {

210 
	`kûl
(
	`gëpid
(), 
SIGUSR1
);

211 
	}
}

213 
	$__am_pmem_¥Ÿe˘
() {

216 
	}
}

218 
	$__am_pmem_u≈rŸe˘
() {

221 
	}
}

226 
	$__am_∂©f‹m_dummy
() {

227 
	}
}

	@abstract-machine/am/src/native/platform.h

1 #i‚de‡
__PLATFORM_H__


2 
	#__PLATFORM_H__


	)

4 
	~<am.h
>

5 
	~<uni°d.h
>

6 
	~<sig«l.h
>

7 
	~<klib.h
>

8 
	~<klib-ma¸os.h
>

10 
__am_gë_exam∂e_uc
(
C⁄ãxt
 *
r
);

11 
__am_gë_öå_sigmask
(
sig£t_t
 *
s
);

12 
__am_is_sigmask_°i
(
sig£t_t
 *
s
);

13 
__am_öô_timî_úq
();

14 
__am_pmem_m≠
(*
va
, *
∑
, 
¥Ÿ
);

15 
__am_pmem_unm≠
(*
va
);

19 *
	mvm_hód
;

20 
uöçå_t
 
	mk•
;

21 
	m˝uid
;

22 
Evít
 
	mev
;

23 
uöt8_t
 
	msig°ack
[
SIGSTKSZ
];

24 } 
	t__am_˝u_t
;

25 
__am_˝u_t
 *
__am_˝u_°ru˘
;

26 
	#this˝u
 
__am_˝u_°ru˘


	)

	@abstract-machine/am/src/native/trm.c

1 
	~<am.h
>

2 
	~<°dio.h
>

3 
	~<klib-ma¸os.h
>

5 
__am_∂©f‹m_dummy
();

6 
__am_exô_∂©f‹m
(
code
);

8 
	$åm_öô
() {

9 
	`__am_∂©f‹m_dummy
();

10 
	}
}

12 
	$putch
(
ch
) {

13 
	`putch¨
(
ch
);

14 
	}
}

16 
	$hÆt
(
code
) {

17 c⁄° *
fmt
 = "Exit code = 40h\n";

18 c⁄° *
p
 = 
fmt
; *p;Ö++) {

19 
ch
 = *
p
;

20 i‡(
ch
 == '0' || ch == '4') {

21 
ch
 = "0123456789abcdef"[(
code
 >> (ch - '0')) & 0xf];

23 
	`putch
(
ch
);

25 
	`__am_exô_∂©f‹m
(
code
);

26 
	`put°r
("ShouldÇotÑeach here!\n");

28 
	}
}

30 
Aªa
 
	ghóp
 = {};

	@abstract-machine/am/src/native/vme.c

1 
	#_GNU_SOURCE


	)

2 
	~<£¨ch.h
>

3 
	~"∂©f‹m.h
"

5 
	#USER_SPACE
 
	`RANGE
(0x40000000, 0xc0000000)

	)

7 
	sPageM≠
 {

8 *
	mva
;

9 *
	m∑
;

10 
PageM≠
 *
	m√xt
;

11 
	m¥Ÿ
;

12 
	mis_m≠≥d
;

13 
	mkey
[32];

14 } 
	tPageM≠
;

16 
	sVMHód
 {

17 
PageM≠
 *
	mhód
;

18 
h£¨ch_d©a
 
	mhash
;

19 
	mƒ_∑ge
;

20 } 
	tVMHód
;

22 
	#li°_f‹óch
(
p
, 
hód
) \

23 
p
 = (
PageM≠
 *)(
hód
);Ö !
NULL
;Ö =Ö->
√xt
)

	)

25 
__am_pgsize
;

26 
	gvme_íabÀ
 = 0;

27 * (*
	gpgÆloc
)(Ë
NULL
;

28 (*
pg‰ì
)(*Ë
NULL
;

30 
boﬁ
 
	$vme_öô
(* (*
pgÆloc_f
)(), (*
pg‰ì_f
)(*)) {

31 
pgÆloc
 = 
pgÆloc_f
;

32 
pg‰ì
 = 
pg‰ì_f
;

33 
vme_íabÀ
 = 1;

34  
åue
;

35 
	}
}

37 
	$¥Ÿe˘
(
AddrS∑˚
 *
as
) {

38 
	`as£π
(
as
 !
NULL
);

39 
VMHód
 *
h
 = 
	`pgÆloc
(
__am_pgsize
);

40 
	`as£π
(
h
 !
NULL
);

41 
	`mem£t
(
h
, 0, (*h));

42 
max_pg
 = (
USER_SPACE
.
íd
 - USER_SPACE.
°¨t
Ë/ 
__am_pgsize
;

43 
ªt
 = 
	`h¸óã_r
(
max_pg
, &
h
->
hash
);

44 
	`as£π
(
ªt
 != 0);

46 
as
->
±r
 = 
h
;

47 
as
->
pgsize
 = 
__am_pgsize
;

48 
as
->
¨ó
 = 
USER_SPACE
;

49 
	}
}

51 
	$u≈rŸe˘
(
AddrS∑˚
 *
as
) {

52 
	}
}

54 
	$__am_swôch
(
C⁄ãxt
 *
c
) {

55 i‡(!
vme_íabÀ
) ;

57 
VMHód
 *
hód
 = 
c
->
vm_hód
;

58 
VMHód
 *
now_hód
 = 
this˝u
->
vm_hód
;

59 i‡(
hód
 =
now_hód
Ë
íd
;

61 
PageM≠
 *
µ
;

62 i‡(
now_hód
 !
NULL
) {

64 
	`li°_f‹óch
(
µ
, 
now_hód
->
hód
) {

65 i‡(
µ
->
is_m≠≥d
) {

66 
	`__am_pmem_unm≠
(
µ
->
va
);

67 
µ
->
is_m≠≥d
 = 
Ál£
;

72 i‡(
hód
 !
NULL
) {

74 
	`li°_f‹óch
(
µ
, 
hód
->head) {

75 
	`as£π
(
	`IN_RANGE
(
µ
->
va
, 
USER_SPACE
));

76 
	`__am_pmem_m≠
(
µ
->
va
,Öp->
∑
,Öp->
¥Ÿ
);

77 
µ
->
is_m≠≥d
 = 
åue
;

81 
íd
:

82 
this˝u
->
vm_hód
 = 
hód
;

83 
	}
}

85 
	$m≠
(
AddrS∑˚
 *
as
, *
va
, *
∑
, 
¥Ÿ
) {

86 
	`as£π
(
	`IN_RANGE
(
va
, 
USER_SPACE
));

87 
	`as£π
((
uöçå_t
)
va
 % 
__am_pgsize
 == 0);

88 
	`as£π
((
uöçå_t
)
∑
 % 
__am_pgsize
 == 0);

89 
	`as£π
(
as
 !
NULL
);

90 
PageM≠
 *
µ
 = 
NULL
;

91 
VMHód
 *
vm_hód
 = 
as
->
±r
;

92 
	`as£π
(
vm_hód
 !
NULL
);

93 
buf
[32];

94 
	`¢¥ötf
(
buf
, 32, "%x", 
va
);

95 
ENTRY
 
ôem
 = { .
key
 = 
buf
 };

96 
ENTRY
 *
ôem_föd
;

97 
	`h£¨ch_r
(
ôem
, 
FIND
, &
ôem_föd
, &
vm_hód
->
hash
);

98 i‡(
ôem_föd
 =
NULL
) {

99 
µ
 = 
	`pgÆloc
(
__am_pgsize
);

100 
	`¢¥ötf
(
µ
->
key
, 32, "%x", 
va
);

101 
ôem
.
key
 = 
µ
->key;

102 
ôem
.
d©a
 = 
µ
;

103 
ªt
 = 
	`h£¨ch_r
(
ôem
, 
ENTER
, &
ôem_föd
, &
vm_hód
->
hash
);

104 
	`as£π
(
ªt
 != 0);

105 
vm_hód
->
ƒ_∑ge
 ++;

107 
µ
 = 
ôem_föd
->
d©a
;

109 
µ
->
va
 = va;

110 
µ
->
∑
 =Öa;

111 
µ
->
¥Ÿ
 =Örot;

112 
µ
->
is_m≠≥d
 = 
Ál£
;

113 
µ
->
√xt
 = 
vm_hód
->
hód
;

114 
vm_hód
->
hód
 = 
µ
;

116 i‡(
vm_hód
 =
this˝u
->vm_head) {

118 
	`__am_pmem_m≠
(
µ
->
va
,Öp->
∑
,Öp->
¥Ÿ
);

119 
µ
->
is_m≠≥d
 = 
åue
;

121 
	}
}

123 
C⁄ãxt
* 
	$uc⁄ãxt
(
AddrS∑˚
 *
as
, 
Aªa
 
k°ack
, *
íåy
) {

124 
C⁄ãxt
 *
c
 = (C⁄ãxt*)
k°ack
.
íd
 - 1;

126 
	`__am_gë_exam∂e_uc
(
c
);

127 
c
->
uc
.
uc_mc⁄ãxt
.
gªgs
[
REG_RIP
] = (
uöçå_t
)
íåy
;

128 
c
->
uc
.
uc_mc⁄ãxt
.
gªgs
[
REG_RSP
] = (
uöçå_t
)
USER_SPACE
.
íd
;

130 
ªt
 = 
	`sigem±y£t
(&(
c
->
uc
.
uc_sigmask
));

131 
	`as£π
(
ªt
 == 0);

132 
c
->
vm_hód
 = 
as
->
±r
;

134 
c
->
k•
 = (
uöçå_t
)
k°ack
.
íd
;

136  
c
;

137 
	}
}

139 
	$__am_ö_u£r•a˚
(*
addr
) {

140  
vme_íabÀ
 && 
this˝u
->
vm_hód
 !
NULL
 && 
	`IN_RANGE
(
addr
, 
USER_SPACE
);

141 
	}
}

	@abstract-machine/am/src/platform/dummy/cte.c

1 
	~<am.h
>

3 
boﬁ
 
	$˘e_öô
(
C⁄ãxt
*(*
h™dÀr
)(
Evít
, Context*)) {

4  
Ál£
;

5 
	}
}

7 
C⁄ãxt
 *
	$kc⁄ãxt
(
Aªa
 
k°ack
, (*
íåy
)(*), *
¨g
) {

8  
NULL
;

9 
	}
}

11 
	$yõld
() {

12 
	}
}

14 
boﬁ
 
	$õ«bÀd
() {

15  
Ál£
;

16 
	}
}

18 
	$i£t
(
boﬁ
 
íabÀ
) {

19 
	}
}

	@abstract-machine/am/src/platform/dummy/ioe.c

1 
	~<am.h
>

2 
	~<klib-ma¸os.h
>

4 
	$Áû
(*
buf
Ë{ 
	`∑nic
("ac˚s†n⁄exi°Ñegi°î"); 
	}
}

6 
boﬁ
 
	$i€_öô
() {

7  
Ál£
;

8 
	}
}

10 
	$i€_ªad
 (
ªg
, *
buf
Ë{ 
	`Áû
(buf); 
	}
}

11 
	$i€_wrôe
(
ªg
, *
buf
Ë{ 
	`Áû
(buf); 
	}
}

	@abstract-machine/am/src/platform/dummy/mpe.c

1 
	~<am.h
>

3 
boﬁ
 
	$m≥_öô
((*
íåy
)()) {

4  
Ál£
;

5 
	}
}

7 
	$˝u_cou¡
() {

9 
	}
}

11 
	$˝u_cuºít
() {

13 
	}
}

15 
	$©omic_xchg
(*
addr
, 
√wvÆ
) {

17 
	}
}

	@abstract-machine/am/src/platform/dummy/trm.c

1 
	~<am.h
>

3 
Aªa
 
	ghóp
 = 
RANGE
(
NULL
, NULL);

5 
	$putch
(
ch
) {

6 
	}
}

8 
	$hÆt
(
code
) {

10 
	}
}

	@abstract-machine/am/src/platform/dummy/vme.c

1 
	~<am.h
>

3 
boﬁ
 
	$vme_öô
(* (*
pgÆloc_f
)(), (*
pg‰ì_f
)(*)) {

4  
Ál£
;

5 
	}
}

7 
	$¥Ÿe˘
(
AddrS∑˚
 *
as
) {

8 
	}
}

10 
	$u≈rŸe˘
(
AddrS∑˚
 *
as
) {

11 
	}
}

13 
	$m≠
(
AddrS∑˚
 *
as
, *
va
, *
∑
, 
¥Ÿ
) {

14 
	}
}

16 
C⁄ãxt
 *
	$uc⁄ãxt
(
AddrS∑˚
 *
as
, 
Aªa
 
k°ack
, *
íåy
) {

17  
NULL
;

18 
	}
}

	@abstract-machine/am/src/platform/nemu/include/nemu.h

1 #i‚de‡
NEMU_H__


2 
	#NEMU_H__


	)

4 
	~<klib-ma¸os.h
>

6 #ö˛udê
ISA_H


9 #i‡
deföed
(
__ISA_X86__
)

10 
	#√mu_å≠
(
code
Ë
asm
 vﬁ©ûê("öt3" : :"a"(code))

	)

11 #ñi‡
deföed
(
__ISA_MIPS32__
)

12 
	#√mu_å≠
(
code
Ë
asm
 vﬁ©ûê("movê$v0, %0; sdbbp" : :"r"(code))

	)

13 #ñi‡
deföed
(
__ISA_RISCV32__
Ë|| deföed(
__ISA_RISCV64__
)

14 
	#√mu_å≠
(
code
Ë
asm
 vﬁ©ûe("mvá0, %0;Ébªak" : :"r"(code))

	)

16 #îr‹ 
unsuµ‹ãd
 
ISA
 
__ISA__


19 #i‡
deföed
(
__ARCH_X86_NEMU
)

20 
	#DEVICE_BASE
 0x0

	)

22 
	#DEVICE_BASE
 0xa0000000

	)

25 
	#MMIO_BASE
 0xa0000000

	)

27 
	#SERIAL_PORT
 (
DEVICE_BASE
 + 0x00003f8)

	)

28 
	#KBD_ADDR
 (
DEVICE_BASE
 + 0x0000060)

	)

29 
	#RTC_ADDR
 (
DEVICE_BASE
 + 0x0000048)

	)

30 
	#VGACTL_ADDR
 (
DEVICE_BASE
 + 0x0000100)

	)

31 
	#AUDIO_ADDR
 (
DEVICE_BASE
 + 0x0000200)

	)

32 
	#DISK_ADDR
 (
DEVICE_BASE
 + 0x0000300)

	)

33 
	#FB_ADDR
 (
MMIO_BASE
 + 0x1000000)

	)

34 
	#AUDIO_SBUF_ADDR
 (
MMIO_BASE
 + 0x1200000)

	)

36 
_pmem_°¨t
;

37 
	#PMEM_SIZE
 (128 * 1024 * 1024)

	)

38 
	#PMEM_END
 ((
uöçå_t
)&
_pmem_°¨t
 + 
PMEM_SIZE
)

	)

39 
	#NEMU_PADDR_SPACE
 \

40 
	`RANGE
(&
_pmem_°¨t
, 
PMEM_END
), \

41 
	`RANGE
(
FB_ADDR
, FB_ADDR + 0x200000), \

42 
	`RANGE
(
MMIO_BASE
, MMIO_BASE + 0x1000Ë

	)

44 
uöçå_t
 
	tPTE
;

46 
	#PGSIZE
 4096

	)

	@abstract-machine/am/src/platform/nemu/ioe/audio.c

1 
	~<am.h
>

2 
	~<√mu.h
>

4 
	#AUDIO_FREQ_ADDR
 (
AUDIO_ADDR
 + 0x00)

	)

5 
	#AUDIO_CHANNELS_ADDR
 (
AUDIO_ADDR
 + 0x04)

	)

6 
	#AUDIO_SAMPLES_ADDR
 (
AUDIO_ADDR
 + 0x08)

	)

7 
	#AUDIO_SBUF_SIZE_ADDR
 (
AUDIO_ADDR
 + 0x0c)

	)

8 
	#AUDIO_INIT_ADDR
 (
AUDIO_ADDR
 + 0x10)

	)

9 
	#AUDIO_COUNT_ADDR
 (
AUDIO_ADDR
 + 0x14)

	)

11 
	$__am_audio_öô
() {

12 
	}
}

14 
	$__am_audio_c⁄fig
(
AM_AUDIO_CONFIG_T
 *
cfg
) {

15 
cfg
->
¥e£¡
 = 
Ál£
;

16 
	}
}

18 
	$__am_audio_˘æ
(
AM_AUDIO_CTRL_T
 *
˘æ
) {

19 
	}
}

21 
	$__am_audio_°©us
(
AM_AUDIO_STATUS_T
 *
°©
) {

22 
°©
->
cou¡
 = 0;

23 
	}
}

25 
	$__am_audio_∂ay
(
AM_AUDIO_PLAY_T
 *
˘l
) {

26 
	}
}

	@abstract-machine/am/src/platform/nemu/ioe/disk.c

1 
	~<am.h
>

2 
	~<√mu.h
>

4 
	$__am_disk_c⁄fig
(
AM_DISK_CONFIG_T
 *
cfg
) {

5 
cfg
->
¥e£¡
 = 
Ál£
;

6 
	}
}

8 
	$__am_disk_°©us
(
AM_DISK_STATUS_T
 *
°©
) {

9 
	}
}

11 
	$__am_disk_blkio
(
AM_DISK_BLKIO_T
 *
io
) {

12 
	}
}

	@abstract-machine/am/src/platform/nemu/ioe/gpu.c

1 
	~<am.h
>

2 
	~<√mu.h
>

4 
	#SYNC_ADDR
 (
VGACTL_ADDR
 + 4)

	)

6 
	$__am_gpu_öô
() {

7 
	}
}

9 
	$__am_gpu_c⁄fig
(
AM_GPU_CONFIG_T
 *
cfg
) {

10 *
cfg
 = (
AM_GPU_CONFIG_T
) {

11 .
¥e£¡
 = 
åue
, .
has_ac˚l
 = 
Ál£
,

12 .
width
 = 0, .
height
 = 0,

13 .
vmemsz
 = 0

15 
	}
}

17 
	$__am_gpu_fbdøw
(
AM_GPU_FBDRAW_T
 *
˘l
) {

18 i‡(
˘l
->
sync
) {

19 
	`oué
(
SYNC_ADDR
, 1);

21 
	}
}

23 
	$__am_gpu_°©us
(
AM_GPU_STATUS_T
 *
°©us
) {

24 
°©us
->
ªady
 = 
åue
;

25 
	}
}

	@abstract-machine/am/src/platform/nemu/ioe/input.c

1 
	~<am.h
>

2 
	~<√mu.h
>

4 
	#KEYDOWN_MASK
 0x8000

	)

6 
	$__am_öput_keybrd
(
AM_INPUT_KEYBRD_T
 *
kbd
) {

7 
kbd
->
keydown
 = 0;

8 
kbd
->
keycode
 = 
AM_KEY_NONE
;

9 
	}
}

	@abstract-machine/am/src/platform/nemu/ioe/ioe.c

1 
	~<am.h
>

2 
	~<klib-ma¸os.h
>

4 
__am_timî_öô
();

5 
__am_gpu_öô
();

6 
__am_audio_öô
();

7 
__am_öput_keybrd
(
AM_INPUT_KEYBRD_T
 *);

8 
__am_timî_πc
(
AM_TIMER_RTC_T
 *);

9 
__am_timî_u±ime
(
AM_TIMER_UPTIME_T
 *);

10 
__am_gpu_c⁄fig
(
AM_GPU_CONFIG_T
 *);

11 
__am_gpu_°©us
(
AM_GPU_STATUS_T
 *);

12 
__am_gpu_fbdøw
(
AM_GPU_FBDRAW_T
 *);

13 
__am_audio_c⁄fig
(
AM_AUDIO_CONFIG_T
 *);

14 
__am_audio_˘æ
(
AM_AUDIO_CTRL_T
 *);

15 
__am_audio_°©us
(
AM_AUDIO_STATUS_T
 *);

16 
__am_audio_∂ay
(
AM_AUDIO_PLAY_T
 *);

17 
__am_disk_c⁄fig
(
AM_DISK_CONFIG_T
 *
cfg
);

18 
__am_disk_°©us
(
AM_DISK_STATUS_T
 *
°©
);

19 
__am_disk_blkio
(
AM_DISK_BLKIO_T
 *
io
);

21 
	$__am_timî_c⁄fig
(
AM_TIMER_CONFIG_T
 *
cfg
Ë{ cfg->
¥e£¡
 = 
åue
; cfg->
has_πc
 =Årue; 
	}
}

22 
	$__am_öput_c⁄fig
(
AM_INPUT_CONFIG_T
 *
cfg
Ë{ cfg->
¥e£¡
 = 
åue
; 
	}
}

23 
	$__am_u¨t_c⁄fig
(
AM_UART_CONFIG_T
 *
cfg
Ë{ cfg->
¥e£¡
 = 
Ál£
; 
	}
}

24 
	$__am_√t_c⁄fig
 (
AM_NET_CONFIG_T
 *
cfg
Ë{ cfg->
¥e£¡
 = 
Ál£
; 
	}
}

26 (*
	th™dÀr_t
)(*
	tbuf
);

27 *
lut
[128] = {

28 [
AM_TIMER_CONFIG
] = 
__am_timî_c⁄fig
,

29 [
AM_TIMER_RTC
 ] = 
__am_timî_πc
,

30 [
AM_TIMER_UPTIME
] = 
__am_timî_u±ime
,

31 [
AM_INPUT_CONFIG
] = 
__am_öput_c⁄fig
,

32 [
AM_INPUT_KEYBRD
] = 
__am_öput_keybrd
,

33 [
AM_GPU_CONFIG
 ] = 
__am_gpu_c⁄fig
,

34 [
AM_GPU_FBDRAW
 ] = 
__am_gpu_fbdøw
,

35 [
AM_GPU_STATUS
 ] = 
__am_gpu_°©us
,

36 [
AM_UART_CONFIG
 ] = 
__am_u¨t_c⁄fig
,

37 [
AM_AUDIO_CONFIG
] = 
__am_audio_c⁄fig
,

38 [
AM_AUDIO_CTRL
 ] = 
__am_audio_˘æ
,

39 [
AM_AUDIO_STATUS
] = 
__am_audio_°©us
,

40 [
AM_AUDIO_PLAY
 ] = 
__am_audio_∂ay
,

41 [
AM_DISK_CONFIG
 ] = 
__am_disk_c⁄fig
,

42 [
AM_DISK_STATUS
 ] = 
__am_disk_°©us
,

43 [
AM_DISK_BLKIO
 ] = 
__am_disk_blkio
,

44 [
AM_NET_CONFIG
 ] = 
__am_√t_c⁄fig
,

45 
	}
};

47 
	$Áû
(*
buf
Ë{ 
	`∑nic
("ac˚s†n⁄exi°Ñegi°î"); 
	}
}

49 
boﬁ
 
	$i€_öô
() {

50 
i
 = 0; i < 
	`LENGTH
(
lut
); i++)

51 i‡(!
lut
[
i
]Ëlut[i] = 
Áû
;

52 
	`__am_gpu_öô
();

53 
	`__am_timî_öô
();

54 
	`__am_audio_öô
();

55  
åue
;

56 
	}
}

58 
	$i€_ªad
 (
ªg
, *
buf
Ë{ ((
h™dÀr_t
)
lut
[ªg])(buf); 
	}
}

59 
	$i€_wrôe
(
ªg
, *
buf
Ë{ ((
h™dÀr_t
)
lut
[ªg])(buf); 
	}
}

	@abstract-machine/am/src/platform/nemu/ioe/timer.c

1 
	~<am.h
>

2 
	~<√mu.h
>

4 
	$__am_timî_öô
() {

5 
	}
}

7 
	$__am_timî_u±ime
(
AM_TIMER_UPTIME_T
 *
u±ime
) {

8 
u±ime
->
us
 = 0;

9 
	}
}

11 
	$__am_timî_πc
(
AM_TIMER_RTC_T
 *
πc
) {

12 
πc
->
£c⁄d
 = 0;

13 
πc
->
möuã
 = 0;

14 
πc
->
hour
 = 0;

15 
πc
->
day
 = 0;

16 
πc
->
m⁄th
 = 0;

17 
πc
->
yór
 = 1900;

18 
	}
}

	@abstract-machine/am/src/platform/nemu/mpe.c

1 
	~<am.h
>

2 
	~<°d©omic.h
>

3 
	~<klib-ma¸os.h
>

5 
boﬁ
 
	$m≥_öô
((*
íåy
)()) {

6 
	`íåy
();

7 
	`∑nic
("MPEÉntryÑeturns");

8 
	}
}

10 
	$˝u_cou¡
() {

12 
	}
}

14 
	$˝u_cuºít
() {

16 
	}
}

18 
	$©omic_xchg
(*
addr
, 
√wvÆ
) {

19  
	`©omic_exch™ge
(
addr
, 
√wvÆ
);

20 
	}
}

	@abstract-machine/am/src/platform/nemu/trm.c

1 
	~<am.h
>

2 
	~<√mu.h
>

4 
_hóp_°¨t
;

5 
maö
(c⁄° *
¨gs
);

7 
Aªa
 
	ghóp
 = 
RANGE
(&
_hóp_°¨t
, 
PMEM_END
);

8 #i‚de‡
MAINARGS


9 
	#MAINARGS
 ""

	)

11 c⁄° 
	gmaö¨gs
[] = 
MAINARGS
;

13 
	$putch
(
ch
) {

14 
	`outb
(
SERIAL_PORT
, 
ch
);

15 
	}
}

17 
	$hÆt
(
code
) {

18 
	`√mu_å≠
(
code
);

22 
	}
}

24 
	$_åm_öô
() {

25 
ªt
 = 
	`maö
(
maö¨gs
);

26 
	`hÆt
(
ªt
);

27 
	}
}

	@abstract-machine/am/src/riscv/mycpu/cte.c

1 
	~<am.h
>

2 
	~<klib.h
>

4 
	gC⁄ãxt
* (*
	gu£r_h™dÀr
)(
	gEvít
, C⁄ãxt*Ë
NULL
;

6 
C⁄ãxt
* 
	$__am_úq_h™dÀ
(
C⁄ãxt
 *
c
) {

7 i‡(
u£r_h™dÀr
) {

8 
Evít
 
ev
 = {0};

9 
c
->
mˇu£
) {

10 : 
ev
.
evít
 = 
EVENT_ERROR
; ;

13 
c
 = 
	`u£r_h™dÀr
(
ev
, c);

14 
	`as£π
(
c
 !
NULL
);

17  
c
;

18 
	}
}

20 
__am_asm_å≠
();

22 
boﬁ
 
	$˘e_öô
(
C⁄ãxt
*(*
h™dÀr
)(
Evít
, Context*)) {

24 
asm
 vﬁ©ûe("c§w mtvec, %0" : : "r"(
__am_asm_å≠
));

27 
u£r_h™dÀr
 = 
h™dÀr
;

29  
åue
;

30 
	}
}

32 
C⁄ãxt
 *
	$kc⁄ãxt
(
Aªa
 
k°ack
, (*
íåy
)(*), *
¨g
) {

33  
NULL
;

34 
	}
}

36 
	$yõld
() {

37 
asm
 volatile("liá7, -1;Écall");

38 
	}
}

40 
boﬁ
 
	$õ«bÀd
() {

41  
Ál£
;

42 
	}
}

44 
	$i£t
(
boﬁ
 
íabÀ
) {

45 
	}
}

	@abstract-machine/am/src/riscv/mycpu/input.c

1 
	~<am.h
>

3 
	$__am_öput_keybrd
(
AM_INPUT_KEYBRD_T
 *
kbd
) {

4 
kbd
->
keydown
 = 0;

5 
kbd
->
keycode
 = 
AM_KEY_NONE
;

6 
	}
}

	@abstract-machine/am/src/riscv/mycpu/ioe.c

1 
	~<am.h
>

2 
	~<klib-ma¸os.h
>

4 
__am_timî_öô
();

6 
__am_timî_πc
(
AM_TIMER_RTC_T
 *);

7 
__am_timî_u±ime
(
AM_TIMER_UPTIME_T
 *);

8 
__am_öput_keybrd
(
AM_INPUT_KEYBRD_T
 *);

9 
__am_timî_πc
(
AM_TIMER_RTC_T
 *);

11 
	$__am_timî_c⁄fig
(
AM_TIMER_CONFIG_T
 *
cfg
Ë{ cfg->
¥e£¡
 = 
åue
; cfg->
has_πc
 =Årue; 
	}
}

12 
	$__am_öput_c⁄fig
(
AM_INPUT_CONFIG_T
 *
cfg
Ë{ cfg->
¥e£¡
 = 
åue
; 
	}
}

14 (*
	th™dÀr_t
)(*
	tbuf
);

15 *
lut
[128] = {

16 [
AM_TIMER_CONFIG
] = 
__am_timî_c⁄fig
,

17 [
AM_TIMER_RTC
 ] = 
__am_timî_πc
,

18 [
AM_TIMER_UPTIME
] = 
__am_timî_u±ime
,

19 [
AM_INPUT_CONFIG
] = 
__am_öput_c⁄fig
,

20 [
AM_INPUT_KEYBRD
] = 
__am_öput_keybrd
,

21 
	}
};

23 
	$Áû
(*
buf
Ë{ 
	`∑nic
("ac˚s†n⁄exi°Ñegi°î"); 
	}
}

25 
boﬁ
 
	$i€_öô
() {

26 
i
 = 0; i < 
	`LENGTH
(
lut
); i++)

27 i‡(!
lut
[
i
]Ëlut[i] = 
Áû
;

28 
	`__am_timî_öô
();

29  
åue
;

30 
	}
}

32 
	$i€_ªad
 (
ªg
, *
buf
Ë{ ((
h™dÀr_t
)
lut
[ªg])(buf); 
	}
}

33 
	$i€_wrôe
(
ªg
, *
buf
Ë{ ((
h™dÀr_t
)
lut
[ªg])(buf); 
	}
}

	@abstract-machine/am/src/riscv/mycpu/mpe.c

1 
	~<am.h
>

3 
boﬁ
 
	$m≥_öô
((*
íåy
)()) {

4  
Ál£
;

5 
	}
}

7 
	$˝u_cou¡
() {

9 
	}
}

11 
	$˝u_cuºít
() {

13 
	}
}

15 
	$©omic_xchg
(*
addr
, 
√wvÆ
) {

17 
	}
}

	@abstract-machine/am/src/riscv/mycpu/timer.c

1 
	~<am.h
>

3 
	$__am_timî_öô
() {

4 
	}
}

6 
	$__am_timî_u±ime
(
AM_TIMER_UPTIME_T
 *
u±ime
) {

7 
u±ime
->
us
 = 0;

8 
	}
}

10 
	$__am_timî_πc
(
AM_TIMER_RTC_T
 *
πc
) {

11 
πc
->
£c⁄d
 = 0;

12 
πc
->
möuã
 = 0;

13 
πc
->
hour
 = 0;

14 
πc
->
day
 = 0;

15 
πc
->
m⁄th
 = 0;

16 
πc
->
yór
 = 1900;

17 
	}
}

	@abstract-machine/am/src/riscv/mycpu/trm.c

1 
	~<am.h
>

2 
	~<klib-ma¸os.h
>

4 
_hóp_°¨t
;

5 
maö
(c⁄° *
¨gs
);

7 
_pmem_°¨t
;

8 
	#PMEM_SIZE
 (128 * 1024 * 1024)

	)

9 
	#PMEM_END
 ((
uöçå_t
)&
_pmem_°¨t
 + 
PMEM_SIZE
)

	)

11 
Aªa
 
	ghóp
 = 
RANGE
(&
_hóp_°¨t
, 
PMEM_END
);

12 #i‚de‡
MAINARGS


13 
	#MAINARGS
 ""

	)

15 c⁄° 
	gmaö¨gs
[] = 
MAINARGS
;

17 
	$putch
(
ch
) {

18 
	}
}

20 
	$hÆt
(
code
) {

22 
	}
}

24 
	$_åm_öô
() {

25 
ªt
 = 
	`maö
(
maö¨gs
);

26 
	`hÆt
(
ªt
);

27 
	}
}

	@abstract-machine/am/src/riscv/mycpu/vme.c

1 
	~<am.h
>

3 
boﬁ
 
	$vme_öô
(* (*
pgÆloc_f
)(), (*
pg‰ì_f
)(*)) {

4  
Ál£
;

5 
	}
}

7 
	$¥Ÿe˘
(
AddrS∑˚
 *
as
) {

8 
	}
}

10 
	$u≈rŸe˘
(
AddrS∑˚
 *
as
) {

11 
	}
}

13 
	$m≠
(
AddrS∑˚
 *
as
, *
va
, *
∑
, 
¥Ÿ
) {

14 
	}
}

16 
C⁄ãxt
 *
	$uc⁄ãxt
(
AddrS∑˚
 *
as
, 
Aªa
 
k°ack
, *
íåy
) {

17  
NULL
;

18 
	}
}

	@abstract-machine/am/src/riscv/nemu/cte.c

1 
	~<am.h
>

2 
	~<riscv/riscv.h
>

3 
	~<klib.h
>

5 
	gC⁄ãxt
* (*
	gu£r_h™dÀr
)(
	gEvít
, C⁄ãxt*Ë
NULL
;

7 
C⁄ãxt
* 
	$__am_úq_h™dÀ
(
C⁄ãxt
 *
c
) {

8 i‡(
u£r_h™dÀr
) {

9 
Evít
 
ev
 = {0};

10 
c
->
mˇu£
) {

11 : 
ev
.
evít
 = 
EVENT_ERROR
; ;

14 
c
 = 
	`u£r_h™dÀr
(
ev
, c);

15 
	`as£π
(
c
 !
NULL
);

18  
c
;

19 
	}
}

21 
__am_asm_å≠
();

23 
boﬁ
 
	$˘e_öô
(
C⁄ãxt
*(*
h™dÀr
)(
Evít
, Context*)) {

25 
asm
 vﬁ©ûe("c§w mtvec, %0" : : "r"(
__am_asm_å≠
));

28 
u£r_h™dÀr
 = 
h™dÀr
;

30  
åue
;

31 
	}
}

33 
C⁄ãxt
 *
	$kc⁄ãxt
(
Aªa
 
k°ack
, (*
íåy
)(*), *
¨g
) {

34  
NULL
;

35 
	}
}

37 
	$yõld
() {

38 
asm
 volatile("liá7, -1;Écall");

39 
	}
}

41 
boﬁ
 
	$õ«bÀd
() {

42  
Ál£
;

43 
	}
}

45 
	$i£t
(
boﬁ
 
íabÀ
) {

46 
	}
}

	@abstract-machine/am/src/riscv/nemu/vme.c

1 
	~<am.h
>

2 
	~<√mu.h
>

3 
	~<klib.h
>

5 
AddrS∑˚
 
	gkas
 = {};

6 * (*
	gpgÆloc_u§
)(Ë
NULL
;

7 (*
pg‰ì_u§
)(*Ë
NULL
;

8 
vme_íabÀ
 = 0;

10 
Aªa
 
£gmíts
[] = {

11 
NEMU_PADDR_SPACE


12 
	}
};

14 
	#USER_SPACE
 
	`RANGE
(0x40000000, 0x80000000)

	)

16 
ölöe
 
	$£t_ßç
(*
pdú
) {

17 
uöçå_t
 
mode
 = 1u»<< (
__riscv_xÀn
 - 1);

18 
asm
 vﬁ©ûe("c§w s©p, %0" : : "r"(
mode
 | ((
uöçå_t
)
pdú
 >> 12)));

19 
	}
}

21 
ölöe
 
uöçå_t
 
	$gë_ßç
() {

22 
uöçå_t
 
ßç
;

23 
asm
 vﬁ©ûe("c§∏%0, s©p" : "Ù"(
ßç
));

24  
ßç
 << 12;

25 
	}
}

27 
boﬁ
 
	$vme_öô
(* (*
pgÆloc_f
)(), (*
pg‰ì_f
)(*)) {

28 
pgÆloc_u§
 = 
pgÆloc_f
;

29 
pg‰ì_u§
 = 
pg‰ì_f
;

31 
kas
.
±r
 = 
	`pgÆloc_f
(
PGSIZE
);

33 
i
;

34 
i
 = 0; i < 
	`LENGTH
(
£gmíts
); i ++) {

35 *
va
 = 
£gmíts
[
i
].
°¨t
;

36 ; 
va
 < 
£gmíts
[
i
].
íd
; v®+
PGSIZE
) {

37 
	`m≠
(&
kas
, 
va
, va, 0);

41 
	`£t_ßç
(
kas
.
±r
);

42 
vme_íabÀ
 = 1;

44  
åue
;

45 
	}
}

47 
	$¥Ÿe˘
(
AddrS∑˚
 *
as
) {

48 
PTE
 *
updú
 = (PTE*)(
	`pgÆloc_u§
(
PGSIZE
));

49 
as
->
±r
 = 
updú
;

50 
as
->
¨ó
 = 
USER_SPACE
;

51 
as
->
pgsize
 = 
PGSIZE
;

53 
	`mem˝y
(
updú
, 
kas
.
±r
, 
PGSIZE
);

54 
	}
}

56 
	$u≈rŸe˘
(
AddrS∑˚
 *
as
) {

57 
	}
}

59 
	$__am_gë_cur_as
(
C⁄ãxt
 *
c
) {

60 
c
->
pdú
 = (
vme_íabÀ
 ? (*)
	`gë_ßç
(Ë: 
NULL
);

61 
	}
}

63 
	$__am_swôch
(
C⁄ãxt
 *
c
) {

64 i‡(
vme_íabÀ
 && 
c
->
pdú
 !
NULL
) {

65 
	`£t_ßç
(
c
->
pdú
);

67 
	}
}

69 
	$m≠
(
AddrS∑˚
 *
as
, *
va
, *
∑
, 
¥Ÿ
) {

70 
	}
}

72 
C⁄ãxt
 *
	$uc⁄ãxt
(
AddrS∑˚
 *
as
, 
Aªa
 
k°ack
, *
íåy
) {

73  
NULL
;

74 
	}
}

	@abstract-machine/am/src/riscv/riscv.h

1 #i‚de‡
RISCV_H__


2 
	#RISCV_H__


	)

4 
	~<°döt.h
>

6 
ölöe
 
uöt8_t
 
	$öb
(
uöçå_t
 
addr
Ë{  *(vﬁ©ûê
uöt8_t
 *Ôddr; 
	}
}

7 
ölöe
 
uöt16_t
 
	$öw
(
uöçå_t
 
addr
Ë{  *(vﬁ©ûê
uöt16_t
 *Ôddr; 
	}
}

8 
ölöe
 
uöt32_t
 
	$öl
(
uöçå_t
 
addr
Ë{  *(vﬁ©ûê
uöt32_t
 *Ôddr; 
	}
}

10 
ölöe
 
	$outb
(
uöçå_t
 
addr
, 
uöt8_t
 
d©a
Ë{ *(vﬁ©ûêuöt8_à*Ôdd∏d©a; 
	}
}

11 
ölöe
 
	$outw
(
uöçå_t
 
addr
, 
uöt16_t
 
d©a
Ë{ *(vﬁ©ûêuöt16_à*Ôdd∏d©a; 
	}
}

12 
ölöe
 
	$oué
(
uöçå_t
 
addr
, 
uöt32_t
 
d©a
Ë{ *(vﬁ©ûêuöt32_à*Ôdd∏d©a; 
	}
}

14 
	#PTE_V
 0x01

	)

15 
	#PTE_R
 0x02

	)

16 
	#PTE_W
 0x04

	)

17 
	#PTE_X
 0x08

	)

18 
	#PTE_U
 0x10

	)

19 
	#PTE_A
 0x40

	)

20 
	#PTE_D
 0x80

	)

22 íum { 
	mMODE_U
, 
	mMODE_S
, 
	mMODE_M
 = 3 };

23 
	#MSTATUS_MXR
 (1 << 19)

	)

24 
	#MSTATUS_SUM
 (1 << 18)

	)

26 #i‡
__riscv_xÀn
 == 64

27 
	#MSTATUS_SXL
 (2uŒ << 34)

	)

28 
	#MSTATUS_UXL
 (2uŒ << 32)

	)

30 
	#MSTATUS_SXL
 0

	)

31 
	#MSTATUS_UXL
 0

	)

	@abstract-machine/am/src/riscv/spike/atomic.h

3 #i‚de‡
_RISCV_ATOMIC_H


4 
	#_RISCV_ATOMIC_H


	)

10 
	#dißbÀ_úqßve
(Ë(0)

	)

11 
	#íabÀ_úqª°‹e
(
Êags
Ë((Ë(Êags))

	)

13 °ru˘ { 
	mlock
; } 
	t•ölock_t
;

14 
	#SPINLOCK_INIT
 {0}

	)

16 
	#mb
(Ë
asm
 vﬁ©ûê("„n˚" ::: "mem‹y")

	)

17 
	#©omic_£t
(
±r
, 
vÆ
Ë(*(vﬁ©ûê
	`ty≥of
(*’å)Ë*)’åËvÆ)

	)

18 
	#©omic_ªad
(
±r
Ë(*(vﬁ©ûê
	`ty≥of
(*’å)Ë*)’å))

	)

20 #ifde‡
__riscv_©omic


21 
	#©omic_add
(
±r
, 
öc
Ë
	`__sync_„tch_™d_add
’å, inc)

	)

22 
	#©omic_‹
(
±r
, 
öc
Ë
	`__sync_„tch_™d_‹
’å, inc)

	)

23 
	#©omic_sw≠
(
±r
, 
swp
Ë
	`__sync_lock_ã°_™d_£t
’å, swp)

	)

24 
	#©omic_ˇs
(
±r
, 
cmp
, 
swp
Ë
	`__sync_vÆ_com∑ª_™d_sw≠
’å, cmp, swp)

	)

26 
	#©omic_bö›
(
±r
, 
öc
, 
›
) ({ \

27 
Êags
 = 
	`dißbÀ_úqßve
(); \

28 
	`ty≥of
(*(
±r
)Ë
ªs
 = 
	`©omic_ªad
(ptr); \

29 
	`©omic_£t
(
±r
, 
›
); \

30 
	`íabÀ_úqª°‹e
(
Êags
); \

31 
ªs
; })

	)

32 
	#©omic_add
(
±r
, 
öc
Ë
	`©omic_bö›
’å, inc, 
ªs
 + (öc))

	)

33 
	#©omic_‹
(
±r
, 
öc
Ë
	`©omic_bö›
’å, inc, 
ªs
 | (öc))

	)

34 
	#©omic_sw≠
(
±r
, 
öc
Ë
	`©omic_bö›
’å, inc, (öc))

	)

35 
	#©omic_ˇs
(
±r
, 
cmp
, 
swp
) ({ \

36 
Êags
 = 
	`dißbÀ_úqßve
(); \

37 
	`ty≥of
(*(
±r
)Ë
ªs
 = *(volatileÅypeof(*(ptr)) *)(ptr); \

38 i‡(
ªs
 =(
cmp
)Ë*(vﬁ©ûê
	`ty≥of
(
±r
))’åË(
swp
); \

39 
	`íabÀ_úqª°‹e
(
Êags
); \

40 
ªs
; })

	)

43 
ölöe
 
	$•ölock_åylock
(
•ölock_t
* 
lock
)

45 
ªs
 = 
	`©omic_sw≠
(&
lock
->lock, -1);

46 
	`mb
();

47  
ªs
;

48 
	}
}

50 
ölöe
 
	$•ölock_lock
(
•ölock_t
* 
lock
)

54 
	`©omic_ªad
(&
lock
->lock))

56 } 
	`•ölock_åylock
(
lock
));

57 
	}
}

59 
ölöe
 
	$•ölock_u∆ock
(
•ölock_t
* 
lock
)

61 
	`mb
();

62 
	`©omic_£t
(&
lock
->lock,0);

63 
	}
}

65 
ölöe
 
	$•ölock_lock_úqßve
(
•ölock_t
* 
lock
)

67 
Êags
 = 
	`dißbÀ_úqßve
();

68 
	`•ölock_lock
(
lock
);

69  
Êags
;

70 
	}
}

72 
ölöe
 
	$•ölock_u∆ock_úqª°‹e
(
•ölock_t
* 
lock
, 
Êags
)

74 
	`•ölock_u∆ock
(
lock
);

75 
	`íabÀ_úqª°‹e
(
Êags
);

76 
	}
}

	@abstract-machine/am/src/riscv/spike/htif.c

3 
	~"htif.h
"

4 
	~"©omic.h
"

5 
	~<klib.h
>

7 
uöt64_t
 
__htif_ba£
;

8 vﬁ©ûê
uöt64_t
 
toho°
 
__©åibuã__
((
£˘i⁄
(".htif")));

9 vﬁ©ûê
uöt64_t
 
‰omho°
 
__©åibuã__
((
£˘i⁄
(".htif")));

10 vﬁ©ûê
	ghtif_c⁄sﬁe_buf
;

11 
•ölock_t
 
	ghtif_lock
 = 
SPINLOCK_INIT
;

13 
	#TOHOST
(
ba£_öt
Ë(
uöt64_t
 *)(ba£_öà+ 
TOHOST_OFFSET
)

	)

14 
	#FROMHOST
(
ba£_öt
Ë(
uöt64_t
 *)(ba£_öà+ 
FROMHOST_OFFSET
)

	)

16 
	#TOHOST_OFFSET
 ((
uöçå_t
)
toho°
 - (uöçå_t)
__htif_ba£
)

	)

17 
	#FROMHOST_OFFSET
 ((
uöçå_t
)
‰omho°
 - (uöçå_t)
__htif_ba£
)

	)

19 
	$__check_‰omho°
()

21 
uöt64_t
 
fh
 = 
‰omho°
;

22 i‡(!
fh
)

24 
‰omho°
 = 0;

27 
	`as£π
(
	`FROMHOST_DEV
(
fh
) == 1);

28 
	`FROMHOST_CMD
(
fh
)) {

30 
htif_c⁄sﬁe_buf
 = 1 + (
uöt8_t
)
	`FROMHOST_DATA
(
fh
);

35 
	`as£π
(0);

37 
	}
}

39 
	$__£t_toho°
(
uöçå_t
 
dev
, uöçå_à
cmd
, uöçå_à
d©a
)

41 
toho°
)

42 
	`__check_‰omho°
();

43 
toho°
 = 
	`TOHOST_CMD
(
dev
, 
cmd
, 
d©a
);

44 
	}
}

46 
	$htif_c⁄sﬁe_gëch¨
()

48 #i‡
__riscv_xÀn
 == 32

53 
	`•ölock_lock
(&
htif_lock
);

54 
	`__check_‰omho°
();

55 
ch
 = 
htif_c⁄sﬁe_buf
;

56 i‡(
ch
 >= 0) {

57 
htif_c⁄sﬁe_buf
 = -1;

58 
	`__£t_toho°
(1, 0, 0);

60 
	`•ölock_u∆ock
(&
htif_lock
);

62  
ch
 - 1;

63 
	}
}

65 
	$do_toho°_‰omho°
(
uöçå_t
 
dev
, uöçå_à
cmd
, uöçå_à
d©a
)

67 
	`•ölock_lock
(&
htif_lock
);

68 
	`__£t_toho°
(
dev
, 
cmd
, 
d©a
);

71 
uöt64_t
 
fh
 = 
‰omho°
;

72 i‡(
fh
) {

73 i‡(
	`FROMHOST_DEV
(
fh
Ë=
dev
 && 
	`FROMHOST_CMD
(fhË=
cmd
) {

74 
‰omho°
 = 0;

77 
	`__check_‰omho°
();

80 
	`•ölock_u∆ock
(&
htif_lock
);

81 
	}
}

83 
	$htif_sysˇŒ
(
uöçå_t
 
¨g
)

85 
	`do_toho°_‰omho°
(0, 0, 
¨g
);

86 
	}
}

88 
	$htif_c⁄sﬁe_putch¨
(
uöt8_t
 
ch
)

90 #i‡
__riscv_xÀn
 == 32

92 vﬁ©ûê
uöt64_t
 
magic_mem
[8];

93 
magic_mem
[0] = 
SYS_wrôe
;

94 
magic_mem
[1] = 1;

95 
magic_mem
[2] = (
uöçå_t
)&
ch
;

96 
magic_mem
[3] = 1;

97 
	`do_toho°_‰omho°
(0, 0, (
uöçå_t
)
magic_mem
);

99 
	`•ölock_lock
(&
htif_lock
);

100 
	`__£t_toho°
(1, 1, 
ch
);

101 
	`•ölock_u∆ock
(&
htif_lock
);

103 
	}
}

105 
	$htif_powîoff
()

108 
‰omho°
 = 0;

109 
toho°
 = 1;

111 
	}
}

	@abstract-machine/am/src/riscv/spike/htif.h

3 #i‚de‡
_RISCV_HTIF_H


4 
	#_RISCV_HTIF_H


	)

6 
	~<°döt.h
>

8 #i‡
__riscv_xÀn
 == 64

9 
	#TOHOST_CMD
(
dev
, 
cmd
, 
∑ylﬂd
) \

10 (((
uöt64_t
)(
dev
Ë<< 56Ë| ((uöt64_t)(
cmd
Ë<< 48Ë| (uöt64_t)(
∑ylﬂd
))

	)

12 
	#TOHOST_CMD
(
dev
, 
cmd
, 
∑ylﬂd
) ({ \

13 i‡((
dev
Ë|| (
cmd
)Ë
	`__buûtö_å≠
(); \

14 (
∑ylﬂd
); })

	)

16 
	#FROMHOST_DEV
(
‰omho°_vÆue
Ë((
uöt64_t
)(‰omho°_vÆueË>> 56)

	)

17 
	#FROMHOST_CMD
(
‰omho°_vÆue
Ë((
uöt64_t
)(‰omho°_vÆueË<< 8 >> 56)

	)

18 
	#FROMHOST_DATA
(
‰omho°_vÆue
Ë((
uöt64_t
)(‰omho°_vÆueË<< 16 >> 16)

	)

20 
htif_c⁄sﬁe_putch¨
(
uöt8_t
);

21 
htif_c⁄sﬁe_gëch¨
();

22 
	$htif_powîoff
(Ë
	`__©åibuã__
((
n‹ëu∫
));

	@abstract-machine/am/src/riscv/spike/ioe.c

1 
	~<am.h
>

2 
	~<klib-ma¸os.h
>

4 
__am_timî_öô
();

5 
__am_timî_πc
(
AM_TIMER_RTC_T
 *);

6 
__am_timî_u±ime
(
AM_TIMER_UPTIME_T
 *);

8 
	$__am_timî_c⁄fig
(
AM_TIMER_CONFIG_T
 *
cfg
Ë{ cfg->
¥e£¡
 = 
åue
; cfg->
has_πc
 =Årue; 
	}
}

10 (*
	th™dÀr_t
)(*
	tbuf
);

11 *
lut
[128] = {

12 [
AM_TIMER_CONFIG
] = 
__am_timî_c⁄fig
,

13 [
AM_TIMER_RTC
 ] = 
__am_timî_πc
,

14 [
AM_TIMER_UPTIME
] = 
__am_timî_u±ime
,

15 
	}
};

17 
	$Áû
(*
buf
Ë{ 
	`∑nic
("ac˚s†n⁄exi°Ñegi°î"); 
	}
}

19 
boﬁ
 
	$i€_öô
() {

20 
i
 = 0; i < 
	`LENGTH
(
lut
); i++)

21 i‡(!
lut
[
i
]Ëlut[i] = 
Áû
;

22 
	`__am_timî_öô
();

23  
åue
;

24 
	}
}

26 
	$i€_ªad
 (
ªg
, *
buf
Ë{ ((
h™dÀr_t
)
lut
[ªg])(buf); 
	}
}

27 
	$i€_wrôe
(
ªg
, *
buf
Ë{ ((
h™dÀr_t
)
lut
[ªg])(buf); 
	}
}

	@abstract-machine/am/src/riscv/spike/timer.c

1 
	~<am.h
>

3 
uöt64_t
 
	gboŸ_time
 = 0;

5 
	#CLINT_MMIO
 0x2000000ul

	)

6 
	#TIME_BASE
 0xbff8

	)

8 
uöt64_t
 
	$ªad_time
() {

9 
uöt32_t
 
lo
 = *(vﬁ©ûêuöt32_à*)(
CLINT_MMIO
 + 
TIME_BASE
 + 0);

10 
uöt32_t
 
hi
 = *(vﬁ©ûêuöt32_à*)(
CLINT_MMIO
 + 
TIME_BASE
 + 4);

11 
uöt64_t
 
time
 = ((uöt64_t)
hi
 << 32Ë| 
lo
;

12  
time
 / 10;

13 
	}
}

15 
	$__am_timî_u±ime
(
AM_TIMER_UPTIME_T
 *
u±ime
) {

16 
u±ime
->
us
 = 
	`ªad_time
(Ë- 
boŸ_time
;

17 
	}
}

19 
	$__am_timî_öô
() {

20 
boŸ_time
 = 
	`ªad_time
();

21 
	}
}

23 
	$__am_timî_πc
(
AM_TIMER_RTC_T
 *
πc
) {

24 
πc
->
£c⁄d
 = 0;

25 
πc
->
möuã
 = 0;

26 
πc
->
hour
 = 0;

27 
πc
->
day
 = 0;

28 
πc
->
m⁄th
 = 0;

29 
πc
->
yór
 = 1900;

30 
	}
}

	@abstract-machine/am/src/riscv/spike/trm.c

1 
	~<am.h
>

2 
	~<klib.h
>

3 
	~<klib-ma¸os.h
>

4 
	~"htif.h
"

6 
_hóp_°¨t
;

7 
maö
(c⁄° *
¨gs
);

9 
_pmem_°¨t
;

10 
	#PMEM_SIZE
 (128 * 1024 * 1024)

	)

11 
	#PMEM_END
 ((
uöçå_t
)0x80000000 + 
PMEM_SIZE
)

	)

13 
Aªa
 
	ghóp
 = 
RANGE
(&
_hóp_°¨t
, 
PMEM_END
);

14 #i‚de‡
MAINARGS


15 
	#MAINARGS
 ""

	)

17 c⁄° 
	gmaö¨gs
[] = 
MAINARGS
;

19 
	$putch
(
ch
) {

20 
	`htif_c⁄sﬁe_putch¨
(
ch
);

21 
	}
}

23 
	$hÆt
(
code
) {

24 
	`¥ötf
("Exô wôh codê%d\n", 
code
);

25 
	`htif_powîoff
();

29 
	}
}

31 
	$_åm_öô
() {

32 
ªt
 = 
	`maö
(
maö¨gs
);

33 
	`hÆt
(
ªt
);

34 
	}
}

	@abstract-machine/am/src/x86/nemu/cte.c

1 
	~<am.h
>

2 
	~<x86/x86.h
>

3 
	~<klib.h
>

5 
	#NR_IRQ
 256

6 
	#SEG_KCODE
 1

	)

7 
	#SEG_KDATA
 2

	)

9 
	gC⁄ãxt
* (*
	gu£r_h™dÀr
)(
	gEvít
, C⁄ãxt*Ë
NULL
;

11 
__am_úq0
();

12 
__am_vecsys
();

13 
__am_ve˘øp
();

14 
__am_ve˙uŒ
();

17 
C⁄ãxt
* 
	$__am_úq_h™dÀ
(
C⁄ãxt
 *
c
) {

18 i‡(
u£r_h™dÀr
) {

19 
Evít
 
ev
 = {0};

20 
c
->
úq
) {

21 : 
ev
.
evít
 = 
EVENT_ERROR
; ;

24 
c
 = 
	`u£r_h™dÀr
(
ev
, c);

25 
	`as£π
(
c
 !
NULL
);

28  
c
;

29 
	}
}

31 
boﬁ
 
	$˘e_öô
(
C⁄ãxt
*(*
h™dÀr
)(
Evít
, Context*)) {

32 
G©eDesc32
 
idt
[
NR_IRQ
];

35 
i
 = 0; i < 
NR_IRQ
; i ++) {

36 
idt
[
i
] = 
	`GATE32
(
STS_TG
, 
	`KSEL
(
SEG_KCODE
), 
__am_ve˙uŒ
, 
DPL_KERN
);

40 
idt
[32] = 
	`GATE32
(
STS_IG
, 
	`KSEL
(
SEG_KCODE
), 
__am_úq0
, 
DPL_KERN
);

42 
idt
[0x80] = 
	`GATE32
(
STS_TG
, 
	`KSEL
(
SEG_KCODE
), 
__am_vecsys
, 
DPL_USER
);

43 
idt
[0x81] = 
	`GATE32
(
STS_TG
, 
	`KSEL
(
SEG_KCODE
), 
__am_ve˘øp
, 
DPL_KERN
);

45 
	`£t_idt
(
idt
, (idt));

48 
u£r_h™dÀr
 = 
h™dÀr
;

50  
åue
;

51 
	}
}

54 
C⁄ãxt
* 
	$kc⁄ãxt
(
Aªa
 
k°ack
, (*
íåy
)(*), *
¨g
) {

55  
NULL
;

56 
	}
}

58 
	$yõld
() {

59 
asm
 volatile("int $0x81");

60 
	}
}

62 
boﬁ
 
	$õ«bÀd
() {

63  
Ál£
;

64 
	}
}

66 
	$i£t
(
boﬁ
 
íabÀ
) {

67 
	}
}

	@abstract-machine/am/src/x86/nemu/vme.c

1 
	~<am.h
>

2 
	~<√mu.h
>

3 
	~<klib.h
>

5 
AddrS∑˚
 
	gkas
 = {};

6 * (*
	gpgÆloc_u§
)(Ë
NULL
;

7 (*
pg‰ì_u§
)(*Ë
NULL
;

8 
vme_íabÀ
 = 0;

10 
Aªa
 
£gmíts
[] = {

11 
NEMU_PADDR_SPACE


12 
	}
};

14 
	#USER_SPACE
 
	`RANGE
(0x40000000, 0xc0000000)

	)

16 
boﬁ
 
	$vme_öô
(* (*
pgÆloc_f
)(), (*
pg‰ì_f
)(*)) {

17 
pgÆloc_u§
 = 
pgÆloc_f
;

18 
pg‰ì_u§
 = 
pg‰ì_f
;

20 
kas
.
±r
 = 
	`pgÆloc_f
(
PGSIZE
);

22 
i
;

23 
i
 = 0; i < 
	`LENGTH
(
£gmíts
); i ++) {

24 *
va
 = 
£gmíts
[
i
].
°¨t
;

25 ; 
va
 < 
£gmíts
[
i
].
íd
; v®+
PGSIZE
) {

26 
	`m≠
(&
kas
, 
va
, va, 0);

30 
	`£t_¸3
(
kas
.
±r
);

31 
	`£t_¸0
(
	`gë_¸0
(Ë| 
CR0_PG
);

32 
vme_íabÀ
 = 1;

34  
åue
;

35 
	}
}

37 
	$¥Ÿe˘
(
AddrS∑˚
 *
as
) {

38 
PTE
 *
updú
 = (PTE*)(
	`pgÆloc_u§
(
PGSIZE
));

39 
as
->
±r
 = 
updú
;

40 
as
->
¨ó
 = 
USER_SPACE
;

41 
as
->
pgsize
 = 
PGSIZE
;

43 
	`mem˝y
(
updú
, 
kas
.
±r
, 
PGSIZE
);

44 
	}
}

46 
	$u≈rŸe˘
(
AddrS∑˚
 *
as
) {

47 
	}
}

49 
	$__am_gë_cur_as
(
C⁄ãxt
 *
c
) {

50 
c
->
¸3
 = (
vme_íabÀ
 ? (*)
	`gë_¸3
(Ë: 
NULL
);

51 
	}
}

53 
	$__am_swôch
(
C⁄ãxt
 *
c
) {

54 i‡(
vme_íabÀ
 && 
c
->
¸3
 !
NULL
) {

55 
	`£t_¸3
(
c
->
¸3
);

57 
	}
}

59 
	$m≠
(
AddrS∑˚
 *
as
, *
va
, *
∑
, 
¥Ÿ
) {

60 
	}
}

62 
C⁄ãxt
* 
	$uc⁄ãxt
(
AddrS∑˚
 *
as
, 
Aªa
 
k°ack
, *
íåy
) {

63  
NULL
;

64 
	}
}

	@abstract-machine/am/src/x86/qemu/boot/main.c

1 
	~<°döt.h
>

2 
	~<ñf.h
>

3 
	~<x86/x86.h
>

5 
	#SECTSIZE
 512

	)

6 
	#ARGSIZE
 1024

	)

8 
ölöe
 
	$waô_disk
() {

9 (
	`öb
(0x1f7) & 0xc0) != 0x40);

10 
	}
}

12 
ölöe
 
	$ªad_disk
(*
buf
, 
£˘
) {

13 
	`waô_disk
();

14 
	`outb
(0x1f2, 1);

15 
	`outb
(0x1f3, 
£˘
);

16 
	`outb
(0x1f4, 
£˘
 >> 8);

17 
	`outb
(0x1f5, 
£˘
 >> 16);

18 
	`outb
(0x1f6, (
£˘
 >> 24) | 0xE0);

19 
	`outb
(0x1f7, 0x20);

20 
	`waô_disk
();

21 
i
 = 0; i < 
SECTSIZE
 / 4; i ++) {

22 ((
uöt32_t
 *)
buf
)[
i
] = 
	`öl
(0x1f0);

24 
	}
}

26 
ölöe
 
	$c›y_‰om_disk
(*
buf
, 
nbyãs
, 
disk_off£t
) {

27 
uöt32_t
 
cur
 = (uöt32_t)
buf
 & ~(
SECTSIZE
 - 1);

28 
uöt32_t
 
ed
 = (uöt32_t)
buf
 + 
nbyãs
;

29 
uöt32_t
 
£˘
 = (
disk_off£t
 / 
SECTSIZE
Ë+ (
ARGSIZE
 / SECTSIZE) + 1;

30 ; 
cur
 < 
ed
; cu∏+
SECTSIZE
, 
£˘
 ++)

31 
	`ªad_disk
((*)
cur
, 
£˘
);

32 
	}
}

34 
	$lﬂd_¥ogøm
(
uöt32_t
 
fûesz
, uöt32_à
memsz
, uöt32_à
∑ddr
, uöt32_à
off£t
) {

35 
	`c›y_‰om_disk
((*)
∑ddr
, 
fûesz
, 
off£t
);

36 *
bss
 = (*)(
∑ddr
 + 
fûesz
);

37 
uöt32_t
 
i
 = 
fûesz
; i !
memsz
; i++) {

38 *
bss
++ = 0;

40 
	}
}

42 
	$lﬂd_ñf64
(
Elf64_Ehdr
 *
ñf
) {

43 
Elf64_Phdr
 *
ph
 = (Elf64_Phd∏*)((*)
ñf
 +Élf->
e_phoff
);

44 
i
 = 0; i < 
ñf
->
e_phnum
; i++, 
ph
++) {

45 
	`lﬂd_¥ogøm
(

46 (
uöt32_t
)
ph
->
p_fûesz
,

47 (
uöt32_t
)
ph
->
p_memsz
,

48 (
uöt32_t
)
ph
->
p_∑ddr
,

49 (
uöt32_t
)
ph
->
p_off£t


52 
	}
}

54 
	$lﬂd_ñf32
(
Elf32_Ehdr
 *
ñf
) {

55 
Elf32_Phdr
 *
ph
 = (Elf32_Phd∏*)((*)
ñf
 +Élf->
e_phoff
);

56 
i
 = 0; i < 
ñf
->
e_phnum
; i++, 
ph
++) {

57 
	`lﬂd_¥ogøm
(

58 (
uöt32_t
)
ph
->
p_fûesz
,

59 (
uöt32_t
)
ph
->
p_memsz
,

60 (
uöt32_t
)
ph
->
p_∑ddr
,

61 (
uöt32_t
)
ph
->
p_off£t


64 
	}
}

66 
	$lﬂd_kî√l
() {

67 
Elf32_Ehdr
 *
ñf32
 = (*)0x8000;

68 
Elf64_Ehdr
 *
ñf64
 = (*)0x8000;

69 
is_≠
 = 
	`boŸ_ªc‹d
()->is_ap;

71 i‡(!
is_≠
) {

73 
	`c›y_‰om_disk
((*)
MAINARG_ADDR
, 1024, -1024);

75 
	`c›y_‰om_disk
(
ñf32
, 4096, 0);

76 i‡(
ñf32
->
e_machöe
 =
EM_X86_64
) {

77 
	`lﬂd_ñf64
(
ñf64
);

79 
	`lﬂd_ñf32
(
ñf32
);

85 i‡(
ñf32
->
e_machöe
 =
EM_X86_64
) {

86 (((*)())(
uöt32_t
)
ñf64
->
e_íåy
)();

88 (((*)())(
uöt32_t
)
ñf32
->
e_íåy
)();

90 
	}
}

	@abstract-machine/am/src/x86/qemu/cte.c

1 
	~"x86-qemu.h
"

3 
	gC⁄ãxt
* (*
	gu£r_h™dÀr
)(
	gEvít
, C⁄ãxt*Ë
NULL
;

4 #i‡
__x86_64__


5 
G©eDesc64
 
	gidt
[
NR_IRQ
];

6 
	#GATE
 
GATE64


	)

8 
G©eDesc32
 
	gidt
[
NR_IRQ
];

9 
	#GATE
 
GATE32


	)

12 
	#IRQHANDLE_DECL
(
id
, 
d∂
, 
îr
) \

13 
__am_úq
##
	`id
();

	)

15 
	$IRQS
(
IRQHANDLE_DECL
)

16 
	`__am_úqÆl
();

17 
	`__am_kc⁄ãxt_°¨t
();

19 
	$__am_úq_h™dÀ
(
å≠_‰ame
 *
tf
) {

20 
C⁄ãxt
 *
ßved_˘x
 = &
tf
->
ßved_c⁄ãxt
;

21 
Evít
 
ev
 = {

22 .
evít
 = 
EVENT_NULL
,

23 .
ˇu£
 = 0, .
ªf
 = 0,

24 .
msg
 = "(no message)",

27 #i‡
__x86_64


28 
ßved_˘x
->
rù
 = 
tf
->rip;

29 
ßved_˘x
->
cs
 = 
tf
->cs;

30 
ßved_˘x
->
rÊags
 = 
tf
->rflags;

31 
ßved_˘x
->
r•
 = 
tf
->rsp;

32 
ßved_˘x
->
r•0
 = 
CPU
->
tss
.rsp0;

33 
ßved_˘x
->
ss
 = 
tf
->ss;

35 
ßved_˘x
->
eù
 = 
tf
->eip;

36 
ßved_˘x
->
cs
 = 
tf
->cs;

37 
ßved_˘x
->
eÊags
 = 
tf
->eflags;

38 
ßved_˘x
->
e•0
 = 
CPU
->
tss
.esp0;

39 
ßved_˘x
->
ss3
 = 
	`USEL
(
SEG_UDATA
);

41 
ßved_˘x
->
e•
 = (
tf
->
cs
 & 
DPL_USER
 ?Åf->e• : (
uöt32_t
)(tf + 1) - 8);

43 
ßved_˘x
->
¸3
 = (*)
	`gë_¸3
();

45 
	#IRQ
 
T_IRQ0
 +

	)

46 
	#MSG
(
m
Ë
ev
.
msg
 = m;

	)

48 i‡(
IRQ
 0 <
tf
->
úq
 &&Åf->irq < IRQ 32) {

49 
	`__am_œpic_eoi
();

52 
tf
->
úq
) {

53 
IRQ
 0: 
	`MSG
("timer interrupt (lapic)")

54 
ev
.
evít
 = 
EVENT_IRQ_TIMER
; ;

55 
IRQ
 1: 
	`MSG
("I/O device IRQ1 (keyboard)")

56 
ev
.
evít
 = 
EVENT_IRQ_IODEV
; ;

57 
IRQ
 4: 
	`MSG
("I/O device IRQ4 (COM1)")

58 
ev
.
evít
 = 
EVENT_IRQ_IODEV
; ;

59 
EX_SYSCALL
: 
	`MSG
("int $0x80 system call")

60 
ev
.
evít
 = 
EVENT_SYSCALL
; ;

61 
EX_YIELD
: 
	`MSG
("int $0x81 yield")

62 
ev
.
evít
 = 
EVENT_YIELD
; ;

63 
EX_DE
: 
	`MSG
("DE #0 divide by zero")

64 
ev
.
evít
 = 
EVENT_ERROR
; ;

65 
EX_UD
: 
	`MSG
("UD #6 invalid opcode")

66 
ev
.
evít
 = 
EVENT_ERROR
; ;

67 
EX_NM
: 
	`MSG
("NM #7 coprocessorÉrror")

68 
ev
.
evít
 = 
EVENT_ERROR
; ;

69 
EX_DF
: 
	`MSG
("DF #8 double fault")

70 
ev
.
evít
 = 
EVENT_ERROR
; ;

71 
EX_TS
: 
	`MSG
("TS #10 invalid TSS")

72 
ev
.
evít
 = 
EVENT_ERROR
; ;

73 
EX_NP
: 
	`MSG
("NP #11 segment/gateÇotÖresent")

74 
ev
.
evít
 = 
EVENT_ERROR
; ;

75 
EX_SS
: 
	`MSG
("SS #12 stack fault")

76 
ev
.
evít
 = 
EVENT_ERROR
; ;

77 
EX_GP
: 
	`MSG
("GP #13, generalÖrotection fault")

78 
ev
.
evít
 = 
EVENT_ERROR
; ;

79 
EX_PF
: 
	`MSG
("PF #14,Öage fault, @cause: PROT_XXX")

80 
ev
.
evít
 = 
EVENT_PAGEFAULT
;

81 i‡(
tf
->
îrcode
 & 0x1Ë
ev
.
ˇu£
 |
MMAP_NONE
;

82 i‡(
tf
->
îrcode
 & 0x2Ë
ev
.
ˇu£
 |
MMAP_WRITE
;

83 
ev
.
ˇu£
 |
MMAP_READ
;

84 
ev
.
ªf
 = 
	`gë_¸2
();

86 : 
	`MSG
("unrecognized interrupt/exception")

87 
ev
.
evít
 = 
EVENT_ERROR
;

88 
ev
.
ˇu£
 = 
tf
->
îrcode
;

92 
C⁄ãxt
 *
ªt_˘x
 = 
	`u£r_h™dÀr
(
ev
, 
ßved_˘x
);

93 
	`∑nic_⁄
(!
ªt_˘x
, "returningÅo NULL context");

95 i‡(
ªt_˘x
->
¸3
) {

96 
	`£t_¸3
(
ªt_˘x
->
¸3
);

97 #i‡
__x86_64__


98 
CPU
->
tss
.
r•0
 = 
ªt_˘x
->rsp0;

100 
CPU
->
tss
.
ss0
 = 
	`KSEL
(
SEG_KDATA
);

101 
CPU
->
tss
.
e•0
 = 
ªt_˘x
->esp0;

105 
	`__am_úë
(
ªt_˘x
);

106 
	}
}

108 
boﬁ
 
	$˘e_öô
(
C⁄ãxt
 *(*
h™dÀr
)(
Evít
, Context *)) {

109 
	`∑nic_⁄
(
	`˝u_cuºít
() != 0, "init CTE inÇon-bootstrap CPU");

110 
	`∑nic_⁄
(!
h™dÀr
, "no interrupt handler");

112 
i
 = 0; i < 
NR_IRQ
; i ++) {

113 
idt
[
i
] = 
	`GATE
(
STS_TG
, 
	`KSEL
(
SEG_KCODE
), 
__am_úqÆl
, 
DPL_KERN
);

115 
	#IDT_ENTRY
(
id
, 
d∂
, 
îr
) \

116 
idt
[
id
] = 
	`GATE
(
STS_TG
, 
	`KSEL
(
SEG_KCODE
), 
__am_úq
##id, 
DPL_
##
d∂
);

	)

117 
	`IRQS
(
IDT_ENTRY
)

119 
u£r_h™dÀr
 = 
h™dÀr
;

120  
åue
;

121 
	}
}

123 
	$yõld
() {

124 
	`öãºu±
(0x81);

125 
	}
}

127 
boﬁ
 
	$õ«bÀd
() {

128  (
	`gë_eÊ
(Ë& 
FL_IF
) != 0;

129 
	}
}

131 
	$i£t
(
boﬁ
 
íabÀ
) {

132 i‡(
íabÀ
Ë
	`°i
();

133 
	`˛i
();

134 
	}
}

136 
	$__am_∑nic_⁄_ªtu∫
(Ë{ 
	`∑nic
("kî√»c⁄ãxàªtu∫s"); 
	}
}

138 
C⁄ãxt
* 
	$kc⁄ãxt
(
Aªa
 
k°ack
, (*
íåy
)(*), *
¨g
) {

139 
C⁄ãxt
 *
˘x
 = 
k°ack
.
íd
 - (Context);

140 *
˘x
 = (
C⁄ãxt
) { 0 };

142 #i‡
__x86_64__


143 
˘x
->
cs
 = 
	`KSEL
(
SEG_KCODE
);

144 
˘x
->
rù
 = (
uöçå_t
)
__am_kc⁄ãxt_°¨t
;

145 
˘x
->
rÊags
 = 
FL_IF
;

146 
˘x
->
r•
 = (
uöçå_t
)
k°ack
.
íd
;

148 
˘x
->
ds
 = 
	`KSEL
(
SEG_KDATA
);

149 
˘x
->
cs
 = 
	`KSEL
(
SEG_KCODE
);

150 
˘x
->
eù
 = (
uöçå_t
)
__am_kc⁄ãxt_°¨t
;

151 
˘x
->
eÊags
 = 
FL_IF
;

152 
˘x
->
e•
 = (
uöçå_t
)
k°ack
.
íd
;

155 
˘x
->
GPR1
 = (
uöçå_t
)
¨g
;

156 
˘x
->
GPR2
 = (
uöçå_t
)
íåy
;

158  
˘x
;

159 
	}
}

161 
	$__am_≥r˝u_öôúq
() {

162 
	`__am_iﬂpic_íabÀ
(
IRQ_KBD
, 0);

163 
	`__am_iﬂpic_íabÀ
(
IRQ_COM1
, 0);

164 
	`£t_idt
(
idt
, (idt));

165 
	}
}

	@abstract-machine/am/src/x86/qemu/ioe.c

1 
	~"x86-qemu.h
"

2 
	~<klib.h
>

7 
	#COM1
 0x3f8

	)

9 
	$u¨t_öô
() {

10 
	`outb
(
COM1
 + 2, 0);

11 
	`outb
(
COM1
 + 3, 0x80);

12 
	`outb
(
COM1
 + 0, 115200 / 9600);

13 
	`outb
(
COM1
 + 1, 0);

14 
	`outb
(
COM1
 + 3, 0x03);

15 
	`outb
(
COM1
 + 4, 0);

16 
	`outb
(
COM1
 + 1, 0x01);

17 
	`öb
 (
COM1
 + 2);

18 
	`öb
 (
COM1
 + 0);

20 
	}
}

22 
	$u¨t_c⁄fig
(
AM_UART_CONFIG_T
 *
cfg
) {

23 
cfg
->
¥e£¡
 = 
åue
;

24 
	}
}

26 
	$u¨t_tx
(
AM_UART_TX_T
 *
£nd
) {

27 
	`outb
(
COM1
, 
£nd
->
d©a
);

28 
	}
}

30 
	$u¨t_rx
(
AM_UART_RX_T
 *
ªcv
) {

31 
ªcv
->
d©a
 = (
	`öb
(
COM1
 + 5) & 0x1) ? inb(COM1) : -1;

32 
	}
}

37 
AM_TIMER_RTC_T
 
	gboŸ_d©e
;

38 
uöt32_t
 
	g‰eq_mhz
 = 2000;

39 
uöt64_t
 
	gu±sc
;

40 
timî_πc
(
AM_TIMER_RTC_T
 *
πc
);

42 
ölöe
 
	$ªad_πc
(
ªg
) {

43 
	`outb
(0x70, 
ªg
);

44 
ªt
 = 
	`öb
(0x71);

45  (
ªt
 & 0xf) + (ret >> 4) * 10;

46 
	}
}

48 
	$ªad_πc_async
(
AM_TIMER_RTC_T
 *
πc
) {

49 *
πc
 = (
AM_TIMER_RTC_T
) {

50 .
£c⁄d
 = 
	`ªad_πc
(0),

51 .
möuã
 = 
	`ªad_πc
(2),

52 .
hour
 = 
	`ªad_πc
(4),

53 .
day
 = 
	`ªad_πc
(7),

54 .
m⁄th
 = 
	`ªad_πc
(8),

55 .
yór
 = 
	`ªad_πc
(9) + 2000,

57 
	}
}

59 
	$waô_£c
(
AM_TIMER_RTC_T
 *
t1
) {

60 
AM_TIMER_RTC_T
 
t0
;

62 
	`ªad_πc_async
(&
t0
);

63 vﬁ©ûê
i
 = 0; i < 100000; i++) ;

64 
	`ªad_πc_async
(
t1
);

65 i‡(
t0
.
£c⁄d
 !
t1
->second) {

69 
	}
}

71 
uöt32_t
 
	$e°im©e_‰eq
() {

72 
AM_TIMER_RTC_T
 
πc1
, 
πc2
;

73 
uöt64_t
 
tsc1
, 
tsc2
, 
t1
, 
t2
;

74 
	`waô_£c
(&
πc1
); 
tsc1
 = 
	`rdtsc
(); 
t1
 =Ñtc1.
möuã
 * 60 +Ñtc1.
£c⁄d
;

75 
	`waô_£c
(&
πc2
); 
tsc2
 = 
	`rdtsc
(); 
t2
 =Ñtc2.
möuã
 * 60 +Ñtc2.
£c⁄d
;

76 i‡(
t1
 >
t2
Ë 
	`e°im©e_‰eq
();

77  ((
tsc2
 - 
tsc1
Ë>> 20Ë/ (
t2
 - 
t1
);

78 
	}
}

80 
	$timî_öô
() {

81 
‰eq_mhz
 = 
	`e°im©e_‰eq
();

82 
	`timî_πc
(&
boŸ_d©e
);

83 
u±sc
 = 
	`rdtsc
();

84 
	}
}

86 
	$timî_c⁄fig
(
AM_TIMER_CONFIG_T
 *
cfg
) {

87 
cfg
->
¥e£¡
 = cfg->
has_πc
 = 
åue
;

88 
	}
}

90 
	$timî_πc
(
AM_TIMER_RTC_T
 *
πc
) {

91 
tmp
;

93 
	`ªad_πc_async
(
πc
);

94 
tmp
 = 
	`ªad_πc
(0);

95 } 
tmp
 !
πc
->
£c⁄d
);

96 
	}
}

98 
	$timî_u±ime
(
AM_TIMER_UPTIME_T
 *
u±
) {

99 
u±
->
us
 = (
	`rdtsc
(Ë- 
u±sc
Ë/ 
‰eq_mhz
;

100 
	}
}

105 
	gkeylut
[128] = {

106 [0x01] = 
AM_KEY_ESCAPE
, [0x02] = 
AM_KEY_1
, [0x03] = 
AM_KEY_2
,

107 [0x04] = 
AM_KEY_3
, [0x05] = 
AM_KEY_4
, [0x06] = 
AM_KEY_5
, [0x07] = 
AM_KEY_6
,

108 [0x08] = 
AM_KEY_7
, [0x09] = 
AM_KEY_8
, [0x0a] = 
AM_KEY_9
, [0x0b] = 
AM_KEY_0
,

109 [0x0c] = 
AM_KEY_MINUS
, [0x0d] = 
AM_KEY_EQUALS
,

110 [0x0e] = 
AM_KEY_BACKSPACE
, [0x0f] = 
AM_KEY_TAB
,

111 [0x10] = 
AM_KEY_Q
, [0x11] = 
AM_KEY_W
, [0x12] = 
AM_KEY_E
, [0x13] = 
AM_KEY_R
,

112 [0x14] = 
AM_KEY_T
, [0x15] = 
AM_KEY_Y
, [0x16] = 
AM_KEY_U
, [0x17] = 
AM_KEY_I
,

113 [0x18] = 
AM_KEY_O
, [0x19] = 
AM_KEY_P
, [0x1a] = 
AM_KEY_LEFTBRACKET
,

114 [0x1b] = 
AM_KEY_RIGHTBRACKET
, [0x1c] = 
AM_KEY_RETURN
,

115 [0x1d] = 
AM_KEY_LCTRL
, [0x1e] = 
AM_KEY_A
, [0x1f] = 
AM_KEY_S
,

116 [0x20] = 
AM_KEY_D
, [0x21] = 
AM_KEY_F
, [0x22] = 
AM_KEY_G
, [0x23] = 
AM_KEY_H
,

117 [0x24] = 
AM_KEY_J
, [0x25] = 
AM_KEY_K
, [0x26] = 
AM_KEY_L
,

118 [0x27] = 
AM_KEY_SEMICOLON
, [0x28] = 
AM_KEY_APOSTROPHE
,

119 [0x29] = 
AM_KEY_GRAVE
, [0x2a] = 
AM_KEY_LSHIFT
,

120 [0x2b] = 
AM_KEY_BACKSLASH
, [0x2c] = 
AM_KEY_Z
, [0x2d] = 
AM_KEY_X
,

121 [0x2e] = 
AM_KEY_C
, [0x2f] = 
AM_KEY_V
, [0x30] = 
AM_KEY_B
, [0x31] = 
AM_KEY_N
,

122 [0x32] = 
AM_KEY_M
, [0x33] = 
AM_KEY_COMMA
, [0x34] = 
AM_KEY_PERIOD
,

123 [0x35] = 
AM_KEY_SLASH
, [0x36] = 
AM_KEY_RSHIFT
, [0x38] = 
AM_KEY_LALT
,

124 [0x38] = 
AM_KEY_RALT
, [0x39] = 
AM_KEY_SPACE
, [0x3a] = 
AM_KEY_CAPSLOCK
,

125 [0x3b] = 
AM_KEY_F1
, [0x3c] = 
AM_KEY_F2
, [0x3d] = 
AM_KEY_F3
,

126 [0x3e] = 
AM_KEY_F4
, [0x3f] = 
AM_KEY_F5
, [0x40] = 
AM_KEY_F6
,

127 [0x41] = 
AM_KEY_F7
, [0x42] = 
AM_KEY_F8
, [0x43] = 
AM_KEY_F9
,

128 [0x44] = 
AM_KEY_F10
, [0x48] = 
AM_KEY_INSERT
,

129 [0x4b] = 
AM_KEY_HOME
, [0x4d] = 
AM_KEY_END
, [0x50] = 
AM_KEY_DELETE
,

130 [0x57] = 
AM_KEY_F11
, [0x58] = 
AM_KEY_F12
, [0x5b] = 
AM_KEY_APPLICATION
,

133 
	$öput_c⁄fig
(
AM_INPUT_CONFIG_T
 *
cfg
) {

134 
cfg
->
¥e£¡
 = 
åue
;

135 
	}
}

137 
	$öput_keybrd
(
AM_INPUT_KEYBRD_T
 *
ev
) {

138 i‡(
	`öb
(0x64) & 0x1) {

139 
code
 = 
	`öb
(0x60) & 0xff;

140 
ev
->
keydown
 = 
code
 < 128;

141 
ev
->
keycode
 = 
keylut
[
code
 & 0x7f];

143 
ev
->
keydown
 = 
Ál£
;

144 
ev
->
keycode
 = 
AM_KEY_NONE
;

146 
	}
}

151 
	#VMEM_SIZE
 (512 << 10)

	)

153 
	svbe_öfo
 {

154 
uöt8_t
 
	mign‹e
[18];

155 
uöt16_t
 
	mwidth
;

156 
uöt16_t
 
	mheight
;

157 
uöt8_t
 
	mign‹e1
[18];

158 
uöt32_t
 
	m‰amebuf„r
;

159 } 
__©åibuã__
 ((
∑cked
));

161 
ölöe
 
uöt8_t
 
	$R
(
uöt32_t
 
p
Ë{ Ö >> 16; 
	}
}

162 
ölöe
 
uöt8_t
 
	$G
(
uöt32_t
 
p
Ë{ Ö >> 8; 
	}
}

163 
ölöe
 
uöt8_t
 
	$B
(
uöt32_t
 
p
Ë{ Ö; 
	}
}

165 
	spixñ
 {

166 
uöt8_t
 
	mb
, 
	mg
, 
	mr
;

167 } 
__©åibuã__
 ((
∑cked
));

169 
pixñ
 *
	gfb
;

170 
uöt8_t
 
	gvmem
[
VMEM_SIZE
], 
	gvbuf
[VMEM_SIZE], *
	gvbuf_hód
;

172 
gpu_ˇnvas
 
	gdi•œy
;

173 
ölöe
 *
	$to_ho°
(
gpu±r_t
 
±r
Ë{ Öå =
AM_GPU_NULL
 ? 
NULL
 : 
vmem
 +Öå; 
	}
}

175 
	$gpu_öô
() {

176 
vbe_öfo
 *
öfo
 = (vbe_info *)0x00004000;

177 
di•œy
.
w
 = 
öfo
->
width
;

178 
di•œy
.
h
 = 
öfo
->
height
;

179 
fb
 = (*)((
öçå_t
)(
öfo
->
‰amebuf„r
));

180 
	}
}

182 
	$gpu_c⁄fig
(
AM_GPU_CONFIG_T
 *
cfg
) {

183 *
cfg
 = (
AM_GPU_CONFIG_T
) {

184 .
¥e£¡
 = 
åue
,

185 .
width
 = 
di•œy
.
w
, .
height
 = di•œy.
h
,

186 .
vmemsz
 = (
vmem
),

188 
	}
}

190 
	$gpu_fbdøw
(
AM_GPU_FBDRAW_T
 *
døw
) {

191 
x
 = 
døw
->x, 
y
 = døw->y, 
w
 = døw->w, 
h
 = draw->h;

192 
W
 = 
di•œy
.
w
, 
H
 = di•œy.
h
;

193 
uöt32_t
 *
pixñs
 = 
døw
->pixels;

194 
Àn
 = (
x
 + 
w
 >
W
) ? W - x : w;

195 
j
 = 0; j < 
h
; j ++, 
pixñs
 +
w
) {

196 i‡(
y
 + 
j
 < 
H
) {

197 
pixñ
 *
px
 = &
fb
[
x
 + (
j
 + 
y
Ë* 
W
];

198 
i
 = 0; i < 
Àn
; i ++, 
px
 ++) {

199 
uöt32_t
 
p
 = 
pixñs
[
i
];

200 *
px
 = (
pixñ
Ë{ .
r
 = 
	`R
(
p
), .
g
 = 
	`G
’), .
b
 = 
	`B
(p) };

204 
	}
}

206 
	$gpu_°©us
(
AM_GPU_STATUS_T
 *
°©
) {

207 
°©
->
ªady
 = 
åue
;

208 
	}
}

210 
	$gpu_mem˝y
(
AM_GPU_MEMCPY_T
 *
∑øms
) {

211 *
§c
 = 
∑øms
->§c, *
d°
 = 
	`to_ho°
’¨ams->
de°
);

212 
i
 = 0; i < 
∑øms
->
size
; i++)

213 
d°
[
i
] = 
§c
[i];

214 
	}
}

216 *
	$vbuf_Æloc
(
size
) {

217 *
ªt
 = 
vbuf_hód
;

218 
vbuf_hód
 +
size
;

219 
	`∑nic_⁄
(
vbuf_hód
 > 
vbuf
 + (vbuf), "no memory");

220 
i
 = 0; i < 
size
; i++)

221 ((*)
ªt
)[
i
] = 0;

222  
ªt
;

223 
	}
}

225 
pixñ
 *
	$ªndî
(
gpu_ˇnvas
 *
cv
, gpu_ˇnva†*
∑ª¡
, 
pixñ
 *
px
) {

226 
pixñ
 *
px_loˇl
;

227 
W
 = 
∑ª¡
->
w
, w, 
h
;

229 
cv
->
ty≥
) {

230 
AM_GPU_TEXTURE
: {

231 
w
 = 
cv
->
ãxtuª
.w; 
h
 = cv->texture.h;

232 
px_loˇl
 = 
	`to_ho°
(
cv
->
ãxtuª
.
pixñs
);

235 
AM_GPU_SUBTREE
: {

236 
w
 = 
cv
->w; 
h
 = cv->h;

237 
px_loˇl
 = 
	`vbuf_Æloc
(
w
 * 
h
 * (
pixñ
));

238 
gpu_ˇnvas
 *
ch
 = 
	`to_ho°
(
cv
->
chûd
); ch; ch =Åo_ho°(ch->
siblög
)) {

239 
	`ªndî
(
ch
, 
cv
, 
px_loˇl
);

244 
	`∑nic
("invalidÇode");

248 
i
 = 0; i < 
cv
->
w1
; i++)

249 
j
 = 0; j < 
cv
->
h1
; j++) {

250 
x
 = 
cv
->
x1
 + 
i
, 
y
 = cv->
y1
 + 
j
;

251 
px
[
W
 * 
y
 + 
x
] = 
px_loˇl
[
w
 * (
j
 * 
h
 / 
cv
->
h1
Ë+ (
i
 * w / cv->
w1
)];

254 
	}
}

256 
	$gpu_ªndî
(
AM_GPU_RENDER_T
 *
ªn
) {

257 
vbuf_hód
 = 
vbuf
;

258 
	`ªndî
(
	`to_ho°
(
ªn
->
roŸ
), &
di•œy
, 
fb
);

259 
	}
}

264 
	#BLKSZ
 512

	)

265 
	#DISKSZ
 (64 << 20)

	)

267 
	$disk_c⁄fig
(
AM_DISK_CONFIG_T
 *
cfg
) {

268 
cfg
->
¥e£¡
 = 
åue
;

269 
cfg
->
blksz
 = 
BLKSZ
;

270 
cfg
->
blk˙t
 = 
DISKSZ
 / 
BLKSZ
;

271 
	}
}

273 
	$disk_°©us
(
AM_DISK_STATUS_T
 *
°©us
) {

274 
°©us
->
ªady
 = 
åue
;

275 
	}
}

277 
ölöe
 
	$waô_disk
() {

278 (
	`öb
(0x1f7) & 0xc0) != 0x40);

279 
	}
}

281 
	$disk_blkio
(
AM_DISK_BLKIO_T
 *
bio
) {

282 
uöt32_t
 
blkno
 = 
bio
->blkno, 
ªmaö
 = bio->
blk˙t
;

283 
uöt32_t
 *
±r
 = 
bio
->
buf
;

284 
ªmaö
 = 
bio
->
blk˙t
;Ñemaö;Ñemaö--, 
blkno
++) {

285 
	`waô_disk
();

286 
	`outb
(0x1f2, 1);

287 
	`outb
(0x1f3, 
blkno
);

288 
	`outb
(0x1f4, 
blkno
 >> 8);

289 
	`outb
(0x1f5, 
blkno
 >> 16);

290 
	`outb
(0x1f6, (
blkno
 >> 24) | 0xe0);

291 
	`outb
(0x1f7, 
bio
->
wrôe
? 0x30 : 0x20);

292 
	`waô_disk
();

293 i‡(
bio
->
wrôe
) {

294 
i
 = 0; i < 
BLKSZ
 / 4; i ++)

295 
	`oué
(0x1f0, *
±r
++);

297 
i
 = 0; i < 
BLKSZ
 / 4; i ++)

298 *
±r
++ = 
	`öl
(0x1f0);

301 
	}
}

305 
	$audio_c⁄fig
(
AM_AUDIO_CONFIG_T
 *
cfg
Ë{ cfg->
¥e£¡
 = 
Ál£
; 
	}
}

306 
	$√t_c⁄fig
(
AM_NET_CONFIG_T
 *
cfg
Ë{ cfg->
¥e£¡
 = 
Ál£
; 
	}
}

307 
	$Áû
(*
buf
Ë{ 
	`∑nic
("ac˚s†n⁄exi°Ñegi°î"); 
	}
}

309 (*
	th™dÀr_t
)(*
	tbuf
);

310 *
lut
[128] = {

311 [
AM_UART_CONFIG
 ] = 
u¨t_c⁄fig
,

312 [
AM_UART_TX
 ] = 
u¨t_tx
,

313 [
AM_UART_RX
 ] = 
u¨t_rx
,

314 [
AM_TIMER_CONFIG
] = 
timî_c⁄fig
,

315 [
AM_TIMER_RTC
 ] = 
timî_πc
,

316 [
AM_TIMER_UPTIME
] = 
timî_u±ime
,

317 [
AM_INPUT_CONFIG
] = 
öput_c⁄fig
,

318 [
AM_INPUT_KEYBRD
] = 
öput_keybrd
,

319 [
AM_GPU_CONFIG
 ] = 
gpu_c⁄fig
,

320 [
AM_GPU_FBDRAW
 ] = 
gpu_fbdøw
,

321 [
AM_GPU_STATUS
 ] = 
gpu_°©us
,

322 [
AM_GPU_MEMCPY
 ] = 
gpu_mem˝y
,

323 [
AM_GPU_RENDER
 ] = 
gpu_ªndî
,

324 [
AM_AUDIO_CONFIG
] = 
audio_c⁄fig
,

325 [
AM_DISK_CONFIG
 ] = 
disk_c⁄fig
,

326 [
AM_DISK_STATUS
 ] = 
disk_°©us
,

327 [
AM_DISK_BLKIO
 ] = 
disk_blkio
,

328 [
AM_NET_CONFIG
 ] = 
√t_c⁄fig
,

329 
	}
};

332 
boﬁ
 
	$i€_öô
() {

333 
	`∑nic_⁄
(
	`˝u_cuºít
() != 0, "init IOE inÇon-bootstrap CPU");

335 
i
 = 0; i < 
	`LENGTH
(
lut
); i++)

336 i‡(!
lut
[
i
]Ëlut[i] = 
Áû
;

338 
	`u¨t_öô
();

339 
	`timî_öô
();

340 
	`gpu_öô
();

342  
åue
;

343 
	}
}

345 
	$i€_ªad
 (
ªg
, *
buf
Ë{ ((
h™dÀr_t
)
lut
[ªg])(buf); 
	}
}

346 
	$i€_wrôe
(
ªg
, *
buf
Ë{ ((
h™dÀr_t
)
lut
[ªg])(buf); 
	}
}

350 
	#ID
 (0x0020/4)

351 
	#VER
 (0x0030/4)

352 
	#TPR
 (0x0080/4)

353 
	#EOI
 (0x00B0/4)

354 
	#SVR
 (0x00F0/4)

355 
	#ENABLE
 0x00000100

356 
	#ESR
 (0x0280/4)

357 
	#ICRLO
 (0x0300/4)

358 
	#INIT
 0x00000500

359 
	#STARTUP
 0x00000600

360 
	#DELIVS
 0x00001000

361 
	#ASSERT
 0x00004000

362 
	#DEASSERT
 0x00000000

	)

363 
	#LEVEL
 0x00008000

364 
	#BCAST
 0x00080000

365 
	#BUSY
 0x00001000

	)

366 
	#FIXED
 0x00000000

	)

367 
	#ICRHI
 (0x0310/4)

368 
	#TIMER
 (0x0320/4)

369 
	#X1
 0x0000000B

370 
	#PERIODIC
 0x00020000

371 
	#PCINT
 (0x0340/4)

372 
	#LINT0
 (0x0350/4)

373 
	#LINT1
 (0x0360/4)

374 
	#ERROR
 (0x0370/4)

375 
	#MASKED
 0x00010000

376 
	#TICR
 (0x0380/4)

377 
	#TCCR
 (0x0390/4)

378 
	#TDCR
 (0x03E0/4)

379 

	)

380 
	#IOAPIC_ADDR
 0xFEC00000

381 
	#REG_ID
 0x00

382 
	#REG_VER
 0x01

383 
	#REG_TABLE
 0x10

384 

	)

385 
	#INT_DISABLED
 0x00010000

386 
	#INT_LEVEL
 0x00008000

387 
	#INT_ACTIVELOW
 0x00002000

388 
	#INT_LOGICAL
 0x00000800

389 

	)

390 vﬁ©ûê*
	g__am_œpic
 = 
NULL
;

391 
	sIOAPIC
 {

392 
uöt32_t
 
	mªg
, 
	m∑d
[3], 
	md©a
;

393 } 
__©åibuã__
((
∑cked
));

394 
IOAPIC
 
	tIOAPIC
;

396 vﬁ©ûê
IOAPIC
 *
	giﬂpic
;

398 
	$œpicw
(
ödex
, 
vÆue
) {

399 
__am_œpic
[
ödex
] = 
vÆue
;

400 
__am_œpic
[
ID
];

401 
	}
}

403 
	$__am_≥r˝u_öôœpic
() {

404 
	`œpicw
(
SVR
, 
ENABLE
 | (
T_IRQ0
 + 
IRQ_SPURIOUS
));

405 
	`œpicw
(
TDCR
, 
X1
);

406 
	`œpicw
(
TIMER
, 
PERIODIC
 | (
T_IRQ0
 + 
IRQ_TIMER
));

407 
	`œpicw
(
TICR
, 10000000);

408 
	`œpicw
(
LINT0
, 
MASKED
);

409 
	`œpicw
(
LINT1
, 
MASKED
);

410 i‡(((
__am_œpic
[
VER
]>>16) & 0xFF) >= 4)

411 
	`œpicw
(
PCINT
, 
MASKED
);

412 
	`œpicw
(
ERROR
, 
T_IRQ0
 + 
IRQ_ERROR
);

413 
	`œpicw
(
ESR
, 0);

414 
	`œpicw
(
ESR
, 0);

415 
	`œpicw
(
EOI
, 0);

416 
	`œpicw
(
ICRHI
, 0);

417 
	`œpicw
(
ICRLO
, 
BCAST
 | 
INIT
 | 
LEVEL
);

418 
__am_œpic
[
ICRLO
] & 
DELIVS
) ;

419 
	`œpicw
(
TPR
, 0);

420 
	}
}

422 
	$__am_œpic_eoi
() {

423 i‡(
__am_œpic
)

424 
	`œpicw
(
EOI
, 0);

425 
	}
}

427 
	$__am_œpic_boŸ≠
(
uöt32_t
 
≠icid
, *
addr
) {

428 
i
;

429 
uöt16_t
 *
wrv
;

430 
	`outb
(0x70, 0xF);

431 
	`outb
(0x71, 0x0A);

432 
wrv
 = (*)((0x40<<4 | 0x67));

433 
wrv
[0] = 0;

434 
wrv
[1] = (
uöçå_t
)
addr
 >> 4;

436 
	`œpicw
(
ICRHI
, 
≠icid
<<24);

437 
	`œpicw
(
ICRLO
, 
INIT
 | 
LEVEL
 | 
ASSERT
);

438 
	`œpicw
(
ICRLO
, 
INIT
 | 
LEVEL
);

440 
i
 = 0; i < 2; i++){

441 
	`œpicw
(
ICRHI
, 
≠icid
<<24);

442 
	`œpicw
(
ICRLO
, 
STARTUP
 | ((
uöçå_t
)
addr
>>12));

444 
	}
}

446 
	$iﬂpi¸ód
(
ªg
) {

447 
iﬂpic
->
ªg
 =Ñeg;

448  
iﬂpic
->
d©a
;

449 
	}
}

451 
	$iﬂpicwrôe
(
ªg
, 
d©a
) {

452 
iﬂpic
->
ªg
 =Ñeg;

453 
iﬂpic
->
d©a
 = data;

454 
	}
}

456 
	$__am_iﬂpic_öô
() {

457 
i
, 
maxöå
;

459 
iﬂpic
 = (vﬁ©ûê
IOAPIC
*)
IOAPIC_ADDR
;

460 
maxöå
 = (
	`iﬂpi¸ód
(
REG_VER
) >> 16) & 0xFF;

462 
i
 = 0; i <
maxöå
; i++){

463 
	`iﬂpicwrôe
(
REG_TABLE
+2*
i
, 
INT_DISABLED
 | (
T_IRQ0
 + i));

464 
	`iﬂpicwrôe
(
REG_TABLE
+2*
i
+1, 0);

466 
	}
}

468 
	$__am_iﬂpic_íabÀ
(
úq
, 
˝unum
) {

469 
	`iﬂpicwrôe
(
REG_TABLE
+2*
úq
, 
T_IRQ0
 + irq);

470 
	`iﬂpicwrôe
(
REG_TABLE
+2*
úq
+1, 
˝unum
 << 24);

471 
	}
}

	@abstract-machine/am/src/x86/qemu/mpe.c

1 
	~"x86-qemu.h
"

3 
˝u_loˇl
 
	g__am_˝uöfo
[
MAX_CPU
] = {};

4 (* vﬁ©ûê
	gu£r_íåy
)();

5 
	g≠_ªady
 = 0;

7 
	$ˇŒ_u£r_íåy
() {

8 
	`u£r_íåy
();

9 
	`∑nic
("MPEÉntry shouldÇotÑeturn");

10 
	}
}

12 
boﬁ
 
	$m≥_öô
((*
íåy
)()) {

13 
u£r_íåy
 = 
íåy
;

14 
	`boŸ_ªc‹d
()->
jmp_code
 = 0x000bfde9;

15 
˝u
 = 1; cpu < 
__am_n˝u
; cpu++) {

16 
	`boŸ_ªc‹d
()->
is_≠
 = 1;

17 
	`__am_œpic_boŸ≠
(
˝u
, (*)
	`boŸ_ªc‹d
());

18 
	`xchg
(&
≠_ªady
, 0) != 1) {

19 
	`∑u£
();

22 
	`ˇŒ_u£r_íåy
();

23  
åue
;

24 
	}
}

26 
	$Ÿhî˝u_íåy
() {

27 
	`__am_≥r˝u_öô
();

28 
	`xchg
(&
≠_ªady
, 1);

29 
	`ˇŒ_u£r_íåy
();

30 
	}
}

32 
	$__am_Ÿhî˝u_íåy
() {

33 
	`°ack_swôch_ˇŒ
(
	`°ack_t›
(&
CPU
->
°ack
), 
Ÿhî˝u_íåy
, 0);

34 
	}
}

36 
	$˝u_cou¡
() {

37  
__am_n˝u
;

38 
	}
}

40 
	$˝u_cuºít
() {

41  
__am_œpic
[8] >> 24;

42 
	}
}

44 
	$©omic_xchg
(*
addr
, 
√wvÆ
) {

45  
	`xchg
(
addr
, 
√wvÆ
);

46 
	}
}

48 
	$__am_°›_the_w‹ld
() {

49 
	`boŸ_ªc‹d
()->
jmp_code
 = 0x0000feeb;

50 
˝u_
 = 0; cpu_ < 
__am_n˝u
; cpu_++) {

51 i‡(
˝u_
 !
	`˝u_cuºít
()) {

52 
	`__am_œpic_boŸ≠
(
˝u_
, (*)
	`boŸ_ªc‹d
());

55 
	}
}

	@abstract-machine/am/src/x86/qemu/trm.c

1 
	~"x86-qemu.h
"

3 
Aªa
 
	ghóp
 = {};

4 
	g__am_n˝u
 = 0;

6 
maö
(c⁄° *
¨gs
);

8 
	$ˇŒ_maö
(c⁄° *
¨gs
) {

9 
	`hÆt
(
	`maö
(
¨gs
));

10 
	}
}

12 
	$_°¨t_c
(*
¨gs
) {

13 i‡(
	`boŸ_ªc‹d
()->
is_≠
) {

14 
	`__am_Ÿhî˝u_íåy
();

16 
	`__am_boŸ˝u_öô
();

17 
	`°ack_swôch_ˇŒ
(
	`°ack_t›
(&
CPU
->
°ack
), 
ˇŒ_maö
, (
uöçå_t
)
¨gs
);

19 
	}
}

21 
	$__am_boŸ˝u_öô
() {

22 
hóp
 = 
	`__am_hóp_öô
();

23 
	`__am_œpic_öô
();

24 
	`__am_iﬂpic_öô
();

25 
	`__am_≥r˝u_öô
();

26 
	}
}

28 
	$__am_≥r˝u_öô
() {

29 
	`__am_≥r˝u_öôgdt
();

30 
	`__am_≥r˝u_öôœpic
();

31 
	`__am_≥r˝u_öôúq
();

32 
	}
}

34 
	$putch
(
ch
) {

35 
	#COM1
 0x3f8

	)

36 
	`outb
(
COM1
, 
ch
);

37 
	}
}

39 
	$hÆt
(
code
) {

40 c⁄° *
hex
 = "0123456789abcdef";

41 c⁄° *
fmt
 = "CPU #$ Halt (40).\n";

42 
	`˛i
();

43 
	`__am_°›_the_w‹ld
();

44 c⁄° *
p
 = 
fmt
; *p;Ö++) {

45 
ch
 = *
p
;

46 
ch
) {

48 
	`putch
(
hex
[
	`˝u_cuºít
()]);

51 
	`putch
(
hex
[(
code
 >> (
ch
 - '0')) & 0xf]);

54 
	`putch
(
ch
);

57 
	`outw
(0x604, 0x2000);

58 1Ë
	`h…
();

59 
	}
}

61 
Aªa
 
	$__am_hóp_öô
() {

62 
íd
;

63 
	`outb
(0x70, 0x34);

64 
uöt32_t
 
lo
 = 
	`öb
(0x71);

65 
	`outb
(0x70, 0x35);

66 
uöt32_t
 
hi
 = 
	`öb
(0x71) + 1;

67  
	`RANGE
(
	`ROUNDUP
(&
íd
, 1 << 20), (
uöçå_t
)((
lo
 | 
hi
 << 8) << 16));

68 
	}
}

70 
	$__am_œpic_öô
() {

71 *
°
 = (*)0xf0000; st != (*)0xffffff; st ++) {

72 i‡(*(vﬁ©ûê
uöt32_t
 *)
°
 == 0x5f504d5f) {

73 
uöt32_t
 
mpc⁄f_±r
 = ((vﬁ©ûê
MPDesc
 *)
°
)->
c⁄f
;

74 
MPC⁄f
 *
c⁄f
 = (*)((
uöçå_t
)(
mpc⁄f_±r
));

75 
__am_œpic
 = (*)((
uöçå_t
)(
c⁄f
->
œpiˇddr
));

76 vﬁ©ûê*
±r
 = (*)(
c⁄f
 + 1);

77 
±r
 < (*)
c⁄f
 + c⁄f->
Àngth
;Ötr += 8) {

78 i‡(*
±r
 == '\0') {

79 
±r
 += 12;

80 
	`∑nic_⁄
(++
__am_n˝u
 > 
MAX_CPU
, "cannot support > MAX_CPUÖrocessors");

86 
	`bug
();

87 
	}
}

89 
	$__am_≥r˝u_öôgdt
() {

90 #i‡
__x86_64__


91 
SegDesc
 *
gdt
 = 
CPU
->gdt;

92 
TSS64
 *
tss
 = &
CPU
->tss;

93 
gdt
[
SEG_KCODE
] = 
	`SEG64
(
STA_X
 | 
STA_R
, 
DPL_KERN
);

94 
gdt
[
SEG_KDATA
] = 
	`SEG64
(
STA_W
, 
DPL_KERN
);

95 
gdt
[
SEG_UCODE
] = 
	`SEG64
(
STA_X
 | 
STA_R
, 
DPL_USER
);

96 
gdt
[
SEG_UDATA
] = 
	`SEG64
(
STA_W
, 
DPL_USER
);

97 
gdt
[
SEG_TSS
] = 
	`SEG16
(
STS_T32A
, 
tss
, (*tss)-1, 
DPL_KERN
);

98 
	`bug_⁄
((
uöçå_t
)
tss
 >> 32);

99 
	`£t_gdt
(
gdt
, (gdt[0]Ë* (
NR_SEG
 + 1));

100 
	`£t_å
(
	`KSEL
(
SEG_TSS
));

102 
SegDesc
 *
gdt
 = 
CPU
->gdt;

103 
TSS32
 *
tss
 = &
CPU
->tss;

104 
gdt
[
SEG_KCODE
] = 
	`SEG32
(
STA_X
 | 
STA_R
, 0, 0xffffffff, 
DPL_KERN
);

105 
gdt
[
SEG_KDATA
] = 
	`SEG32
(
STA_W
, 0, 0xffffffff, 
DPL_KERN
);

106 
gdt
[
SEG_UCODE
] = 
	`SEG32
(
STA_X
 | 
STA_R
, 0, 0xffffffff, 
DPL_USER
);

107 
gdt
[
SEG_UDATA
] = 
	`SEG32
(
STA_W
, 0, 0xffffffff, 
DPL_USER
);

108 
gdt
[
SEG_TSS
] = 
	`SEG16
(
STS_T32A
, 
tss
, (*tss)-1, 
DPL_KERN
);

109 
	`£t_gdt
(
gdt
, (gdt[0]Ë* 
NR_SEG
);

110 
	`£t_å
(
	`KSEL
(
SEG_TSS
));

112 
	}
}

	@abstract-machine/am/src/x86/qemu/vme.c

1 
	~"x86-qemu.h
"

3 c⁄° 
mmu_c⁄fig
 
	gmmu
 = {

4 .
pgsize
 = 4096,

5 #i‡
__x86_64__


6 .
	g±Àvñs
 = 4,

7 .
	gpgèbÀs
 = {

15 .
	g±Àvñs
 = 2,

16 .
	gpgèbÀs
 = {

24 c⁄° 
vm_¨ó
 
	gvm_¨ós
[] = {

25 #ifde‡
__x86_64__


26 { 
RANGE
(0x100000000000, 0x108000000000), 0 },

27 { 
RANGE
(0x000000000000, 0x008000000000), 1 },

29 { 
RANGE
( 0x40000000, 0x80000000), 0 },

30 { 
RANGE
( 0x00000000, 0x40000000), 1 },

31 { 
RANGE
( 0xfd000000, 0x00000000), 1 },

34 
	#uvm_¨ó
 (
vm_¨ós
[0].
¨ó
)

	)

36 
uöçå_t
 *
	gk±
;

37 *(*
	gpgÆloc
)(
	gsize
);

38 (*
pg‰ì
)(*);

40 *
	$pgÆlocz
() {

41 
uöçå_t
 *
ba£
 = 
	`pgÆloc
(
mmu
.
pgsize
);

42 
	`∑nic_⁄
(!
ba£
, "cannotállocateÖage");

43 
i
 = 0; i < 
mmu
.
pgsize
 / (
uöçå_t
); i++) {

44 
ba£
[
i
] = 0;

46  
ba£
;

47 
	}
}

49 
	$ödexof
(
uöçå_t
 
addr
, c⁄° 
±öfo
 *
öfo
) {

50  ((
uöçå_t
)
addr
 & 
öfo
->
mask
Ë>> info->
shi·
;

51 
	}
}

53 
uöçå_t
 
	$ba£of
(
uöçå_t
 
addr
) {

54  
addr
 & ~(
mmu
.
pgsize
 - 1);

55 
	}
}

57 
uöçå_t
 *
	$±wÆk
(
AddrS∑˚
 *
as
, 
uöçå_t
 
addr
, 
Êags
) {

58 
uöçå_t
 
cur
 = (uöçå_t)&
as
->
±r
;

60 
i
 = 0; i <
mmu
.
±Àvñs
; i++) {

61 c⁄° 
±öfo
 *±öfÿ&
mmu
.
pgèbÀs
[
i
];

62 
uöçå_t
 *
±
 = (uöçå_à*)
cur
, 
√xt_∑ge
;

63 
ödex
 = 
	`ödexof
(
addr
, 
±öfo
);

64 i‡(
i
 =
mmu
.
±Àvñs
Ë &
±
[
ödex
];

66 i‡(!(
±
[
ödex
] & 
PTE_P
)) {

67 
√xt_∑ge
 = (
uöçå_t
)
	`pgÆlocz
();

68 
±
[
ödex
] = 
√xt_∑ge
 | 
PTE_P
 | 
Êags
;

70 
√xt_∑ge
 = 
	`ba£of
(
±
[
ödex
]);

72 
cur
 = 
√xt_∑ge
;

74 
	`bug
();

75 
	}
}

77 
	$ã¨down
(
Àvñ
, 
uöçå_t
 *
±
) {

78 i‡(
Àvñ
 > 
mmu
.
±Àvñs
) ;

79 
ödex
 = 0; index < (1 << 
mmu
.
pgèbÀs
[
Àvñ
].
bôs
); index++) {

80 i‡((
±
[
ödex
] & 
PTE_P
Ë&& (±[ödex] & 
PTE_U
)) {

81 
	`ã¨down
(
Àvñ
 + 1, (*)
	`ba£of
(
±
[
ödex
]));

84 i‡(
Àvñ
 >= 1) {

85 
	`pg‰ì
(
±
);

87 
	}
}

89 
boﬁ
 
	$vme_öô
(*(*
_pgÆloc
)(
size
), (*
_pg‰ì
)(*)) {

90 
	`∑nic_⁄
(
	`˝u_cuºít
() != 0, "init VME inÇon-bootstrap CPU");

91 
pgÆloc
 = 
_pgÆloc
;

92 
pg‰ì
 = 
_pg‰ì
;

94 #i‡
__x86_64__


95 
k±
 = (*)
PML4_ADDR
;

97 
AddrS∑˚
 
as
;

98 
as
.
±r
 = 
NULL
;

99 
i
 = 0; i < 
	`LENGTH
(
vm_¨ós
); i++) {

100 c⁄° 
vm_¨ó
 *
vma
 = &
vm_¨ós
[
i
];

101 i‡(
vma
->
kî√l
) {

102 
uöçå_t
 
cur
 = (uöçå_t)
vma
->
¨ó
.
°¨t
;

103 
cur
 !(
uöçå_t
)
vma
->
¨ó
.
íd
;

104 
cur
 +
mmu
.
pgsize
) {

105 *
	`±wÆk
(&
as
, 
cur
, 
PTE_W
Ëcu∏| 
PTE_P
 | PTE_W;

109 
k±
 = (*)
	`ba£of
((
uöçå_t
)
as
.
±r
);

112 
	`£t_¸3
(
k±
);

113 
	`£t_¸0
(
	`gë_¸0
(Ë| 
CR0_PG
);

114  
åue
;

115 
	}
}

117 
	$¥Ÿe˘
(
AddrS∑˚
 *
as
) {

118 
uöçå_t
 *
u±
 = 
	`pgÆlocz
();

120 
i
 = 0; i < 
	`LENGTH
(
vm_¨ós
); i++) {

121 c⁄° 
vm_¨ó
 *
vma
 = &
vm_¨ós
[
i
];

122 i‡(
vma
->
kî√l
) {

123 c⁄° 
±öfo
 *
öfo
 = &
mmu
.
pgèbÀs
[1];

124 
uöçå_t
 
cur
 = (uöçå_t)
vma
->
¨ó
.
°¨t
;

125 
cur
 !(
uöçå_t
)
vma
->
¨ó
.
íd
;

126 
cur
 +(1L << 
öfo
->
shi·
)) {

127 
ödex
 = 
	`ödexof
(
cur
, 
öfo
);

128 
u±
[
ödex
] = 
k±
[index];

132 
as
->
pgsize
 = 
mmu
.pgsize;

133 
as
->
¨ó
 = 
uvm_¨ó
;

134 
as
->
±r
 = (*)((
uöçå_t
)
u±
 | 
PTE_P
 | 
PTE_U
);

135 
	}
}

137 
	$u≈rŸe˘
(
AddrS∑˚
 *
as
) {

138 
	`ã¨down
(0, (*)&
as
->
±r
);

139 
	}
}

141 
	$m≠
(
AddrS∑˚
 *
as
, *
va
, *
∑
, 
¥Ÿ
) {

142 
	`∑nic_⁄
(!
	`IN_RANGE
(
va
, 
uvm_¨ó
), "mappingán invalidáddress");

143 
	`∑nic_⁄
((
uöçå_t
)
va
 !
	`ROUNDDOWN
(va, 
mmu
.
pgsize
) ||

144 (
uöçå_t
)
∑
 !
	`ROUNDDOWN
’a, 
mmu
.
pgsize
), "non-page-boundaryáddress");

146 
uöçå_t
 *
±íåy
 = 
	`±wÆk
(
as
, (uöçå_t)
va
, 
PTE_W
 | 
PTE_U
);

147 i‡(
¥Ÿ
 =
MMAP_NONE
) {

148 
	`∑nic_⁄
(!(*
±íåy
 & 
PTE_P
), "unmappingáÇon-mappedÖage");

149 *
±íåy
 = 0;

151 
	`∑nic_⁄
(*
±íåy
 & 
PTE_P
, "remappingá mappedÖage");

152 
uöçå_t
 
±e
 = (uöçå_t)
∑
 | 
PTE_P
 | 
PTE_U
 | ((
¥Ÿ
 & 
MMAP_WRITE
Ë? 
PTE_W
 : 0);

153 *
±íåy
 = 
±e
;

155 
	`±wÆk
(
as
, (
uöçå_t
)
va
, 
PTE_W
 | 
PTE_U
);

156 
	}
}

158 
C⁄ãxt
 *
	$uc⁄ãxt
(
AddrS∑˚
 *
as
, 
Aªa
 
k°ack
, *
íåy
) {

159 
C⁄ãxt
 *
˘x
 = 
k°ack
.
íd
 - (Context);

160 *
˘x
 = (
C⁄ãxt
) { 0 };

162 #i‡
__x86_64__


163 
˘x
->
cs
 = 
	`USEL
(
SEG_UCODE
);

164 
˘x
->
ss
 = 
	`USEL
(
SEG_UDATA
);

165 
˘x
->
rù
 = (
uöçå_t
)
íåy
;

166 
˘x
->
rÊags
 = 
FL_IF
;

167 
˘x
->
r•
 = (
uöçå_t
)
uvm_¨ó
.
íd
;

168 
˘x
->
r•0
 = (
uöçå_t
)
k°ack
.
íd
;

170 
˘x
->
cs
 = 
	`USEL
(
SEG_UCODE
);

171 
˘x
->
ds
 = 
	`USEL
(
SEG_UDATA
);

172 
˘x
->
ss3
 = 
	`USEL
(
SEG_UDATA
);

173 
˘x
->
eù
 = (
uöçå_t
)
íåy
;

174 
˘x
->
eÊags
 = 
FL_IF
;

175 
˘x
->
e•
 = (
uöçå_t
)
uvm_¨ó
.
íd
;

176 
˘x
->
e•0
 = (
uöçå_t
)
k°ack
.
íd
;

178 
˘x
->
¸3
 = 
as
->
±r
;

180  
˘x
;

181 
	}
}

	@abstract-machine/am/src/x86/qemu/x86-qemu.h

1 
	~<x86/x86.h
>

3 
	#PML4_ADDR
 0x1000

	)

4 
	#PDPT_ADDR
 0x2000

	)

6 
	#NR_SEG
 6

7 
	#SEG_KCODE
 1

8 
	#SEG_KDATA
 2

9 
	#SEG_UCODE
 3

10 
	#SEG_UDATA
 4

11 
	#SEG_TSS
 5

12 

	)

13 
	#NR_IRQ
 256

14 

	)

15 #i‚de‡
__ASSEMBLER__


17 
	~<am.h
>

18 
	~<klib-ma¸os.h
>

20 
	skî√l_°ack
 {

21 
uöt8_t
 
	m°ack
[8192];

24 
ölöe
 *
	$°ack_t›
(
kî√l_°ack
 *
°k
) {

25  
°k
->
°ack
 + (stk->stack);

26 
	}
}

28 
	smmu_c⁄fig
 {

29 
	m±Àvñs
, 
	mpgsize
;

30 
	s±öfo
 {

31 c⁄° *
	m«me
;

32 
uöçå_t
 
	mmask
;

33 
	mshi·
, 
	mbôs
;

34 } 
	mpgèbÀs
[];

37 
	svm_¨ó
 {

38 
Aªa
 
	m¨ó
;

39 
	mkî√l
;

42 
__am_úë
(
C⁄ãxt
 *
˘x
);

44 
	s˝u_loˇl
 {

45 
AddrS∑˚
 *
	muvm
;

46 #i‡
__x86_64__


47 
SegDesc
 
	mgdt
[
NR_SEG
 + 1];

48 
TSS64
 
	mtss
;

50 
SegDesc
 
	mgdt
[
NR_SEG
];

51 
TSS32
 
	mtss
;

53 
kî√l_°ack
 
	m°ack
;

56 #i‡
__x86_64__


57 
	så≠_‰ame
 {

58 
C⁄ãxt
 
	mßved_c⁄ãxt
;

59 
uöt64_t
 
	múq
, 
	mîrcode
;

60 
uöt64_t
 
	mrù
, 
	mcs
, 
	mrÊags
, 
	mr•
, 
	mss
;

63 
	så≠_‰ame
 {

64 
C⁄ãxt
 
	mßved_c⁄ãxt
;

65 
uöt32_t
 
	múq
, 
	mîrcode
;

66 
uöt32_t
 
	meù
, 
	mcs
, 
	meÊags
, 
	me•
, 
	mss
;

70 vﬁ©ûê
uöt32_t
 *
__am_œpic
;

71 
__am_n˝u
;

72 
˝u_loˇl
 
__am_˝uöfo
[
MAX_CPU
];

74 
	#CPU
 (&
__am_˝uöfo
[
	`˝u_cuºít
()])

	)

76 
	#bug_⁄
(
c⁄d
) \

78 i‡(
c⁄d
Ë
	`∑nic
("internalÉrror (likelyá bug in AM)"); \

79 } 0)

	)

81 
	#bug
(Ë
	`bug_⁄
(1)

	)

84 
__am_œpic_eoi
();

85 
__am_iﬂpic_öô
();

86 
__am_œpic_boŸ≠
(
uöt32_t
 
˝u
, *
addªss
);

87 
__am_iﬂpic_íabÀ
(
úq
, 
˝u
);

90 
__am_boŸ˝u_öô
();

91 
__am_≥r˝u_öô
();

92 
Aªa
 
__am_hóp_öô
();

93 
__am_œpic_öô
();

94 
__am_Ÿhî˝u_íåy
();

95 
__am_≥r˝u_öôúq
();

96 
__am_≥r˝u_öôgdt
();

97 
__am_≥r˝u_öôœpic
();

98 
__am_°›_the_w‹ld
();

	@abstract-machine/am/src/x86/x86.h

2 
	#DPL_KERN
 0x0

3 
	#DPL_USER
 0x3

4 

	)

6 
	#STA_X
 0x8

7 
	#STA_W
 0x2

8 
	#STA_R
 0x2

9 

	)

11 
	#STS_T32A
 0x9

12 
	#STS_IG
 0xe

13 
	#STS_TG
 0xf

14 

	)

16 
	#FL_IF
 0x00000200

17 

	)

19 
	#CR0_PE
 0x00000001

20 
	#CR0_PG
 0x80000000

21 
	#CR4_PAE
 0x00000020

22 

	)

24 
	#PTE_P
 0x001

25 
	#PTE_W
 0x002

26 
	#PTE_U
 0x004

27 
	#PTE_PS
 0x080

28 

	)

30 
	#KSEL
(
£g
Ë(((£gË<< 3Ë| 
DPL_KERN
)

	)

31 
	#USEL
(
£g
Ë(((£gË<< 3Ë| 
DPL_USER
)

	)

34 
	#T_IRQ0
 32

	)

35 
	#IRQ_TIMER
 0

	)

36 
	#IRQ_KBD
 1

	)

37 
	#IRQ_COM1
 4

	)

38 
	#IRQ_ERROR
 19

	)

39 
	#IRQ_SPURIOUS
 31

	)

40 
	#EX_DE
 0

	)

41 
	#EX_UD
 6

	)

42 
	#EX_NM
 7

	)

43 
	#EX_DF
 8

	)

44 
	#EX_TS
 10

	)

45 
	#EX_NP
 11

	)

46 
	#EX_SS
 12

	)

47 
	#EX_GP
 13

	)

48 
	#EX_PF
 14

	)

49 
	#EX_MF
 15

	)

50 
	#EX_SYSCALL
 0x80

	)

51 
	#EX_YIELD
 0x81

	)

54 
	#IRQS
(
_
) \

55 
	`_
–0, 
KERN
, 
NOERR
) \

56 
	`_
–1, 
KERN
, 
NOERR
) \

57 
	`_
–2, 
KERN
, 
NOERR
) \

58 
	`_
–3, 
KERN
, 
NOERR
) \

59 
	`_
–4, 
KERN
, 
NOERR
) \

60 
	`_
–5, 
KERN
, 
NOERR
) \

61 
	`_
–6, 
KERN
, 
NOERR
) \

62 
	`_
–7, 
KERN
, 
NOERR
) \

63 
	`_
–8, 
KERN
, 
ERR
) \

64 
	`_
–9, 
KERN
, 
NOERR
) \

65 
	`_
–10, 
KERN
, 
ERR
) \

66 
	`_
–11, 
KERN
, 
ERR
) \

67 
	`_
–12, 
KERN
, 
ERR
) \

68 
	`_
–13, 
KERN
, 
ERR
) \

69 
	`_
–14, 
KERN
, 
ERR
) \

70 
	`_
–15, 
KERN
, 
NOERR
) \

71 
	`_
–16, 
KERN
, 
NOERR
) \

72 
	`_
–19, 
KERN
, 
NOERR
) \

73 
	`_
–31, 
KERN
, 
NOERR
) \

74 
	`_
–32, 
KERN
, 
NOERR
) \

75 
	`_
–33, 
KERN
, 
NOERR
) \

76 
	`_
–34, 
KERN
, 
NOERR
) \

77 
	`_
–35, 
KERN
, 
NOERR
) \

78 
	`_
–36, 
KERN
, 
NOERR
) \

79 
	`_
–37, 
KERN
, 
NOERR
) \

80 
	`_
–38, 
KERN
, 
NOERR
) \

81 
	`_
–39, 
KERN
, 
NOERR
) \

82 
	`_
–40, 
KERN
, 
NOERR
) \

83 
	`_
–41, 
KERN
, 
NOERR
) \

84 
	`_
–42, 
KERN
, 
NOERR
) \

85 
	`_
–43, 
KERN
, 
NOERR
) \

86 
	`_
–44, 
KERN
, 
NOERR
) \

87 
	`_
–45, 
KERN
, 
NOERR
) \

88 
	`_
–46, 
KERN
, 
NOERR
) \

89 
	`_
–47, 
KERN
, 
NOERR
) \

90 
	`_
(128, 
USER
, 
NOERR
) \

91 
	`_
(129, 
USER
, 
NOERR
)

	)

94 
	#MAX_CPU
 8

	)

95 
	#BOOTREC_ADDR
 0x07000

	)

96 
	#MAINARG_ADDR
 0x10000

	)

99 #i‚de‡
__ASSEMBLER__


101 
	~<°döt.h
>

105 
uöt32_t
 
	mlim_15_0
 : 16;

106 
uöt32_t
 
	mba£_15_0
 : 16;

107 
uöt32_t
 
	mba£_23_16
 : 8;

108 
uöt32_t
 
	mty≥
 : 4;

109 
uöt32_t
 
	ms
 : 1;

110 
uöt32_t
 
	md∂
 : 2;

111 
uöt32_t
 
	mp
 : 1;

112 
uöt32_t
 
	mlim_19_16
 : 4;

113 
uöt32_t
 
	mavl
 : 1;

114 
uöt32_t
 
	ml
 : 1;

115 
uöt32_t
 
	mdb
 : 1;

116 
uöt32_t
 
	mg
 : 1;

117 
uöt32_t
 
	mba£_31_24
 : 8;

118 } 
	tSegDesc
;

122 
uöt32_t
 
	moff_15_0
 : 16;

123 
uöt32_t
 
	mcs
 : 16;

124 
uöt32_t
 
	m¨gs
 : 5;

125 
uöt32_t
 
	mrsv1
 : 3;

126 
uöt32_t
 
	mty≥
 : 4;

127 
uöt32_t
 
	ms
 : 1;

128 
uöt32_t
 
	md∂
 : 2;

129 
uöt32_t
 
	mp
 : 1;

130 
uöt32_t
 
	moff_31_16
 : 16;

131 } 
	tG©eDesc32
;

134 
uöt32_t
 
	moff_15_0
 : 16;

135 
uöt32_t
 
	mcs
 : 16;

136 
uöt32_t
 
	misv
 : 3;

137 
uöt32_t
 
	mzîo1
 : 5;

138 
uöt32_t
 
	mty≥
 : 4;

139 
uöt32_t
 
	mzîo2
 : 1;

140 
uöt32_t
 
	md∂
 : 2;

141 
uöt32_t
 
	mp
 : 1;

142 
uöt32_t
 
	moff_31_16
 : 16;

143 
uöt32_t
 
	moff_63_32
 : 32;

144 
uöt32_t
 
	mrsv
 : 32;

145 } 
	tG©eDesc64
;

149 
uöt32_t
 
	mlök
;

150 
uöt32_t
 
	me•0
;

151 
uöt32_t
 
	mss0
;

152 
uöt32_t
 
	m∑ddög
[23];

153 } 
	t__©åibuã__
((
	t∑cked
)Ë
	tTSS32
;

156 
uöt32_t
 
	mrsv
;

157 
uöt64_t
 
	mr•0
, 
	mr•1
, 
	mr•2
;

158 
uöt32_t
 
	m∑ddög
[19];

159 } 
	t__©åibuã__
((
	t∑cked
)Ë
	tTSS64
;

163 
uöt8_t
 
	msig«tuª
[4];

164 
uöt16_t
 
	mÀngth
;

165 
uöt8_t
 
	mvîsi⁄
;

166 
uöt8_t
 
	mchecksum
;

167 
uöt8_t
 
	m¥odu˘
[20];

168 
uöt32_t
 
	m€mèbÀ
;

169 
uöt16_t
 
	m€mÀngth
;

170 
uöt16_t
 
	míåy
;

171 
uöt32_t
 
	mœpiˇddr
;

172 
uöt16_t
 
	mxÀngth
;

173 
uöt8_t
 
	mxchecksum
;

174 
uöt8_t
 
	mª£rved
;

175 } 
	tMPC⁄f
;

178 
	mmagic
;

179 
uöt32_t
 
	mc⁄f
;

180 
uöt8_t
 
	mÀngth
;

181 
uöt8_t
 
	m•e¸ev
;

182 
uöt8_t
 
	mchecksum
;

183 
uöt8_t
 
	mty≥
;

184 
uöt8_t
 
	mim¸p
;

185 
uöt8_t
 
	mª£rved
[3];

186 } 
	tMPDesc
;

189 
uöt32_t
 
	mjmp_code
;

190 
öt32_t
 
	mis_≠
;

191 } 
	tBoŸRec‹d
;

193 
	#SEG16
(
ty≥
, 
ba£
, 
lim
, 
d∂
Ë(
SegDesc
) \

194 { (
lim
Ë& 0xffff, (
uöçå_t
)(
ba£
) & 0xffff, \

195 ((
uöçå_t
)(
ba£
Ë>> 16Ë& 0xff, 
ty≥
, 0, 
d∂
, 1, \

196 (
uöçå_t
)(
lim
Ë>> 16, 0, 0, 1, 0, (uöçå_t)(
ba£
Ë>> 24 }

	)

198 
	#SEG32
(
ty≥
, 
ba£
, 
lim
, 
d∂
Ë(
SegDesc
) \

199 { ((
lim
Ë>> 12Ë& 0xffff, (
uöçå_t
)(
ba£
) & 0xffff, \

200 ((
uöçå_t
)(
ba£
Ë>> 16Ë& 0xff, 
ty≥
, 1, 
d∂
, 1, \

201 (
uöçå_t
)(
lim
Ë>> 28, 0, 0, 1, 1, (uöçå_t)(
ba£
Ë>> 24 }

	)

203 
	#SEG64
(
ty≥
, 
d∂
Ë(
SegDesc
) \

204 { 0, 0, 0, 
ty≥
, 1, 
d∂
, 1, 0, 0, 1, 0, 0 }

	)

206 
	#SEGTSS64
(
ty≥
, 
ba£
, 
lim
, 
d∂
Ë(
SegDesc
) \

207 { (
lim
Ë& 0xffff, (
uöt32_t
)(
ba£
) & 0xffff, \

208 ((
uöt32_t
)(
ba£
Ë>> 16Ë& 0xff, 
ty≥
, 0, 
d∂
, 1, \

209 (
uöt32_t
)(
lim
Ë>> 16, 0, 0, 0, 0, (uöt32_t)(
ba£
Ë>> 24 }

	)

211 
	#GATE32
(
ty≥
, 
cs
, 
íåy
, 
d∂
Ë(
G©eDesc32
) \

212 { (
uöt32_t
)(
íåy
Ë& 0xffff, (
cs
), 0, 0, (
ty≥
), 0, (
d∂
), \

213 1, (
uöt32_t
)(
íåy
Ë>> 16 }

	)

215 
	#GATE64
(
ty≥
, 
cs
, 
íåy
, 
d∂
Ë(
G©eDesc64
) \

216 { (
uöt64_t
)(
íåy
Ë& 0xffff, (
cs
), 0, 0, (
ty≥
), 0, (
d∂
), \

217 1, ((
uöt64_t
)(
íåy
Ë>> 16Ë& 0xffff, (uöt64_t)”¡ryË>> 32, 0 }

	)

221 
ölöe
 
uöt8_t
 
	$öb
(
p‹t
) {

222 
uöt8_t
 
d©a
;

223 
asm
 vﬁ©ûê("öb %1, %0" : "˜"(
d©a
Ë: "d"((
uöt16_t
)
p‹t
));

224  
d©a
;

225 
	}
}

227 
ölöe
 
uöt16_t
 
	$öw
(
p‹t
) {

228 
uöt16_t
 
d©a
;

229 
asm
 vﬁ©ûê("öw %1, %0" : "˜"(
d©a
Ë: "d"((
uöt16_t
)
p‹t
));

230  
d©a
;

231 
	}
}

233 
ölöe
 
uöt32_t
 
	$öl
(
p‹t
) {

234 
uöt32_t
 
d©a
;

235 
asm
 vﬁ©ûê("ö»%1, %0" : "˜"(
d©a
Ë: "d"((
uöt16_t
)
p‹t
));

236  
d©a
;

237 
	}
}

239 
ölöe
 
	$outb
(
p‹t
, 
uöt8_t
 
d©a
) {

240 
asm
 vﬁ©ûê("outb %%Æ, %%dx" : : "a"(
d©a
), "d"((
uöt16_t
)
p‹t
));

241 
	}
}

243 
ölöe
 
	$outw
(
p‹t
, 
uöt16_t
 
d©a
) {

244 
asm
 vﬁ©ûê("outw %%ax, %%dx" : : "a"(
d©a
), "d"((
uöt16_t
)
p‹t
));

245 
	}
}

247 
ölöe
 
	$oué
(
p‹t
, 
uöt32_t
 
d©a
) {

248 
asm
 vﬁ©ûê("oué %%óx, %%dx" : : "a"(
d©a
), "d"((
uöt16_t
)
p‹t
));

249 
	}
}

251 
ölöe
 
	$˛i
() {

252 
asm
 volatile ("cli");

253 
	}
}

255 
ölöe
 
	$°i
() {

256 
asm
 volatile ("sti");

257 
	}
}

259 
ölöe
 
	$h…
() {

260 
asm
 volatile ("hlt");

261 
	}
}

263 
ölöe
 
	$∑u£
() {

264 
asm
 volatile ("pause");

265 
	}
}

267 
ölöe
 
uöt32_t
 
	$gë_eÊ
() {

268 vﬁ©ûê
uöçå_t
 
eÊ
;

269 
asm
 vﬁ©ûê("pushf;Ö› %0": "Ù"(
eÊ
));

270  
eÊ
;

271 
	}
}

273 
ölöe
 
uöçå_t
 
	$gë_¸0
() {

274 vﬁ©ûê
uöçå_t
 
vÆ
;

275 
asm
 vﬁ©ûê("mov %%¸0, %0" : "Ù"(
vÆ
));

276  
vÆ
;

277 
	}
}

279 
ölöe
 
	$£t_¸0
(
uöçå_t
 
¸0
) {

280 
asm
 vﬁ©ûê("mov %0, %%¸0" : : "r"(
¸0
));

281 
	}
}

283 
ölöe
 
	$£t_idt
(*
idt
, 
size
) {

285 
öt16_t
 
size
;

286 *
idt
;

287 } 
	`__©åibuã__
((
∑cked
)Ë
d©a
;

288 
d©a
.
size
 = size;

289 
d©a
.
idt
 = idt;

290 
asm
 vﬁ©ûê("lidà(%0)" : : "r"(&
d©a
));

291 
	}
}

293 
ölöe
 
	$£t_gdt
(*
gdt
, 
size
) {

295 
öt16_t
 
size
;

296 *
gdt
;

297 } 
	`__©åibuã__
((
∑cked
)Ë
d©a
;

298 
d©a
.
size
 = size;

299 
d©a
.
gdt
 = gdt;

300 
asm
 vﬁ©ûê("lgdà(%0)" : : "r"(&
d©a
));

301 
	}
}

303 
ölöe
 
	$£t_å
(
£À˘‹
) {

304 
asm
 vﬁ©ûê("…∏%0" : : "r"((
uöt16_t
)
£À˘‹
));

305 
	}
}

307 
ölöe
 
uöçå_t
 
	$gë_¸2
() {

308 vﬁ©ûê
uöçå_t
 
vÆ
;

309 
asm
 vﬁ©ûê("mov %%¸2, %0" : "Ù"(
vÆ
));

310  
vÆ
;

311 
	}
}

313 
ölöe
 
uöçå_t
 
	$gë_¸3
() {

314 vﬁ©ûê
uöçå_t
 
vÆ
;

315 
asm
 vﬁ©ûê("mov %%¸3, %0" : "Ù"(
vÆ
));

316  
vÆ
;

317 
	}
}

319 
ölöe
 
	$£t_¸3
(*
pdú
) {

320 
asm
 vﬁ©ûê("mov %0, %%¸3" : : "r"(
pdú
));

321 
	}
}

323 
ölöe
 
	$xchg
(*
addr
, 
√wvÆ
) {

324 
ªsu…
;

325 
asm
 volatile ("lock xchg %0, %1":

326 "+m"(*
addr
), "˜"(
ªsu…
Ë: "1"(
√wvÆ
) : "cc", "memory");

327  
ªsu…
;

328 
	}
}

330 
ölöe
 
uöt64_t
 
	$rdtsc
() {

331 
uöt32_t
 
lo
, 
hi
;

332 
asm
 vﬁ©ûê("rdtsc": "˜"(
lo
), "=d"(
hi
));

333  ((
uöt64_t
)
hi
 << 32Ë| 
lo
;

334 
	}
}

336 
	#öãºu±
(
id
) \

337 
asm
 vﬁ©ûê("öà$" #id);

	)

339 
ölöe
 
	$°ack_swôch_ˇŒ
(*
•
, *
íåy
, 
uöçå_t
 
¨g
) {

340 
asm
 volatile (

341 #i‡
__x86_64__


342 "movq %0, %%r•; movq %2, %%rdi; jm∞*%1" : : "b"((
uöçå_t
)
•
), "d"(
íåy
), "a"(
¨g
)

344 "mov»%0, %%e•; mov»%2, 4(%0); jm∞*%1" : : "b"((
uöçå_t
)
•
 - 8), "d"(
íåy
), "a"(
¨g
)

347 
	}
}

349 
ölöe
 vﬁ©ûê
BoŸRec‹d
 *
	$boŸ_ªc‹d
() {

350  (
BoŸRec‹d
 *)
BOOTREC_ADDR
;

351 
	}
}

	@abstract-machine/klib/include/klib-macros.h

1 #i‚de‡
KLIB_MACROS_H__


2 
	#KLIB_MACROS_H__


	)

4 
	#ROUNDUP
(
a
, 
sz
Ë((((
uöçå_t
ÔË+ (szË- 1Ë& ~((szË- 1))

	)

5 
	#ROUNDDOWN
(
a
, 
sz
Ë((((
uöçå_t
Ô)Ë& ~((szË- 1))

	)

6 
	#LENGTH
(
¨r
Ë(◊ºË/ (◊º)[0]))

	)

7 
	#RANGE
(
°
, 
ed
Ë(
Aªa
Ë{ .
°¨t
 = (*)(°), .
íd
 = (*)”dË}

	)

8 
	#IN_RANGE
(
±r
, 
¨ó
Ë(◊ªa).
°¨t
 <’åË&& (±rË< (¨ó).
íd
)

	)

10 
	#STRINGIFY
(
s
Ë#s

	)

11 
	#TOSTRING
(
s
Ë
	`STRINGIFY
(s)

	)

12 
	#_CONCAT
(
x
, 
y
Ëx ## 
	)
y

13 
	#CONCAT
(
x
, 
y
Ë
	`_CONCAT
(x, y)

	)

15 
	#put°r
(
s
) \

16 ({ c⁄° *
p
 = 
s
; *p;Ö++Ë
	`putch
(*p); })

	)

18 
	#io_ªad
(
ªg
) \

19 ({ 
ªg
##
_T
 
__io_∑øm
; \

20 
	`i€_ªad
(
ªg
, &
__io_∑øm
); \

21 
__io_∑øm
; })

	)

23 
	#io_wrôe
(
ªg
, ...) \

24 ({ 
ªg
##
_T
 
__io_∑øm
 = (ªg##_TË{ 
__VA_ARGS__
 }; \

25 
	`i€_wrôe
(
ªg
, &
__io_∑øm
); })

	)

27 
	#°©ic_as£π
(
c⁄°_c⁄d
) \

28 
	`CONCAT
(
_°©ic_as£π_
, 
__LINE__
Ë[(
c⁄°_c⁄d
Ë? 1 : -1] 
	`__©åibuã__
((
unu£d
))

	)

30 
	#∑nic_⁄
(
c⁄d
, 
s
) \

31 ({ i‡(
c⁄d
) { \

32 
	`put°r
("AM P™ic: ");Öut°r(
s
); \

33 
	`put°r
(" @ " 
__FILE__
 ":" 
	`TOSTRING
(
__LINE__
) " \n"); \

34 
	`hÆt
(1); \

35 } })

	)

37 
	#∑nic
(
s
Ë
	`∑nic_⁄
(1, s)

	)

	@abstract-machine/klib/include/klib.h

1 #i‚de‡
KLIB_H__


2 
	#KLIB_H__


	)

4 
	~<am.h
>

5 
	~<°ddef.h
>

6 
	~<°d¨g.h
>

8 #ifde‡
__˝lu•lus


15 *
mem£t
 (*
s
, 
c
, 
size_t
 
n
);

16 *
mem˝y
 (*
d°
, c⁄° *
§c
, 
size_t
 
n
);

17 *
memmove
 (*
d°
, c⁄° *
§c
, 
size_t
 
n
);

18 
memcmp
 (c⁄° *
s1
, c⁄° *
s2
, 
size_t
 
n
);

19 
size_t
 
°æí
 (c⁄° *
s
);

20 *
°rˇt
 (*
d°
, c⁄° *
§c
);

21 *
°r˝y
 (*
d°
, c⁄° *
§c
);

22 *
°∫˝y
 (*
d°
, c⁄° *
§c
, 
size_t
 
n
);

23 
°rcmp
 (c⁄° *
s1
, c⁄° *
s2
);

24 
°∫cmp
 (c⁄° *
s1
, c⁄° *
s2
, 
size_t
 
n
);

27 
§™d
 (
£ed
);

28 
ønd
 ();

29 *
mÆloc
 (
size_t
 
size
);

30 
‰ì
 (*
±r
);

31 
abs
 (
x
);

32 
©oi
 (c⁄° *
≈å
);

35 
¥ötf
 (c⁄° *
f‹m©
, ...);

36 
•rötf
 (*
°r
, c⁄° *
f‹m©
, ...);

37 
¢¥ötf
 (*
°r
, 
size_t
 
size
, c⁄° *
f‹m©
, ...);

38 
v•rötf
 (*
°r
, c⁄° *
f‹m©
, 
va_li°
 
≠
);

39 
v¢¥ötf
 (*
°r
, 
size_t
 
size
, c⁄° *
f‹m©
, 
va_li°
 
≠
);

42 #ifde‡
NDEBUG


43 
	#as£π
(
ign‹e
Ë(()0)

	)

45 
	#as£π
(
c⁄d
) \

47 i‡(!(
c⁄d
)) { \

48 
	`¥ötf
("As£πi⁄ faûáà%s:%d\n", 
__FILE__
, 
__LINE__
); \

49 
	`hÆt
(1); \

51 } 0)

	)

54 #ifde‡
__˝lu•lus


	@abstract-machine/klib/src/cpp.c

1 
	~<am.h
>

2 
	~<klib.h
>

4 #i‚de‡
__ISA_NATIVE__


6 
	$__dso_h™dÀ
() {

7 
	}
}

9 
	$__cxa_gu¨d_acquúe
() {

10 
	}
}

12 
	$__cxa_gu¨d_ªÀa£
() {

13 
	}
}

15 
	$__cxa_©exô
() {

16 
	`as£π
(0);

17 
	}
}

	@abstract-machine/klib/src/int64.c

7 #i‡
deföed
(
__ELF__
)

8 
	#FNALIAS
(
Æüs_«me
, 
‹igöÆ_«me
) \

9 
	`Æüs_«me
(Ë
	`__©åibuã__
((
	`__Æüs__
(#‹igöÆ_«me)))

	)

10 
	#COMPILER_RT_ALIAS
(
Æü£e
Ë
	`__©åibuã__
((
	`__Æüs__
(#Æü£e)))

	)

12 
	#FNALIAS
(
Æüs
, 
«me
Ë
	`_Pøgma
("GCCÉº‹(\"Æü†unsuµ‹ãd o¿thi†fûêf‹m©\")")

	)

13 
	#COMPILER_RT_ALIAS
(
Æü£e
Ë
	`_Pøgma
("GCCÉº‹(\"Æü†unsuµ‹ãd o¿thi†fûêf‹m©\")")

	)

18 #i‡
__ARM_EABI__


19 #ifde‡
COMPILER_RT_ARMHF_TARGET


20 
	#COMPILER_RT_ABI


	)

22 
	#COMPILER_RT_ABI
 
	`__©åibuã__
((
	`__pcs__
("Øpcs")))

	)

25 
	#COMPILER_RT_ABI


	)

28 
	#AEABI_RTABI
 
	`__©åibuã__
((
	`__pcs__
("Øpcs")))

	)

30 #ifde‡
_MSC_VER


31 
	#ALWAYS_INLINE
 
__f‹˚ölöe


	)

32 
	#NOINLINE
 
	`__de˛•ec
(
noölöe
)

	)

33 
	#NORETURN
 
	`__de˛•ec
(
n‹ëu∫
)

	)

34 
	#UNUSED


	)

36 
	#ALWAYS_INLINE
 
	`__©åibuã__
((
Æways_ölöe
))

	)

37 
	#NOINLINE
 
	`__©åibuã__
((
noölöe
))

	)

38 
	#NORETURN
 
	`__©åibuã__
((
n‹ëu∫
))

	)

39 
	#UNUSED
 
	`__©åibuã__
((
unu£d
))

	)

42 #i‡
deföed
(
__NëBSD__
Ë&& (deföed(
_KERNEL
Ë|| deföed(
_STANDALONE
))

47 
	~<machöe/limôs.h
>

48 
	~<sys/°döt.h
>

49 
	~<sys/ty≥s.h
>

52 
	~<limôs.h
>

53 
	~<°döt.h
>

54 
	~<°dboﬁ.h
>

55 
	~<Êﬂt.h
>

59 #i‡
deföed
(
__BYTE_ORDER__
Ë&& deföed(
__ORDER_BIG_ENDIAN__
) && \

60 
	$deföed
(
__ORDER_LITTLE_ENDIAN__
)

63 #i‡
__BYTE_ORDER__
 =
__ORDER_BIG_ENDIAN__


64 
	#_YUGA_LITTLE_ENDIAN
 0

	)

65 
	#_YUGA_BIG_ENDIAN
 1

	)

66 #ñi‡
__BYTE_ORDER__
 =
__ORDER_LITTLE_ENDIAN__


67 
	#_YUGA_LITTLE_ENDIAN
 1

	)

68 
	#_YUGA_BIG_ENDIAN
 0

	)

73 #i‡
	`deföed
(
__SVR4
Ë&& deföed(
__sun
)

74 
	~<sys/byã‹dî.h
>

76 #i‡
	`deföed
(
_BIG_ENDIAN
)

77 
	#_YUGA_LITTLE_ENDIAN
 0

	)

78 
	#_YUGA_BIG_ENDIAN
 1

	)

79 #ñi‡
	`deföed
(
_LITTLE_ENDIAN
)

80 
	#_YUGA_LITTLE_ENDIAN
 1

	)

81 
	#_YUGA_BIG_ENDIAN
 0

	)

90 #i‡
	`deföed
(
__FªeBSD__
Ë|| deföed(
__NëBSD__
Ë|| deföed(
__Døg⁄Fly__
) || \

91 
	$deföed
(
__möix
)

92 
	~<sys/ídün.h
>

94 #i‡
_BYTE_ORDER
 =
_BIG_ENDIAN


95 
	#_YUGA_LITTLE_ENDIAN
 0

	)

96 
	#_YUGA_BIG_ENDIAN
 1

	)

97 #ñi‡
_BYTE_ORDER
 =
_LITTLE_ENDIAN


98 
	#_YUGA_LITTLE_ENDIAN
 1

	)

99 
	#_YUGA_BIG_ENDIAN
 0

	)

104 #i‡
	`deföed
(
__O≥nBSD__
)

105 
	~<machöe/ídün.h
>

107 #i‡
_BYTE_ORDER
 =
_BIG_ENDIAN


108 
	#_YUGA_LITTLE_ENDIAN
 0

	)

109 
	#_YUGA_BIG_ENDIAN
 1

	)

110 #ñi‡
_BYTE_ORDER
 =
_LITTLE_ENDIAN


111 
	#_YUGA_LITTLE_ENDIAN
 1

	)

112 
	#_YUGA_BIG_ENDIAN
 0

	)

121 #i‡
	`deföed
(
__APPLE__
Ë|| deföed(
__ñlcc__
 )

123 #ifde‡
__BIG_ENDIAN__


124 #i‡
__BIG_ENDIAN__


125 
	#_YUGA_LITTLE_ENDIAN
 0

	)

126 
	#_YUGA_BIG_ENDIAN
 1

	)

130 #ifde‡
__LITTLE_ENDIAN__


131 #i‡
__LITTLE_ENDIAN__


132 
	#_YUGA_LITTLE_ENDIAN
 1

	)

133 
	#_YUGA_BIG_ENDIAN
 0

	)

141 #i‡
	`deföed
(
_WIN32
)

143 
	#_YUGA_LITTLE_ENDIAN
 1

	)

144 
	#_YUGA_BIG_ENDIAN
 0

	)

152 #i‡!
	`deföed
(
_YUGA_LITTLE_ENDIAN
Ë|| !deföed(
_YUGA_BIG_ENDIAN
)

153 #îr‹ 
U«bÀ
 
to
 
dëîmöe
 
ídün


157 #ifde‡
si_öt


158 #unde‡
si_öt


160 
	tsi_öt
;

161 
	tsu_öt
;

163 
	tdi_öt
;

164 
	tdu_öt
;

168 
di_öt
 
Æl
;

171 #i‡
_YUGA_LITTLE_ENDIAN


172 
su_öt
 
low
;

173 
si_öt
 
high
;

175 
si_öt
 
high
;

176 
su_öt
 
low
;

178 }
s
;

179 } 
	tdw‹ds
;

183 
du_öt
 
Æl
;

186 #i‡
_YUGA_LITTLE_ENDIAN


187 
su_öt
 
low
;

188 
su_öt
 
high
;

190 
su_öt
 
high
;

191 
su_öt
 
low
;

193 }
s
;

194 } 
	tudw‹ds
;

196 #i‡(
	`deföed
(
__LP64__
Ë|| deföed(
__wasm__
Ë|| deföed(
__mùs64
))

197 
	#CRT_HAS_128BIT


	)

200 #ifde‡
CRT_HAS_128BIT


201 
	tti_öt
 
	t__©åibuã__
 ((
	tmode
 (
	tTI
)));

202 
	ttu_öt
 
	t__©åibuã__
 ((
	tmode
 (
	tTI
)));

206 
ti_öt
 
Æl
;

209 #i‡
_YUGA_LITTLE_ENDIAN


210 
du_öt
 
low
;

211 
di_öt
 
high
;

213 
di_öt
 
high
;

214 
du_öt
 
low
;

216 }
s
;

217 } 
	ttw‹ds
;

221 
tu_öt
 
Æl
;

224 #i‡
_YUGA_LITTLE_ENDIAN


225 
du_öt
 
low
;

226 
du_öt
 
high
;

228 
du_öt
 
high
;

229 
du_öt
 
low
;

231 }
s
;

232 } 
	tutw‹ds
;

234 
__ölöe
 
ti_öt
 
	$make_ti
(
di_öt
 
h
, di_öà
l
) {

235 
tw‹ds
 
r
;

236 
r
.
s
.
high
 = 
h
;

237 
r
.
s
.
low
 = 
l
;

238  
r
.
Æl
;

239 
	}
}

241 
__ölöe
 
tu_öt
 
	$make_tu
(
du_öt
 
h
, du_öà
l
) {

242 
utw‹ds
 
r
;

243 
r
.
s
.
high
 = 
h
;

244 
r
.
s
.
low
 = 
l
;

245  
r
.
Æl
;

246 
	}
}

252 
su_öt
 
	mu
;

253 
	mf
;

254 } 
	tÊﬂt_bôs
;

258 
udw‹ds
 
	mu
;

259 
	mf
;

260 } 
	tdoubÀ_bôs
;

264 #i‡
_YUGA_LITTLE_ENDIAN


265 
udw‹ds
 
	mlow
;

266 
udw‹ds
 
	mhigh
;

268 
udw‹ds
 
	mhigh
;

269 
udw‹ds
 
	mlow
;

271 } 
	tuqw‹ds
;

275 
uqw‹ds
 
	mu
;

276 
	mf
;

277 } 
	tl⁄g_doubÀ_bôs
;

279 #i‡
__STDC_VERSION__
 >= 199901L

280 
	t_Com∂ex
 
	tFcom∂ex
;

281 
	t_Com∂ex
 
	tDcom∂ex
;

282 
	t_Com∂ex
 
	tLcom∂ex
;

284 
	#COMPLEX_REAL
(
x
Ë
	`__ªÆ__
(x)

	)

285 
	#COMPLEX_IMAGINARY
(
x
Ë
	`__imag__
(x)

	)

287 °ru˘ { 
	mªÆ
, 
	mimagö¨y
; } 
	tFcom∂ex
;

289 °ru˘ { 
	mªÆ
, 
	mimagö¨y
; } 
	tDcom∂ex
;

291 °ru˘ { 
	mªÆ
, 
	mimagö¨y
; } 
	tLcom∂ex
;

293 
	#COMPLEX_REAL
(
x
Ë(x).
ªÆ


	)

294 
	#COMPLEX_IMAGINARY
(
x
Ë(x).
imagö¨y


	)

300 
	#compûîπ_ab‹t
(Ë
	`compûîπ_ab‹t_im∂
(
__FILE__
, 
__LINE__
, 
__func__
)

	)

302 
NORETURN
 
compûîπ_ab‹t_im∂
(c⁄° *
fûe
, 
löe
,

303 c⁄° *
fun˘i⁄
);

305 
	#COMPILE_TIME_ASSERT
(
ex¥
Ë
	`COMPILE_TIME_ASSERT1
”x¥, 
__COUNTER__
)

	)

306 
	#COMPILE_TIME_ASSERT1
(
ex¥
, 
˙t
Ë
	`COMPILE_TIME_ASSERT2
”x¥, c¡)

	)

307 
	#COMPILE_TIME_ASSERT2
(
ex¥
, 
˙t
) \

308 
	t˘_as£π_
##
	t˙t
[(
ex¥
Ë? 1 : -1] 
	tUNUSED


	)

310 
	tCOMPILER_RT_ABI
 
	tsi_öt
 
	t__∑rôysi2
(si_öà
	ta
);

311 
COMPILER_RT_ABI
 
si_öt
 
__∑rôydi2
(
di_öt
 
a
);

313 
COMPILER_RT_ABI
 
di_öt
 
__divdi3
(di_öà
a
, di_öà
b
);

314 
COMPILER_RT_ABI
 
si_öt
 
__divsi3
(si_öà
a
, si_öà
b
);

315 
COMPILER_RT_ABI
 
su_öt
 
__udivsi3
(su_öà
n
, su_öà
d
);

317 
COMPILER_RT_ABI
 
su_öt
 
__udivmodsi4
(su_öà
a
, su_öà
b
, su_öt* 
ªm
);

318 
COMPILER_RT_ABI
 
du_öt
 
__udivmoddi4
(du_öà
a
, du_öà
b
, du_öt* 
ªm
);

319 #ifde‡
CRT_HAS_128BIT


320 
COMPILER_RT_ABI
 
si_öt
 
__˛zti2
(
ti_öt
 
a
);

321 
COMPILER_RT_ABI
 
tu_öt
 
__udivmodti4
—u_öà
a
,Åu_öà
b
,Åu_öt* 
ªm
);

325 #i‡
deföed
(
_MSC_VER
Ë&& !deföed(
__˛™g__
)

326 
	~<öåö.h
>

328 
uöt32_t
 
__ölöe
 
	$__buûtö_˘z
(
uöt32_t
 
vÆue
) {

329 
åaûög_zîo
 = 0;

330 i‡(
	`_BôSˇnF‹w¨d
(&
åaûög_zîo
, 
vÆue
))

331  
åaûög_zîo
;

333 
	}
}

335 
uöt32_t
 
__ölöe
 
	$__buûtö_˛z
(
uöt32_t
 
vÆue
) {

336 
Àadög_zîo
 = 0;

337 i‡(
	`_BôSˇnRevî£
(&
Àadög_zîo
, 
vÆue
))

338  31 - 
Àadög_zîo
;

340 
	}
}

342 #i‡
deföed
(
_M_ARM
Ë|| deföed(
_M_X64
)

343 
uöt32_t
 
__ölöe
 
	$__buûtö_˛zŒ
(
uöt64_t
 
vÆue
) {

344 
Àadög_zîo
 = 0;

345 i‡(
	`_BôSˇnRevî£64
(&
Àadög_zîo
, 
vÆue
))

346  63 - 
Àadög_zîo
;

348 
	}
}

350 
uöt32_t
 
__ölöe
 
	$__buûtö_˛zŒ
(
uöt64_t
 
vÆue
) {

351 i‡(
vÆue
 == 0)

353 
uöt32_t
 
msh
 = (uöt32_t)(
vÆue
 >> 32);

354 
uöt32_t
 
lsh
 = (uöt32_t)(
vÆue
 & 0xFFFFFFFF);

355 i‡(
msh
 != 0)

356  
	`__buûtö_˛z
(
msh
);

357  32 + 
	`__buûtö_˛z
(
lsh
);

358 
	}
}

361 
	#__buûtö_˛zl
 
__buûtö_˛zŒ


	)

364 
	~<am.h
>

366 #i‡!
deföed
(
__ARCH_RISCV64_MYCPU
)

369 
COMPILER_RT_ABI
 
di_öt


370 
	$__divdi3
(
di_öt
 
a
, di_öà
b
)

372 c⁄° 
bôs_ö_dw‹d_m1
 = ()((
di_öt
Ë* 
CHAR_BIT
) - 1;

373 
di_öt
 
s_a
 = 
a
 >> 
bôs_ö_dw‹d_m1
;

374 
di_öt
 
s_b
 = 
b
 >> 
bôs_ö_dw‹d_m1
;

375 
a
 = (®^ 
s_a
) - s_a;

376 
b
 = (b ^ 
s_b
) - s_b;

377 
s_a
 ^
s_b
;

378  (
	`__udivmoddi4
(
a
, 
b
, (
du_öt
*)0Ë^ 
s_a
) - s_a;

379 
	}
}

383 
COMPILER_RT_ABI
 
di_öt


384 
	$__divmoddi4
(
di_öt
 
a
, di_öà
b
, di_öt* 
ªm
)

386 
di_öt
 
d
 = 
	`__divdi3
(
a
,
b
);

387 *
ªm
 = 
a
 - (
d
*
b
);

388  
d
;

389 
	}
}

393 
COMPILER_RT_ABI
 
di_öt


394 
	$__moddi3
(
di_öt
 
a
, di_öà
b
)

396 c⁄° 
bôs_ö_dw‹d_m1
 = ()((
di_öt
Ë* 
CHAR_BIT
) - 1;

397 
di_öt
 
s
 = 
b
 >> 
bôs_ö_dw‹d_m1
;

398 
b
 = (b ^ 
s
) - s;

399 
s
 = 
a
 >> 
bôs_ö_dw‹d_m1
;

400 
a
 = (®^ 
s
) - s;

401 
du_öt
 
r
;

402 
	`__udivmoddi4
(
a
, 
b
, &
r
);

403  ((
di_öt
)
r
 ^ 
s
) - s;

404 
	}
}

408 
COMPILER_RT_ABI
 
du_öt


409 
	$__udivdi3
(
du_öt
 
a
, du_öà
b
)

411  
	`__udivmoddi4
(
a
, 
b
, 0);

412 
	}
}

416 
COMPILER_RT_ABI
 
du_öt


417 
	$__umoddi3
(
du_öt
 
a
, du_öà
b
)

419 
du_öt
 
r
;

420 
	`__udivmoddi4
(
a
, 
b
, &
r
);

421  
r
;

422 
	}
}

426 
COMPILER_RT_ABI
 
du_öt


427 
	$__udivmoddi4
(
du_öt
 
a
, du_öà
b
, du_öt* 
ªm
)

429 c⁄° 
n_uw‹d_bôs
 = (
su_öt
Ë* 
CHAR_BIT
;

430 c⁄° 
n_udw‹d_bôs
 = (
du_öt
Ë* 
CHAR_BIT
;

431 
udw‹ds
 
n
;

432 
n
.
Æl
 = 
a
;

433 
udw‹ds
 
d
;

434 
d
.
Æl
 = 
b
;

435 
udw‹ds
 
q
;

436 
udw‹ds
 
r
;

437 
§
;

439 i‡(
n
.
s
.
high
 == 0)

441 i‡(
d
.
s
.
high
 == 0)

447 i‡(
ªm
)

448 *
ªm
 = 
n
.
s
.
low
 % 
d
.s.low;

449  
n
.
s
.
low
 / 
d
.s.low;

455 i‡(
ªm
)

456 *
ªm
 = 
n
.
s
.
low
;

460 i‡(
d
.
s
.
low
 == 0)

462 i‡(
d
.
s
.
high
 == 0)

468 i‡(
ªm
)

469 *
ªm
 = 
n
.
s
.
high
 % 
d
.s.
low
;

470  
n
.
s
.
high
 / 
d
.s.
low
;

473 i‡(
n
.
s
.
low
 == 0)

479 i‡(
ªm
)

481 
r
.
s
.
high
 = 
n
.s.high % 
d
.s.high;

482 
r
.
s
.
low
 = 0;

483 *
ªm
 = 
r
.
Æl
;

485  
n
.
s
.
high
 / 
d
.s.high;

491 i‡((
d
.
s
.
high
 & (d.s.high - 1)) == 0)

493 i‡(
ªm
)

495 
r
.
s
.
low
 = 
n
.s.low;

496 
r
.
s
.
high
 = 
n
.s.high & (
d
.s.high - 1);

497 *
ªm
 = 
r
.
Æl
;

499  
n
.
s
.
high
 >> 
	`__buûtö_˘z
(
d
.s.high);

505 
§
 = 
	`__buûtö_˛z
(
d
.
s
.
high
Ë- __buûtö_˛z(
n
.s.high);

507 i‡(
§
 > 
n_uw‹d_bôs
 - 2)

509 i‡(
ªm
)

510 *
ªm
 = 
n
.
Æl
;

513 ++
§
;

516 
q
.
s
.
low
 = 0;

517 
q
.
s
.
high
 = 
n
.s.
low
 << (
n_uw‹d_bôs
 - 
§
);

519 
r
.
s
.
high
 = 
n
.s.high >> 
§
;

520 
r
.
s
.
low
 = (
n
.s.
high
 << (
n_uw‹d_bôs
 - 
§
)) | (n.s.low >> sr);

524 i‡(
d
.
s
.
high
 == 0)

530 i‡((
d
.
s
.
low
 & (d.s.low - 1)) == 0)

532 i‡(
ªm
)

533 *
ªm
 = 
n
.
s
.
low
 & (
d
.s.low - 1);

534 i‡(
d
.
s
.
low
 == 1)

535  
n
.
Æl
;

536 
§
 = 
	`__buûtö_˘z
(
d
.
s
.
low
);

537 
q
.
s
.
high
 = 
n
.s.high >> 
§
;

538 
q
.
s
.
low
 = (
n
.s.
high
 << (
n_uw‹d_bôs
 - 
§
)) | (n.s.low >> sr);

539  
q
.
Æl
;

545 
§
 = 1 + 
n_uw‹d_bôs
 + 
	`__buûtö_˛z
(
d
.
s
.
low
Ë- __buûtö_˛z(
n
.s.
high
);

550 i‡(
§
 =
n_uw‹d_bôs
)

552 
q
.
s
.
low
 = 0;

553 
q
.
s
.
high
 = 
n
.s.
low
;

554 
r
.
s
.
high
 = 0;

555 
r
.
s
.
low
 = 
n
.s.
high
;

557 i‡(
§
 < 
n_uw‹d_bôs
)

559 
q
.
s
.
low
 = 0;

560 
q
.
s
.
high
 = 
n
.s.
low
 << (
n_uw‹d_bôs
 - 
§
);

561 
r
.
s
.
high
 = 
n
.s.high >> 
§
;

562 
r
.
s
.
low
 = (
n
.s.
high
 << (
n_uw‹d_bôs
 - 
§
)) | (n.s.low >> sr);

566 
q
.
s
.
low
 = 
n
.s.low << (
n_udw‹d_bôs
 - 
§
);

567 
q
.
s
.
high
 = (
n
.s.high << (
n_udw‹d_bôs
 - 
§
)) |

568 (
n
.
s
.
low
 >> (
§
 - 
n_uw‹d_bôs
));

569 
r
.
s
.
high
 = 0;

570 
r
.
s
.
low
 = 
n
.s.
high
 >> (
§
 - 
n_uw‹d_bôs
);

579 
§
 = 
	`__buûtö_˛z
(
d
.
s
.
high
Ë- __buûtö_˛z(
n
.s.high);

581 i‡(
§
 > 
n_uw‹d_bôs
 - 1)

583 i‡(
ªm
)

584 *
ªm
 = 
n
.
Æl
;

587 ++
§
;

590 
q
.
s
.
low
 = 0;

591 i‡(
§
 =
n_uw‹d_bôs
)

593 
q
.
s
.
high
 = 
n
.s.
low
;

594 
r
.
s
.
high
 = 0;

595 
r
.
s
.
low
 = 
n
.s.
high
;

599 
q
.
s
.
high
 = 
n
.s.
low
 << (
n_uw‹d_bôs
 - 
§
);

600 
r
.
s
.
high
 = 
n
.s.high >> 
§
;

601 
r
.
s
.
low
 = (
n
.s.
high
 << (
n_uw‹d_bôs
 - 
§
)) | (n.s.low >> sr);

611 
su_öt
 
ˇºy
 = 0;

612 ; 
§
 > 0; --sr)

615 
r
.
s
.
high
 = (r.s.high << 1Ë| (r.s.
low
 >> (
n_uw‹d_bôs
 - 1));

616 
r
.
s
.
low
 = (r.s.low << 1Ë| (
q
.s.
high
 >> (
n_uw‹d_bôs
 - 1));

617 
q
.
s
.
high
 = (q.s.high << 1Ë| (q.s.
low
 >> (
n_uw‹d_bôs
 - 1));

618 
q
.
s
.
low
 = (q.s.low << 1Ë| 
ˇºy
;

626 c⁄° 
di_öt
 
s
 = (di_öt)(
d
.
Æl
 - 
r
.Æ»- 1Ë>> (
n_udw‹d_bôs
 - 1);

627 
ˇºy
 = 
s
 & 1;

628 
r
.
Æl
 -
d
.Æ»& 
s
;

630 
q
.
Æl
 = (q.Æ»<< 1Ë| 
ˇºy
;

631 i‡(
ªm
)

632 *
ªm
 = 
r
.
Æl
;

633  
q
.
Æl
;

634 
	}
}

640 
COMPILER_RT_ABI
 
si_öt
 
	$__˛zsi2
(
si_öt
 
a
) {

641 
su_öt
 
x
 = (su_öt)
a
;

642 
si_öt
 
t
 = ((
x
 & 0xFFFF0000) == 0) << 4;

643 
x
 >>16 - 
t
;

644 
su_öt
 
r
 = 
t
;

646 
t
 = ((
x
 & 0xFF00) == 0) << 3;

647 
x
 >>8 - 
t
;

648 
r
 +
t
;

650 
t
 = ((
x
 & 0xF0) == 0) << 2;

651 
x
 >>4 - 
t
;

652 
r
 +
t
;

654 
t
 = ((
x
 & 0xC) == 0) << 1;

655 
x
 >>2 - 
t
;

656 
r
 +
t
;

668  
r
 + ((2 - 
x
) & -((x & 2) == 0));

669 
	}
}

675 
COMPILER_RT_ABI
 
si_öt
 
	$__˘zsi2
(
si_öt
 
a
) {

676 
su_öt
 
x
 = (su_öt)
a
;

677 
si_öt
 
t
 = ((
x
 & 0x0000FFFF) == 0)

679 
x
 >>
t
;

680 
su_öt
 
r
 = 
t
;

682 
t
 = ((
x
 & 0x00FF) == 0) << 3;

683 
x
 >>
t
;

684 
r
 +
t
;

686 
t
 = ((
x
 & 0x0F) == 0) << 2;

687 
x
 >>
t
;

688 
r
 +
t
;

690 
t
 = ((
x
 & 0x3) == 0) << 1;

691 
x
 >>
t
;

692 
x
 &= 3;

693 
r
 +
t
;

708  
r
 + ((2 - (
x
 >> 1)) & -((x & 1) == 0));

709 
	}
}

711 
	tsi_öt
;

712 
	tdi_öt
;

713 
	tsu_öt
;

714 
	#CHAR_BIT
 
__CHAR_BIT__


	)

717 
si_öt
 
	$__˘zdi2
(
di_öt
 
a
) {

718 
dw‹ds
 
x
;

719 
x
.
Æl
 = 
a
;

720 c⁄° 
si_öt
 
f
 = -(
x
.
s
.
low
 == 0);

721  
	`__˘zsi2
((
x
.
s
.
high
 & 
f
Ë| (x.s.
low
 & ~f)) +

722 (
f
 & ((
si_öt
)((si_ötË* 
CHAR_BIT
)));

723 
	}
}

725 
si_öt
 
	$__˛zdi2
(
di_öt
 
a
) {

726 
dw‹ds
 
x
;

727 
x
.
Æl
 = 
a
;

728 c⁄° 
si_öt
 
f
 = -(
x
.
s
.
high
 == 0);

729  
	`__˛zsi2
((
x
.
s
.
high
 & ~
f
Ë| (x.s.
low
 & f)) +

730 (
f
 & ((
si_öt
)((si_ötË* 
CHAR_BIT
)));

731 
	}
}

	@abstract-machine/klib/src/stdio.c

1 
	~<am.h
>

2 
	~<klib.h
>

3 
	~<klib-ma¸os.h
>

4 
	~<°d¨g.h
>

6 #i‡!
deföed
(
__ISA_NATIVE__
Ë|| deföed(
__NATIVE_USE_KLIB__
)

8 
	$¥ötf
(c⁄° *
fmt
, ...) {

9 
	`∑nic
("Not implemented");

10 
	}
}

12 
	$v•rötf
(*
out
, c⁄° *
fmt
, 
va_li°
 
≠
) {

13 
	`∑nic
("Not implemented");

14 
	}
}

16 
	$•rötf
(*
out
, c⁄° *
fmt
, ...) {

17 
	`∑nic
("Not implemented");

18 
	}
}

20 
	$¢¥ötf
(*
out
, 
size_t
 
n
, c⁄° *
fmt
, ...) {

21 
	`∑nic
("Not implemented");

22 
	}
}

24 
	$v¢¥ötf
(*
out
, 
size_t
 
n
, c⁄° *
fmt
, 
va_li°
 
≠
) {

25 
	`∑nic
("Not implemented");

26 
	}
}

	@abstract-machine/klib/src/stdlib.c

1 
	~<am.h
>

2 
	~<klib.h
>

3 
	~<klib-ma¸os.h
>

5 #i‡!
deföed
(
__ISA_NATIVE__
Ë|| deföed(
__NATIVE_USE_KLIB__
)

6 
	g√xt
 = 1;

8 
	$ønd
() {

10 
√xt
 =Çext * 1103515245 + 12345;

11  ()(
√xt
/65536) % 32768;

12 
	}
}

14 
	$§™d
(
£ed
) {

15 
√xt
 = 
£ed
;

16 
	}
}

18 
	$abs
(
x
) {

19  (
x
 < 0 ? -x : x);

20 
	}
}

22 
	$©oi
(c⁄° * 
≈å
) {

23 
x
 = 0;

24 *
≈å
 == ' ') {Çptr ++; }

25 *
≈å
 >= '0' && *nptr <= '9') {

26 
x
 = x * 10 + *
≈å
 - '0';

27 
≈å
 ++;

29  
x
;

30 
	}
}

32 *
	$mÆloc
(
size_t
 
size
) {

36 #i‡!(
	`deföed
(
__ISA_NATIVE__
Ë&& deföed(
__NATIVE_USE_KLIB__
))

37 
	`∑nic
("Not implemented");

39  
NULL
;

40 
	}
}

42 
	$‰ì
(*
±r
) {

43 
	}
}

	@abstract-machine/klib/src/string.c

1 
	~<klib.h
>

2 
	~<klib-ma¸os.h
>

3 
	~<°döt.h
>

5 #i‡!
deföed
(
__ISA_NATIVE__
Ë|| deföed(
__NATIVE_USE_KLIB__
)

7 
size_t
 
	$°æí
(c⁄° *
s
) {

8 
	`∑nic
("Not implemented");

9 
	}
}

11 *
	$°r˝y
(*
d°
, c⁄° *
§c
) {

12 
	`∑nic
("Not implemented");

13 
	}
}

15 *
	$°∫˝y
(*
d°
, c⁄° *
§c
, 
size_t
 
n
) {

16 
	`∑nic
("Not implemented");

17 
	}
}

19 *
	$°rˇt
(*
d°
, c⁄° *
§c
) {

20 
	`∑nic
("Not implemented");

21 
	}
}

23 
	$°rcmp
(c⁄° *
s1
, c⁄° *
s2
) {

24 
	`∑nic
("Not implemented");

25 
	}
}

27 
	$°∫cmp
(c⁄° *
s1
, c⁄° *
s2
, 
size_t
 
n
) {

28 
	`∑nic
("Not implemented");

29 
	}
}

31 *
	$mem£t
(*
s
, 
c
, 
size_t
 
n
) {

32 
	`∑nic
("Not implemented");

33 
	}
}

35 *
	$memmove
(*
d°
, c⁄° *
§c
, 
size_t
 
n
) {

36 
	`∑nic
("Not implemented");

37 
	}
}

39 *
	$mem˝y
(*
out
, c⁄° *
ö
, 
size_t
 
n
) {

40 
	`∑nic
("Not implemented");

41 
	}
}

43 
	$memcmp
(c⁄° *
s1
, c⁄° *
s2
, 
size_t
 
n
) {

44 
	`∑nic
("Not implemented");

45 
	}
}

	@am-kernels/benchmarks/coremark/include/core_portme.h

6 #i‚de‡
CORE_PORTME_H


7 
	#CORE_PORTME_H


	)

9 
	~<am.h
>

10 
	~<klib.h
>

11 
	~<klib-ma¸os.h
>

13 
	#ITERATIONS
 1000

	)

14 
	#MEM_METHOD
 
MEM_STATIC


	)

22 #i‚de‡
HAS_FLOAT


23 
	#HAS_FLOAT
 0

	)

29 #i‚de‡
HAS_TIME_H


30 
	#HAS_TIME_H
 0

	)

36 #i‚de‡
USE_CLOCK


37 
	#USE_CLOCK
 0

	)

42 #i‚de‡
HAS_STDIO


43 
	#HAS_STDIO
 0

	)

48 #i‚de‡
HAS_PRINTF


49 
	#HAS_PRINTF
 1

	)

55 
uöt32_t
 
	tCORE_TICKS
;

60 #i‚de‡
COMPILER_VERSION


61 #ifde‡
__GNUC__


62 
	#COMPILER_VERSION
 "GCC"
__VERSION__


	)

64 
	#COMPILER_VERSION
 "PÀa£Öuàcompûî vîsi⁄ hîê”.g. gc¯4.1)"

	)

67 #i‚de‡
COMPILER_FLAGS


68 
	#COMPILER_FLAGS


	)

70 #i‚de‡
MEM_LOCATION


71 
	#MEM_LOCATION
 "STACK"

	)

80 sig√d 
	tì_s16
;

81 
	tì_u16
;

82 sig√d 
	tì_s32
;

83 
	tì_f32
;

84 
	tì_u8
;

85 
	tì_u32
;

86 
	tì_±r_öt
;

87 
size_t
 
	tì_size_t
;

91 
	#Æign_mem
(
x
Ë(*)(4 + ((()(xË- 1Ë& ~3))

	)

101 #i‚de‡
SEED_METHOD


102 
	#SEED_METHOD
 
SEED_VOLATILE


	)

113 #i‚de‡
MEM_METHOD


114 
	#MEM_METHOD
 
MEM_STACK


	)

132 #i‚de‡
MULTITHREAD


133 
	#MULTITHREAD
 1

	)

134 
	#USE_PTHREAD
 0

	)

135 
	#USE_FORK
 0

	)

136 
	#USE_SOCKET
 0

	)

149 #i‚de‡
MAIN_HAS_NOARGC


150 
	#MAIN_HAS_NOARGC
 0

	)

160 #i‚de‡
MAIN_HAS_NORETURN


161 
	#MAIN_HAS_NORETURN
 0

	)

167 
ì_u32
 
deÁu…_num_c⁄ãxts
;

169 
	sCORE_PORTABLE_S
 {

170 
ì_u8
 
	mp‹èbÀ_id
;

171 } 
	tc‹e_p‹èbÀ
;

174 
p‹èbÀ_öô
(
c‹e_p‹èbÀ
 *
p
, *
¨gc
, *
¨gv
[]);

175 
p‹èbÀ_föi
(
c‹e_p‹èbÀ
 *
p
);

177 #i‡!
deföed
(
PROFILE_RUN
Ë&& !deföed(
PERFORMANCE_RUN
Ë&& !deföed(
VALIDATION_RUN
)

178 #i‡(
TOTAL_DATA_SIZE
==1200)

179 
	#PROFILE_RUN
 1

	)

180 #ñi‡(
TOTAL_DATA_SIZE
==2000)

181 
	#PERFORMANCE_RUN
 1

	)

183 
	#VALIDATION_RUN
 1

	)

	@am-kernels/benchmarks/coremark/include/coremark.h

26 #i‚de‡
TOTAL_DATA_SIZE


27 
	#TOTAL_DATA_SIZE
 2*1000

	)

30 
	#SEED_ARG
 0

	)

31 
	#SEED_FUNC
 1

	)

32 
	#SEED_VOLATILE
 2

	)

34 
	#MEM_STATIC
 0

	)

35 
	#MEM_MALLOC
 1

	)

36 
	#MEM_STACK
 2

	)

38 
	~"c‹e_p‹tme.h
"

40 #i‡
HAS_STDIO


41 
	~<°dio.h
>

43 #i‡
HAS_PRINTF


44 
	#ì_¥ötf
 
¥ötf


	)

48 *
ôî©e
(*
¥es
);

54 #i‡
HAS_FLOAT


55 
	t£cs_ªt
;

57 
ì_u32
 
	t£cs_ªt
;

60 #i‡
MAIN_HAS_NORETURN


61 
	#MAIN_RETURN_VAL


	)

62 
	#MAIN_RETURN_TYPE
 

	)

64 
	#MAIN_RETURN_VAL
 0

	)

65 
	#MAIN_RETURN_TYPE
 

	)

68 
°¨t_time
();

69 
°›_time
();

70 
CORE_TICKS
 
gë_time
();

71 
£cs_ªt
 
time_ö_£cs
(
CORE_TICKS
 
ticks
);

74 
ì_u16
 
¸cu8
(
ì_u8
 
d©a
,Ée_u16 
¸c
);

75 
ì_u16
 
¸c16
(
ì_s16
 
√wvÆ
,Ée_u16 
¸c
);

76 
ì_u16
 
¸cu16
”e_u16 
√wvÆ
,Ée_u16 
¸c
);

77 
ì_u16
 
¸cu32
(
ì_u32
 
√wvÆ
,Ée_u16 
¸c
);

78 
ì_u8
 
check_d©a_ty≥s
();

79 *
p‹èbÀ_mÆloc
(
ì_size_t
 
size
);

80 
p‹èbÀ_‰ì
(*
p
);

81 
ì_s32
 
∑r£vÆ
(*
vÆ°rög
);

84 
	#ID_LIST
 (1<<0)

	)

85 
	#ID_MATRIX
 (1<<1)

	)

86 
	#ID_STATE
 (1<<2)

	)

87 
	#ALL_ALGORITHMS_MASK
 (
ID_LIST
|
ID_MATRIX
|
ID_STATE
)

	)

88 
	#NUM_ALGORITHMS
 3

	)

91 
	sli°_d©a_s
 {

92 
ì_s16
 
	md©a16
;

93 
ì_s16
 
	midx
;

94 } 
	tli°_d©a
;

96 
	sli°_hód_s
 {

97 
li°_hód_s
 *
	m√xt
;

98 
li°_d©a_s
 *
	möfo
;

99 } 
	tli°_hód
;

103 
	#MATDAT_INT
 1

	)

104 #i‡
MATDAT_INT


105 
ì_s16
 
	tMATDAT
;

106 
ì_s32
 
	tMATRES
;

108 
ì_f16
 
	tMATDAT
;

109 
ì_f32
 
	tMATRES
;

112 
	sMAT_PARAMS_S
 {

113 
	mN
;

114 
MATDAT
 *
	mA
;

115 
MATDAT
 *
	mB
;

116 
MATRES
 *
	mC
;

117 } 
	tm©_∑øms
;

121 
	eCORE_STATE
 {

122 
	mCORE_START
=0,

123 
	mCORE_INVALID
,

124 
	mCORE_S1
,

125 
	mCORE_S2
,

126 
	mCORE_INT
,

127 
	mCORE_FLOAT
,

128 
	mCORE_EXPONENT
,

129 
	mCORE_SCIENTIFIC
,

130 
	mNUM_CORE_STATES


131 } 
	tc‹e_°©e_e
 ;

135 
	sRESULTS_S
 {

137 
ì_s16
 
	m£ed1
;

138 
ì_s16
 
	m£ed2
;

139 
ì_s16
 
	m£ed3
;

140 *
	mmemblock
[4];

141 
ì_u32
 
	msize
;

142 
ì_u32
 
	môî©i⁄s
;

143 
ì_u32
 
	mexecs
;

144 
li°_hód_s
 *
	mli°
;

145 
m©_∑øms
 
	mm©
;

147 
ì_u16
 
	m¸c
;

148 
ì_u16
 
	m¸˛i°
;

149 
ì_u16
 
	m¸cm©rix
;

150 
ì_u16
 
	m¸c°©e
;

151 
ì_s16
 
	mîr
;

153 
c‹e_p‹èbÀ
 
	mp‹t
;

154 } 
	tc‹e_ªsu…s
;

157 #i‡(
MULTITHREAD
>1)

158 
ì_u8
 
c‹e_°¨t_∑øŒñ
(
c‹e_ªsu…s
 *
ªs
);

159 
ì_u8
 
c‹e_°›_∑øŒñ
(
c‹e_ªsu…s
 *
ªs
);

163 
li°_hód
 *
c‹e_li°_öô
(
ì_u32
 
blksize
,Üi°_hód *
memblock
, 
ì_s16
 
£ed
);

164 
ì_u16
 
c‹e_bích_li°
(
c‹e_ªsu…s
 *
ªs
, 
ì_s16
 
födî_idx
);

167 
c‹e_öô_°©e
(
ì_u32
 
size
, 
ì_s16
 
£ed
, 
ì_u8
 *
p
);

168 
ì_u16
 
c‹e_bích_°©e
(
ì_u32
 
blksize
, 
ì_u8
 *
memblock
,

169 
ì_s16
 
£ed1
,Ée_s16 
£ed2
,Ée_s16 
°ï
, 
ì_u16
 
¸c
);

172 
ì_u32
 
c‹e_öô_m©rix
”e_u32 
blksize
, *
memblk
, 
ì_s32
 
£ed
, 
m©_∑øms
 *
p
);

173 
ì_u16
 
c‹e_bích_m©rix
(
m©_∑øms
 *
p
, 
ì_s16
 
£ed
,Ée_u16 
¸c
);

	@am-kernels/benchmarks/coremark/src/core_list_join.c

20 
	~"c‹em¨k.h
"

53 
li°_hód
 *
c‹e_li°_föd
÷i°_hód *
li°
,
li°_d©a
 *
öfo
);

54 
li°_hód
 *
c‹e_li°_ªvî£
÷i°_hód *
li°
);

55 
li°_hód
 *
c‹e_li°_ªmove
÷i°_hód *
ôem
);

56 
li°_hód
 *
c‹e_li°_undo_ªmove
÷i°_hód *
ôem_ªmoved
,Üi°_hód *
ôem_modifõd
);

57 
li°_hód
 *
c‹e_li°_ö£π_√w
÷i°_hód *
ö£π_poöt


58 , 
li°_d©a
 *
öfo
, 
li°_hód
 **
memblock
,Üi°_d©®**
d©ablock


59 , 
li°_hód
 *
memblock_íd
, 
li°_d©a
 *
d©ablock_íd
);

60 
	$ì_s32
(*
	tli°_cmp
)(
	tli°_d©a
 *
	ta
,Üi°_d©®*
	tb
, 
	tc‹e_ªsu…s
 *
	tªs
);

61 
li°_hód
 *
	`c‹e_li°_mîges‹t
÷i°_hód *
li°
, 
li°_cmp
 
cmp
, 
c‹e_ªsu…s
 *
ªs
);

63 
ì_s16
 
	$ˇlc_func
(
ì_s16
 *
pd©a
, 
c‹e_ªsu…s
 *
ªs
) {

64 
ì_s16
 
d©a
=*
pd©a
;

65 
ì_s16
 
ªtvÆ
;

66 
ì_u8
 
›ty≥
=(
d©a
>>7) & 1;

67 i‡(
›ty≥
)

68  (
d©a
 & 0x007f);

70 
ì_s16
 
Êag
=
d©a
 & 0x7;

71 
ì_s16
 
dty≥
=((
d©a
>>3) & 0xf);

72 
dty≥
 |= dtype << 4;

73 
Êag
) {

75 i‡(
dty≥
<0x22)

76 
dty≥
=0x22;

77 
ªtvÆ
=
	`c‹e_bích_°©e
(
ªs
->
size
,ªs->
memblock
[3],ªs->
£ed1
,ªs->
£ed2
,
dty≥
,ªs->
¸c
);

78 i‡(
ªs
->
¸c°©e
==0)

79 
ªs
->
¸c°©e
=
ªtvÆ
;

82 
ªtvÆ
=
	`c‹e_bích_m©rix
(&(
ªs
->
m©
),
dty≥
,ªs->
¸c
);

83 i‡(
ªs
->
¸cm©rix
==0)

84 
ªs
->
¸cm©rix
=
ªtvÆ
;

87 
ªtvÆ
=
d©a
;

90 
ªs
->
¸c
=
	`¸cu16
(
ªtvÆ
,res->crc);

91 
ªtvÆ
 &= 0x007f;

92 *
pd©a
 = (
d©a
 & 0xff00Ë| 0x0080 | 
ªtvÆ
;

93  
ªtvÆ
;

95 
	}
}

101 
ì_s32
 
	$cmp_com∂ex
(
li°_d©a
 *
a
,Üi°_d©®*
b
, 
c‹e_ªsu…s
 *
ªs
) {

102 
ì_s16
 
vÆ1
=
	`ˇlc_func
(&(
a
->
d©a16
),
ªs
);

103 
ì_s16
 
vÆ2
=
	`ˇlc_func
(&(
b
->
d©a16
),
ªs
);

104  
vÆ1
 - 
vÆ2
;

105 
	}
}

112 
ì_s32
 
	$cmp_idx
(
li°_d©a
 *
a
,Üi°_d©®*
b
, 
c‹e_ªsu…s
 *
ªs
) {

113 i‡(
ªs
==
NULL
) {

114 
a
->
d©a16
 = (a->data16 & 0xff00) | (0x00ff & (a->data16>>8));

115 
b
->
d©a16
 = (b->data16 & 0xff00) | (0x00ff & (b->data16>>8));

117  
a
->
idx
 - 
b
->idx;

118 
	}
}

120 
	$c›y_öfo
(
li°_d©a
 *
to
,li°_d©®*
‰om
) {

121 
to
->
d©a16
=
‰om
->data16;

122 
to
->
idx
=
‰om
->idx;

123 
	}
}

132 
ì_u16
 
	$c‹e_bích_li°
(
c‹e_ªsu…s
 *
ªs
, 
ì_s16
 
födî_idx
) {

133 
ì_u16
 
ªtvÆ
=0;

134 
ì_u16
 
found
=0,
mis£d
=0;

135 
li°_hód
 *
li°
=
ªs
->list;

136 
ì_s16
 
föd_num
=
ªs
->
£ed3
;

137 
li°_hód
 *
this_föd
;

138 
li°_hód
 *
födî
, *
ªmovî
;

139 
li°_d©a
 
öfo
 = {};

140 
ì_s16
 
i
;

142 
öfo
.
idx
=
födî_idx
;

144 
i
=0; i<
föd_num
; i++) {

145 
öfo
.
d©a16
(
i
 & 0xff) ;

146 
this_föd
=
	`c‹e_li°_föd
(
li°
,&
öfo
);

147 
li°
=
	`c‹e_li°_ªvî£
(list);

148 i‡(
this_föd
==
NULL
) {

149 
mis£d
++;

150 
ªtvÆ
+=(
li°
->
√xt
->
öfo
->
d©a16
 >> 8) & 1;

153 
found
++;

154 i‡(
this_föd
->
öfo
->
d©a16
 & 0x1)

155 
ªtvÆ
+=(
this_föd
->
öfo
->
d©a16
 >> 9) & 1;

157 i‡(
this_föd
->
√xt
 !
NULL
) {

158 
födî
 = 
this_föd
->
√xt
;

159 
this_föd
->
√xt
 = 
födî
->next;

160 
födî
->
√xt
=
li°
->next;

161 
li°
->
√xt
=
födî
;

164 i‡(
öfo
.
idx
>=0)

165 
öfo
.
idx
++;

166 #i‡
CORE_DEBUG


167 
	`ì_¥ötf
("Li° föd %d: [%d,%d,%d]\n",
i
,
ªtvÆ
,
mis£d
,
found
);

170 
ªtvÆ
+=
found
*4-
mis£d
;

172 i‡(
födî_idx
>0)

173 
li°
=
	`c‹e_li°_mîges‹t
÷i°,
cmp_com∂ex
,
ªs
);

174 
ªmovî
=
	`c‹e_li°_ªmove
(
li°
->
√xt
);

176 
födî
=
	`c‹e_li°_föd
(
li°
,&
öfo
);

177 i‡(!
födî
)

178 
födî
=
li°
->
√xt
;

179 
födî
) {

180 
ªtvÆ
=
	`¸c16
(
li°
->
öfo
->
d©a16
,retval);

181 
födî
=födî->
√xt
;

183 #i‡
CORE_DEBUG


184 
	`ì_¥ötf
("Li° s‹à1: %04x\n",
ªtvÆ
);

186 
ªmovî
=
	`c‹e_li°_undo_ªmove
‘emovî,
li°
->
√xt
);

188 
li°
=
	`c‹e_li°_mîges‹t
÷i°,
cmp_idx
,
NULL
);

190 
födî
=
li°
->
√xt
;

191 
födî
) {

192 
ªtvÆ
=
	`¸c16
(
li°
->
öfo
->
d©a16
,retval);

193 
födî
=födî->
√xt
;

195 #i‡
CORE_DEBUG


196 
	`ì_¥ötf
("Li° s‹à2: %04x\n",
ªtvÆ
);

198  
ªtvÆ
;

199 
	}
}

213 
li°_hód
 *
	$c‹e_li°_öô
(
ì_u32
 
blksize
, 
li°_hód
 *
memblock
, 
ì_s16
 
£ed
) {

215 
ì_u32
 
≥r_ôem
=16+(
li°_d©a_s
);

216 
ì_u32
 
size
=(
blksize
/
≥r_ôem
)-2;

217 
li°_hód
 *
memblock_íd
=
memblock
+
size
;

218 
li°_d©a
 *
d©ablock
=÷i°_d©®*)(
memblock_íd
);

219 
li°_d©a
 *
d©ablock_íd
=
d©ablock
+
size
;

221 
ì_u32
 
i
;

222 
li°_hód
 *
födî
,*
li°
=
memblock
;

223 
li°_d©a
 
öfo
;

226 
li°
->
√xt
=
NULL
;

227 
li°
->
öfo
=
d©ablock
;

228 
li°
->
öfo
->
idx
=0x0000;

229 
li°
->
öfo
->
d©a16
=(
ì_s16
)0x8080;

230 
memblock
++;

231 
d©ablock
++;

232 
öfo
.
idx
=0x7fff;

233 
öfo
.
d©a16
=(
ì_s16
)0xffff;

234 
	`c‹e_li°_ö£π_√w
(
li°
,&
öfo
,&
memblock
,&
d©ablock
,
memblock_íd
,
d©ablock_íd
);

237 
i
=0; i<
size
; i++) {

238 
ì_u16
 
d©∑t
=(”e_u16)(
£ed
^
i
) & 0xf);

239 
ì_u16
 
d©
=(
d©∑t
<<3Ë| (
i
&0x7);

240 
öfo
.
d©a16
=(
d©
<<8) | dat;

241 
	`c‹e_li°_ö£π_√w
(
li°
,&
öfo
,&
memblock
,&
d©ablock
,
memblock_íd
,
d©ablock_íd
);

244 
födî
=
li°
->
√xt
;

245 
i
=1;

246 
födî
->
√xt
!=
NULL
) {

247 i‡(
i
<
size
/5)

248 
födî
->
öfo
->
idx
=
i
++;

250 
ì_u16
 
∑t
=”e_u16)(
i
++ ^ 
£ed
);

251 
födî
->
öfo
->
idx
=0x3ff‡& (((
i
 & 0x07Ë<< 8Ë| 
∑t
);

253 
födî
=födî->
√xt
;

255 
li°
 = 
	`c‹e_li°_mîges‹t
÷i°,
cmp_idx
,
NULL
);

256 #i‡
CORE_DEBUG


257 
	`ì_¥ötf
("InitializedÜist:\n");

258 
födî
=
li°
;

259 
födî
) {

260 
	`ì_¥ötf
("[%04x,%04x]",
födî
->
öfo
->
idx
,(
ì_u16
)födî->öfo->
d©a16
);

261 
födî
=födî->
√xt
;

263 
	`ì_¥ötf
("\n");

265  
li°
;

266 
	}
}

282 
li°_hód
 *
	$c‹e_li°_ö£π_√w
(
li°_hód
 *
ö£π_poöt
, 
li°_d©a
 *
öfo
,Üi°_hód **
memblock
,Üi°_d©®**
d©ablock


283 , 
li°_hód
 *
memblock_íd
, 
li°_d©a
 *
d©ablock_íd
) {

284 
li°_hód
 *
√wôem
;

286 i‡((*
memblock
+1Ë>
memblock_íd
)

287  
NULL
;

288 i‡((*
d©ablock
+1Ë>
d©ablock_íd
)

289  
NULL
;

291 
√wôem
=*
memblock
;

292 (*
memblock
)++;

293 
√wôem
->
√xt
=
ö£π_poöt
->next;

294 
ö£π_poöt
->
√xt
=
√wôem
;

296 
√wôem
->
öfo
=*
d©ablock
;

297 (*
d©ablock
)++;

298 
	`c›y_öfo
(
√wôem
->
öfo
,info);

300  
√wôem
;

301 
	}
}

316 
li°_hód
 *
	$c‹e_li°_ªmove
(
li°_hód
 *
ôem
) {

317 
li°_d©a
 *
tmp
;

318 
li°_hód
 *
ªt
=
ôem
->
√xt
;

320 
tmp
=
ôem
->
öfo
;

321 
ôem
->
öfo
=
ªt
->info;

322 
ªt
->
öfo
=
tmp
;

324 
ôem
->
√xt
=item->next->next;

325 
ªt
->
√xt
=
NULL
;

326  
ªt
;

327 
	}
}

345 
li°_hód
 *
	$c‹e_li°_undo_ªmove
(
li°_hód
 *
ôem_ªmoved
,Üi°_hód *
ôem_modifõd
) {

346 
li°_d©a
 *
tmp
;

348 
tmp
=
ôem_ªmoved
->
öfo
;

349 
ôem_ªmoved
->
öfo
=
ôem_modifõd
->info;

350 
ôem_modifõd
->
öfo
=
tmp
;

352 
ôem_ªmoved
->
√xt
=
ôem_modifõd
->next;

353 
ôem_modifõd
->
√xt
=
ôem_ªmoved
;

354  
ôem_ªmoved
;

355 
	}
}

370 
li°_hód
 *
	$c‹e_li°_föd
(
li°_hód
 *
li°
,
li°_d©a
 *
öfo
) {

371 i‡(
öfo
->
idx
>=0) {

372 
li°
 && (li°->
öfo
->
idx
 != info->idx))

373 
li°
ˆi°->
√xt
;

374  
li°
;

376 
li°
 && (÷i°->
öfo
->
d©a16
 & 0xff) != info->data16))

377 
li°
ˆi°->
√xt
;

378  
li°
;

380 
	}
}

395 
li°_hód
 *
	$c‹e_li°_ªvî£
(
li°_hód
 *
li°
) {

396 
li°_hód
 *
√xt
=
NULL
, *
tmp
;

397 
li°
) {

398 
tmp
=
li°
->
√xt
;

399 
li°
->
√xt
=next;

400 
√xt
=
li°
;

401 
li°
=
tmp
;

403  
√xt
;

404 
	}
}

426 
li°_hód
 *
	$c‹e_li°_mîges‹t
(
li°_hód
 *
li°
, 
li°_cmp
 
cmp
, 
c‹e_ªsu…s
 *
ªs
) {

427 
li°_hód
 *
p
, *
q
, *
e
, *
èû
;

428 
ì_s32
 
ösize
, 
nmîges
, 
psize
, 
qsize
, 
i
;

430 
ösize
 = 1;

433 
p
 = 
li°
;

434 
li°
 = 
NULL
;

435 
èû
 = 
NULL
;

437 
nmîges
 = 0;

439 
p
) {

440 
nmîges
++;

442 
q
 = 
p
;

443 
psize
 = 0;

444 
i
 = 0; i < 
ösize
; i++) {

445 
psize
++;

446 
q
 = q->
√xt
;

447 i‡(!
q
) ;

451 
qsize
 = 
ösize
;

454 
psize
 > 0 || (
qsize
 > 0 && 
q
)) {

457 i‡(
psize
 == 0) {

459 
e
 = 
q
; q = q->
√xt
; 
qsize
--;

460 } i‡(
qsize
 =0 || !
q
) {

462 
e
 = 
p
;Ö =Ö->
√xt
; 
psize
--;

463 } i‡(
	`cmp
(
p
->
öfo
,
q
->öfo,
ªs
) <= 0) {

465 
e
 = 
p
;Ö =Ö->
√xt
; 
psize
--;

468 
e
 = 
q
; q = q->
√xt
; 
qsize
--;

472 i‡(
èû
) {

473 
èû
->
√xt
 = 
e
;

475 
li°
 = 
e
;

477 
èû
 = 
e
;

481 
p
 = 
q
;

484 
èû
->
√xt
 = 
NULL
;

487 i‡(
nmîges
 <= 1)

488  
li°
;

491 
ösize
 *= 2;

493 #i‡
COMPILER_REQUIRES_SORT_RETURN


494  
li°
;

496 
	}
}

	@am-kernels/benchmarks/coremark/src/core_main.c

22 
	~"c‹em¨k.h
"

35 
ì_u16
 
	gli°_known_¸c
[] = {(ee_u16)0xd4b0,(ee_u16)0x3340,(ee_u16)0x6a79,(ee_u16)0xe714,(ee_u16)0xe3c1};

36 
ì_u16
 
	gm©rix_known_¸c
[] = {(ee_u16)0xbe52,(ee_u16)0x1199,(ee_u16)0x5608,(ee_u16)0x1fd7,(ee_u16)0x0747};

37 
ì_u16
 
	g°©e_known_¸c
[] = {(ee_u16)0x5e47,(ee_u16)0x39bf,(ee_u16)0xe5a4,(ee_u16)0x8e3a,(ee_u16)0x8d84};

38 *
	$ôî©e
(*
¥es
) {

39 
ì_u32
 
i
;

40 
ì_u16
 
¸c
;

41 
c‹e_ªsu…s
 *
ªs
=(c‹e_ªsu…†*)
¥es
;

42 
ì_u32
 
ôî©i⁄s
=
ªs
->iterations;

43 
ªs
->
¸c
=0;

44 
ªs
->
¸˛i°
=0;

45 
ªs
->
¸cm©rix
=0;

46 
ªs
->
¸c°©e
=0;

48 
i
=0; i<
ôî©i⁄s
; i++) {

49 
¸c
=
	`c‹e_bích_li°
(
ªs
,1);

50 
ªs
->
¸c
=
	`¸cu16
(crc,res->crc);

51 
¸c
=
	`c‹e_bích_li°
(
ªs
,-1);

52 
ªs
->
¸c
=
	`¸cu16
(crc,res->crc);

53 i‡(
i
==0Ë
ªs
->
¸˛i°
Ùes->
¸c
;

55  
NULL
;

56 
	}
}

58 #i‡(
SEED_METHOD
==
SEED_ARG
)

59 
ì_s32
 
gë_£ed_¨gs
(
i
, 
¨gc
, *
¨gv
[]);

60 
	#gë_£ed
(
x
Ë(
ì_s16
)
	`gë_£ed_¨gs
(x,
¨gc
,
¨gv
)

	)

61 
	#gë_£ed_32
(
x
Ë
	`gë_£ed_¨gs
(x,
¨gc
,
¨gv
)

	)

63 
ì_s32
 
gë_£ed_32
(
i
);

64 
	#gë_£ed
(
x
Ë(
ì_s16
)
	`gë_£ed_32
(x)

	)

67 #i‡(
MEM_METHOD
==
MEM_STATIC
)

68 
ì_u8
 
	g°©ic_memblk
[
TOTAL_DATA_SIZE
];

70 *
	gmem_«me
[3] = {"Static","Heap","Stack"};

88 #i‡
MAIN_HAS_NOARGC


89 
MAIN_RETURN_TYPE
 
	$maö
() {

90 
¨gc
=0;

91 *
¨gv
[1];

93 
MAIN_RETURN_TYPE
 
	$maö
(
¨gc
, *
¨gv
[]) {

95 
ì_u16
 
i
,
j
=0,
num_Æg‹ôhms
=0;

96 
ì_s16
 
known_id
=-1,
tŸÆ_îr‹s
=0;

97 
ì_u16
 
£ed¸c
=0;

98 
CORE_TICKS
 
tŸÆ_time
;

99 
c‹e_ªsu…s
 
ªsu…s
[
MULTITHREAD
];

100 #i‡(
MEM_METHOD
==
MEM_STACK
)

101 
ì_u8
 
°ack_memblock
[
TOTAL_DATA_SIZE
*
MULTITHREAD
];

104 
	`i€_öô
();

106 
	`ì_¥ötf
("Ru¬ög C‹eM¨k f‹ %d iãøti⁄s\n", 
ITERATIONS
);

109 
	`p‹èbÀ_öô
(&(
ªsu…s
[0].
p‹t
), &
¨gc
, 
¨gv
);

111 i‡((
li°_hód_s
)>128) {

112 
	`ì_¥ötf
("list_head structureÅoo big for comparable data!\n");

113  
MAIN_RETURN_VAL
;

115 
ªsu…s
[0].
£ed1
=
	`gë_£ed
(1);

116 
ªsu…s
[0].
£ed2
=
	`gë_£ed
(2);

117 
ªsu…s
[0].
£ed3
=
	`gë_£ed
(3);

118 
ªsu…s
[0].
ôî©i⁄s
=
	`gë_£ed_32
(4);

119 #i‡
CORE_DEBUG


120 
ªsu…s
[0].
ôî©i⁄s
=1;

122 
ªsu…s
[0].
execs
=
	`gë_£ed_32
(5);

123 i‡(
ªsu…s
[0].
execs
==0) {

124 
ªsu…s
[0].
execs
=
ALL_ALGORITHMS_MASK
;

127 i‡((
ªsu…s
[0].
£ed1
==0Ë&& (ªsu…s[0].
£ed2
==0Ë&& (ªsu…s[0].
£ed3
==0)) {

128 
ªsu…s
[0].
£ed1
=0;

129 
ªsu…s
[0].
£ed2
=0;

130 
ªsu…s
[0].
£ed3
=0x66;

132 i‡((
ªsu…s
[0].
£ed1
==1Ë&& (ªsu…s[0].
£ed2
==0Ë&& (ªsu…s[0].
£ed3
==0)) {

133 
ªsu…s
[0].
£ed1
=0x3415;

134 
ªsu…s
[0].
£ed2
=0x3415;

135 
ªsu…s
[0].
£ed3
=0x66;

137 #i‡(
MEM_METHOD
==
MEM_STATIC
)

138 
ªsu…s
[0].
memblock
[0]=(*)
°©ic_memblk
;

139 
ªsu…s
[0].
size
=
TOTAL_DATA_SIZE
;

140 
ªsu…s
[0].
îr
=0;

141 #i‡(
MULTITHREAD
>1)

144 #ñi‡(
MEM_METHOD
==
MEM_MALLOC
)

145 
i
=0 ; i<
MULTITHREAD
; i++) {

146 
ì_s32
 
mÆloc_ovîride
=
	`gë_£ed
(7);

147 i‡(
mÆloc_ovîride
 != 0)

148 
ªsu…s
[
i
].
size
=
mÆloc_ovîride
;

150 
ªsu…s
[
i
].
size
=
TOTAL_DATA_SIZE
;

151 
ªsu…s
[
i
].
memblock
[0]=
	`p‹èbÀ_mÆloc
‘esu…s[i].
size
);

152 
ªsu…s
[
i
].
£ed1
=results[0].seed1;

153 
ªsu…s
[
i
].
£ed2
=results[0].seed2;

154 
ªsu…s
[
i
].
£ed3
=results[0].seed3;

155 
ªsu…s
[
i
].
îr
=0;

156 
ªsu…s
[
i
].
execs
=results[0].execs;

158 #ñi‡(
MEM_METHOD
==
MEM_STACK
)

159 
i
=0 ; i<
MULTITHREAD
; i++) {

160 
ªsu…s
[
i
].
memblock
[0]=
°ack_memblock
+i*
TOTAL_DATA_SIZE
;

161 
ªsu…s
[
i
].
size
=
TOTAL_DATA_SIZE
;

162 
ªsu…s
[
i
].
£ed1
=results[0].seed1;

163 
ªsu…s
[
i
].
£ed2
=results[0].seed2;

164 
ªsu…s
[
i
].
£ed3
=results[0].seed3;

165 
ªsu…s
[
i
].
îr
=0;

166 
ªsu…s
[
i
].
execs
=results[0].execs;

173 
i
=0; i<
NUM_ALGORITHMS
; i++) {

174 i‡((1<<(
ì_u32
)
i
Ë& 
ªsu…s
[0].
execs
)

175 
num_Æg‹ôhms
++;

177 
i
=0 ; i<
MULTITHREAD
; i++)

178 
ªsu…s
[
i
].
size
Ùesu…s[i].size/
num_Æg‹ôhms
;

180 
i
=0; i<
NUM_ALGORITHMS
; i++) {

181 
ì_u32
 
˘x
;

182 i‡((1<<(
ì_u32
)
i
Ë& 
ªsu…s
[0].
execs
) {

183 
˘x
=0 ; ctx<
MULTITHREAD
; ctx++)

184 
ªsu…s
[
˘x
].
memblock
[
i
+1]=(*)‘esu…s[˘x].memblock[0])+ªsu…s[0].
size
*
j
;

185 
j
++;

189 
i
=0 ; i<
MULTITHREAD
; i++) {

190 i‡(
ªsu…s
[
i
].
execs
 & 
ID_LIST
) {

191 
ªsu…s
[
i
].
li°
=
	`c‹e_li°_öô
‘esu…s[0].
size
,ªsu…s[i].
memblock
[1],ªsu…s[i].
£ed1
);

193 i‡(
ªsu…s
[
i
].
execs
 & 
ID_MATRIX
) {

194 
	`c‹e_öô_m©rix
(
ªsu…s
[0].
size
,Ñesu…s[
i
].
memblock
[2], (
ì_s32
Ïesu…s[i].
£ed1
 | ((”e_s32Ïesu…s[i].
£ed2
Ë<< 16), &‘esu…s[i].
m©
) );

196 i‡(
ªsu…s
[
i
].
execs
 & 
ID_STATE
) {

197 
	`c‹e_öô_°©e
(
ªsu…s
[0].
size
,ªsu…s[
i
].
£ed1
,ªsu…s[i].
memblock
[3]);

202 i‡(
ªsu…s
[0].
ôî©i⁄s
==0) {

203 
£cs_ªt
 
£cs_∑s£d
=0;

204 
ì_u32
 
divis‹
;

205 
ªsu…s
[0].
ôî©i⁄s
=1;

206 
£cs_∑s£d
 < (
£cs_ªt
)1) {

207 
ªsu…s
[0].
ôî©i⁄s
*=10;

208 
	`°¨t_time
();

209 
	`ôî©e
(&
ªsu…s
[0]);

210 
	`°›_time
();

211 
£cs_∑s£d
=
	`time_ö_£cs
(
	`gë_time
());

214 
divis‹
=(
ì_u32
)
£cs_∑s£d
;

215 i‡(
divis‹
==0)

216 
divis‹
=1;

217 
ªsu…s
[0].
ôî©i⁄s
*=1+10/
divis‹
;

220 
	`°¨t_time
();

221 #i‡(
MULTITHREAD
>1)

222 i‡(
deÁu…_num_c⁄ãxts
>
MULTITHREAD
) {

223 
deÁu…_num_c⁄ãxts
=
MULTITHREAD
;

225 
i
=0 ; i<
deÁu…_num_c⁄ãxts
; i++) {

226 
ªsu…s
[
i
].
ôî©i⁄s
=results[0].iterations;

227 
ªsu…s
[
i
].
execs
=results[0].execs;

228 
	`c‹e_°¨t_∑øŒñ
(&
ªsu…s
[
i
]);

230 
i
=0 ; i<
deÁu…_num_c⁄ãxts
; i++) {

231 
	`c‹e_°›_∑øŒñ
(&
ªsu…s
[
i
]);

234 
	`ôî©e
(&
ªsu…s
[0]);

236 
	`°›_time
();

237 
tŸÆ_time
=
	`gë_time
();

239 
£ed¸c
=
	`¸c16
(
ªsu…s
[0].
£ed1
,seedcrc);

240 
£ed¸c
=
	`¸c16
(
ªsu…s
[0].
£ed2
,seedcrc);

241 
£ed¸c
=
	`¸c16
(
ªsu…s
[0].
£ed3
,seedcrc);

242 
£ed¸c
=
	`¸c16
(
ªsu…s
[0].
size
,seedcrc);

244 
£ed¸c
) {

246 
known_id
=0;

247 
	`ì_¥ötf
("6kÖerformanceÑunÖarameters for coremark.\n");

250 
known_id
=1;

251 
	`ì_¥ötf
("6k validationÑunÖarameters for coremark.\n");

254 
known_id
=2;

255 
	`ì_¥ötf
("Profile generationÑunÖarameters for coremark.\n");

258 
known_id
=3;

259 
	`ì_¥ötf
("2KÖerformanceÑunÖarameters for coremark.\n");

262 
known_id
=4;

263 
	`ì_¥ötf
("2K validationÑunÖarameters for coremark.\n");

266 
tŸÆ_îr‹s
=-1;

269 i‡(
known_id
>=0) {

270 
i
=0 ; i<
deÁu…_num_c⁄ãxts
; i++) {

271 
ªsu…s
[
i
].
îr
=0;

272 i‡((
ªsu…s
[
i
].
execs
 & 
ID_LIST
) &&

273 (
ªsu…s
[
i
].
¸˛i°
!=
li°_known_¸c
[
known_id
])) {

274 
	`ì_¥ötf
("[%u]ERROR!Üi° cr¯0x%04x - should bê0x%04x\n",
i
,
ªsu…s
[i].
¸˛i°
,
li°_known_¸c
[
known_id
]);

275 
ªsu…s
[
i
].
îr
++;

277 i‡((
ªsu…s
[
i
].
execs
 & 
ID_MATRIX
) &&

278 (
ªsu…s
[
i
].
¸cm©rix
!=
m©rix_known_¸c
[
known_id
])) {

279 
	`ì_¥ötf
("[%u]ERROR! m©rix cr¯0x%04x - should bê0x%04x\n",
i
,
ªsu…s
[i].
¸cm©rix
,
m©rix_known_¸c
[
known_id
]);

280 
ªsu…s
[
i
].
îr
++;

282 i‡((
ªsu…s
[
i
].
execs
 & 
ID_STATE
) &&

283 (
ªsu…s
[
i
].
¸c°©e
!=
°©e_known_¸c
[
known_id
])) {

284 
	`ì_¥ötf
("[%u]ERROR! sèã cr¯0x%04x - should bê0x%04x\n",
i
,
ªsu…s
[i].
¸c°©e
,
°©e_known_¸c
[
known_id
]);

285 
ªsu…s
[
i
].
îr
++;

287 
tŸÆ_îr‹s
+=
ªsu…s
[
i
].
îr
;

290 
tŸÆ_îr‹s
+=
	`check_d©a_ty≥s
();

292 
	`ì_¥ötf
("C‹eM¨k Sizê : %d\n",()
ªsu…s
[0].
size
);

293 #i‡
HAS_FLOAT


294 
	`ì_¥ötf
("TŸÆÅimê(msË : %f\n",
	`time_ö_£cs
(
tŸÆ_time
));

295 i‡(
	`time_ö_£cs
(
tŸÆ_time
) > 0)

296 
	`ì_¥ötf
("Iãøti⁄s/mSe¯ : %f\n",
deÁu…_num_c⁄ãxts
*
ªsu…s
[0].
ôî©i⁄s
/
	`time_ö_£cs
(
tŸÆ_time
));

298 
	`ì_¥ötf
("TŸÆÅimê(msË : %d\n",
	`time_ö_£cs
(
tŸÆ_time
));

300 
	`ì_¥ötf
("Iãøti⁄† : %d\n",()
deÁu…_num_c⁄ãxts
*
ªsu…s
[0].
ôî©i⁄s
);

301 
	`ì_¥ötf
("Compûî vîsi⁄ : %s\n",
COMPILER_VERSION
);

302 #i‡(
MULTITHREAD
>1)

303 
	`ì_¥ötf
("P¨ÆÀ»%†: %d\n",
PARALLEL_METHOD
,
deÁu…_num_c⁄ãxts
);

306 
	`ì_¥ötf
("£ed¸¯ : 0x%04x\n",
£ed¸c
);

307 i‡(
ªsu…s
[0].
execs
 & 
ID_LIST
)

308 
i
=0 ; i<
deÁu…_num_c⁄ãxts
; i++)

309 
	`ì_¥ötf
("[%d]¸˛i° : 0x%04x\n",
i
,
ªsu…s
[i].
¸˛i°
);

310 i‡(
ªsu…s
[0].
execs
 & 
ID_MATRIX
)

311 
i
=0 ; i<
deÁu…_num_c⁄ãxts
; i++)

312 
	`ì_¥ötf
("[%d]¸cm©rix : 0x%04x\n",
i
,
ªsu…s
[i].
¸cm©rix
);

313 i‡(
ªsu…s
[0].
execs
 & 
ID_STATE
)

314 
i
=0 ; i<
deÁu…_num_c⁄ãxts
; i++)

315 
	`ì_¥ötf
("[%d]¸c°©ê : 0x%04x\n",
i
,
ªsu…s
[i].
¸c°©e
);

316 
i
=0 ; i<
deÁu…_num_c⁄ãxts
; i++)

317 
	`ì_¥ötf
("[%d]¸cföÆ : 0x%04x\n",
i
,
ªsu…s
[i].
¸c
);

318 
	`ì_¥ötf
("Föi£d i¿%d ms.\n", ()
tŸÆ_time
);

319 i‡(
tŸÆ_îr‹s
==0) {

320 
	`ì_¥ötf
("==================================================\n");

321 
	`ì_¥ötf
("C‹eM¨k PASS %d M¨ks\n", 2921400 / 
	`time_ö_£cs
(
tŸÆ_time
Ë* 
ITERATIONS
 / 1000);

322 
	`ì_¥ötf
(" vs. 100000 Marks (i7-7700K @ 4.20GHz)\n");

324 i‡(
tŸÆ_îr‹s
>0)

325 
	`ì_¥ötf
("Errors detected\n");

326 i‡(
tŸÆ_îr‹s
<0)

327 
	`ì_¥ötf
("Cannot validate operation forÅhese seed values,Ölease compare withÑesults oná knownÖlatform.\n");

329 #i‡(
MEM_METHOD
==
MEM_MALLOC
)

330 
i
=0 ; i<
MULTITHREAD
; i++)

331 
	`p‹èbÀ_‰ì
(
ªsu…s
[
i
].
memblock
[0]);

334 
	`p‹èbÀ_föi
(&(
ªsu…s
[0].
p‹t
));

336  
MAIN_RETURN_VAL
;

337 
	}
}

	@am-kernels/benchmarks/coremark/src/core_matrix.c

19 
	~"c‹em¨k.h
"

36 
ì_s16
 
m©rix_ã°
(
ì_u32
 
N
, 
MATRES
 *
C
, 
MATDAT
 *
A
, MATDAT *
B
, MATDAT 
vÆ
);

37 
ì_s16
 
m©rix_sum
(
ì_u32
 
N
, 
MATRES
 *
C
, 
MATDAT
 
˛ùvÆ
);

38 
m©rix_mul_c⁄°
(
ì_u32
 
N
, 
MATRES
 *
C
, 
MATDAT
 *
A
, MATDAT 
vÆ
);

39 
m©rix_mul_ve˘
(
ì_u32
 
N
, 
MATRES
 *
C
, 
MATDAT
 *
A
, MATDAT *
B
);

40 
m©rix_mul_m©rix
(
ì_u32
 
N
, 
MATRES
 *
C
, 
MATDAT
 *
A
, MATDAT *
B
);

41 
m©rix_mul_m©rix_bôexåa˘
(
ì_u32
 
N
, 
MATRES
 *
C
, 
MATDAT
 *
A
, MATDAT *
B
);

42 
m©rix_add_c⁄°
(
ì_u32
 
N
, 
MATDAT
 *
A
, MATDAT 
vÆ
);

44 
	#m©rix_ã°_√xt
(
x
Ë(x+1)

	)

45 
	#m©rix_˛ù
(
x
,
y
Ë((yË? (xË& 0x0f‡: (xË& 0x0ffff)

	)

46 
	#m©rix_big
(
x
Ë(0xf000 | (x))

	)

47 
	#bô_exåa˘
(
x
,
‰om
,
to
Ë(((x)>>(‰om)Ë& (~(0xfffffff‡<< (to))))

	)

49 #i‡
CORE_DEBUG


50 
	$¥ötm©
(
MATDAT
 *
A
, 
ì_u32
 
N
, *
«me
) {

51 
ì_u32
 
i
,
j
;

52 
	`ì_¥ötf
("M©rix %†[%dx%d]:\n",
«me
,
N
,N);

53 
i
=0; i<
N
; i++) {

54 
j
=0; j<
N
; j++) {

55 i‡(
j
!=0)

56 
	`ì_¥ötf
(",");

57 
	`ì_¥ötf
("%d",
A
[
i
*
N
+
j
]);

59 
	`ì_¥ötf
("\n");

61 
	}
}

62 
	$¥ötm©C
(
MATRES
 *
C
, 
ì_u32
 
N
, *
«me
) {

63 
ì_u32
 
i
,
j
;

64 
	`ì_¥ötf
("M©rix %†[%dx%d]:\n",
«me
,
N
,N);

65 
i
=0; i<
N
; i++) {

66 
j
=0; j<
N
; j++) {

67 i‡(
j
!=0)

68 
	`ì_¥ötf
(",");

69 
	`ì_¥ötf
("%d",
C
[
i
*
N
+
j
]);

71 
	`ì_¥ötf
("\n");

73 
	}
}

81 
ì_u16
 
	$c‹e_bích_m©rix
(
m©_∑øms
 *
p
, 
ì_s16
 
£ed
, 
ì_u16
 
¸c
) {

82 
ì_u32
 
N
=
p
->N;

83 
MATRES
 *
C
=
p
->C;

84 
MATDAT
 *
A
=
p
->A;

85 
MATDAT
 *
B
=
p
->B;

86 
MATDAT
 
vÆ
=(MATDAT)
£ed
;

88 
¸c
=
	`¸c16
(
	`m©rix_ã°
(
N
,
C
,
A
,
B
,
vÆ
),crc);

90  
¸c
;

91 
	}
}

117 
ì_s16
 
	$m©rix_ã°
(
ì_u32
 
N
, 
MATRES
 *
C
, 
MATDAT
 *
A
, MATDAT *
B
, MATDAT 
vÆ
) {

118 
ì_u16
 
¸c
=0;

119 
MATDAT
 
˛ùvÆ
=
	`m©rix_big
(
vÆ
);

121 
	`m©rix_add_c⁄°
(
N
,
A
,
vÆ
);

122 #i‡
CORE_DEBUG


123 
	`¥ötm©
(
A
,
N
,"matrix_add_const");

125 
	`m©rix_mul_c⁄°
(
N
,
C
,
A
,
vÆ
);

126 
¸c
=
	`¸c16
(
	`m©rix_sum
(
N
,
C
,
˛ùvÆ
),crc);

127 #i‡
CORE_DEBUG


128 
	`¥ötm©C
(
C
,
N
,"matrix_mul_const");

130 
	`m©rix_mul_ve˘
(
N
,
C
,
A
,
B
);

131 
¸c
=
	`¸c16
(
	`m©rix_sum
(
N
,
C
,
˛ùvÆ
),crc);

132 #i‡
CORE_DEBUG


133 
	`¥ötm©C
(
C
,
N
,"matrix_mul_vect");

135 
	`m©rix_mul_m©rix
(
N
,
C
,
A
,
B
);

136 
¸c
=
	`¸c16
(
	`m©rix_sum
(
N
,
C
,
˛ùvÆ
),crc);

137 #i‡
CORE_DEBUG


138 
	`¥ötm©C
(
C
,
N
,"matrix_mul_matrix");

140 
	`m©rix_mul_m©rix_bôexåa˘
(
N
,
C
,
A
,
B
);

141 
¸c
=
	`¸c16
(
	`m©rix_sum
(
N
,
C
,
˛ùvÆ
),crc);

142 #i‡
CORE_DEBUG


143 
	`¥ötm©C
(
C
,
N
,"matrix_mul_matrix_bitextract");

146 
	`m©rix_add_c⁄°
(
N
,
A
,-
vÆ
);

147  
¸c
;

148 
	}
}

165 
ì_u32
 
	$c‹e_öô_m©rix
(
ì_u32
 
blksize
, *
memblk
, 
ì_s32
 
£ed
, 
m©_∑øms
 *
p
) {

166 
ì_u32
 
N
=0;

167 
MATDAT
 *
A
;

168 
MATDAT
 *
B
;

169 
ì_s32
 
‹dî
=1;

170 
MATDAT
 
vÆ
;

171 
ì_u32
 
i
=0,
j
=0;

172 i‡(
£ed
==0)

173 
£ed
=1;

174 
j
<
blksize
) {

175 
i
++;

176 
j
=
i
*i*2*4;

178 
N
=
i
-1;

179 
A
=(
MATDAT
 *)
	`Æign_mem
(
memblk
);

180 
B
=
A
+
N
*N;

182 
i
=0; i<
N
; i++) {

183 
j
=0; j<
N
; j++) {

184 
£ed
 = ( ( 
‹dî
 * seed ) % 65536 );

185 
vÆ
 = (
£ed
 + 
‹dî
);

186 
vÆ
=
	`m©rix_˛ù
(val,0);

187 
B
[
i
*
N
+
j
] = 
vÆ
;

188 
vÆ
 = (vÆ + 
‹dî
);

189 
vÆ
=
	`m©rix_˛ù
(val,1);

190 
A
[
i
*
N
+
j
] = 
vÆ
;

191 
‹dî
++;

195 
p
->
A
=A;

196 
p
->
B
=B;

197 
p
->
C
=(
MATRES
 *)
	`Æign_mem
(
B
+
N
*N);

198 
p
->
N
=N;

199 #i‡
CORE_DEBUG


200 
	`¥ötm©
(
A
,
N
,"A");

201 
	`¥ötm©
(
B
,
N
,"B");

203  
N
;

204 
	}
}

216 
ì_s16
 
	$m©rix_sum
(
ì_u32
 
N
, 
MATRES
 *
C
, 
MATDAT
 
˛ùvÆ
) {

217 
MATRES
 
tmp
=0,
¥ev
=0,
cur
=0;

218 
ì_s16
 
ªt
=0;

219 
ì_u32
 
i
,
j
;

220 
i
=0; i<
N
; i++) {

221 
j
=0; j<
N
; j++) {

222 
cur
=
C
[
i
*
N
+
j
];

223 
tmp
+=
cur
;

224 i‡(
tmp
>
˛ùvÆ
) {

225 
ªt
+=10;

226 
tmp
=0;

228 
ªt
 +(
cur
>
¥ev
) ? 1 : 0;

230 
¥ev
=
cur
;

233  
ªt
;

234 
	}
}

240 
	$m©rix_mul_c⁄°
(
ì_u32
 
N
, 
MATRES
 *
C
, 
MATDAT
 *
A
, MATDAT 
vÆ
) {

241 
ì_u32
 
i
,
j
;

242 
i
=0; i<
N
; i++) {

243 
j
=0; j<
N
; j++) {

244 
C
[
i
*
N
+
j
]=(
MATRES
)
A
[i*N+j] * (MATRES)
vÆ
;

247 
	}
}

252 
	$m©rix_add_c⁄°
(
ì_u32
 
N
, 
MATDAT
 *
A
, MATDAT 
vÆ
) {

253 
ì_u32
 
i
,
j
;

254 
i
=0; i<
N
; i++) {

255 
j
=0; j<
N
; j++) {

256 
A
[
i
*
N
+
j
] +
vÆ
;

259 
	}
}

265 
	$m©rix_mul_ve˘
(
ì_u32
 
N
, 
MATRES
 *
C
, 
MATDAT
 *
A
, MATDAT *
B
) {

266 
ì_u32
 
i
,
j
;

267 
i
=0; i<
N
; i++) {

268 
C
[
i
]=0;

269 
j
=0; j<
N
; j++) {

270 
C
[
i
]+=(
MATRES
)
A
[i*
N
+
j
] * (MATRES)
B
[j];

273 
	}
}

279 
	$m©rix_mul_m©rix
(
ì_u32
 
N
, 
MATRES
 *
C
, 
MATDAT
 *
A
, MATDAT *
B
) {

280 
ì_u32
 
i
,
j
,
k
;

281 
i
=0; i<
N
; i++) {

282 
j
=0; j<
N
; j++) {

283 
C
[
i
*
N
+
j
]=0;

284 
k
=0;k<
N
;k++)

286 
C
[
i
*
N
+
j
]+=(
MATRES
)
A
[i*N+
k
] * (MATRES)
B
[k*N+j];

290 
	}
}

296 
	$m©rix_mul_m©rix_bôexåa˘
(
ì_u32
 
N
, 
MATRES
 *
C
, 
MATDAT
 *
A
, MATDAT *
B
) {

297 
ì_u32
 
i
,
j
,
k
;

298 
i
=0; i<
N
; i++) {

299 
j
=0; j<
N
; j++) {

300 
C
[
i
*
N
+
j
]=0;

301 
k
=0;k<
N
;k++)

303 
MATRES
 
tmp
=(MATRES)
A
[
i
*
N
+
k
] * (MATRES)
B
[k*N+
j
];

304 
C
[
i
*
N
+
j
]+=
	`bô_exåa˘
(
tmp
,2,4)*bit_extract(tmp,5,7);

308 
	}
}

	@am-kernels/benchmarks/coremark/src/core_portme.c

1 
	~"c‹em¨k.h
"

3 #i‡
VALIDATION_RUN


4 vﬁ©ûê
ì_s32
 
	g£ed1_vﬁ©ûe
=0x3415;

5 vﬁ©ûê
ì_s32
 
	g£ed2_vﬁ©ûe
=0x3415;

6 vﬁ©ûê
ì_s32
 
	g£ed3_vﬁ©ûe
=0x66;

8 #i‡
PERFORMANCE_RUN


9 vﬁ©ûê
ì_s32
 
	g£ed1_vﬁ©ûe
=0x0;

10 vﬁ©ûê
ì_s32
 
	g£ed2_vﬁ©ûe
=0x0;

11 vﬁ©ûê
ì_s32
 
	g£ed3_vﬁ©ûe
=0x66;

13 #i‡
PROFILE_RUN


14 vﬁ©ûê
ì_s32
 
	g£ed1_vﬁ©ûe
=0x8;

15 vﬁ©ûê
ì_s32
 
	g£ed2_vﬁ©ûe
=0x8;

16 vﬁ©ûê
ì_s32
 
	g£ed3_vﬁ©ûe
=0x8;

18 vﬁ©ûê
ì_s32
 
	g£ed4_vﬁ©ûe
=
ITERATIONS
;

19 vﬁ©ûê
ì_s32
 
	g£ed5_vﬁ©ûe
=0;

31 
	#NSECS_PER_SEC
 
CLOCKS_PER_SEC


	)

32 
	#CORETIMETYPE
 
˛ock_t


	)

33 
	#GETMYTIME
(
_t
Ë(*_t=
	`˛ock
())

	)

34 
	#MYTIMEDIFF
(
fö
,
öi
Ë((fö)-(öi))

	)

35 
	#TIMER_RES_DIVIDER
 1

	)

36 
	#SAMPLE_TIME_IMPLEMENTATION
 1

	)

37 
	#EE_TICKS_PER_SEC
 (
NSECS_PER_SEC
 / 
TIMER_RES_DIVIDER
)

	)

39 
uöt32_t
 
	$u±ime_ms
(Ë{  
	`io_ªad
(
AM_TIMER_UPTIME
).
us
 / 1000; 
	}
}

42 
	g°¨t_time_vÆ
, 
	g°›_time_vÆ
;

50 
	$°¨t_time
() {

51 
°¨t_time_vÆ
 = 
	`u±ime_ms
();

52 
	}
}

59 
	$°›_time
() {

60 
°›_time_vÆ
 = 
	`u±ime_ms
();

61 
	}
}

71 
CORE_TICKS
 
	$gë_time
() {

72  
°›_time_vÆ
 - 
°¨t_time_vÆ
;

73 
	}
}

81 
£cs_ªt
 
	$time_ö_£cs
(
CORE_TICKS
 
ticks
) {

82  
ticks
;

83 
	}
}

85 
ì_u32
 
	gdeÁu…_num_c⁄ãxts
=1;

91 
	$p‹èbÀ_öô
(
c‹e_p‹èbÀ
 *
p
, *
¨gc
, *
¨gv
[])

93 i‡((
ì_±r_öt
Ë!(
ì_u8
 *)) {

94 
	`ì_¥ötf
("ERROR! Please defineÉe_ptr_intÅoáÅypeÅhat holdsáÖointer!\n");

96 i‡((
ì_u32
) != 4) {

97 
	`ì_¥ötf
("ERROR! Please defineÉe_u32Åoá 32b unsignedÅype!\n");

99 
p
->
p‹èbÀ_id
=1;

100 
	}
}

104 
	$p‹èbÀ_föi
(
c‹e_p‹èbÀ
 *
p
)

106 
p
->
p‹èbÀ_id
=0;

107 
	}
}

	@am-kernels/benchmarks/coremark/src/core_state.c

19 
	~"c‹em¨k.h
"

21 
CORE_STATE
 
c‹e_°©e_å™sôi⁄
–
ì_u8
 **
ö°r
 , 
ì_u32
 *
å™sôi⁄_cou¡
);

43 
ì_u16
 
	$c‹e_bích_°©e
(
ì_u32
 
blksize
, 
ì_u8
 *
memblock
,

44 
ì_s16
 
£ed1
,Ée_s16 
£ed2
,Ée_s16 
°ï
, 
ì_u16
 
¸c
)

46 
ì_u32
 
föÆ_cou¡s
[
NUM_CORE_STATES
];

47 
ì_u32
 
åack_cou¡s
[
NUM_CORE_STATES
];

48 
ì_u8
 *
p
=
memblock
;

49 
ì_u32
 
i
;

52 #i‡
CORE_DEBUG


53 
	`ì_¥ötf
("Sèã Bích: %d,%d,%d,%04x\n",
£ed1
,
£ed2
,
°ï
,
¸c
);

55 
i
=0; i<
NUM_CORE_STATES
; i++) {

56 
föÆ_cou¡s
[
i
]=
åack_cou¡s
[i]=0;

59 *
p
!=0) {

60 
CORE_STATE
 
f°©e
=
	`c‹e_°©e_å™sôi⁄
(&
p
,
åack_cou¡s
);

61 
föÆ_cou¡s
[
f°©e
]++;

62 #i‡
CORE_DEBUG


63 
	`ì_¥ötf
("%d,",
f°©e
);

65 
	`ì_¥ötf
("\n");

69 
p
=
memblock
;

70 
p
 < (
memblock
+
blksize
)) {

71 i‡(*
p
!=',')

72 *
p
^=(
ì_u8
)
£ed1
;

73 
p
+=
°ï
;

75 
p
=
memblock
;

77 *
p
!=0) {

78 
CORE_STATE
 
f°©e
=
	`c‹e_°©e_å™sôi⁄
(&
p
,
åack_cou¡s
);

79 
föÆ_cou¡s
[
f°©e
]++;

80 #i‡
CORE_DEBUG


81 
	`ì_¥ötf
("%d,",
f°©e
);

83 
	`ì_¥ötf
("\n");

87 
p
=
memblock
;

88 
p
 < (
memblock
+
blksize
)) {

89 i‡(*
p
!=',')

90 *
p
^=(
ì_u8
)
£ed2
;

91 
p
+=
°ï
;

94 
i
=0; i<
NUM_CORE_STATES
; i++) {

95 
¸c
=
	`¸cu32
(
föÆ_cou¡s
[
i
],crc);

96 
¸c
=
	`¸cu32
(
åack_cou¡s
[
i
],crc);

98  
¸c
;

99 
	}
}

102 
ì_u8
 *
	göç©
[4] ={(ee_u8 *)"5012",(ee_u8 *)"1234",(ee_u8 *)"-874",(ee_u8 *)"+122"};

103 
ì_u8
 *
	gÊﬂç©
[4]={(ee_u8 *)"35.54400",(ee_u8 *)".1234500",(ee_u8 *)"-110.700",(ee_u8 *)"+0.64400"};

104 
ì_u8
 *
	gscù©
[4] ={(ee_u8 *)"5.500e+3",(ee_u8 *)"-.123e-2",(ee_u8 *)"-87e+832",(ee_u8 *)"+0.6e-12"};

105 
ì_u8
 *
	gîΩ©
[4] ={(ee_u8 *)"T0.3e-1F",(ee_u8 *)"-T.T++Tq",(ee_u8 *)"1T3.4e4z",(ee_u8 *)"34.0e-T^"};

116 
	$c‹e_öô_°©e
(
ì_u32
 
size
, 
ì_s16
 
£ed
, 
ì_u8
 *
p
) {

117 
ì_u32
 
tŸÆ
=0,
√xt
=0,
i
;

118 
ì_u8
 *
buf
=0;

119 #i‡
CORE_DEBUG


120 
ì_u8
 *
°¨t
=
p
;

121 
	`ì_¥ötf
("Sèã: %d,%d\n",
size
,
£ed
);

123 
size
--;

124 
√xt
=0;

125 (
tŸÆ
+
√xt
+1)<
size
) {

126 i‡(
√xt
>0) {

127 
i
=0;i<
√xt
;i++)

128 *(
p
+
tŸÆ
+
i
)=
buf
[i];

129 *(
p
+
tŸÆ
+
i
)=',';

130 
tŸÆ
+=
√xt
+1;

132 
£ed
++;

133 
£ed
 & 0x7) {

137 
buf
=
öç©
[(
£ed
>>3) & 0x3];

138 
√xt
=4;

142 
buf
=
Êﬂç©
[(
£ed
>>3) & 0x3];

143 
√xt
=8;

147 
buf
=
scù©
[(
£ed
>>3) & 0x3];

148 
√xt
=8;

151 
buf
=
îΩ©
[(
£ed
>>3) & 0x3];

152 
√xt
=8;

158 
size
++;

159 
tŸÆ
<
size
) {

160 *(
p
+
tŸÆ
)=0;

161 
tŸÆ
++;

163 #i‡
CORE_DEBUG


164 
	`ì_¥ötf
("Sèã I≈ut: %s\n",
°¨t
);

166 
	}
}

168 
ì_u8
 
	$ì_isdigô
(
ì_u8
 
c
) {

169 
ì_u8
 
ªtvÆ
;

170 
ªtvÆ
 = ((
c
>='0') & (c<='9')) ? 1 : 0;

171  
ªtvÆ
;

172 
	}
}

184 
CORE_STATE
 
	$c‹e_°©e_å™sôi⁄
–
ì_u8
 **
ö°r
 , 
ì_u32
 *
å™sôi⁄_cou¡
) {

185 
ì_u8
 *
°r
=*
ö°r
;

186 
ì_u8
 
NEXT_SYMBOL
;

187 
CORE_STATE
 
°©e
=
CORE_START
;

188  ; *
°r
 && 
°©e
 !
CORE_INVALID
; str++ ) {

189 
NEXT_SYMBOL
 = *
°r
;

190 i‡(
NEXT_SYMBOL
==',') {

191 
°r
++;

194 
°©e
) {

195 
CORE_START
:

196 if(
	`ì_isdigô
(
NEXT_SYMBOL
)) {

197 
°©e
 = 
CORE_INT
;

199 if–
NEXT_SYMBOL
 == '+' || NEXT_SYMBOL == '-' ) {

200 
°©e
 = 
CORE_S1
;

202 if–
NEXT_SYMBOL
 == '.' ) {

203 
°©e
 = 
CORE_FLOAT
;

206 
°©e
 = 
CORE_INVALID
;

207 
å™sôi⁄_cou¡
[
CORE_INVALID
]++;

209 
å™sôi⁄_cou¡
[
CORE_START
]++;

211 
CORE_S1
:

212 if(
	`ì_isdigô
(
NEXT_SYMBOL
)) {

213 
°©e
 = 
CORE_INT
;

214 
å™sôi⁄_cou¡
[
CORE_S1
]++;

216 if–
NEXT_SYMBOL
 == '.' ) {

217 
°©e
 = 
CORE_FLOAT
;

218 
å™sôi⁄_cou¡
[
CORE_S1
]++;

221 
°©e
 = 
CORE_INVALID
;

222 
å™sôi⁄_cou¡
[
CORE_S1
]++;

225 
CORE_INT
:

226 if–
NEXT_SYMBOL
 == '.' ) {

227 
°©e
 = 
CORE_FLOAT
;

228 
å™sôi⁄_cou¡
[
CORE_INT
]++;

230 if(!
	`ì_isdigô
(
NEXT_SYMBOL
)) {

231 
°©e
 = 
CORE_INVALID
;

232 
å™sôi⁄_cou¡
[
CORE_INT
]++;

235 
CORE_FLOAT
:

236 if–
NEXT_SYMBOL
 == 'E' || NEXT_SYMBOL == 'e' ) {

237 
°©e
 = 
CORE_S2
;

238 
å™sôi⁄_cou¡
[
CORE_FLOAT
]++;

240 if(!
	`ì_isdigô
(
NEXT_SYMBOL
)) {

241 
°©e
 = 
CORE_INVALID
;

242 
å™sôi⁄_cou¡
[
CORE_FLOAT
]++;

245 
CORE_S2
:

246 if–
NEXT_SYMBOL
 == '+' || NEXT_SYMBOL == '-' ) {

247 
°©e
 = 
CORE_EXPONENT
;

248 
å™sôi⁄_cou¡
[
CORE_S2
]++;

251 
°©e
 = 
CORE_INVALID
;

252 
å™sôi⁄_cou¡
[
CORE_S2
]++;

255 
CORE_EXPONENT
:

256 if(
	`ì_isdigô
(
NEXT_SYMBOL
)) {

257 
°©e
 = 
CORE_SCIENTIFIC
;

258 
å™sôi⁄_cou¡
[
CORE_EXPONENT
]++;

261 
°©e
 = 
CORE_INVALID
;

262 
å™sôi⁄_cou¡
[
CORE_EXPONENT
]++;

265 
CORE_SCIENTIFIC
:

266 if(!
	`ì_isdigô
(
NEXT_SYMBOL
)) {

267 
°©e
 = 
CORE_INVALID
;

268 
å™sôi⁄_cou¡
[
CORE_INVALID
]++;

275 *
ö°r
=
°r
;

276  
°©e
;

277 
	}
}

	@am-kernels/benchmarks/coremark/src/core_util.c

19 
	~"c‹em¨k.h
"

33 #i‡(
SEED_METHOD
==
SEED_VOLATILE
)

34 vﬁ©ûê
ì_s32
 
£ed1_vﬁ©ûe
;

35 vﬁ©ûê
ì_s32
 
£ed2_vﬁ©ûe
;

36 vﬁ©ûê
ì_s32
 
£ed3_vﬁ©ûe
;

37 vﬁ©ûê
ì_s32
 
£ed4_vﬁ©ûe
;

38 vﬁ©ûê
ì_s32
 
£ed5_vﬁ©ûe
;

39 
ì_s32
 
	$gë_£ed_32
(
i
) {

40 
ì_s32
 
ªtvÆ
;

41 
i
) {

43 
ªtvÆ
=
£ed1_vﬁ©ûe
;

46 
ªtvÆ
=
£ed2_vﬁ©ûe
;

49 
ªtvÆ
=
£ed3_vﬁ©ûe
;

52 
ªtvÆ
=
£ed4_vﬁ©ûe
;

55 
ªtvÆ
=
£ed5_vﬁ©ûe
;

58 
ªtvÆ
=0;

61  
ªtvÆ
;

62 
	}
}

63 #ñi‡(
SEED_METHOD
==
SEED_ARG
)

64 
ì_s32
 
	$∑r£vÆ
(*
vÆ°rög
) {

65 
ì_s32
 
ªtvÆ
=0;

66 
ì_s32
 
√g
=1;

67 
hexmode
=0;

68 i‡(*
vÆ°rög
 == '-') {

69 
√g
=-1;

70 
vÆ°rög
++;

72 i‡((
vÆ°rög
[0] == '0') && (valstring[1] == 'x')) {

73 
hexmode
=1;

74 
vÆ°rög
+=2;

77 i‡(
hexmode
) {

78 ((*
vÆ°rög
 >= '0') && (*valstring <= '9')) || ((*valstring >= 'a') && (*valstring <= 'f'))) {

79 
ì_s32
 
digô
=*
vÆ°rög
-'0';

80 i‡(
digô
>9)

81 
digô
=10+*
vÆ°rög
-'a';

82 
ªtvÆ
*=16;

83 
ªtvÆ
+=
digô
;

84 
vÆ°rög
++;

87 (*
vÆ°rög
 >= '0') && (*valstring <= '9')) {

88 
ì_s32
 
digô
=*
vÆ°rög
-'0';

89 
ªtvÆ
*=10;

90 
ªtvÆ
+=
digô
;

91 
vÆ°rög
++;

95 i‡(*
vÆ°rög
=='K')

96 
ªtvÆ
*=1024;

97 i‡(*
vÆ°rög
=='M')

98 
ªtvÆ
*=1024*1024;

100 
ªtvÆ
*=
√g
;

101  
ªtvÆ
;

102 
	}
}

104 
ì_s32
 
	$gë_£ed_¨gs
(
i
, 
¨gc
, *
¨gv
[]) {

105 i‡(
¨gc
>
i
)

106  
	`∑r£vÆ
(
¨gv
[
i
]);

108 
	}
}

110 #ñi‡(
SEED_METHOD
==
SEED_FUNC
)

112 
ì_s32
 
	$gë_£ed_32
(
i
) {

113 
ì_s32
 
ªtvÆ
;

114 
i
) {

116 
ªtvÆ
=
	`p‹tme_sys1
();

119 
ªtvÆ
=
	`p‹tme_sys2
();

122 
ªtvÆ
=
	`p‹tme_sys3
();

125 
ªtvÆ
=
	`p‹tme_sys4
();

128 
ªtvÆ
=
	`p‹tme_sys5
();

131 
ªtvÆ
=0;

134  
ªtvÆ
;

135 
	}
}

142 
ì_u16
 
	$¸cu8
(
ì_u8
 
d©a
, 
ì_u16
 
¸c
 )

144 
ì_u8
 
i
=0,
x16
=0,
ˇºy
=0;

146 
i
 = 0; i < 8; i++)

148 
x16
 = (
ì_u8
)((
d©a
 & 1Ë^ (”e_u8)
¸c
 & 1));

149 
d©a
 >>= 1;

151 i‡(
x16
 == 1)

153 
¸c
 ^= 0x4002;

154 
ˇºy
 = 1;

157 
ˇºy
 = 0;

158 
¸c
 >>= 1;

159 i‡(
ˇºy
)

160 
¸c
 |= 0x8000;

162 
¸c
 &= 0x7fff;

164  
¸c
;

165 
	}
}

166 
ì_u16
 
	$¸cu16
(
ì_u16
 
√wvÆ
,Ée_u16 
¸c
) {

167 
¸c
=
	`¸cu8
–(
ì_u8
Ë(
√wvÆ
) ,crc);

168 
¸c
=
	`¸cu8
–(
ì_u8
Ë((
√wvÆ
)>>8) ,crc);

169  
¸c
;

170 
	}
}

171 
ì_u16
 
	$¸cu32
(
ì_u32
 
√wvÆ
, 
ì_u16
 
¸c
) {

172 
¸c
=
	`¸c16
((
ì_s16
Ë
√wvÆ
 ,crc);

173 
¸c
=
	`¸c16
((
ì_s16
Ë(
√wvÆ
>>16) ,crc);

174  
¸c
;

175 
	}
}

176 
ì_u16
 
	$¸c16
(
ì_s16
 
√wvÆ
, 
ì_u16
 
¸c
) {

177  
	`¸cu16
((
ì_u16
)
√wvÆ
, 
¸c
);

178 
	}
}

180 
ì_u8
 
	$check_d©a_ty≥s
() {

181 
ì_u8
 
ªtvÆ
=0;

182 i‡((
ì_u8
) != 1) {

183 
	`ì_¥ötf
("ERROR:Ée_u8 isÇotán 8b datatype!\n");

184 
ªtvÆ
++;

186 i‡((
ì_u16
) != 2) {

187 
	`ì_¥ötf
("ERROR:Ée_u16 isÇotá 16b datatype!\n");

188 
ªtvÆ
++;

190 i‡((
ì_s16
) != 2) {

191 
	`ì_¥ötf
("ERROR:Ée_s16 isÇotá 16b datatype!\n");

192 
ªtvÆ
++;

194 i‡((
ì_s32
) != 4) {

195 
	`ì_¥ötf
("ERROR:Ée_s32 isÇotá 32b datatype!\n");

196 
ªtvÆ
++;

198 i‡((
ì_u32
) != 4) {

199 
	`ì_¥ötf
("ERROR:Ée_u32 isÇotá 32b datatype!\n");

200 
ªtvÆ
++;

202 i‡((
ì_±r_öt
) != (*)) {

203 
	`ì_¥ötf
("ERROR:Ée_ptr_int isÇotá datatypeÅhat holdsán intÖointer!\n");

204 
ªtvÆ
++;

206 i‡(
ªtvÆ
>0) {

207 
	`ì_¥ötf
("ERROR: Please modifyÅhe datatypes in core_portme.h!\n");

209  
ªtvÆ
;

210 
	}
}

	@am-kernels/benchmarks/dhrystone/dry.c

2 
	#Vîsi⁄
 "C, Vîsi⁄ 2.2"

	)

353 
	~<am.h
>

354 
	~<klib.h
>

355 
	~<klib-ma¸os.h
>

357 
uöt32_t
 
	$u±ime_ms
(Ë{  
	`io_ªad
(
AM_TIMER_UPTIME
).
us
 / 1000; 
	}
}

358 
	#Sèπ_Timî
(Ë
Begö_Time
 = 
	`u±ime_ms
()

	)

359 
	#St›_Timî
(Ë
End_Time
 = 
	`u±ime_ms
()

	)

361 
	#NUMBER_OF_RUNS
 500000

	)

362 
	#PASS2


	)

364 #ifde‡ 
NOSTRUCTASSIGN


365 
	#°ru˘assign
(
d
, 
s
Ë
	`mem˝y
(&(d), &(s), (d))

	)

367 
	#°ru˘assign
(
d
, 
s
Ëd = 
	)
s

370 #ifde‡ 
NOENUM


371 
	#Idít_1
 0

	)

372 
	#Idít_2
 1

	)

373 
	#Idít_3
 2

	)

374 
	#Idít_4
 3

	)

375 
	#Idít_5
 4

	)

376 
	tEnumî©i⁄
;

378 íum {
	mIdít_1
, 
	mIdít_2
, 
	mIdít_3
, 
	mIdít_4
, 
	mIdít_5
}

379 
	tEnumî©i⁄
;

386 
	#NuŒ
 0

	)

389 
	tO√_Thúty
;

390 
	tO√_Fi·y
;

391 
	tC≠ôÆ_Lëãr
;

392 
	tBoﬁón
;

393 
	tSå_30
 [31];

394 
	tAº_1_Dim
 [50];

395 
	tAº_2_Dim
 [50] [50];

397 
	sªc‹d


399 
ªc‹d
 *
	mPå_Comp
;

400 
Enumî©i⁄
 
	mDis¸
;

403 
Enumî©i⁄
 
	mEnum_Comp
;

404 
	mI¡_Comp
;

405 
	mSå_Comp
 [31];

406 } 
	mv¨_1
;

408 
Enumî©i⁄
 
	mE_Comp_2
;

409 
	mSå_2_Comp
 [31];

410 } 
	mv¨_2
;

412 
	mCh_1_Comp
;

413 
	mCh_2_Comp
;

414 } 
	mv¨_3
;

415 } 
	mv¨ü¡
;

416 } 
	tRec_Ty≥
, *
	tRec_Poöãr
;

420 
Rec_Poöãr
 
	gPå_Glob
,

421 
	gNext_På_Glob
;

422 
	gI¡_Glob
;

423 
Boﬁón
 
	gBoﬁ_Glob
;

424 
	gCh_1_Glob
,

425 
	gCh_2_Glob
;

426 
	gAº_1_Glob
 [50];

427 
	gAº_2_Glob
 [50] [50];

429 
Enumî©i⁄
 
Func_1
 ();

432 #i‚de‡
REG


433 
Boﬁón
 
	gReg
 = 
Ál£
;

434 
	#REG


	)

438 
Boﬁón
 
	gReg
 = 
åue
;

439 #unde‡
REG


440 
	#REG
 

	)

443 
Boﬁón
 
	gD⁄e
;

445 
	gBegö_Time
,

446 
	gEnd_Time
,

447 
	gU£r_Time
;

448 
	gMi¸o£c⁄ds
,

449 
	gDhry°⁄es_Pî_Sec⁄d
;

453 
	gmem‹y
[1024];

454 *
	g‰ì_mem
 = &
mem‹y
[0];

456 * 
	$myÆloc
(
size_t
 
size
) {

457 ()
‰ì_mem
 % 4 != 0) free_mem ++;

458 *
ªt
 = 
‰ì_mem
;

459 
‰ì_mem
 +
size
;

460  
ªt
;

461 
	}
}

463 
Proc_6
 (
Enumî©i⁄
, Enumeration*);

464 
Proc_3
 (
Rec_Poöãr
*);

465 
Proc_7
 (
O√_Fi·y
 
a
, O√_Fi·y 
b
, O√_Fi·y* 
c
);

466 
Boﬁón
 
Func_2
 (
Så_30
, Str_30);

467 
Proc_8
(
Aº_1_Dim
, 
Aº_2_Dim
, , );

468 
Boﬁón
 
Func_3
 (
Enumî©i⁄
);

470 
	$Proc_1
 (
På_VÆ_P¨
)

473 
REG
 
Rec_Poöãr
 
På_VÆ_P¨
;

476 
REG
 
Rec_Poöãr
 
Next_Rec‹d
 = 
På_VÆ_P¨
->
På_Comp
;

481 
	`°ru˘assign
 (*
På_VÆ_P¨
->
På_Comp
, *
På_Glob
);

482 
På_VÆ_P¨
->
v¨ü¡
.
v¨_1
.
I¡_Comp
 = 5;

483 
Next_Rec‹d
->
v¨ü¡
.
v¨_1
.
I¡_Comp


484 
På_VÆ_P¨
->
v¨ü¡
.
v¨_1
.
I¡_Comp
;

485 
Next_Rec‹d
->
På_Comp
 = 
På_VÆ_P¨
->Ptr_Comp;

486 
	`Proc_3
 (&
Next_Rec‹d
->
På_Comp
);

489 i‡(
Next_Rec‹d
->
Dis¸
 =
Idít_1
)

492 
Next_Rec‹d
->
v¨ü¡
.
v¨_1
.
I¡_Comp
 = 6;

493 
	`Proc_6
 (
På_VÆ_P¨
->
v¨ü¡
.
v¨_1
.
Enum_Comp
,

494 &
Next_Rec‹d
->
v¨ü¡
.
v¨_1
.
Enum_Comp
);

495 
Next_Rec‹d
->
På_Comp
 = 
På_Glob
->Ptr_Comp;

496 
	`Proc_7
 (
Next_Rec‹d
->
v¨ü¡
.
v¨_1
.
I¡_Comp
, 10,

497 &
Next_Rec‹d
->
v¨ü¡
.
v¨_1
.
I¡_Comp
);

500 
	`°ru˘assign
 (*
På_VÆ_P¨
, *På_VÆ_P¨->
På_Comp
);

501 
	}
}

504 
	$Proc_2
 (
I¡_P¨_Ref
)

509 
O√_Fi·y
 *
I¡_P¨_Ref
;

511 
O√_Fi·y
 
I¡_Loc
;

512 
Enumî©i⁄
 
Enum_Loc
;

514 
I¡_Loc
 = *
I¡_P¨_Ref
 + 10;

516 i‡(
Ch_1_Glob
 == 'A')

519 
I¡_Loc
 -= 1;

520 *
I¡_P¨_Ref
 = 
I¡_Loc
 - 
I¡_Glob
;

521 
Enum_Loc
 = 
Idít_1
;

523 
Enum_Loc
 !
Idít_1
);

524 
	}
}

527 
	$Proc_3
 (
På_Ref_P¨
)

532 
Rec_Poöãr
 *
På_Ref_P¨
;

535 i‡(
På_Glob
 !
NuŒ
)

537 *
På_Ref_P¨
 = 
På_Glob
->
På_Comp
;

538 
	`Proc_7
 (10, 
I¡_Glob
, &
På_Glob
->
v¨ü¡
.
v¨_1
.
I¡_Comp
);

539 
	}
}

542 
	$Proc_4
 ()

546 
Boﬁón
 
Boﬁ_Loc
;

548 
Boﬁ_Loc
 = 
Ch_1_Glob
 == 'A';

549 
Boﬁ_Glob
 = 
Boﬁ_Loc
 | Bool_Glob;

550 
Ch_2_Glob
 = 'B';

551 
	}
}

554 
	$Proc_5
 ()

558 
Ch_1_Glob
 = 'A';

559 
Boﬁ_Glob
 = 
Ál£
;

560 
	}
}

565 #ifde‡ 
NOSTRUCTASSIGN


566 
	$mem˝y
 (
d
, 
s
, 
l
)

567 *
d
;

568 *
s
;

569 
l
;

571 
l
--Ë*
d
++ = *
s
++;

572 
	}
}

576 #i‚de‡
REG


577 
	#REG


	)

581 #unde‡
REG


582 
	#REG
 

	)

585 
I¡_Glob
;

586 
Ch_1_Glob
;

589 
	$Proc_6
 (
Enum_VÆ_P¨
, 
Enum_Ref_P¨
)

594 
Enumî©i⁄
 
Enum_VÆ_P¨
;

595 
Enumî©i⁄
 *
Enum_Ref_P¨
;

597 *
Enum_Ref_P¨
 = 
Enum_VÆ_P¨
;

598 i‡(! 
	`Func_3
 (
Enum_VÆ_P¨
))

600 *
Enum_Ref_P¨
 = 
Idít_4
;

601 
Enum_VÆ_P¨
)

603 
Idít_1
:

604 *
Enum_Ref_P¨
 = 
Idít_1
;

606 
Idít_2
:

607 i‡(
I¡_Glob
 > 100)

609 *
Enum_Ref_P¨
 = 
Idít_1
;

610 *
Enum_Ref_P¨
 = 
Idít_4
;

612 
Idít_3
:

613 *
Enum_Ref_P¨
 = 
Idít_2
;

615 
Idít_4
: ;

616 
Idít_5
:

617 *
Enum_Ref_P¨
 = 
Idít_3
;

620 
	}
}

623 
	$Proc_7
 (
O√_Fi·y
 
I¡_1_P¨_VÆ
, O√_Fi·y 
I¡_2_P¨_VÆ
, O√_Fi·y *
I¡_P¨_Ref
)

625 
O√_Fi·y
 
I¡_Loc
;

627 
I¡_Loc
 = 
I¡_1_P¨_VÆ
 + 2;

628 *
I¡_P¨_Ref
 = 
I¡_2_P¨_VÆ
 + 
I¡_Loc
;

629 
	}
}

632 
	$Proc_8
 (
Aº_1_P¨_Ref
, 
Aº_2_P¨_Ref
, 
I¡_1_P¨_VÆ
, 
I¡_2_P¨_VÆ
)

637 
Aº_1_Dim
 
Aº_1_P¨_Ref
;

638 
Aº_2_Dim
 
Aº_2_P¨_Ref
;

639 
I¡_1_P¨_VÆ
;

640 
I¡_2_P¨_VÆ
;

642 
REG
 
O√_Fi·y
 
I¡_Index
;

643 
REG
 
O√_Fi·y
 
I¡_Loc
;

645 
I¡_Loc
 = 
I¡_1_P¨_VÆ
 + 5;

646 
Aº_1_P¨_Ref
 [
I¡_Loc
] = 
I¡_2_P¨_VÆ
;

647 
Aº_1_P¨_Ref
 [
I¡_Loc
+1] = Arr_1_Par_Ref [Int_Loc];

648 
Aº_1_P¨_Ref
 [
I¡_Loc
+30] = Int_Loc;

649 
I¡_Index
 = 
I¡_Loc
; Int_Index <= Int_Loc+1; ++Int_Index)

650 
Aº_2_P¨_Ref
 [
I¡_Loc
] [
I¡_Index
] = Int_Loc;

651 
Aº_2_P¨_Ref
 [
I¡_Loc
] [Int_Loc-1] += 1;

652 
Aº_2_P¨_Ref
 [
I¡_Loc
+20] [I¡_Loc] = 
Aº_1_P¨_Ref
 [Int_Loc];

653 
I¡_Glob
 = 5;

654 
	}
}

657 
Enumî©i⁄
 
	$Func_1
 (
Ch_1_P¨_VÆ
, 
Ch_2_P¨_VÆ
)

664 
C≠ôÆ_Lëãr
 
Ch_1_P¨_VÆ
;

665 
C≠ôÆ_Lëãr
 
Ch_2_P¨_VÆ
;

667 
C≠ôÆ_Lëãr
 
Ch_1_Loc
;

668 
C≠ôÆ_Lëãr
 
Ch_2_Loc
;

670 
Ch_1_Loc
 = 
Ch_1_P¨_VÆ
;

671 
Ch_2_Loc
 = 
Ch_1_Loc
;

672 i‡(
Ch_2_Loc
 !
Ch_2_P¨_VÆ
)

674  (
Idít_1
);

677 
Ch_1_Glob
 = 
Ch_1_Loc
;

678  (
Idít_2
);

680 
	}
}

683 
Boﬁón
 
	$Func_2
 (
Så_1_P¨_Ref
, 
Så_2_P¨_Ref
)

689 
Så_30
 
Så_1_P¨_Ref
;

690 
Så_30
 
Så_2_P¨_Ref
;

692 
REG
 
O√_Thúty
 
I¡_Loc
;

693 
C≠ôÆ_Lëãr
 
Ch_Loc
;

695 
I¡_Loc
 = 2;

696 
I¡_Loc
 <= 2)

697 i‡(
	`Func_1
 (
Så_1_P¨_Ref
[
I¡_Loc
],

698 
Så_2_P¨_Ref
[
I¡_Loc
+1]Ë=
Idít_1
)

701 
Ch_Loc
 = 'A';

702 
I¡_Loc
 += 1;

704 i‡(
Ch_Loc
 >= 'W' && Ch_Loc < 'Z')

706 
I¡_Loc
 = 7;

707 i‡(
Ch_Loc
 == 'R') {

709  (
åue
);

713 i‡(
	`°rcmp
 (
Så_1_P¨_Ref
, 
Så_2_P¨_Ref
) > 0)

715 
I¡_Loc
 += 7;

716 
I¡_Glob
 = 
I¡_Loc
;

717  (
åue
);

720  (
Ál£
);

722 
	}
}

725 
Boﬁón
 
	$Func_3
 (
Enum_P¨_VÆ
)

729 
Enumî©i⁄
 
Enum_P¨_VÆ
;

731 
Enumî©i⁄
 
Enum_Loc
;

733 
Enum_Loc
 = 
Enum_P¨_VÆ
;

734 i‡(
Enum_Loc
 =
Idít_3
)

736  (
åue
);

738  (
Ál£
);

739 
	}
}

742 
Boﬁón
 
	g∑ss
 = 
åue
;

743 
Boﬁón
 
	$check
(
c⁄d
) {

744 i‡(!
c⁄d
Ë
∑ss
 = 
Ál£
;

745  
c⁄d
;

746 
	}
}

747 
	$maö
 ()

753 
O√_Fi·y
 
I¡_1_Loc
;

754 
REG
 
O√_Fi·y
 
I¡_2_Loc
;

755 
O√_Fi·y
 
I¡_3_Loc
;

756 
REG
 
Ch_Index
;

757 
Enumî©i⁄
 
Enum_Loc
;

758 
Så_30
 
Så_1_Loc
;

759 
Så_30
 
Så_2_Loc
;

760 
REG
 
Run_Index
;

761 
REG
 
Numbî_Of_Runs
;

763 
	`i€_öô
();

765 
Numbî_Of_Runs
 = 
NUMBER_OF_RUNS
;

769 
Next_På_Glob
 = (
Rec_Poöãr
Ë
	`myÆloc
 ( (
Rec_Ty≥
));

770 
På_Glob
 = (
Rec_Poöãr
Ë
	`myÆloc
 ( (
Rec_Ty≥
));

772 
På_Glob
->
På_Comp
 = 
Next_På_Glob
;

773 
På_Glob
->
Dis¸
 = 
Idít_1
;

774 
På_Glob
->
v¨ü¡
.
v¨_1
.
Enum_Comp
 = 
Idít_3
;

775 
På_Glob
->
v¨ü¡
.
v¨_1
.
I¡_Comp
 = 40;

776 
	`°r˝y
 (
På_Glob
->
v¨ü¡
.
v¨_1
.
Så_Comp
,

778 
	`°r˝y
 (
Så_1_Loc
, "DHRYSTONE PROGRAM, 1'ST STRING");

780 
Aº_2_Glob
 [8][7] = 10;

786 
	`¥ötf
 ("Dhry°⁄êBíchm¨k, Vîsi⁄ %s\n", 
Vîsi⁄
);

788 
D⁄e
 = 
Ál£
;

789 !
D⁄e
) {

791 
	`¥ötf
 ("Tryög %dÑun†through Dhry°⁄e.\n", 
Numbî_Of_Runs
);

797 
	`Sèπ_Timî
();

799 
Run_Index
 = 1; Run_Index <
Numbî_Of_Runs
; ++Run_Index)

802 
	`Proc_5
();

803 
	`Proc_4
();

805 
I¡_1_Loc
 = 2;

806 
I¡_2_Loc
 = 3;

807 
	`°r˝y
 (
Så_2_Loc
, "DHRYSTONE PROGRAM, 2'ND STRING");

808 
Enum_Loc
 = 
Idít_2
;

809 
Boﬁ_Glob
 = ! 
	`Func_2
 (
Så_1_Loc
, 
Så_2_Loc
);

811 
I¡_1_Loc
 < 
I¡_2_Loc
)

813 
I¡_3_Loc
 = 5 * 
I¡_1_Loc
 - 
I¡_2_Loc
;

815 
	`Proc_7
 (
I¡_1_Loc
, 
I¡_2_Loc
, &
I¡_3_Loc
);

817 
I¡_1_Loc
 += 1;

820 
	`Proc_8
 (
Aº_1_Glob
, 
Aº_2_Glob
, 
I¡_1_Loc
, 
I¡_3_Loc
);

822 
	`Proc_1
 (
På_Glob
);

823 
Ch_Index
 = 'A'; Ch_Index <
Ch_2_Glob
; ++Ch_Index)

826 i‡(
Enum_Loc
 =
	`Func_1
 (
Ch_Index
, 'C'))

829 
	`Proc_6
 (
Idít_1
, &
Enum_Loc
);

830 
	`°r˝y
 (
Så_2_Loc
, "DHRYSTONE PROGRAM, 3'RD STRING");

831 
I¡_2_Loc
 = 
Run_Index
;

832 
I¡_Glob
 = 
Run_Index
;

836 
I¡_2_Loc
 = I¡_2_Lo¯* 
I¡_1_Loc
;

837 
I¡_1_Loc
 = 
I¡_2_Loc
 / 
I¡_3_Loc
;

838 
I¡_2_Loc
 = 7 * (I¡_2_Lo¯- 
I¡_3_Loc
Ë- 
I¡_1_Loc
;

840 
	`Proc_2
 (&
I¡_1_Loc
);

849 
	`St›_Timî
();

851 
U£r_Time
 = 
End_Time
 - 
Begö_Time
;

853 
D⁄e
 = 
åue
;

856 i‡(!
	`check
(
I¡_Glob
 == 5)) {

857 
	`¥ötf
("I¡_Glob: %d\n", 
I¡_Glob
);

858 
	`¥ötf
(" should be: %d\n", 5);

860 i‡(!
	`check
(
Boﬁ_Glob
 == 1)) {

861 
	`¥ötf
("Boﬁ_Glob: %d\n", 
Boﬁ_Glob
);

862 
	`¥ötf
(" should be: %d\n", 1);

864 i‡(!
	`check
(
Ch_1_Glob
 == 'A')) {

865 
	`¥ötf
("Ch_1_Glob: %c\n", 
Ch_1_Glob
);

866 
	`¥ötf
(" should be: %c\n", 'A');

868 i‡(!
	`check
(
Ch_2_Glob
 == 'B')) {

869 
	`¥ötf
("Ch_2_Glob: %c\n", 
Ch_2_Glob
);

870 
	`¥ötf
(" should be: %c\n", 'B');

872 i‡(!
	`check
(
Aº_1_Glob
[8] == 7)) {

873 
	`¥ötf
("Aº_1_Glob[8]: %d\n", 
Aº_1_Glob
[8]);

874 
	`¥ötf
(" should be: %d\n", 7);

876 i‡(!
	`check
(
Aº_2_Glob
[8][7] =
Numbî_Of_Runs
 + 10)) {

877 
	`¥ötf
("Aº_2_Glob[8][7]: %d\n", 
Aº_2_Glob
[8][7]);

878 
	`¥ötf
(" should be: Number_Of_Runs + 10\n");

881 i‡(!
	`check
(()
På_Glob
->
Dis¸
 == 0)) {

882 
	`¥ötf
("På_Glob->Dis¸: %d\n", 
På_Glob
->
Dis¸
);

883 
	`¥ötf
(" should be: %d\n", 0);

885 i‡(!
	`check
(
På_Glob
->
v¨ü¡
.
v¨_1
.
Enum_Comp
 == 2)) {

886 
	`¥ötf
("På_Glob->Enum_Comp: %d\n", 
På_Glob
->
v¨ü¡
.
v¨_1
.
Enum_Comp
);

887 
	`¥ötf
(" should be: %d\n", 2);

889 i‡(!
	`check
(
På_Glob
->
v¨ü¡
.
v¨_1
.
I¡_Comp
 == 17)) {

890 
	`¥ötf
("På_Glob->I¡_Comp: %d\n", 
På_Glob
->
v¨ü¡
.
v¨_1
.
I¡_Comp
);

891 
	`¥ötf
(" should be: %d\n", 17);

893 i‡(!
	`check
(
	`°rcmp
(
På_Glob
->
v¨ü¡
.
v¨_1
.
Så_Comp
, "DHRYSTONE PROGRAM, SOME STRING") == 0)) {

894 
	`¥ötf
("På_Glob->Så_Comp: %s\n", 
På_Glob
->
v¨ü¡
.
v¨_1
.
Så_Comp
);

895 
	`¥ötf
(" should be: DHRYSTONE PROGRAM, SOME STRING\n");

898 i‡(!
	`check
(()
Next_På_Glob
->
Dis¸
 == 0)) {

899 
	`¥ötf
("Next_På_Glob->Dis¸: %d\n", 
Next_På_Glob
->
Dis¸
);

900 
	`¥ötf
(" should be: %d\n", 0);

902 i‡(!
	`check
(
Next_På_Glob
->
v¨ü¡
.
v¨_1
.
Enum_Comp
 == 1)) {

903 
	`¥ötf
("Next_På_Glob->Enum_Comp: %d\n", 
Next_På_Glob
->
v¨ü¡
.
v¨_1
.
Enum_Comp
);

904 
	`¥ötf
(" should be: %d\n", 1);

906 i‡(!
	`check
(
Next_På_Glob
->
v¨ü¡
.
v¨_1
.
I¡_Comp
 == 18)) {

907 
	`¥ötf
("Next_På_Glob->I¡_Comp: %d\n", 
Next_På_Glob
->
v¨ü¡
.
v¨_1
.
I¡_Comp
);

908 
	`¥ötf
(" should be: %d\n", 18);

910 i‡(!
	`check
(
	`°rcmp
(
Next_På_Glob
->
v¨ü¡
.
v¨_1
.
Så_Comp
, "DHRYSTONE PROGRAM, SOME STRING") == 0)) {

911 
	`¥ötf
("Next_På_Glob->Så_Comp: %s\n", 
Next_På_Glob
->
v¨ü¡
.
v¨_1
.
Så_Comp
);

912 
	`¥ötf
(" should be: DHRYSTONE PROGRAM, SOME STRING\n");

915 i‡(!
	`check
(
I¡_1_Loc
 == 5)) {

916 
	`¥ötf
("I¡_1_Loc: %d\n", 
I¡_1_Loc
);

917 
	`¥ötf
(" should be: %d\n", 5);

919 i‡(!
	`check
(
I¡_2_Loc
 == 13)) {

920 
	`¥ötf
("I¡_2_Loc: %d\n", 
I¡_2_Loc
);

921 
	`¥ötf
(" should be: %d\n", 13);

923 i‡(!
	`check
(
I¡_3_Loc
 == 7)) {

924 
	`¥ötf
("I¡_3_Loc: %d\n", 
I¡_3_Loc
);

925 
	`¥ötf
(" should be: %d\n", 7);

927 i‡(!
	`check
(
Enum_Loc
 == 1)) {

928 
	`¥ötf
("Enum_Loc: %d\n", 
Enum_Loc
);

929 
	`¥ötf
(" should be: %d\n", 1);

932 i‡(!
	`check
(
	`°rcmp
(
Så_1_Loc
, "DHRYSTONE PROGRAM, 1'ST STRING") == 0)) {

933 
	`¥ötf
("Så_1_Loc: %s\n", 
Så_1_Loc
);

934 
	`¥ötf
(" should be: DHRYSTONE PROGRAM, 1'ST STRING\n");

936 i‡(!
	`check
(
	`°rcmp
(
Så_2_Loc
, "DHRYSTONE PROGRAM, 2'ND STRING") == 0)) {

937 
	`¥ötf
("Så_2_Loc: %s\n", 
Så_2_Loc
);

938 
	`¥ötf
(" should be: DHRYSTONE PROGRAM, 2'ND STRING\n");

941 
	`¥ötf
 ("Föished i¿%d ms\n", ()
U£r_Time
);

942 
	`¥ötf
("==================================================\n");

943 
	`¥ötf
("Dhry°⁄ê%† %d M¨ks\n", 
∑ss
 ? "PASS" : "FAIL",

944 880900 / ()
U£r_Time
 * 
NUMBER_OF_RUNS
/ 500000);

945 
	`¥ötf
(" vs. 100000 Marks (i7-7700K @ 4.20GHz)\n");

948 
	}
}

	@am-kernels/benchmarks/microbench/include/benchmark.h

1 #i‚de‡
__BENCHMARK_H__


2 
	#__BENCHMARK_H__


	)

4 
	~<am.h
>

5 
	~<klib.h
>

6 
	~<klib-ma¸os.h
>

8 #ifde‡
__˝lu•lus


12 
	#MB
 * 1024 * 1024

	)

13 
	#KB
 * 1024

	)

15 
	#REF_CPU
 "i9-9900K @ 3.60GHz"

	)

16 
	#REF_SCORE
 100000

	)

18 
	#REPEAT
 1

	)

21 
	#QSORT_S
 { 100, 1 
KB
, 0, 0x08467105}

	)

22 
	#QSORT_M
 { 30000, 128 
KB
, 0, 0xa3e99„4}

	)

23 
	#QSORT_L
 { 100000, 640 
KB
, 4404, 0xed8cff89}

	)

24 
	#QSORT_H
 { 4000000, 16 
MB
,227620, 0xe6178735}

	)

25 
	#QUEEN_S
 { 8, 0 
KB
, 0, 0x0000005c}

	)

26 
	#QUEEN_M
 { 11, 0 
KB
, 0, 0x00000a78}

	)

27 
	#QUEEN_L
 { 12, 0 
KB
, 4069, 0x00003778}

	)

28 
	#QUEEN_H
 { 15, 0 
KB
,819996, 0x0022c710}

	)

29 
	#BF_S
 { 2, 32 
KB
, 0, 0xa6f0079e}

	)

30 
	#BF_M
 { 25, 32 
KB
, 0, 0xa88f8a65}

	)

31 
	#BF_L
 { 180, 32 
KB
, 16815, 0x9221e2b3}

	)

32 
	#BF_H
 { 1360, 32 
KB
,771535, 0xdb49fbde}

	)

33 
	#FIB_S
 { 2, 1 
KB
, 0, 0x7c„ddf0}

	)

34 
	#FIB_M
 { 23, 16 
KB
, 0, 0x94ad8800}

	)

35 
	#FIB_L
 { 91, 256 
KB
, 20168, 0xebdc5f80}

	)

36 
	#FIB_H
 { 300, 2 
MB
,775012, 0xe30a6f00}

	)

37 
	#SIEVE_S
 { 100, 1 
KB
, 0, 0x00000019}

	)

38 
	#SIEVE_M
 { 200000, 32 
KB
, 0, 0x00004640}

	)

39 
	#SIEVE_L
 {10000000, 2 
MB
, 34823, 0x000a2403}

	)

40 
	#SIEVE_H
 {80000000, 10 
MB
,301058, 0x00473fc6}

	)

41 
	#PZ15_S
 { 0, 1 
KB
, 0, 0x00000006}

	)

42 
	#PZ15_M
 { 1, 256 
KB
, 0, 0x0000b0df}

	)

43 
	#PZ15_L
 { 2, 2 
MB
, 5360, 0x00068b8c}

	)

44 
	#PZ15_H
 { 3, 64 
MB
,300634, 0x01027b4a}

	)

45 
	#DINIC_S
 { 10, 8 
KB
, 0, 0x0000019c}

	)

46 
	#DINIC_M
 { 80, 512 
KB
, 0, 0x00004f99}

	)

47 
	#DINIC_L
 { 128, 680 
KB
, 8182, 0x0000c248}

	)

48 
	#DINIC_H
 { 190, 2 
MB
,671978, 0x00014695}

	)

49 
	#LZIP_S
 { 128, 128 
KB
, 0, 0xe05fc832}

	)

50 
	#LZIP_M
 { 50000, 1 
MB
, 0, 0xdc93e90c}

	)

51 
	#LZIP_L
 { 1048576, 4 
MB
, 6795, 0x8d62c81f}

	)

52 
	#LZIP_H
 {31457280, 64 
MB
,199541, 0x1b859d76}

	)

53 
	#SSORT_S
 { 100, 4 
KB
, 0, 0x4c555e09}

	)

54 
	#SSORT_M
 { 10000, 512 
KB
, 0, 0x0db7909b}

	)

55 
	#SSORT_L
 { 100000, 4 
MB
, 4002, 0x4f0ab431}

	)

56 
	#SSORT_H
 { 3000000, 64 
MB
,322232, 0xeddbd9b6}

	)

57 
	#MD5_S
 { 100, 1 
KB
, 0, 0xf902f28f}

	)

58 
	#MD5_M
 { 200000, 256 
KB
, 0, 0xd4f9bc6d}

	)

59 
	#MD5_L
 {10000000, 10 
MB
, 15199, 0x27286a42}

	)

60 
	#MD5_H
 {64000000, 64 
MB
, 97148, 0x41ab4d60}

	)

62 
	#BENCHMARK_LIST
(
def
) \

63 
	`def
(
qs‹t
, "qs‹t", 
QSORT_S
, 
QSORT_M
, 
QSORT_L
, 
QSORT_H
, "Quick sort") \

64 
	`def
(
quìn
, "quìn", 
QUEEN_S
, 
QUEEN_M
, 
QUEEN_L
, 
QUEEN_H
, "QueenÖlacement") \

65 
	`def
–
bf
, "bf", 
BF_S
, 
BF_M
, 
BF_L
, 
BF_H
, "Brainf**k interpreter") \

66 
	`def
–
fib
, "fib", 
FIB_S
, 
FIB_M
, 
FIB_L
, 
FIB_H
, "FibonacciÇumber") \

67 
	`def
(
sõve
, "sõve", 
SIEVE_S
, 
SIEVE_M
, 
SIEVE_L
, 
SIEVE_H
, "Eratosthenes sieve") \

68 
	`def
–15
pz
, "15pz", 
PZ15_S
, 
PZ15_M
, 
PZ15_L
, 
PZ15_H
, "A* 15-puzzle search") \

69 
	`def
(
döic
, "döic", 
DINIC_S
, 
DINIC_M
, 
DINIC_L
, 
DINIC_H
, "Dinic's maxflowálgorithm") \

70 
	`def
–
lzù
, "lzù", 
LZIP_S
, 
LZIP_M
, 
LZIP_L
, 
LZIP_H
, "Lzip compression") \

71 
	`def
(
ss‹t
, "ss‹t", 
SSORT_S
, 
SSORT_M
, 
SSORT_L
, 
SSORT_H
, "Suffix sort") \

72 
	`def
–
md5
, "md5", 
MD5_S
, 
MD5_M
, 
MD5_L
, 
MD5_H
, "MD5 digest") \

73 

	)

76 
	#DECL
(
_«me
, 
_¢ame
, 
_s
, 
_m
, 
_l
, 
_h
, 
_desc
) \

77 
bích_
##
_«me
##
	`_¥ï¨e
(); \

78 
bích_
##
_«me
##
	`_run
(); \

79 
bích_
##
_«me
##
	`_vÆid©e
();

	)

81 
BENCHMARK_LIST
(
DECL
)

83 
	sSëtög
 {

84 
size
;

85 
mlim
, 
ªf
;

86 
uöt32_t
 
checksum
;

87 } 
	tSëtög
;

89 
	sBíchm¨k
 {

90 (*
¥ï¨e
)();

91 (*
run
)();

92 (*
vÆid©e
)();

93 c⁄° *
«me
, *
desc
;

94 
Sëtög
 
£âögs
[4];

95 } 
	tBíchm¨k
;

97 
Bíchm¨k
 *
cuºít
;

98 
Sëtög
 *
£âög
;

100 
	sResu…
 {

101 
	g∑ss
;

102 
uöt64_t
 
	gu£c
;

103 } 
	tResu…
;

105 
¥ï¨e
(
Resu…
 *
ªs
);

106 
d⁄e
(
Resu…
 *
ªs
);

109 * 
bích_Æloc
(
size_t
 
size
);

110 
bích_‰ì
(*
±r
);

113 
bích_§™d
(
uöt32_t
 
£ed
);

114 
uöt32_t
 
bích_ønd
();

117 
uöt32_t
 
checksum
(*
°¨t
, *
íd
);

119 #ifde‡
__˝lu•lus


	@am-kernels/benchmarks/microbench/src/15pz/15pz.cc

1 
	~<bíchm¨k.h
>

2 
	~"puzzÀ.h
"

3 
	~"hóp.h
"

5 c⁄° 
	gN
 = 4;

7 
	gPUZZLE_S
[
N
*N] = {

14 
	gPUZZLE_M
[
N
*N] = {

21 
	gPUZZLE_L
[
N
*N] = {

28 
	gPUZZLE_H
[
N
*N] = {

35 
	g™s
;

39 
bích_15pz_¥ï¨e
() {

42 
bích_15pz_run
() {

43 
N_puzzÀ
<
N
> 
puzzÀ
;

44 
MAXN
;

46 
£âög
->
size
) {

47 0: 
puzzÀ
 = 
N_puzzÀ
<
N
>(
PUZZLE_S
); 
MAXN
 = 10; ;

48 1: 
puzzÀ
 = 
N_puzzÀ
<
N
>(
PUZZLE_M
); 
MAXN
 = 2048; ;

49 2: 
puzzÀ
 = 
N_puzzÀ
<
N
>(
PUZZLE_L
); 
MAXN
 = 16384; ;

50 3: 
puzzÀ
 = 
N_puzzÀ
<
N
>(
PUZZLE_H
); 
MAXN
 = 786432; ;

51 : 
as£π
(0);

53 
as£π
(
puzzÀ
.
sﬁvabÀ
());

55 autÿ*
hóp
 = (
Upd©abÀ_hóp
<
N_puzzÀ
<
N
>> *Ë
bích_Æloc
((Updatable_heap<N_puzzle<N>>));

56 
hóp
->
öô
(
MAXN
);

57 
hóp
->
push
–
puzzÀ
, 0 );

59 
n
 = 0;

60 
™s
 = -1;

62  
hóp
->
size
(Ë!0 && 
n
 !
MAXN
 ) {

63 
N_puzzÀ
<
N
> 
t›
 = 
hóp
->
p›
();

64 ++
n
;

66 i‡–
t›
 =
N_puzzÀ
<
N
>::
sﬁuti⁄
() ) {

68 
™s
 = 
hóp
->
Àngth
(
t›
Ë* 
n
;

72 i‡–
t›
.
tûe_À·_possibÀ
() ) {

73 
hóp
->
push
–
t›
.
tûe_À·
(), hóp->
Àngth
(Åop ) + 1 );

76 i‡–
t›
.
tûe_right_possibÀ
() ) {

77 
hóp
->
push
–
t›
.
tûe_right
(), hóp->
Àngth
(Åop ) + 1 );

80 i‡–
t›
.
tûe_up_possibÀ
() ) {

81 
hóp
->
push
–
t›
.
tûe_up
(), hóp->
Àngth
(Åop ) + 1 );

84 i‡–
t›
.
tûe_down_possibÀ
() ) {

85 
hóp
->
push
–
t›
.
tûe_down
(), hóp->
Àngth
(Åop ) + 1 );

91 
bích_15pz_vÆid©e
() {

92  (
uöt32_t
)
™s
 =
£âög
->
checksum
;

	@am-kernels/benchmarks/microbench/src/15pz/heap.h

4 
	gãm∂©e
 <
ty≥«me
 
	gT
>

5 
T
 
	$max
(
T
 
a
, T 
b
) {

6  
a
 > 
b
 ?á : b;

7 
	}
}

9 
	gãm∂©e
 <
ty≥«me
 
	gT
>

10 ˛as†
	cUpd©abÀ_hóp
 {

11 
	m¥iv©e
:

12 
M
;

13 
˛ass
 
	mSãp
;

14 
Sãp
 **
	mhash_èbÀ
;

15 
Sãp
 **
	mhóp
;

16 
	mhóp_size
;

17 
	mmaximum_hóp_size
;

19 
ölöe
 
sw≠
( , );

20 
≥rcﬁ©e_down
();

21 
≥rcﬁ©e_up
( );

22 
Sãp
 *
	$poöãr
–
T
 const & ) const;

24 
public
:

25 
	`öô
(
m
);

26 ~
	`Upd©abÀ_hóp
();

27 
T
 
	`p›
();

28 
	`push
–
T
 const &, );

29 
	$size
() const;

30 
	$maximum_size
() const;

31 
	$Àngth
–
T
 const & ) const;

34 
ãm∂©e
 <
ty≥«me
 
T
>

35 
˛ass
 
Upd©abÀ_hóp
<
T
>::
Sãp
 {

36 
public
:

37 
T
 
ñemít
;

38 
Sãp
 *
√xt
;

39 
hóp_ödex
;

40 
∑th_Àngth
;

41 
∑th_weight
;

42 
boﬁ
 
visôed
;

43 
Sãp
 *
¥evious_°ï
;

45 
	`öô
–
T
 c⁄° &, 
Sãp
 *, , );

46 
	`Àngth
() const;

47 
	`weight
() const;

48 
	}
};

50 
	gãm∂©e
 <
ty≥«me
 
	gT
>

51 
	gUpd©abÀ_hóp
<
	gT
>::
	$öô
(
m
) {

52 
M
 = 
m
;

53 
hóp
 = (
Sãp
 **)
	`bích_Æloc
((*Ë* 
M
);

54 
hash_èbÀ
 = (
Sãp
 **)
	`bích_Æloc
((*Ë* (
M
 + 1));

56 
hóp_size
 = 0;

57 
maximum_hóp_size
 = 0;

58  
i
 = 0; i < 
M
; ++i ) {

59 
hash_èbÀ
[
i
] = 0;

61 
	}
}

63 
	gãm∂©e
 <
ty≥«me
 
	gT
>

64 
	gUpd©abÀ_hóp
<
	gT
>::~
	$Upd©abÀ_hóp
() {

65  
i
 = 0; i < 
M
; ++i ) {

66 
Sãp
 *
±r
 = 
hash_èbÀ
[
i
];

68  
±r
 != 0 ) {

69 
Sãp
 *
tmp
 = 
±r
;

70 
±r
 =Öå->
√xt
;

73 
	}
}

75 
	gãm∂©e
 <
ty≥«me
 
	gT
>

76 
T
 
	gUpd©abÀ_hóp
<
	gT
>::
	$p›
() {

77 i‡–
	`size
() == 0 ) {

78  
	`T
();

81 
T
 
t›
 = 
hóp
[1]->
ñemít
;

83 i‡–
	`size
() == 1 ) {

84 
hóp_size
 = 0;

86 
	`as£π
–
	`size
() > 1 );

88 
hóp
[1] = hóp[
	`size
()];

89 
hóp
[1]->
hóp_ödex
 = 1;

91 --
hóp_size
;

92 
	`≥rcﬁ©e_down
();

95  
t›
;

96 
	}
}

98 
	gãm∂©e
 <
ty≥«me
 
	gT
>

99 
ölöe
 
	gUpd©abÀ_hóp
<
	gT
>::
	$sw≠
–
i
, 
j
 ) {

100 
Sãp
 *
tmp
 = 
hóp
[
j
];

101 
hóp
[
j
] = hóp[
i
];

102 
hóp
[
i
] = 
tmp
;

104 
hóp
[
i
]->
hóp_ödex
 = i;

105 
hóp
[
j
]->
hóp_ödex
 = j;

106 
	}
}

108 
	gãm∂©e
 <
ty≥«me
 
	gT
>

109 
	gUpd©abÀ_hóp
<
	gT
>::
	$≥rcﬁ©e_down
() {

110 
n
 = 1;

112  2*
n
 + 1 <
	`size
() ) {

113 i‡–
hóp
[
n
]->
	`weight
() < heap[2*n]->weight() && heap[n]->weight() < heap[2*n + 1]->weight() ) {

117 i‡–
hóp
[2*
n
]->
	`weight
() < heap[2*n + 1]->weight() ) {

118 
	`sw≠
–
n
, 2*n );

119 
n
 = 2*n;

121 
	`as£π
–
hóp
[2*
n
]->
	`weight
() >= heap[2*n + 1]->weight() );

123 
	`sw≠
–
n
, 2*n + 1 );

124 
n
 = 2*n + 1;

128 i‡–2*
n
 =
	`size
(Ë&& 
hóp
[2*n]->
	`weight
() < heap[n]->weight() ) {

129 
	`sw≠
–
n
, 2*n );

131 
	}
}

133 
	gãm∂©e
 <
ty≥«me
 
	gT
>

134 
	gUpd©abÀ_hóp
<
	gT
>::
	$≥rcﬁ©e_up
–
n
 ) {

135  
n
 != 1 ) {

136 
∑ª¡
 = 
n
/2;

138 i‡–
hóp
[
∑ª¡
]->
	`weight
(Ë> hóp[
n
]->weight() ) {

139 
	`sw≠
–
∑ª¡
, 
n
 );

140 
n
 = 
∑ª¡
;

145 
	}
}

147 
	gãm∂©e
 <
ty≥«me
 
	gT
>

148 
	gUpd©abÀ_hóp
<
	gT
>::
	$push
–
T
 c⁄° &
pz
, 
∑th_Àngth
 ) {

149 
Sãp
 *
±r
 = 
	`poöãr
–
pz
 );

151 i‡–
±r
 == 0 ) {

152 
	`as£π
–
hóp_size
 <
M
 );

153 ++
hóp_size
;

155 
Sãp
 *
±r
 = (Sãp*)
	`bích_Æloc
((Step));

156 
±r
->
	`öô
–
pz
, 
hash_èbÀ
[pz.
	`hash
(Ë& (
M
 - 1)], 
	`size
(), 
∑th_Àngth
 );

157 
hash_èbÀ
[
pz
.
	`hash
(Ë& (
M
 - 1)] = 
±r
;

158 
hóp
[
	`size
()] = 
±r
;

160 
	`≥rcﬁ©e_up
–
	`size
() );

162 
maximum_hóp_size
 = 
	`max
–maximum_hóp_size, 
	`size
() );

164 i‡–!
±r
->
visôed
 ) {

165 i‡–
∑th_Àngth
 + 
±r
->
ñemít
.
	`lowî_bound
(Ë<Öå->
	`weight
() ) {

166 
±r
->
∑th_weight
 = 
∑th_Àngth
 +Öå->
ñemít
.
	`lowî_bound
();

167 
	`≥rcﬁ©e_up
–
±r
->
hóp_ödex
 );

171 
	}
}

173 
	gãm∂©e
 <
ty≥«me
 
	gT
>

174 
	gUpd©abÀ_hóp
<
	gT
>::
	$size
() const {

175  
hóp_size
;

176 
	}
}

178 
	gãm∂©e
 <
ty≥«me
 
	gT
>

179 
	gUpd©abÀ_hóp
<
	gT
>::
	$maximum_size
() const {

180  
maximum_hóp_size
;

181 
	}
}

183 
	gãm∂©e
 <
ty≥«me
 
	gT
>

184 
	gUpd©abÀ_hóp
<
	gT
>::
	$Àngth
–
T
 c⁄° &
pz
 ) const {

185 
Sãp
 *
±r
 = 
	`poöãr
–
pz
 );

187  ( 
±r
 =0 ) ? 2147483647 :Öå->
	`Àngth
();

188 
	}
}

190 
	gãm∂©e
 <
ty≥«me
 
	gT
>

191 
ty≥«me
 
	gUpd©abÀ_hóp
<
	gT
>::
Sãp
 *
Upd©abÀ_hóp
<
T
>::
	$poöãr
–
T
 c⁄° &
pz
 ) const {

192  
Sãp
 *
±r
 = 
hash_èbÀ
[
pz
.
	`hash
(Ë& (
M
 - 1)];Öå !0;Öå =Öå->
√xt
 ) {

193 i‡–
±r
->
ñemít
 =
pz
 ) {

194  
±r
;

199 
	}
}

207 
	gãm∂©e
 <
ty≥«me
 
	gT
>

208 
	gUpd©abÀ_hóp
<
	gT
>::
Sãp
::
	$öô
–
T
 c⁄° &
pz
, 
Sãp
 *
n
, 
hi
, 
di°
 ) {

209 
ñemít
 = 
pz
;

210 
√xt
 = 
n
;

211 
hóp_ödex
 = 
hi
;

212 
∑th_Àngth
 = 
di°
;

213 
∑th_weight
 = 
di°
 + 
ñemít
.
	`lowî_bound
();

214 
visôed
 = 
Ál£
;

215 
¥evious_°ï
 = 0;

216 
	}
}

218 
	gãm∂©e
 <
ty≥«me
 
	gT
>

219 
	gUpd©abÀ_hóp
<
	gT
>::
Sãp
::
	$Àngth
() const {

220  
∑th_Àngth
;

221 
	}
}

223 
	gãm∂©e
 <
ty≥«me
 
	gT
>

224 
	gUpd©abÀ_hóp
<
	gT
>::
Sãp
::
	$weight
() const {

225  
∑th_weight
;

226 
	}
}

	@am-kernels/benchmarks/microbench/src/15pz/puzzle.h

5 
	gãm∂©e
 <
	gN
>

6 ˛as†
	cN_puzzÀ
 {

7 
	m¥iv©e
:

8 
boﬁ
 
puzzÀ_vÆid
;

9 
uöt8_t
 
	mzîo_i
, 
	mzîo_j
;

10 
öt8_t
 
	mm™h©èn_di°™˚
;

11 
öt8_t
 
	mpuzzÀ
[
N
][N];

12 
	mhash_vÆue
;

14 
dëîmöe_hash
();

16 
	$abs
–
n
 ) {  (Ç < 0 ) ? -n :Ç; }

18 
public
:

19 
	`N_puzzÀ
();

20 
	`N_puzzÀ
–
¨øy
[
N
*N] );

21 
	`N_puzzÀ
–
N_puzzÀ
 const & );

22 
N_puzzÀ
 &
›î©‹
=( N_puzzle const & );

24 
boﬁ
 
	$sﬁvabÀ
() const;

25 
boﬁ
 
	$vÆid
() const;

26 
	$lowî_bound
() const;

27 
	$hash
() const;

29 
boﬁ
 
	$tûe_up_possibÀ
() const;

30 
boﬁ
 
	$tûe_down_possibÀ
() const;

31 
boﬁ
 
	$tûe_À·_possibÀ
() const;

32 
boﬁ
 
	$tûe_right_possibÀ
() const;

34 
N_puzzÀ
 
	$tûe_up
() const;

35 
N_puzzÀ
 
	$tûe_down
() const;

36 
N_puzzÀ
 
	$tûe_À·
() const;

37 
N_puzzÀ
 
	$tûe_right
() const;

39 
boﬁ
 
›î©‹
==–
N_puzzÀ
 const & ) const;

40 
boﬁ
 
›î©‹
!=–
N_puzzÀ
 const & ) const;

42 
N_puzzÀ
 
	`sﬁuti⁄
();

43 
	}
};

45 
	gãm∂©e
 < 
	gN
 >

46 
	gN_puzzÀ
<
	gN
>::
	$N_puzzÀ
():

47 
	`puzzÀ_vÆid
–
åue
 ),

48 
	$m™h©èn_di°™˚
( 0 ) {

49 
¨øy
[
N
*N];

51  
i
 = 0; i < 
N
*N; ++i ) {

52 
¨øy
[
i
] = i;

55 
n
 = 0;

57  
i
 = 0; i < 
N
; ++i ) {

58  
j
 = 0; j < 
N
; ++j ) {

59 
k
 = 
	`bích_ønd
(Ë% (
N
*N - 
n
);

60 
puzzÀ
[
i
][
j
] = 
¨øy
[
k
];

62 i‡–
¨øy
[
k
] == 0 ) {

63 
zîo_i
 = 
i
;

64 
zîo_j
 = 
j
;

66 
m™h©èn_di°™˚
 +
	`abs
–((
¨øy
[
k
] - 1Ë/ 
N
Ë- 
i
 );

67 
m™h©èn_di°™˚
 +
	`abs
–((
¨øy
[
k
] - 1Ë% 
N
Ë- 
j
 );

70 ++
n
;

71 
¨øy
[
k
] =áºay[
N
*N - 
n
];

75 
	`dëîmöe_hash
();

76 
	}
}

78 
	gãm∂©e
 < 
	gN
 >

79 
	gN_puzzÀ
<
	gN
>::
	$N_puzzÀ
–
¨øy
[
N
*N] ):

80 
	`puzzÀ_vÆid
–
åue
 ),

81 
	$m™h©èn_di°™˚
( 0 ) {

82 
boﬁ
 
check
[
N
*N];

84  
i
 = 0; i < 
N
*N; ++i ) {

85 
check
[
i
] = 
Ál£
;

88 
n
 = 0;

90  
i
 = 0; i < 
N
; ++i ) {

91  
j
 = 0; j < 
N
; ++j ) {

92 
puzzÀ
[
i
][
j
] = 
¨øy
[
n
];

93 
check
[
¨øy
[
n
]] = 
åue
;

95 i‡–
¨øy
[
n
] == 0 ) {

96 
zîo_i
 = 
i
;

97 
zîo_j
 = 
j
;

99 
m™h©èn_di°™˚
 +
	`abs
–((
¨øy
[
n
] - 1Ë/ 
N
Ë- 
i
 );

100 
m™h©èn_di°™˚
 +
	`abs
–((
¨øy
[
n
] - 1Ë% 
N
Ë- 
j
 );

103 ++
n
;

107  
i
 = 0; i < 
N
*N; ++i ) {

108 i‡–!
check
[
i
] ) {

109 
puzzÀ_vÆid
 = 
Ál£
;

114 
	`dëîmöe_hash
();

115 
	}
}

121 
	gãm∂©e
 < 
	gN
 >

122 
	gN_puzzÀ
<
	gN
>::
	$dëîmöe_hash
() {

123 
hash_vÆue
 = 0;

125  
i
 = 0; i < 
N
; ++i ) {

126  
j
 = 0; j < 
N
; ++j ) {

127 
hash_vÆue
 = hash_vÆue*1973 + 
puzzÀ
[
i
][
j
];

130 
	}
}

132 
	gãm∂©e
 < 
	gN
 >

133 
	gN_puzzÀ
<
	gN
>::
	$N_puzzÀ
–
N_puzzÀ
 c⁄° &
pz
 ):

134 
	`puzzÀ_vÆid
–
pz
.
puzzÀ_vÆid
 ),

135 
	`zîo_i
–
pz
.
zîo_i
 ),

136 
	`zîo_j
–
pz
.
zîo_j
 ),

137 
	`m™h©èn_di°™˚
–
pz
.
m™h©èn_di°™˚
 ),

138 
	$hash_vÆue
–
pz
.
hash_vÆue
 ) {

139  
i
 = 0; i < 
N
; ++i ) {

140  
j
 = 0; j < 
N
; ++j ) {

141 
puzzÀ
[
i
][
j
] = 
pz
.puzzle[i][j];

144 
	}
}

146 
	gãm∂©e
 < 
	gN
 >

147 
	gN_puzzÀ
<
	gN
> &N_puzzÀ<N>::
›î©‹
=–
N_puzzÀ
 c⁄° &
rhs
 ) {

148 
puzzÀ_vÆid
 = 
rhs
.puzzle_valid;

149 
	gzîo_i
 = 
rhs
.
zîo_i
;

150 
	gzîo_j
 = 
rhs
.
zîo_j
;

151 
	gm™h©èn_di°™˚
 = 
rhs
.
m™h©èn_di°™˚
;

152 
	ghash_vÆue
 = 
rhs
.
hash_vÆue
;

154  
	gi
 = 0; i < 
	gN
; ++i ) {

155  
	gj
 = 0; j < 
	gN
; ++j ) {

156 
	gpuzzÀ
[
i
][
j
] = 
rhs
.
puzzÀ
[i][j];

159  *
	gthis
;

168 
	gãm∂©e
 <
	gN
>

169 
boﬁ
 
	gN_puzzÀ
<
	gN
>::
	$tûe_up_possibÀ
() const {

170  
puzzÀ_vÆid
 && (
zîo_i
 !
N
 - 1);

171 
	}
}

178 
	gãm∂©e
 <
	gN
>

179 
boﬁ
 
	gN_puzzÀ
<
	gN
>::
	$tûe_down_possibÀ
() const {

180  
puzzÀ_vÆid
 && (
zîo_i
 != 0);

181 
	}
}

188 
	gãm∂©e
 <
	gN
>

189 
boﬁ
 
	gN_puzzÀ
<
	gN
>::
	$tûe_À·_possibÀ
() const {

190  
puzzÀ_vÆid
 && (
zîo_j
 !
N
 - 1);

191 
	}
}

198 
	gãm∂©e
 <
	gN
>

199 
boﬁ
 
	gN_puzzÀ
<
	gN
>::
	$tûe_right_possibÀ
() const {

200  
puzzÀ_vÆid
 && (
zîo_j
 != 0);

201 
	}
}

203 
	gãm∂©e
 <
	gN
>

204 
	gN_puzzÀ
<
	gN
> N_puzzÀ<N>::
	$tûe_up
() const {

205 i‡–!
puzzÀ_vÆid
 ) {

206  *
this
;

209 
N_puzzÀ
 
	`ªsu…
–*
this
 );

211 i‡–
zîo_i
 =
N
 - 1 ) {

212 
ªsu…
.
puzzÀ_vÆid
 = 
Ál£
;

213  
ªsu…
;

216 
ªsu…
.
m™h©èn_di°™˚
 +=

217 
	`abs
–((
puzzÀ
[
zîo_i
 + 1][
zîo_j
] - 1Ë/ 
N
) - zero_i ) -

218 
	`abs
–((
puzzÀ
[
zîo_i
 + 1][
zîo_j
] - 1Ë/ 
N
) - (zero_i + 1) );

220 
ªsu…
.
puzzÀ
[
zîo_i
][
zîo_j
] =Öuzzle[zero_i + 1][zero_j];

221 ++
ªsu…
.
zîo_i
;

222 
ªsu…
.
puzzÀ
[ªsu….
zîo_i
][
zîo_j
] = 0;

224 
ªsu…
.
	`dëîmöe_hash
();

226  
ªsu…
;

227 
	}
}

229 
	gãm∂©e
 <
	gN
>

230 
	gN_puzzÀ
<
	gN
> N_puzzÀ<N>::
	$tûe_down
() const {

231 i‡–!
puzzÀ_vÆid
 ) {

232  *
this
;

235 
N_puzzÀ
 
	`ªsu…
–*
this
 );

237 i‡–
zîo_i
 == 0 ) {

238 
ªsu…
.
puzzÀ_vÆid
 = 
Ál£
;

239  
ªsu…
;

242 
ªsu…
.
m™h©èn_di°™˚
 +=

243 
	`abs
–((
puzzÀ
[
zîo_i
 - 1][
zîo_j
] - 1Ë/ 
N
) - zero_i ) -

244 
	`abs
–((
puzzÀ
[
zîo_i
 - 1][
zîo_j
] - 1Ë/ 
N
) - (zero_i - 1) );

246 
ªsu…
.
puzzÀ
[
zîo_i
][
zîo_j
] =Öuzzle[zero_i - 1][zero_j];

247 --
ªsu…
.
zîo_i
;

248 
ªsu…
.
puzzÀ
[ªsu….
zîo_i
][
zîo_j
] = 0;

250 
ªsu…
.
	`dëîmöe_hash
();

252  
ªsu…
;

253 
	}
}

255 
	gãm∂©e
 <
	gN
>

256 
	gN_puzzÀ
<
	gN
> N_puzzÀ<N>::
	$tûe_À·
() const {

257 i‡–!
puzzÀ_vÆid
 ) {

258  *
this
;

261 
N_puzzÀ
 
	`ªsu…
–*
this
 );

263 i‡–
zîo_j
 =
N
 - 1 ) {

264 
ªsu…
.
puzzÀ_vÆid
 = 
Ál£
;

265  
ªsu…
;

268 
ªsu…
.
m™h©èn_di°™˚
 +=

269 
	`abs
–((
puzzÀ
[
zîo_i
][
zîo_j
 + 1] - 1Ë% 
N
) - zero_j ) -

270 
	`abs
–((
puzzÀ
[
zîo_i
][
zîo_j
 + 1] - 1Ë% 
N
) - (zero_j + 1) );

272 
ªsu…
.
puzzÀ
[
zîo_i
][
zîo_j
] =Öuzzle[zero_i][zero_j + 1];

273 ++
ªsu…
.
zîo_j
;

274 
ªsu…
.
puzzÀ
[
zîo_i
][ªsu….
zîo_j
] = 0;

276 
ªsu…
.
	`dëîmöe_hash
();

278  
ªsu…
;

279 
	}
}

281 
	gãm∂©e
 <
	gN
>

282 
	gN_puzzÀ
<
	gN
> N_puzzÀ<N>::
	$tûe_right
() const {

283 i‡–!
puzzÀ_vÆid
 ) {

284  *
this
;

287 
N_puzzÀ
 
	`ªsu…
–*
this
 );

289 i‡–
zîo_j
 == 0 ) {

290 
ªsu…
.
puzzÀ_vÆid
 = 
Ál£
;

291  
ªsu…
;

294 
ªsu…
.
m™h©èn_di°™˚
 +=

295 
	`abs
–((
puzzÀ
[
zîo_i
][
zîo_j
 - 1] - 1Ë% 
N
) - zero_j ) -

296 
	`abs
–((
puzzÀ
[
zîo_i
][
zîo_j
 - 1] - 1Ë% 
N
) - (zero_j - 1) );

298 
ªsu…
.
puzzÀ
[
zîo_i
][
zîo_j
] =Öuzzle[zero_i][zero_j - 1];

299 --
ªsu…
.
zîo_j
;

300 
ªsu…
.
puzzÀ
[
zîo_i
][ªsu….
zîo_j
] = 0;

302 
ªsu…
.
	`dëîmöe_hash
();

304  
ªsu…
;

305 
	}
}

316 
	gãm∂©e
 <
	gN
>

317 
boﬁ
 
	gN_puzzÀ
<
	gN
>::
	$sﬁvabÀ
() const {

318 i‡–!
	`vÆid
() ) {

319  
Ál£
;

322 
íåõs
[
N
*N];

324  
i
 = 0; i < 
N
; ++i ) {

325  
j
 = 0; j < 
N
; ++j ) {

326 i‡–
puzzÀ
[
i
][
j
] == 0 ) {

327 
íåõs
[
N
*
i
 + 
j
] = N*N;

329 
íåõs
[
N
*
i
 + 
j
] = 
puzzÀ
[i][j];

334 
∑rôy
 = 0;

336  
i
 = 0; i < 
N
*N; ++i ) {

337  
j
 = 
i
 + 1; j < 
N
*N; ++j ) {

338 i‡–
íåõs
[
i
] >É¡rõs[
j
] ) {

339 ++
∑rôy
;

344 
∑rôy
 +2*
N
 - 2 - 
zîo_i
 - 
zîo_j
;

346  ( (
∑rôy
 & 1) == 0 );

347 
	}
}

349 
	gãm∂©e
 <
	gN
>

350 
boﬁ
 
	gN_puzzÀ
<
	gN
>::
	$vÆid
() const {

351  
puzzÀ_vÆid
;

352 
	}
}

359 
	gãm∂©e
 <
	gN
>

360 
	gN_puzzÀ
<
	gN
>::
	$lowî_bound
() const {

362  
	`vÆid
(Ë? 
m™h©èn_di°™˚
 : 
N
*N*N;

364 
ªsu…
 = 0;

365 
cou¡
 = 1;

367  
i
 = 0; i < 
N
; ++i ) {

368  
j
 = 0; j < 
N
; ++j ) {

369 i‡–
puzzÀ
[
i
][
j
] !(
cou¡
 % 
N
*N) ) {

370 ++
ªsu…
;

373 ++
cou¡
;

378  
ªsu…
;

382 
	}
}

394 
	gãm∂©e
 < 
	gN
 >

395 
boﬁ
 
	gN_puzzÀ
<
	gN
>::
›î©‹
==–
N_puzzÀ
 c⁄° &
rhs
 ) const {

396 i‡–!
vÆid
(Ë|| !
rhs
.vÆid(Ë|| 
hash
() !=Ñhs.hash() ) {

397  
Ál£
;

400  
	gi
 = 0; i < 
	gN
; ++i ) {

401  
	gj
 = 0; j < 
	gN
; ++j ) {

402 i‡–
	gpuzzÀ
[
i
][
j
] !
rhs
.
puzzÀ
[i][j] ) {

403  
Ál£
;

407  
	gåue
;

420 
	gãm∂©e
 < 
	gN
 >

421 
boﬁ
 
	gN_puzzÀ
<
	gN
>::
›î©‹
!=–
N_puzzÀ
 c⁄° &
rhs
 ) const {

422 i‡–!
vÆid
(Ë|| !
rhs
.valid() ) {

423  
Ál£
;

426 i‡–
hash
(Ë!
rhs
.hash() ) {

427  
åue
;

430  
	gi
 = 0; i < 
	gN
; ++i ) {

431  
	gj
 = 0; j < 
	gN
; ++j ) {

432 i‡–
	gpuzzÀ
[
i
][
j
] !
rhs
.
puzzÀ
[i][j] ) {

433  
åue
;

438  
	gÁl£
;

447 
	gãm∂©e
 < 
	gN
 >

448 
	gN_puzzÀ
<
	gN
>::
	$hash
() const {

449  
	`vÆid
(Ë? 
hash_vÆue
 : 0;

450 
	}
}

463 
	gãm∂©e
 <
	gN
>

464 
	gN_puzzÀ
<
	gN
> N_puzzÀ<N>::
	$sﬁuti⁄
() {

465 
¨øy
[
N
*N];

467  
i
 = 0; i < 
N
*N - 1; ++i ) {

468 
¨øy
[
i
] = i + 1;

471 
¨øy
[
N
*N - 1] = 0;

473  
N_puzzÀ
<
N
>–
¨øy
 );

474 
	}
}

	@am-kernels/benchmarks/microbench/src/bench.c

1 
	~<am.h
>

2 
	~<bíchm¨k.h
>

3 
	~<limôs.h
>

4 
	~<klib-ma¸os.h
>

6 
Bíchm¨k
 *
	gcuºít
;

7 
Sëtög
 *
	g£âög
;

9 *
	ghbrk
;

11 
uöt64_t
 
	$u±ime
(Ë{  
	`io_ªad
(
AM_TIMER_UPTIME
).
us
; 
	}
}

13 *
	$f‹m©_time
(
uöt64_t
 
us
) {

14 
buf
[32];

15 
uöt32_t
 
ms
 = 
us
 / 1000;

16 
us
 -
ms
 * 1000;

17 
	`as£π
(
us
 < 1000);

18 
Àn
 = 
	`•rötf
(
buf
, "%d.000", 
ms
);

19 *
p
 = &
buf
[
Àn
 - 1];

20 
us
 > 0) {

21 *(
p
 --Ë'0' + 
us
 % 10;

22 
us
 /= 10;

24  
buf
;

25 
	}
}

29 
	#ENTRY
(
_«me
, 
_¢ame
, 
_s
, 
_m
, 
_l
, 
_h
, 
_desc
) \

30 { .
¥ï¨e
 = 
bích_
##
_«me
##
_¥ï¨e
, \

31 .
run
 = 
bích_
##
_«me
##
_run
, \

32 .
vÆid©e
 = 
bích_
##
_«me
##
_vÆid©e
, \

33 .
«me
 = 
_¢ame
, \

34 .
desc
 = 
_desc
, \

35 .
£âögs
 = {
_s
, 
_m
, 
_l
, 
_h
}, },

	)

37 
Bíchm¨k
 
	gbíchm¨ks
[] = {

38 
BENCHMARK_LIST
(
ENTRY
)

42 
	$bích_¥ï¨e
(
Resu…
 *
ªs
) {

43 
ªs
->
u£c
 = 
	`u±ime
();

44 
	}
}

46 
	$bích_ª£t
() {

47 
hbrk
 = (*)
	`ROUNDUP
(
hóp
.
°¨t
, 8);

48 
	}
}

50 
	$bích_d⁄e
(
Resu…
 *
ªs
) {

51 
ªs
->
u£c
 = 
	`u±ime
() -Ñes->usec;

52 
	}
}

54 c⁄° *
	$bích_check
(
Bíchm¨k
 *
bích
) {

55 
uöçå_t
 
‰ì•
 = (uöçå_t)
hóp
.
íd
 - (uöçå_t)hóp.
°¨t
;

56 i‡(
‰ì•
 < 
£âög
->
mlim
) {

59  
NULL
;

60 
	}
}

62 
	$run_⁄˚
(
Bíchm¨k
 *
b
, 
Resu…
 *
ªs
) {

63 
	`bích_ª£t
();

64 
cuºít
->
	`¥ï¨e
();

65 
	`bích_¥ï¨e
(
ªs
);

66 
cuºít
->
	`run
();

67 
	`bích_d⁄e
(
ªs
);

68 
ªs
->
∑ss
 = 
cuºít
->
	`vÆid©e
();

69 
	}
}

71 
uöt32_t
 
	$sc‹e
(
Bíchm¨k
 *
b
, 
uöt64_t
 
u£c
) {

72 i‡(
u£c
 == 0)  0;

73  (
uöt64_t
)(
REF_SCORE
Ë* 
£âög
->
ªf
 / 
u£c
;

74 
	}
}

76 
	$maö
(c⁄° *
¨gs
) {

77 c⁄° *
£âög_«me
 = 
¨gs
;

78 i‡(
¨gs
 =
NULL
 || 
	`°rcmp
(args, "") == 0) {

79 
	`¥ötf
("Empty mainargs. Use \"ref\" by default\n");

80 
£âög_«me
 = "ref";

82 
£âög_id
 = -1;

84 i‡(
	`°rcmp
(
£âög_«me
, "ã°" ) =0Ë
£âög_id
 = 0;

85 i‡(
	`°rcmp
(
£âög_«me
, "åaö"Ë=0Ë
£âög_id
 = 1;

86 i‡(
	`°rcmp
(
£âög_«me
, "ªf" ) =0Ë
£âög_id
 = 2;

87 i‡(
	`°rcmp
(
£âög_«me
, "huge" ) =0Ë
£âög_id
 = 3;

89 
	`¥ötf
("Invalid mainargs: \"%s\"; "

90 "mu° bêö {ã°,Åøö,Ñef, huge}\n", 
£âög_«me
);

91 
	`hÆt
(1);

94 
	`i€_öô
();

96 
	`¥ötf
("======Ru¬ög Mi¸oBích [öpuà*%s*] =======\n", 
£âög_«me
);

98 
uöt32_t
 
bích_sc‹e
 = 0;

99 
∑ss
 = 1;

100 
uöt64_t
 
t0
 = 
	`u±ime
();

101 
uöt64_t
 
sc‹e_time
 = 0;

103 
i
 = 0; i < 
	`LENGTH
(
bíchm¨ks
); i ++) {

104 
Bíchm¨k
 *
bích
 = &
bíchm¨ks
[
i
];

105 
cuºít
 = 
bích
;

106 
£âög
 = &
bích
->
£âögs
[
£âög_id
];

107 c⁄° *
msg
 = 
	`bích_check
(
bích
);

108 
	`¥ötf
("[%s] %s: ", 
bích
->
«me
, bích->
desc
);

109 i‡(
msg
 !
NULL
) {

110 
	`¥ötf
("Ign‹ed %s\n", 
msg
);

112 
uöt64_t
 
u£c
 = 
ULLONG_MAX
;

113 
succ
 = 1;

114 
i
 = 0; i < 
REPEAT
; i ++) {

115 
Resu…
 
ªs
;

116 
	`run_⁄˚
(
bích
, &
ªs
);

117 
	`¥ötf
(
ªs
.
∑ss
 ? "*" : "X");

118 
succ
 &
ªs
.
∑ss
;

119 i‡(
ªs
.
u£c
 < usec) usec =Ñes.usec;

120 
sc‹e_time
 +
ªs
.
u£c
;

123 i‡(
succ
Ë
	`¥ötf
(" Passed.");

124 
	`¥ötf
(" Failed.");

126 
∑ss
 &
succ
;

128 
uöt32_t
 
cur
 = 
succ
 ? 
	`sc‹e
(
bích
, 
u£c
) : 0;

130 
	`¥ötf
("\n");

131 i‡(
£âög_id
 != 0) {

132 
	`¥ötf
(" möÅime: %†m†[%d]\n", 
	`f‹m©_time
(
u£c
), 
cur
);

135 
bích_sc‹e
 +
cur
;

138 
uöt64_t
 
tŸÆ_time
 = 
	`u±ime
(Ë- 
t0
;

140 
bích_sc‹e
 /
	`LENGTH
(
bíchm¨ks
);

142 
	`¥ötf
("==================================================\n");

143 
	`¥ötf
("Mi¸oBích %s", 
∑ss
 ? "PASS" : "FAIL");

144 i‡(
£âög_id
 >= 2) {

145 
	`¥ötf
(" %d M¨ks\n", 
bích_sc‹e
);

146 
	`¥ötf
(" vs. %d M¨k†(%s)\n", 
REF_SCORE
, 
REF_CPU
);

148 
	`¥ötf
("\n");

150 
	`¥ötf
("Sc‹edÅime: %†ms\n", 
	`f‹m©_time
(
sc‹e_time
));

151 
	`¥ötf
("TŸÆÅime: %†ms\n", 
	`f‹m©_time
(
tŸÆ_time
));

153 
	}
}

157 * 
	$bích_Æloc
(
size_t
 
size
) {

158 
size
 = (
size_t
)
	`ROUNDUP
(size, 8);

159 *
ﬁd
 = 
hbrk
;

160 
hbrk
 +
size
;

161 
	`as£π
((
uöçå_t
)
hóp
.
°¨t
 <(uöçå_t)
hbrk
 && (uöçå_t)hbrk < (uöçå_t)hóp.
íd
);

162 
uöt64_t
 *
p
 = (uöt64_à*)
ﬁd
;Ö !(uöt64_à*)
hbrk
;Ö ++) {

163 *
p
 = 0;

165 
	`as£π
((
uöçå_t
)
hbrk
 - (uöçå_t)
hóp
.
°¨t
 <
£âög
->
mlim
);

166  
ﬁd
;

167 
	}
}

169 
	$bích_‰ì
(*
±r
) {

170 
	}
}

172 
uöt32_t
 
	g£ed
 = 1;

174 
	$bích_§™d
(
uöt32_t
 
_£ed
) {

175 
£ed
 = 
_£ed
 & 0x7fff;

176 
	}
}

178 
uöt32_t
 
	$bích_ønd
() {

179 
£ed
 = (£ed * (
uöt32_t
)214013L + (uint32_t)2531011L);

180  (
£ed
 >> 16) & 0x7fff;

181 
	}
}

184 
uöt32_t
 
	$checksum
(*
°¨t
, *
íd
) {

185 c⁄° 
uöt32_t
 
x
 = 16777619;

186 
uöt32_t
 
h1
 = 2166136261u;

187 
uöt8_t
 *
p
 = (uöt8_t*)
°¨t
;Ö + 4 < (uöt8_t*)
íd
;Ö += 4) {

188 
i
 = 0; i < 4; i ++) {

189 
h1
 = (h1 ^ 
p
[
i
]Ë* 
x
;

192 
öt32_t
 
hash
 = (
uöt32_t
)
h1
;

193 
hash
 += hash << 13;

194 
hash
 ^= hash >> 7;

195 
hash
 += hash << 3;

196 
hash
 ^= hash >> 17;

197 
hash
 += hash << 5;

198  
hash
;

199 
	}
}

	@am-kernels/benchmarks/microbench/src/bf/bf.c

24 
	~<bíchm¨k.h
>

26 
	gARR_SIZE
;

28 
	#CODE
 ">>+>>>>>,[>+>>,]>+[--[+<<<-]<[<+>-]<[<[->[<<<+>>>>+<-]<<[>>+>[->]<<[<]" \

30 ">]<+<<[<<<]>-]]+<<<]+[->>>]>>]>>[.>>>]"

	)

32 
	#OP_END
 0

	)

33 
	#OP_INC_DP
 1

	)

34 
	#OP_DEC_DP
 2

	)

35 
	#OP_INC_VAL
 3

	)

36 
	#OP_DEC_VAL
 4

	)

37 
	#OP_OUT
 5

	)

38 
	#OP_IN
 6

	)

39 
	#OP_JMP_FWD
 7

	)

40 
	#OP_JMP_BCK
 8

	)

42 
	#SUCCESS
 0

	)

43 
	#FAILURE
 1

	)

45 
	#PROGRAM_SIZE
 4096

	)

46 
	#STACK_SIZE
 512

	)

47 
	#DATA_SIZE
 4096

	)

49 
	#STACK_PUSH
(
A
Ë(
STACK
[
SP
++] = A)

	)

50 
	#STACK_POP
(Ë(
STACK
[--
SP
])

	)

51 
	#STACK_EMPTY
(Ë(
SP
 =0)

	)

52 
	#STACK_FULL
(Ë(
SP
 =
STACK_SIZE
)

	)

54 
	sö°ru˘i⁄_t
 {

55 
	m›î©‹
;

56 
	m›î™d
;

59 
ö°ru˘i⁄_t
 *
	gPROGRAM
;

60 *
	gSTACK
;

61 
	gSP
;

62 c⁄° *
	gcode
;

63 *
	göput
;

65 
	$compûe_bf
() {

66 
pc
 = 0, 
jmp_pc
;

67 ; *
code
; code ++) {

68 
c
 = *
code
;

69 i‡(
pc
 >
PROGRAM_SIZE
) ;

70 
c
) {

71 '>': 
PROGRAM
[
pc
].
›î©‹
 = 
OP_INC_DP
; ;

72 '<': 
PROGRAM
[
pc
].
›î©‹
 = 
OP_DEC_DP
; ;

73 '+': 
PROGRAM
[
pc
].
›î©‹
 = 
OP_INC_VAL
; ;

74 '-': 
PROGRAM
[
pc
].
›î©‹
 = 
OP_DEC_VAL
; ;

75 '.': 
PROGRAM
[
pc
].
›î©‹
 = 
OP_OUT
; ;

76 ',': 
PROGRAM
[
pc
].
›î©‹
 = 
OP_IN
; ;

78 
PROGRAM
[
pc
].
›î©‹
 = 
OP_JMP_FWD
;

79 i‡(
	`STACK_FULL
()) {

80  
FAILURE
;

82 
	`STACK_PUSH
(
pc
);

85 i‡(
	`STACK_EMPTY
()) {

86  
FAILURE
;

88 
jmp_pc
 = 
	`STACK_POP
();

89 
PROGRAM
[
pc
].
›î©‹
 = 
OP_JMP_BCK
;

90 
PROGRAM
[
pc
].
›î™d
 = 
jmp_pc
;

91 
PROGRAM
[
jmp_pc
].
›î™d
 = 
pc
;

93 : 
pc
--; ;

95 
pc
++;

97 i‡(!
	`STACK_EMPTY
(Ë|| 
pc
 =
PROGRAM_SIZE
) {

98  
FAILURE
;

100 
PROGRAM
[
pc
].
›î©‹
 = 
OP_END
;

101  
SUCCESS
;

102 
	}
}

104 *
	gd©a
;

105 *
	gouçut
;

106 
	gnouçut
;

108 
	$execuã_bf
() {

109 
pc
 = 0, 
±r
 = 0;

110 
PROGRAM
[
pc
].
›î©‹
 !
OP_END
 && 
±r
 < 
DATA_SIZE
) {

111 
PROGRAM
[
pc
].
›î©‹
) {

112 
OP_INC_DP
: 
±r
++; ;

113 
OP_DEC_DP
: 
±r
--; ;

114 
OP_INC_VAL
: 
d©a
[
±r
]++; ;

115 
OP_DEC_VAL
: 
d©a
[
±r
]--; ;

116 
OP_OUT
: 
ouçut
[
nouçut
 ++] = 
d©a
[
±r
]; ;

117 
OP_IN
: 
d©a
[
±r
] = *(
öput
 ++); ;

118 
OP_JMP_FWD
: if(!
d©a
[
±r
]Ë{ 
pc
 = 
PROGRAM
[pc].
›î™d
; } ;

119 
OP_JMP_BCK
: if(
d©a
[
±r
]Ë{ 
pc
 = 
PROGRAM
[pc].
›î™d
; } ;

122 
pc
++;

124 
	}
}

126 
	$bích_bf_¥ï¨e
() {

127 
ARR_SIZE
 = 
£âög
->
size
;

128 
SP
 = 0;

129 
PROGRAM
 = 
	`bích_Æloc
((PROGRAM[0]Ë* 
PROGRAM_SIZE
);

130 
STACK
 = 
	`bích_Æloc
((STACK[0]Ë* 
STACK_SIZE
);

131 
d©a
 = 
	`bích_Æloc
((d©a[0]Ë* 
DATA_SIZE
);

132 
code
 = 
CODE
;

133 
öput
 = 
	`bích_Æloc
(
ARR_SIZE
 + 1);

134 
ouçut
 = 
	`bích_Æloc
(
DATA_SIZE
);

135 
nouçut
 = 0;

137 
	`bích_§™d
(1);

138 
i
 = 0; i < 
ARR_SIZE
; i ++) {

139 
öput
[
i
] = "0123456789abcdefghijklmn›qr°uvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ"[
	`bích_ønd
() % 62];

141 
	}
}

143 
	$bích_bf_run
() {

144 
	`compûe_bf
();

145 
	`execuã_bf
();

146 
	}
}

148 
	$bích_bf_vÆid©e
() {

149 
uöt32_t
 
cs
 = 
	`checksum
(
ouçut
, ouçuà+ 
nouçut
);

150  
nouçut
 =
ARR_SIZE
 && 
cs
 =
£âög
->
checksum
;

151 
	}
}

	@am-kernels/benchmarks/microbench/src/dinic/dinic.cc

1 
	~<bíchm¨k.h
>

3 
	gN
;

4 c⁄° 
	gINF
 = 0x3f3f3f;

6 
	sEdge
 {

7 
	m‰om
, 
	mto
, 
	mˇp
, 
	mÊow
;

8 
Edge
(){}

9 
Edge
(
‰om
, 
to
, 
ˇp
, 
Êow
) {

10 
	mthis
->
	m‰om
 = 
‰om
;

11 
	mthis
->
	mto
 = 
to
;

12 
	mthis
->
	mˇp
 = 
ˇp
;

13 
	mthis
->
	mÊow
 = 
Êow
;

17 
	gãm∂©e
<
ty≥«me
 
	gT
>

18 
ölöe
 
T
 
	$mö
(
T
 
x
, T 
y
) {

19  
x
 < 
y
 ? x : y;

20 
	}
}

22 
	sDöic
 {

23 
	mn
, 
	mm
, 
	ms
, 
	mt
;

24 
Edge
 *
	medges
;

25 *
	mhód
, *
	mnxt
, *
	md
, *
	mcur
, *
	mqueue
;

26 
boﬁ
 *
	mvis
;

28 
öô
(
n
) {

29 
	mnﬁd
 = (
n
 - 2) / 2;

30 
	mmaxm
 = (
nﬁd
 *Çold +Çold * 2) * 2;

32 
	medges
 = (
Edge
 *)
bích_Æloc
((EdgeË* 
maxm
);

33 
	mhód
 = (*)
bích_Æloc
((Ë* 
n
);

34 
	mnxt
 = (*)
bích_Æloc
((Ë* 
maxm
);

35 
	mvis
 = (
boﬁ
 *)
bích_Æloc
((boﬁË* 
n
);

36 
	md
 = (*)
bích_Æloc
((Ë* 
n
);

37 
	mcur
 = (*)
bích_Æloc
((Ë* 
n
);

38 
	mqueue
 = (*)
bích_Æloc
((Ë* 
n
);

40 
	mthis
->
	mn
 = 
n
;

41 
	mi
 = 0; i < 
	mn
; i ++) {

42 
	mhód
[
i
] = -1;

44 
	mm
 = 0;

47 
AddEdge
(
u
, 
v
, 
c
) {

48 i‡(
	mc
 == 0) ;

49 
	medges
[
m
] = 
Edge
(
u
, 
v
, 
c
, 0);

50 
	mnxt
[
m
] = 
hód
[
u
];

51 
	mhód
[
u
] = 
m
++;

52 
	medges
[
m
] = 
Edge
(
v
, 
u
, 0, 0);

53 
	mnxt
[
m
] = 
hód
[
v
];

54 
	mhód
[
v
] = 
m
++;

57 
boﬁ
 
BFS
() {

58 
	mi
 = 0; i < 
	mn
; i ++Ë
	mvis
[
i
] = 0;

59 
	mqf
 = 0, 
	mqr
 = 0;

60 
	mqueue
[
qr
 ++] = 
s
;

61 
	md
[
s
] = 0;

62 
	mvis
[
s
] = 1;

63 
	mqf
 !
qr
) {

64 
x
 = 
queue
[
qf
 ++];

65 
	mi
 = 
hód
[
x
]; i !-1; i = 
nxt
[
i
]) {

66 
Edge
& 
e
 = 
edges
[
i
];

67 i‡(!
	mvis
[
e
.
to
] && 
	me
.
	mˇp
 >É.
	mÊow
) {

68 
	mvis
[
e
.
to
] = 1;

69 
	md
[
e
.
to
] = 
d
[
x
] + 1;

70 
	mqueue
[
qr
 ++] = 
e
.
to
;

74  
	mvis
[
t
];

77 
DFS
(
x
, 
a
) {

78 i‡(
	mx
 =
t
 || 
a
 == 0) á;

79 
	mÊow
 = 0, 
	mf
;

80 
	mi
 = 
cur
[
x
]; i !-1; i = 
nxt
[
i
]) {

81 
Edge
& 
e
 = 
edges
[
i
];

82 i‡(
	md
[
x
] + 1 =
d
[
e
.
to
] && (
f
 = 
DFS
”.to, 
mö
(
a
,É.
ˇp
-e.
Êow
))) > 0) {

83 
	me
.
	mÊow
 +
f
;

84 
	medges
[
i
^1].
	mÊow
 -
f
;

85 
	mÊow
 +
f
;

86 
	ma
 -
f
;

87 i‡(
	ma
 == 0) ;

90  
	mÊow
;

93 
MaxÊow
(
s
, 
t
) {

94 
	mthis
 -> 
	ms
 = 
s
;Åhi†-> 
	mt
 = 
t
;

95 
	mÊow
 = 0;

96 
BFS
()) {

97 
	mi
 = 0; i < 
	mn
; i++)

98 
	mcur
[
i
] = 
hód
[i];

99 
	mÊow
 +
DFS
(
s
, 
INF
);

101  
	mÊow
;

109 
Döic
 *
G
;

110 
™s
;

112 
bích_döic_¥ï¨e
() {

113 
N
 = 
£âög
->
size
;

114 
bích_§™d
(1);

115 
s
 = 2 * 
N
, 
t
 = 2 * N + 1;

116 
G
 = (
Döic
*)
bích_Æloc
((Dinic));

117 
G
->
öô
(2 * 
N
 + 2);

118 
i
 = 0; i < 
N
; i ++)

119 
j
 = 0; j < 
N
; j ++) {

120 
G
->
AddEdge
(
i
, 
N
 + 
j
, 
bích_ønd
() % 10);

123 
i
 = 0; i < 
N
; i ++) {

124 
G
->
AddEdge
(
s
, 
i
, 
bích_ønd
() % 1000);

125 
G
->
AddEdge
(
N
 + 
i
, 
t
, 
bích_ønd
() % 1000);

129 
bích_döic_run
() {

130 
™s
 = 
G
->
MaxÊow
(2 * 
N
, 2 * N + 1);

133 
bích_döic_vÆid©e
() {

134  (
uöt32_t
)
™s
 =
£âög
->
checksum
;

	@am-kernels/benchmarks/microbench/src/fib/fib.c

1 
	~<bíchm¨k.h
>

5 
	#N
 2147483603

	)

6 
	gM
;

8 
	$put
(
uöt32_t
 *
m
, 
i
, 
j
, uöt32_à
d©a
) {

9 
m
[
i
 * 
M
 + 
j
] = 
d©a
;

10 
	}
}

12 
uöt32_t
 
	$gë
(
uöt32_t
 *
m
, 
i
, 
j
) {

13  
m
[
i
 * 
M
 + 
j
];

14 
	}
}

16 
ölöe
 
	$mu…
(
uöt32_t
 *
c
, uöt32_à*
a
, uöt32_à*
b
) {

17 
i
 = 0; i < 
M
; i ++)

18 
j
 = 0; j < 
M
; j ++) {

19 
	`put
(
c
, 
i
, 
j
, 0);

20 
k
 = 0; k < 
M
; k ++) {

21 
	`put
(
c
, 
i
, 
j
, 
	`gë
(c, i, jË+ gë(
a
, i, 
k
Ë* gë(
b
, k, j));

24 
	}
}

26 
ölöe
 
	$assign
(
uöt32_t
 *
a
, uöt32_à*
b
) {

27 
i
 = 0; i < 
M
; i ++)

28 
j
 = 0; j < 
M
; j ++)

29 
	`put
(
a
, 
i
, 
j
, 
	`gë
(
b
, i, j));

30 
	}
}

32 
uöt32_t
 *
	gA
, *
	g™s
, *
	gT
, *
	gtmp
;

34 
	$bích_fib_¥ï¨e
() {

35 
M
 = 
£âög
->
size
;

36 
sz
 = (
uöt32_t
Ë* 
M
 * M;

37 
A
 = 
	`bích_Æloc
(
sz
);

38 
T
 = 
	`bích_Æloc
(
sz
);

39 
™s
 = 
	`bích_Æloc
(
sz
);

40 
tmp
 = 
	`bích_Æloc
(
sz
);

41 
	}
}

43 
	$bích_fib_run
() {

44 
i
 = 0; i < 
M
; i ++)

45 
j
 = 0; j < 
M
; j ++) {

46 
uöt32_t
 
x
 = (
i
 =
M
 - 1 || 
j
 == i + 1);

47 
	`put
(
A
, 
i
, 
j
, 
x
);

48 
	`put
(
T
, 
i
, 
j
, 
x
);

49 
	`put
(
™s
, 
i
, 
j
, i == j);

52 
n
 = 
N
;Ç > 0;Ç >>= 1) {

53 i‡(
n
 & 1) {

54 
	`mu…
(
tmp
, 
™s
, 
T
);

55 
	`assign
(
™s
, 
tmp
);

57 
	`mu…
(
tmp
, 
T
, T);

58 
	`assign
(
T
, 
tmp
);

60 
	}
}

62 
	$bích_fib_vÆid©e
() {

63  
	`gë
(
™s
, 
M
-1, M-1Ë=
£âög
->
checksum
;

64 
	}
}

	@am-kernels/benchmarks/microbench/src/lzip/lzip.c

1 
	~"quicklz.h
"

2 
	~<bíchm¨k.h
>

4 
	gSIZE
;

6 
qlz_°©e_com¥ess
 *
	g°©e
;

7 *
	gblk
;

8 *
	gcom¥ess
;

9 
	gÀn
;

11 
	$bích_lzù_¥ï¨e
() {

12 
SIZE
 = 
£âög
->
size
;

13 
	`bích_§™d
(1);

14 
°©e
 = 
	`bích_Æloc
((
qlz_°©e_com¥ess
));

15 
blk
 = 
	`bích_Æloc
(
SIZE
);

16 
com¥ess
 = 
	`bích_Æloc
(
SIZE
 + 400);

17 
i
 = 0; i < 
SIZE
; i ++) {

18 
blk
[
i
] = 'a' + 
	`bích_ønd
() % 26;

20 
	}
}

22 
	$bích_lzù_run
() {

23 
Àn
 = 
	`qlz_com¥ess
(
blk
, 
com¥ess
, 
SIZE
, 
°©e
);

24 
	}
}

26 
	$bích_lzù_vÆid©e
() {

27  
	`checksum
(
com¥ess
, com¥es†+ 
Àn
Ë=
£âög
->
checksum
;

28 
	}
}

	@am-kernels/benchmarks/microbench/src/lzip/quicklz.c

12 
	~"quicklz.h
"

14 #i‡
QLZ_VERSION_MAJOR
 !1 || 
QLZ_VERSION_MINOR
 !5 || 
QLZ_VERSION_REVISION
 != 0

15 #îr‹ 
quicklz
.
c
 
™d
 quicklz.
h
 
have
 
dif„ª¡
 
vîsi⁄s


18 
	#MINOFFSET
 2

	)

19 
	#UNCONDITIONAL_MATCHLEN
 6

	)

20 
	#UNCOMPRESSED_END
 4

	)

21 
	#CWORD_LEN
 4

	)

23 #i‡
QLZ_COMPRESSION_LEVEL
 =1 && 
deföed
 
QLZ_PTR_64
 && 
QLZ_STREAMING_BUFFER
 == 0

24 
	#OFFSET_BASE
 
sour˚


	)

25 
	#CAST
 (
ui32
)(
size_t
)

	)

27 
	#OFFSET_BASE
 0

	)

28 
	#CAST


	)

31 
	$qlz_gë_£âög
(
£âög
)

33 
£âög
)

35 0:  
QLZ_COMPRESSION_LEVEL
;

36 1:  (
qlz_°©e_com¥ess
);

37 2:  (
qlz_°©e_decom¥ess
);

38 3:  
QLZ_STREAMING_BUFFER
;

39 #ifde‡
QLZ_MEMORY_SAFE


44 7:  
QLZ_VERSION_MAJOR
;

45 8:  
QLZ_VERSION_MINOR
;

46 9:  
QLZ_VERSION_REVISION
;

49 
	}
}

51 #i‡
QLZ_COMPRESSION_LEVEL
 == 1

52 
	$ßme
(c⁄° *
§c
, 
size_t
 
n
)

54 
n
 > 0 && *(
§c
 +Ç) == *src)

55 
n
--;

56  
n
 == 0 ? 1 : 0;

57 
	}
}

60 
	$ª£t_èbÀ_com¥ess
(
qlz_°©e_com¥ess
 *
°©e
)

62 
i
;

63 
i
 = 0; i < 
QLZ_HASH_VALUES
; i++)

65 #i‡
QLZ_COMPRESSION_LEVEL
 == 1

66 
°©e
->
hash
[
i
].
off£t
 = 0;

68 
°©e
->
hash_cou¡î
[
i
] = 0;

71 
	}
}

73 
	$ª£t_èbÀ_decom¥ess
(
qlz_°©e_decom¥ess
 *
°©e
)

75 
i
;

76 ()
°©e
;

77 ()
i
;

78 #i‡
QLZ_COMPRESSION_LEVEL
 == 2

79 
i
 = 0; i < 
QLZ_HASH_VALUES
; i++)

81 
°©e
->
hash_cou¡î
[
i
] = 0;

84 
	}
}

86 
__ölöe
 
ui32
 
	$hash_func
(
ui32
 
i
)

88 #i‡
QLZ_COMPRESSION_LEVEL
 == 2

89  ((
i
 >> 9Ë^ (ò>> 13Ë^ iË& (
QLZ_HASH_VALUES
 - 1);

91  ((
i
 >> 12Ë^ iË& (
QLZ_HASH_VALUES
 - 1);

93 
	}
}

95 
__ölöe
 
ui32
 
	$Á°_ªad
(c⁄° *
§c
, 
ui32
 
byãs
)

97 
uöt32_t
 
ªt
 = 0;

98 i‡(
byãs
 >= 1 && bytes <= 4) {

99 
uöt32_t
 
i
 = 0; i < 
byãs
; i ++) {

100 
ªt
 |((
uöt8_t
*)
§c
)[
i
] << (i * 8);

103  
ªt
;

104 
	}
}

106 
__ölöe
 
ui32
 
	$hash©
(c⁄° *
§c
)

108 
ui32
 
„tch
, 
hash
;

109 
„tch
 = 
	`Á°_ªad
(
§c
, 3);

110 
hash
 = 
	`hash_func
(
„tch
);

111  
hash
;

112 
	}
}

114 
__ölöe
 
	$Á°_wrôe
(
ui32
 
f
, *
d°
, 
size_t
 
byãs
)

116 
size_t
 
i
 = 0; i !
byãs
; i ++) {

117 ((*)
d°
)[
i
] = ((*)&
f
)[i];

119 
	}
}

122 
size_t
 
	$qlz_size_decom¥es£d
(c⁄° *
sour˚
)

124 
ui32
 
n
, 
r
;

125 
n
 = (((*
sour˚
) & 2) == 2) ? 4 : 1;

126 
r
 = 
	`Á°_ªad
(
sour˚
 + 1 + 
n
,Ç);

127 
r
 =Ñ & (0xfffffff‡>> ((4 - 
n
)*8));

128  
r
;

129 
	}
}

131 
size_t
 
	$qlz_size_com¥es£d
(c⁄° *
sour˚
)

133 
ui32
 
n
, 
r
;

134 
n
 = (((*
sour˚
) & 2) == 2) ? 4 : 1;

135 
r
 = 
	`Á°_ªad
(
sour˚
 + 1, 
n
);

136 
r
 =Ñ & (0xfffffff‡>> ((4 - 
n
)*8));

137  
r
;

138 
	}
}

140 
size_t
 
	$qlz_size_hódî
(c⁄° *
sour˚
)

142 
size_t
 
n
 = 2*((((*
sour˚
) & 2) == 2) ? 4 : 1) + 1;

143  
n
;

144 
	}
}

147 
__ölöe
 
	$mem˝y_up
(*
d°
, c⁄° *
§c
, 
ui32
 
n
)

149 
	`as£π
(0);

150 
	}
}

152 
__ölöe
 
	$upd©e_hash
(
qlz_°©e_decom¥ess
 *
°©e
, c⁄° *
s
)

154 #i‡
QLZ_COMPRESSION_LEVEL
 == 1

155 
ui32
 
hash
;

156 
hash
 = 
	`hash©
(
s
);

157 
°©e
->
hash
[hash].
off£t
 = 
s
;

158 
°©e
->
hash_cou¡î
[
hash
] = 1;

159 #ñi‡
QLZ_COMPRESSION_LEVEL
 == 2

160 
ui32
 
hash
;

161 
c
;

162 
hash
 = 
	`hash©
(
s
);

163 
c
 = 
°©e
->
hash_cou¡î
[
hash
];

164 
°©e
->
hash
[hash].
off£t
[
c
 & (
QLZ_POINTERS
 - 1)] = 
s
;

165 
c
++;

166 
°©e
->
hash_cou¡î
[
hash
] = 
c
;

168 ()
°©e
;

169 ()
s
;

170 
	}
}

172 #i‡
QLZ_COMPRESSION_LEVEL
 <= 2

173 
	$upd©e_hash_u±o
(
qlz_°©e_decom¥ess
 *
°©e
, **
lh
, c⁄° *
max
)

175 *
lh
 < 
max
)

177 (*
lh
)++;

178 
	`upd©e_hash
(
°©e
, *
lh
);

180 
	}
}

183 
size_t
 
	$qlz_com¥ess_c‹e
(c⁄° *
sour˚
, *
de°ö©i⁄
, 
size_t
 
size
, 
qlz_°©e_com¥ess
 *
°©e
)

185 c⁄° *
œ°_byã
 = 
sour˚
 + 
size
 - 1;

186 c⁄° *
§c
 = 
sour˚
;

187 *
cw‹d_±r
 = 
de°ö©i⁄
;

188 *
d°
 = 
de°ö©i⁄
 + 
CWORD_LEN
;

189 
ui32
 
cw‹d_vÆ
 = 1U << 31;

190 c⁄° *
œ°_m©ch°¨t
 = 
œ°_byã
 - 
UNCONDITIONAL_MATCHLEN
 - 
UNCOMPRESSED_END
;

191 
ui32
 
„tch
 = 0;

192 
lôs
 = 0;

194 (Ë
lôs
;

196 if(
§c
 <
œ°_m©ch°¨t
)

197 
„tch
 = 
	`Á°_ªad
(
§c
, 3);

199 
§c
 <
œ°_m©ch°¨t
)

201 i‡((
cw‹d_vÆ
 & 1) == 1)

204 i‡(
§c
 > 
sour˚
 + (
size
 >> 1Ë&& 
d°
 - 
de°ö©i⁄
 > src - source - ((src - source) >> 5))

207 
	`Á°_wrôe
((
cw‹d_vÆ
 >> 1Ë| (1U << 31), 
cw‹d_±r
, 
CWORD_LEN
);

209 
cw‹d_±r
 = 
d°
;

210 
d°
 +
CWORD_LEN
;

211 
cw‹d_vÆ
 = 1U << 31;

212 
„tch
 = 
	`Á°_ªad
(
§c
, 3);

214 #i‡
QLZ_COMPRESSION_LEVEL
 == 1

216 c⁄° *
o
;

217 
ui32
 
hash
, 
ˇched
;

219 
hash
 = 
	`hash_func
(
„tch
);

220 
ˇched
 = 
„tch
 ^ 
°©e
->
hash
[hash].
ˇche
;

221 
°©e
->
hash
[hash].
ˇche
 = 
„tch
;

223 
o
 = 
°©e
->
hash
[hash].
off£t
 + 
OFFSET_BASE
;

224 
°©e
->
hash
[hash].
off£t
 = 
	`CAST
(
§c
 - 
OFFSET_BASE
);

226 i‡(
ˇched
 =0 && 
o
 !
OFFSET_BASE
 && (
§c
 - o > 
MINOFFSET
 || (§¯=ÿ+ 1 && 
lôs
 >3 && sr¯> 
sour˚
 + 3 && 
	`ßme
(src - 3, 6))))

228 i‡(*(
o
 + 3Ë!*(
§c
 + 3))

230 
hash
 <<= 4;

231 
cw‹d_vÆ
 = (cword_val >> 1) | (1U << 31);

232 
	`Á°_wrôe
((3 - 2Ë| 
hash
, 
d°
, 2);

233 
§c
 += 3;

234 
d°
 += 2;

238 c⁄° *
ﬁd_§c
 = 
§c
;

239 
size_t
 
m©chÀn
;

240 
hash
 <<= 4;

242 
cw‹d_vÆ
 = (cword_val >> 1) | (1U << 31);

243 
§c
 += 4;

245 if(*(
o
 + (
§c
 - 
ﬁd_§c
)) == *src)

247 
§c
++;

248 if(*(
o
 + (
§c
 - 
ﬁd_§c
)) == *src)

250 
size_t
 
q
 = 
œ°_byã
 - 
UNCOMPRESSED_END
 - (
§c
 - 5) + 1;

251 
size_t
 
ªmaöög
 = 
q
 > 255 ? 255 : q;

252 
§c
++;

253 *(
o
 + (
§c
 - 
ﬁd_§c
)Ë=*§¯&& (
size_t
)(§¯- old_§cË< 
ªmaöög
)

254 
§c
++;

258 
m©chÀn
 = 
§c
 - 
ﬁd_§c
;

259 i‡(
m©chÀn
 < 18)

261 
	`Á°_wrôe
((
ui32
)(
m©chÀn
 - 2Ë| 
hash
, 
d°
, 2);

262 
d°
 += 2;

266 
	`Á°_wrôe
((
ui32
)(
m©chÀn
 << 16Ë| 
hash
, 
d°
, 3);

267 
d°
 += 3;

270 
„tch
 = 
	`Á°_ªad
(
§c
, 3);

271 
lôs
 = 0;

275 
lôs
++;

276 *
d°
 = *
§c
;

277 
§c
++;

278 
d°
++;

279 
cw‹d_vÆ
 = (cword_val >> 1);

280 
„tch
 = („tch >> 8 & 0xffffË| (*(
§c
 + 2) << 16);

283 #ñi‡
QLZ_COMPRESSION_LEVEL
 >= 2

285 c⁄° *
o
, *
off£t2
;

286 
ui32
 
hash
, 
m©chÀn
, 
k
, 
m
, 
be°_k
 = 0;

287 
c
;

288 
size_t
 
ªmaöög
 = (
œ°_byã
 - 
UNCOMPRESSED_END
 - 
§c
 + 1) > 255 ? 255 : (last_byte - UNCOMPRESSED_END - src + 1);

289 ()
be°_k
;

293 
„tch
 = 
	`Á°_ªad
(
§c
, 3);

294 
hash
 = 
	`hash_func
(
„tch
);

296 
c
 = 
°©e
->
hash_cou¡î
[
hash
];

298 
off£t2
 = 
°©e
->
hash
[hash].
off£t
[0];

299 if(
off£t2
 < 
§c
 - 
MINOFFSET
 && 
c
 > 0 && ((
	`Á°_ªad
(off£t2, 3Ë^ 
„tch
) & 0xffffff) == 0)

301 
m©chÀn
 = 3;

302 if(*(
off£t2
 + 
m©chÀn
Ë=*(
§c
 + matchlen))

304 
m©chÀn
 = 4;

305 *(
off£t2
 + 
m©chÀn
Ë=*(
§c
 + m©chÀnË&& m©chÀ¿< 
ªmaöög
)

306 
m©chÀn
++;

310 
m©chÀn
 = 0;

311 
k
 = 1; k < 
QLZ_POINTERS
 && 
c
 > k; k++)

313 
o
 = 
°©e
->
hash
[hash].
off£t
[
k
];

314 #i‡
QLZ_COMPRESSION_LEVEL
 == 3

315 if(((
	`Á°_ªad
(
o
, 3Ë^ 
„tch
Ë& 0xffffffË=0 && o < 
§c
 - 
MINOFFSET
)

316 #ñi‡
QLZ_COMPRESSION_LEVEL
 == 2

317 if(*(
§c
 + 
m©chÀn
Ë=*(
o
 + m©chÀnË&& ((
	`Á°_ªad
(o, 3Ë^ 
„tch
Ë& 0xffffffË=0 && o < sr¯- 
MINOFFSET
)

320 
m
 = 3;

321 *(
o
 + 
m
Ë=*(
§c
 + mË&& m < 
ªmaöög
)

322 
m
++;

323 #i‡
QLZ_COMPRESSION_LEVEL
 == 3

324 i‡((
m
 > 
m©chÀn
Ë|| (m =m©chÀ¿&& 
o
 > 
off£t2
))

325 #ñi‡
QLZ_COMPRESSION_LEVEL
 == 2

326 i‡(
m
 > 
m©chÀn
)

329 
off£t2
 = 
o
;

330 
m©chÀn
 = 
m
;

331 
be°_k
 = 
k
;

335 
o
 = 
off£t2
;

336 
°©e
->
hash
[hash].
off£t
[
c
 & (
QLZ_POINTERS
 - 1)] = 
§c
;

337 
c
++;

338 
°©e
->
hash_cou¡î
[
hash
] = 
c
;

340 #i‡
QLZ_COMPRESSION_LEVEL
 == 3

341 if(
m©chÀn
 > 2 && 
§c
 - 
o
 < 131071)

343 
ui32
 
u
;

344 
size_t
 
off£t
 = 
§c
 - 
o
;

346 
u
 = 1; u < 
m©chÀn
; u++)

348 
hash
 = 
	`hash©
(
§c
 + 
u
);

349 
c
 = 
°©e
->
hash_cou¡î
[
hash
]++;

350 
°©e
->
hash
[hash].
off£t
[
c
 & (
QLZ_POINTERS
 - 1)] = 
§c
 + 
u
;

353 
cw‹d_vÆ
 = (cword_val >> 1) | (1U << 31);

354 
§c
 +
m©chÀn
;

356 if(
m©chÀn
 =3 && 
off£t
 <= 63)

358 *
d°
 = ()(
off£t
 << 2);

359 
d°
++;

361 i‡(
m©chÀn
 =3 && 
off£t
 <= 16383)

363 
ui32
 
f
 = (ui32)((
off£t
 << 2) | 1);

364 
	`Á°_wrôe
(
f
, 
d°
, 2);

365 
d°
 += 2;

367 i‡(
m©chÀn
 <18 && 
off£t
 <= 1023)

369 
ui32
 
f
 = ((
m©chÀn
 - 3Ë<< 2Ë| ((ui32)
off£t
 << 6) | 2;

370 
	`Á°_wrôe
(
f
, 
d°
, 2);

371 
d°
 += 2;

374 if(
m©chÀn
 <= 33)

376 
ui32
 
f
 = ((
m©chÀn
 - 2Ë<< 2Ë| ((ui32)
off£t
 << 7) | 3;

377 
	`Á°_wrôe
(
f
, 
d°
, 3);

378 
d°
 += 3;

382 
ui32
 
f
 = ((
m©chÀn
 - 3Ë<< 7Ë| ((ui32)
off£t
 << 15) | 3;

383 
	`Á°_wrôe
(
f
, 
d°
, 4);

384 
d°
 += 4;

389 *
d°
 = *
§c
;

390 
§c
++;

391 
d°
++;

392 
cw‹d_vÆ
 = (cword_val >> 1);

394 #ñi‡
QLZ_COMPRESSION_LEVEL
 == 2

396 if(
m©chÀn
 > 2)

398 
cw‹d_vÆ
 = (cword_val >> 1) | (1U << 31);

399 
§c
 +
m©chÀn
;

401 i‡(
m©chÀn
 < 10)

403 
ui32
 
f
 = 
be°_k
 | ((
m©chÀn
 - 2Ë<< 2Ë| (
hash
 << 5);

404 
	`Á°_wrôe
(
f
, 
d°
, 2);

405 
d°
 += 2;

409 
ui32
 
f
 = 
be°_k
 | (
m©chÀn
 << 16Ë| (
hash
 << 5);

410 
	`Á°_wrôe
(
f
, 
d°
, 3);

411 
d°
 += 3;

416 *
d°
 = *
§c
;

417 
§c
++;

418 
d°
++;

419 
cw‹d_vÆ
 = (cword_val >> 1);

425 
§c
 <
œ°_byã
)

427 i‡((
cw‹d_vÆ
 & 1) == 1)

429 
	`Á°_wrôe
((
cw‹d_vÆ
 >> 1Ë| (1U << 31), 
cw‹d_±r
, 
CWORD_LEN
);

430 
cw‹d_±r
 = 
d°
;

431 
d°
 +
CWORD_LEN
;

432 
cw‹d_vÆ
 = 1U << 31;

434 #i‡
QLZ_COMPRESSION_LEVEL
 < 3

435 i‡(
§c
 <
œ°_byã
 - 3)

437 #i‡
QLZ_COMPRESSION_LEVEL
 == 1

438 
ui32
 
hash
, 
„tch
;

439 
„tch
 = 
	`Á°_ªad
(
§c
, 3);

440 
hash
 = 
	`hash_func
(
„tch
);

441 
°©e
->
hash
[hash].
off£t
 = 
	`CAST
(
§c
 - 
OFFSET_BASE
);

442 
°©e
->
hash
[hash].
ˇche
 = 
„tch
;

443 #ñi‡
QLZ_COMPRESSION_LEVEL
 == 2

444 
ui32
 
hash
;

445 
c
;

446 
hash
 = 
	`hash©
(
§c
);

447 
c
 = 
°©e
->
hash_cou¡î
[
hash
];

448 
°©e
->
hash
[hash].
off£t
[
c
 & (
QLZ_POINTERS
 - 1)] = 
§c
;

449 
c
++;

450 
°©e
->
hash_cou¡î
[
hash
] = 
c
;

454 *
d°
 = *
§c
;

455 
§c
++;

456 
d°
++;

457 
cw‹d_vÆ
 = (cword_val >> 1);

460 (
cw‹d_vÆ
 & 1) != 1)

461 
cw‹d_vÆ
 = (cword_val >> 1);

463 
	`Á°_wrôe
((
cw‹d_vÆ
 >> 1Ë| (1U << 31), 
cw‹d_±r
, 
CWORD_LEN
);

466  
d°
 - 
de°ö©i⁄
 < 9 ? 9 : dst - destination;

467 
	}
}

469 
size_t
 
	$qlz_decom¥ess_c‹e
(c⁄° *
sour˚
, *
de°ö©i⁄
, 
size_t
 
size
, 
qlz_°©e_decom¥ess
 *
°©e
, c⁄° *
hi°‹y
)

471 c⁄° *
§c
 = 
sour˚
 + 
	`qlz_size_hódî
((const *)source);

472 *
d°
 = 
de°ö©i⁄
;

473 c⁄° *
œ°_de°ö©i⁄_byã
 = 
de°ö©i⁄
 + 
size
 - 1;

474 
ui32
 
cw‹d_vÆ
 = 1;

475 c⁄° *
œ°_m©ch°¨t
 = 
œ°_de°ö©i⁄_byã
 - 
UNCONDITIONAL_MATCHLEN
 - 
UNCOMPRESSED_END
;

476 *
œ°_hashed
 = 
de°ö©i⁄
 - 1;

477 c⁄° *
œ°_sour˚_byã
 = 
sour˚
 + 
	`qlz_size_com¥es£d
((const *)source) - 1;

478 c⁄° 
ui32
 
bôlut
[16] = {4, 0, 1, 0, 2, 0, 1, 0, 3, 0, 1, 0, 2, 0, 1, 0};

480 (Ë
œ°_sour˚_byã
;

481 (Ë
œ°_hashed
;

482 (Ë
°©e
;

483 (Ë
hi°‹y
;

487 
ui32
 
„tch
;

489 i‡(
cw‹d_vÆ
 == 1)

491 #ifde‡
QLZ_MEMORY_SAFE


492 if(
§c
 + 
CWORD_LEN
 - 1 > 
œ°_sour˚_byã
)

495 
cw‹d_vÆ
 = 
	`Á°_ªad
(
§c
, 
CWORD_LEN
);

496 
§c
 +
CWORD_LEN
;

499 #ifde‡
QLZ_MEMORY_SAFE


500 if(
§c
 + 4 - 1 > 
œ°_sour˚_byã
)

504 
„tch
 = 
	`Á°_ªad
(
§c
, 4);

506 i‡((
cw‹d_vÆ
 & 1) == 1)

508 
ui32
 
m©chÀn
;

509 c⁄° *
off£t2
;

511 #i‡
QLZ_COMPRESSION_LEVEL
 == 1

512 
ui32
 
hash
;

513 
cw‹d_vÆ
 = cword_val >> 1;

514 
hash
 = (
„tch
 >> 4) & 0xfff;

515 
off£t2
 = (c⁄° *)(
size_t
)
°©e
->
hash
[hash].
off£t
;

517 if((
„tch
 & 0xf) != 0)

519 
m©chÀn
 = (
„tch
 & 0xf) + 2;

520 
§c
 += 2;

524 
m©chÀn
 = *(
§c
 + 2);

525 
§c
 += 3;

528 #ñi‡
QLZ_COMPRESSION_LEVEL
 == 2

529 
ui32
 
hash
;

530 
c
;

531 
cw‹d_vÆ
 = cword_val >> 1;

532 
hash
 = (
„tch
 >> 5) & 0x7ff;

533 
c
 = ()(
„tch
 & 0x3);

534 
off£t2
 = 
°©e
->
hash
[hash].
off£t
[
c
];

536 if((
„tch
 & (28)) != 0)

538 
m©chÀn
 = ((
„tch
 >> 2) & 0x7) + 2;

539 
§c
 += 2;

543 
m©chÀn
 = *(
§c
 + 2);

544 
§c
 += 3;

547 #ñi‡
QLZ_COMPRESSION_LEVEL
 == 3

548 
ui32
 
off£t
;

549 
cw‹d_vÆ
 = cword_val >> 1;

550 i‡((
„tch
 & 3) == 0)

552 
off£t
 = (
„tch
 & 0xff) >> 2;

553 
m©chÀn
 = 3;

554 
§c
++;

556 i‡((
„tch
 & 2) == 0)

558 
off£t
 = (
„tch
 & 0xffff) >> 2;

559 
m©chÀn
 = 3;

560 
§c
 += 2;

562 i‡((
„tch
 & 1) == 0)

564 
off£t
 = (
„tch
 & 0xffff) >> 6;

565 
m©chÀn
 = ((
„tch
 >> 2) & 15) + 3;

566 
§c
 += 2;

568 i‡((
„tch
 & 127) != 3)

570 
off£t
 = (
„tch
 >> 7) & 0x1ffff;

571 
m©chÀn
 = ((
„tch
 >> 2) & 0x1f) + 2;

572 
§c
 += 3;

576 
off£t
 = (
„tch
 >> 15);

577 
m©chÀn
 = ((
„tch
 >> 7) & 255) + 3;

578 
§c
 += 4;

581 
off£t2
 = 
d°
 - 
off£t
;

584 #ifde‡
QLZ_MEMORY_SAFE


585 if(
off£t2
 < 
hi°‹y
 || off£t2 > 
d°
 - 
MINOFFSET
 - 1)

588 if(
m©chÀn
 > (
ui32
)(
œ°_de°ö©i⁄_byã
 - 
d°
 - 
UNCOMPRESSED_END
 + 1))

592 
	`mem˝y_up
(
d°
, 
off£t2
, 
m©chÀn
);

593 
d°
 +
m©chÀn
;

595 #i‡
QLZ_COMPRESSION_LEVEL
 <= 2

596 
	`upd©e_hash_u±o
(
°©e
, &
œ°_hashed
, 
d°
 - 
m©chÀn
);

597 
œ°_hashed
 = 
d°
 - 1;

602 i‡(
d°
 < 
œ°_m©ch°¨t
)

604 
n
 = 
bôlut
[
cw‹d_vÆ
 & 0xf];

605 
	`mem˝y_up
(
d°
, 
§c
, 4);

606 
cw‹d_vÆ
 = cw‹d_vÆ >> 
n
;

607 
d°
 +
n
;

608 
§c
 +
n
;

609 #i‡
QLZ_COMPRESSION_LEVEL
 <= 2

610 
	`upd©e_hash_u±o
(
°©e
, &
œ°_hashed
, 
d°
 - 3);

615 
d°
 <
œ°_de°ö©i⁄_byã
)

617 i‡(
cw‹d_vÆ
 == 1)

619 
§c
 +
CWORD_LEN
;

620 
cw‹d_vÆ
 = 1U << 31;

622 #ifde‡
QLZ_MEMORY_SAFE


623 if(
§c
 >
œ°_sour˚_byã
 + 1)

626 *
d°
 = *
§c
;

627 
d°
++;

628 
§c
++;

629 
cw‹d_vÆ
 = cword_val >> 1;

632 #i‡
QLZ_COMPRESSION_LEVEL
 <= 2

633 
	`upd©e_hash_u±o
(
°©e
, &
œ°_hashed
, 
œ°_de°ö©i⁄_byã
 - 3);

635  
size
;

640 
	}
}

642 
size_t
 
	$qlz_com¥ess
(c⁄° *
sour˚
, *
de°ö©i⁄
, 
size_t
 
size
, 
qlz_°©e_com¥ess
 *
°©e
)

644 
size_t
 
r
;

645 
ui32
 
com¥es£d
;

646 
size_t
 
ba£
;

648 if(
size
 == 0 || size > 0xffffffff - 400)

651 if(
size
 < 216)

652 
ba£
 = 3;

654 
ba£
 = 9;

656 #i‡
QLZ_STREAMING_BUFFER
 > 0

657 i‡(
°©e
->
°ªam_cou¡î
 + 
size
 - 1 >
QLZ_STREAMING_BUFFER
)

660 
	`ª£t_èbÀ_com¥ess
(
°©e
);

661 
r
 = 
ba£
 + 
	`qlz_com¥ess_c‹e
((c⁄° *)
sour˚
, (*)
de°ö©i⁄
 + ba£, 
size
, 
°©e
);

662 #i‡
QLZ_STREAMING_BUFFER
 > 0

663 
	`ª£t_èbÀ_com¥ess
(
°©e
);

665 if(
r
 =
ba£
)

667 
	`bích_mem˝y
(
de°ö©i⁄
 + 
ba£
, 
sour˚
, 
size
);

668 
r
 = 
size
 + 
ba£
;

669 
com¥es£d
 = 0;

673 
com¥es£d
 = 1;

675 
°©e
->
°ªam_cou¡î
 = 0;

677 #i‡
QLZ_STREAMING_BUFFER
 > 0

680 *
§c
 = 
°©e
->
°ªam_buf„r
 + sèã->
°ªam_cou¡î
;

682 
	`bích_mem˝y
(
§c
, 
sour˚
, 
size
);

683 
r
 = 
ba£
 + 
	`qlz_com¥ess_c‹e
(
§c
, (*)
de°ö©i⁄
 + ba£, 
size
, 
°©e
);

685 if(
r
 =
ba£
)

687 
	`bích_mem˝y
(
de°ö©i⁄
 + 
ba£
, 
§c
, 
size
);

688 
r
 = 
size
 + 
ba£
;

689 
com¥es£d
 = 0;

690 
	`ª£t_èbÀ_com¥ess
(
°©e
);

694 
com¥es£d
 = 1;

696 
°©e
->
°ªam_cou¡î
 +
size
;

699 if(
ba£
 == 3)

701 *
de°ö©i⁄
 = ()(0 | 
com¥es£d
);

702 *(
de°ö©i⁄
 + 1Ë()
r
;

703 *(
de°ö©i⁄
 + 2Ë()
size
;

707 *
de°ö©i⁄
 = ()(2 | 
com¥es£d
);

708 
	`Á°_wrôe
((
ui32
)
r
, 
de°ö©i⁄
 + 1, 4);

709 
	`Á°_wrôe
((
ui32
)
size
, 
de°ö©i⁄
 + 5, 4);

712 *
de°ö©i⁄
 |(
QLZ_COMPRESSION_LEVEL
 << 2);

713 *
de°ö©i⁄
 |= (1 << 6);

714 *
de°ö©i⁄
 |((
QLZ_STREAMING_BUFFER
 == 0 ? 0 : (QLZ_STREAMING_BUFFER == 100000 ? 1 : (QLZ_STREAMING_BUFFER == 1000000 ? 2 : 3))) << 4);

719  
r
;

720 
	}
}

722 
size_t
 
	$qlz_decom¥ess
(c⁄° *
sour˚
, *
de°ö©i⁄
, 
qlz_°©e_decom¥ess
 *
°©e
)

724 
size_t
 
dsiz
 = 
	`qlz_size_decom¥es£d
(
sour˚
);

726 #i‡
QLZ_STREAMING_BUFFER
 > 0

727 i‡(
°©e
->
°ªam_cou¡î
 + 
	`qlz_size_decom¥es£d
(
sour˚
Ë- 1 >
QLZ_STREAMING_BUFFER
)

730 if((*
sour˚
 & 1) == 1)

732 
	`ª£t_èbÀ_decom¥ess
(
°©e
);

733 
dsiz
 = 
	`qlz_decom¥ess_c‹e
((c⁄° *)
sour˚
, (*)
de°ö©i⁄
, dsiz, 
°©e
, (const *)destination);

737 
	`bích_mem˝y
(
de°ö©i⁄
, 
sour˚
 + 
	`qlz_size_hódî
(sour˚), 
dsiz
);

739 
°©e
->
°ªam_cou¡î
 = 0;

740 
	`ª£t_èbÀ_decom¥ess
(
°©e
);

742 #i‡
QLZ_STREAMING_BUFFER
 > 0

745 *
d°
 = 
°©e
->
°ªam_buf„r
 + sèã->
°ªam_cou¡î
;

746 if((*
sour˚
 & 1) == 1)

748 
dsiz
 = 
	`qlz_decom¥ess_c‹e
((c⁄° *)
sour˚
, 
d°
, dsiz, 
°©e
, (c⁄° *)°©e->
°ªam_buf„r
);

752 
	`bích_mem˝y
(
d°
, 
sour˚
 + 
	`qlz_size_hódî
(sour˚), 
dsiz
);

753 
	`ª£t_èbÀ_decom¥ess
(
°©e
);

755 
	`bích_mem˝y
(
de°ö©i⁄
, 
d°
, 
dsiz
);

756 
°©e
->
°ªam_cou¡î
 +
dsiz
;

759  
dsiz
;

760 
	}
}

	@am-kernels/benchmarks/microbench/src/lzip/quicklz.h

1 #i‚de‡
QLZ_HEADER


2 
	#QLZ_HEADER


	)

4 
	~<am.h
>

5 
	~<klib.h
>

7 
ölöe
 * 
	$bích_mem˝y
(* 
d°
, c⁄° * 
§c
, 
size_t
 
n
){

8 
	`as£π
(
d°
&&
§c
);

9 c⁄° * 
s
;

10 * 
d
;

11 if(
§c
+
n
>
d°
&&src<dst){

12 
s
=
§c
+
n
;

13 
d
=
d°
+
n
;

14 
n
-->0)*--
d
=*--
s
;

17 
s
=
§c
;

18 
d
=
d°
;

19 
n
-->0)*
d
++=*
s
++;

21  
d°
;

22 
	}
}

42 #i‚de‡
QLZ_COMPRESSION_LEVEL


49 
	#QLZ_COMPRESSION_LEVEL
 2

	)

53 
	#QLZ_STREAMING_BUFFER
 0

	)

62 
	#QLZ_VERSION_MAJOR
 1

	)

63 
	#QLZ_VERSION_MINOR
 5

	)

64 
	#QLZ_VERSION_REVISION
 0

	)

67 #i‡
QLZ_COMPRESSION_LEVEL
 != 1 && QLZ_COMPRESSION_LEVEL != 2 && QLZ_COMPRESSION_LEVEL != 3

68 #îr‹ 
QLZ_COMPRESSION_LEVEL
 
mu°
 
be
 1, 2 
‹
 3

71 
	tui32
;

72 
	tui16
;

75 #i‡
QLZ_COMPRESSION_LEVEL
 == 1

76 
	#QLZ_POINTERS
 1

	)

77 
	#QLZ_HASH_VALUES
 4096

	)

78 #ñi‡
QLZ_COMPRESSION_LEVEL
 == 2

79 
	#QLZ_POINTERS
 4

	)

80 
	#QLZ_HASH_VALUES
 2048

	)

81 #ñi‡
QLZ_COMPRESSION_LEVEL
 == 3

82 
	#QLZ_POINTERS
 16

	)

83 
	#QLZ_HASH_VALUES
 4096

	)

89 #i‡
QLZ_COMPRESSION_LEVEL
 == 1

90 
ui32
 
	mˇche
;

91 #i‡
deföed
 
QLZ_PTR_64
 && 
QLZ_STREAMING_BUFFER
 == 0

92 
	moff£t
;

94 c⁄° *
	moff£t
;

97 c⁄° *
	moff£t
[
QLZ_POINTERS
];

100 } 
	tqlz_hash_com¥ess
;

104 #i‡
QLZ_COMPRESSION_LEVEL
 == 1

105 c⁄° *
	moff£t
;

107 c⁄° *
	moff£t
[
QLZ_POINTERS
];

109 } 
	tqlz_hash_decom¥ess
;

115 #i‡
QLZ_STREAMING_BUFFER
 > 0

116 
	m°ªam_buf„r
[
QLZ_STREAMING_BUFFER
];

118 
size_t
 
	m°ªam_cou¡î
;

119 
qlz_hash_com¥ess
 
	mhash
[
QLZ_HASH_VALUES
];

120 
	mhash_cou¡î
[
QLZ_HASH_VALUES
];

121 } 
	tqlz_°©e_com¥ess
;

124 #i‡
QLZ_COMPRESSION_LEVEL
 == 1 || QLZ_COMPRESSION_LEVEL == 2

127 #i‡
QLZ_STREAMING_BUFFER
 > 0

128 
	m°ªam_buf„r
[
QLZ_STREAMING_BUFFER
];

130 
qlz_hash_decom¥ess
 
	mhash
[
QLZ_HASH_VALUES
];

131 
	mhash_cou¡î
[
QLZ_HASH_VALUES
];

132 
size_t
 
	m°ªam_cou¡î
;

133 } 
	tqlz_°©e_decom¥ess
;

134 #ñi‡
QLZ_COMPRESSION_LEVEL
 == 3

137 #i‡
QLZ_STREAMING_BUFFER
 > 0

138 
	m°ªam_buf„r
[
QLZ_STREAMING_BUFFER
];

140 #i‡
QLZ_COMPRESSION_LEVEL
 <= 2

141 
qlz_hash_decom¥ess
 
	mhash
[
QLZ_HASH_VALUES
];

143 
size_t
 
	m°ªam_cou¡î
;

144 } 
	tqlz_°©e_decom¥ess
;

148 #i‡
deföed
 (
__˝lu•lus
)

153 
size_t
 
qlz_size_decom¥es£d
(c⁄° *
sour˚
);

154 
size_t
 
qlz_size_com¥es£d
(c⁄° *
sour˚
);

155 
size_t
 
qlz_com¥ess
(c⁄° *
sour˚
, *
de°ö©i⁄
, size_à
size
, 
qlz_°©e_com¥ess
 *
°©e
);

156 
size_t
 
qlz_decom¥ess
(c⁄° *
sour˚
, *
de°ö©i⁄
, 
qlz_°©e_decom¥ess
 *
°©e
);

157 
qlz_gë_£âög
(
£âög
);

159 #i‡
deföed
 (
__˝lu•lus
)

	@am-kernels/benchmarks/microbench/src/md5/md5.c

6 
	~<bíchm¨k.h
>

8 
	gN
;

11 c⁄° 
uöt32_t
 
	gk
[64] = {

30 c⁄° 
uöt32_t
 
	gr
[] = {7, 12, 17, 22, 7, 12, 17, 22, 7, 12, 17, 22, 7, 12, 17, 22,

36 
	#LEFTROTATE
(
x
, 
c
Ë(((xË<< (c)Ë| ((xË>> (32 - (c))))

	)

38 
	$to_byãs
(
uöt32_t
 
vÆ
, 
uöt8_t
 *
byãs
)

40 
byãs
[0] = (
uöt8_t
Ë
vÆ
;

41 
byãs
[1] = (
uöt8_t
Ë(
vÆ
 >> 8);

42 
byãs
[2] = (
uöt8_t
Ë(
vÆ
 >> 16);

43 
byãs
[3] = (
uöt8_t
Ë(
vÆ
 >> 24);

44 
	}
}

46 
uöt32_t
 
	$to_öt32
(c⁄° 
uöt8_t
 *
byãs
)

48  (
uöt32_t
Ë
byãs
[0]

49 | ((
uöt32_t
Ë
byãs
[1] << 8)

50 | ((
uöt32_t
Ë
byãs
[2] << 16)

51 | ((
uöt32_t
Ë
byãs
[3] << 24);

52 
	}
}

54 
	$md5
(
uöt8_t
 *
msg
, 
size_t
 
öôül_Àn
, uöt8_à*
dige°
) {

57 
uöt32_t
 
h0
, 
h1
, 
h2
, 
h3
;

59 
size_t
 
√w_Àn
, 
off£t
;

60 
uöt32_t
 
w
[16];

61 
uöt32_t
 
a
, 
b
, 
c
, 
d
, 
i
, 
f
, 
g
, 
ãmp
;

64 
h0
 = 0x67452301;

65 
h1
 = 0xefcdab89;

66 
h2
 = 0x98badcfe;

67 
h3
 = 0x10325476;

74 
√w_Àn
 = 
öôül_Àn
 + 1;Çew_len % (512/8) != 448/8;Çew_len++)

77 
msg
[
öôül_Àn
] = 0x80;

78 
off£t
 = 
öôül_Àn
 + 1; off£à< 
√w_Àn
; offset++)

79 
msg
[
off£t
] = 0;

82 
	`to_byãs
(
öôül_Àn
*8, 
msg
 + 
√w_Àn
);

84 
	`to_byãs
(
öôül_Àn
>>29, 
msg
 + 
√w_Àn
 + 4);

88 
off£t
=0; off£t<
√w_Àn
; offset += (512/8)) {

91 
i
 = 0; i < 16; i++)

92 
w
[
i
] = 
	`to_öt32
(
msg
 + 
off£t
 + i*4);

95 
a
 = 
h0
;

96 
b
 = 
h1
;

97 
c
 = 
h2
;

98 
d
 = 
h3
;

101 
i
 = 0; i<64; i++) {

103 i‡(
i
 < 16) {

104 
f
 = (
b
 & 
c
Ë| ((~bË& 
d
);

105 
g
 = 
i
;

106 } i‡(
i
 < 32) {

107 
f
 = (
d
 & 
b
Ë| ((~dË& 
c
);

108 
g
 = (5*
i
 + 1) % 16;

109 } i‡(
i
 < 48) {

110 
f
 = 
b
 ^ 
c
 ^ 
d
;

111 
g
 = (3*
i
 + 5) % 16;

113 
f
 = 
c
 ^ (
b
 | (~
d
));

114 
g
 = (7*
i
) % 16;

117 
ãmp
 = 
d
;

118 
d
 = 
c
;

119 
c
 = 
b
;

120 
b
 = b + 
	`LEFTROTATE
((
a
 + 
f
 + 
k
[
i
] + 
w
[
g
]), 
r
[i]);

121 
a
 = 
ãmp
;

126 
h0
 +
a
;

127 
h1
 +
b
;

128 
h2
 +
c
;

129 
h3
 +
d
;

134 
	`to_byãs
(
h0
, 
dige°
);

135 
	`to_byãs
(
h1
, 
dige°
 + 4);

136 
	`to_byãs
(
h2
, 
dige°
 + 8);

137 
	`to_byãs
(
h3
, 
dige°
 + 12);

138 
	}
}

140 
uöt8_t
 *
	g°r
;

141 
uöt8_t
 *
	gdige°
;

143 
	$bích_md5_¥ï¨e
() {

144 
N
 = 
£âög
->
size
;

145 
	`bích_§™d
(1);

146 
°r
 = 
	`bích_Æloc
(
N
);

147 
i
 = 0; i < 
N
; i ++) {

148 
°r
[
i
] = 
	`bích_ønd
();

150 
dige°
 = 
	`bích_Æloc
(16);

151 
	}
}

153 
	$bích_md5_run
() {

154 
	`md5
(
°r
, 
N
, 
dige°
);

155 
	}
}

157 
	$bích_md5_vÆid©e
() {

158  
	`checksum
(
dige°
, dige° + 16Ë=
£âög
->
checksum
;

159 
	}
}

	@am-kernels/benchmarks/microbench/src/qsort/qsort.c

1 
	~<bíchm¨k.h
>

3 
	gN
, *
	gd©a
;

5 
	$bích_qs‹t_¥ï¨e
() {

6 
	`bích_§™d
(1);

8 
N
 = 
£âög
->
size
;

10 
d©a
 = 
	`bích_Æloc
(
N
 * ());

11 
i
 = 0; i < 
N
; i ++) {

12 
a
 = 
	`bích_ønd
();

13 
b
 = 
	`bích_ønd
();

14 
d©a
[
i
] = (
a
 << 16Ë| 
b
;

16 
	}
}

18 
	$sw≠
(*
a
, *
b
) {

19 
t
 = *
a
;

20 *
a
 = *
b
;

21 *
b
 = 
t
;

22 
	}
}

24 
	$myqs‹t
(*
a
, 
l
, 
r
) {

25 i‡(
l
 < 
r
) {

26 
p
 = 
a
[
l
], 
pivŸ
 =Ü, 
j
;

27 
j
 = 
l
 + 1; j < 
r
; j ++) {

28 i‡(
a
[
j
] < 
p
) {

29 
	`sw≠
(&
a
[++
pivŸ
], &a[
j
]);

32 
	`sw≠
(&
a
[
pivŸ
], &a[
l
]);

33 
	`myqs‹t
(
a
, 
l
, 
pivŸ
);

34 
	`myqs‹t
(
a
, 
pivŸ
 + 1, 
r
);

36 
	}
}

38 
	$bích_qs‹t_run
() {

39 
	`myqs‹t
(
d©a
, 0, 
N
);

40 
	}
}

42 
	$bích_qs‹t_vÆid©e
() {

43  
	`checksum
(
d©a
, d©®+ 
N
Ë=
£âög
->
checksum
;

44 
	}
}

	@am-kernels/benchmarks/microbench/src/queen/queen.c

1 
	~<bíchm¨k.h
>

3 
	gFULL
;

5 
	$dfs
(
row
, 
ld
, 
rd
) {

6 i‡(
row
 =
FULL
) {

9 
pos
 = 
FULL
 & (~(
row
 | 
ld
 | 
rd
)), 
™s
 = 0;

10 
pos
) {

11 
p
 = (
pos
 & (~pos + 1));

12 
pos
 -
p
;

13 
™s
 +
	`dfs
(
row
 | 
p
, (
ld
 |ÖË<< 1, (
rd
 |Ö) >> 1);

15  
™s
;

17 
	}
}

19 
	g™s
;

21 
	$bích_quìn_¥ï¨e
() {

22 
™s
 = 0;

23 
FULL
 = (1 << 
£âög
->
size
) - 1;

24 
	}
}

26 
	$bích_quìn_run
() {

27 
™s
 = 
	`dfs
(0, 0, 0);

28 
	}
}

30 
	$bích_quìn_vÆid©e
() {

31  
™s
 =
£âög
->
checksum
;

32 
	}
}

	@am-kernels/benchmarks/microbench/src/sieve/sieve.c

1 
	~<bíchm¨k.h
>

3 
	gN
;

5 
	g™s
;

6 
uöt32_t
 *
	g¥imes
;

8 
ölöe
 
	$gë
(
n
) {

9  (
¥imes
[
n
 >> 5] >> (n & 31)) & 1;

10 
	}
}

12 
ölöe
 
	$˛ór
(
n
) {

13 
¥imes
[
n
 >> 5] &= ~(1ul << (n & 31));

14 
	}
}

16 
	$bích_sõve_¥ï¨e
() {

17 
N
 = 
£âög
->
size
;

18 
¥imes
 = (
uöt32_t
*)
	`bích_Æloc
(
N
 / 8 + 128);

19 
i
 = 0; i <
N
 / 32; i ++) {

20 
¥imes
[
i
] = 0xffffffff;

22 
	}
}

24 
	$bích_sõve_run
() {

25 
i
 = 1; i <
N
; i ++)

26 i‡(!
	`gë
(
i
)) ;

27 
i
 = 2; i * i <
N
; i ++) {

28 i‡(
	`gë
(
i
)) {

29 
j
 = 
i
 + i; j <
N
; j += i)

30 
	`˛ór
(
j
);

33 
™s
 = 0;

34 
i
 = 2; i <
N
; i ++)

35 i‡(
	`gë
(
i
)) {

36 
™s
 ++;

38 
	}
}

40 
	$bích_sõve_vÆid©e
() {

41  
™s
 =
£âög
->
checksum
;

42 
	}
}

	@am-kernels/benchmarks/microbench/src/ssort/ssort.cc

3 
	~<bíchm¨k.h
>

5 
	gN
;

7 
ölöe
 
boﬁ
 
	$Àq
(
a1
, 
a2
, 
b1
, 
b2
) {

8 (
a1
 < 
b1
 || (a1 =b1 && 
a2
 <
b2
));

9 
	}
}

10 
ölöe
 
boﬁ
 
	$Àq
(
a1
, 
a2
, 
a3
, 
b1
, 
b2
, 
b3
) {

11 (
a1
 < 
b1
 || (a1 =b1 && 
	`Àq
(
a2
,
a3
, 
b2
,
b3
)));

12 
	}
}

14 
	$ødixPass
(* 
a
, * 
b
, * 
r
, 
n
, 
K
)

16 * 
c
 = (*)
	`bích_Æloc
(()*(
K
+1));

17 
i
 = 0; i <
K
; i++Ë
c
[i] = 0;

18 
i
 = 0; i < 
n
; i++Ë
c
[
r
[
a
[i]]]++;

19 
i
 = 0, 
sum
 = 0; i <
K
; i++) {

20 
t
 = 
c
[
i
]; c[i] = 
sum
; sum +=Å;

22 
i
 = 0; i < 
n
; i++Ë
b
[
c
[
r
[
a
[i]]]++] =á[i];

23 
	}
}

27 
	$suffixAºay
(* 
s
, * 
SA
, 
n
, 
K
) {

28 
n0
=(
n
+2)/3, 
n1
=“+1)/3, 
n2
Ú/3, 
n02
=n0+n2;

29 * 
s12
 = (*)
	`bích_Æloc
(()*(
n02
+3)); s12[n02]= s12[n02+1]= s12[n02+2]=0;

30 * 
SA12
 = (*)
	`bích_Æloc
(()*(
n02
+3)); SA12[n02]=SA12[n02+1]=SA12[n02+2]=0;

31 * 
s0
 = (*)
	`bích_Æloc
(()*
n0
);

32 * 
SA0
 = (*)
	`bích_Æloc
(()*
n0
);

36 
i
=0, 
j
=0; i < 
n
+(
n0
-
n1
); i++Ëi‡(i%3 !0Ë
s12
[j++] = i;

39 
	`ødixPass
(
s12
 , 
SA12
, 
s
+2, 
n02
, 
K
);

40 
	`ødixPass
(
SA12
, 
s12
 , 
s
+1, 
n02
, 
K
);

41 
	`ødixPass
(
s12
 , 
SA12
, 
s
 , 
n02
, 
K
);

44 
«me
 = 0, 
c0
 = -1, 
c1
 = -1, 
c2
 = -1;

45 
i
 = 0; i < 
n02
; i++) {

46 i‡(
s
[
SA12
[
i
]] !
c0
 || s[SA12[i]+1] !
c1
 || s[SA12[i]+2] !
c2
) {

47 
«me
++; 
c0
 = 
s
[
SA12
[
i
]]; 
c1
 = s[SA12[i]+1]; 
c2
 = s[SA12[i]+2];

49 i‡(
SA12
[
i
] % 3 =1Ë{ 
s12
[SA12[i]/3] = 
«me
; }

50 { 
s12
[
SA12
[
i
]/3 + 
n0
] = 
«me
; }

54 i‡(
«me
 < 
n02
) {

55 
	`suffixAºay
(
s12
, 
SA12
, 
n02
, 
«me
);

57 
i
 = 0; i < 
n02
; i++Ë
s12
[
SA12
[i]] = i + 1;

59 
i
 = 0; i < 
n02
; i++Ë
SA12
[
s12
[i] - 1] = i;

62 
i
=0, 
j
=0; i < 
n02
; i++Ëi‡(
SA12
[i] < 
n0
Ë
s0
[j++] = 3*SA12[i];

63 
	`ødixPass
(
s0
, 
SA0
, 
s
, 
n0
, 
K
);

66 
p
=0, 
t
=
n0
-
n1
, 
k
=0; k < 
n
; k++) {

67 
	#GëI
(Ë(
SA12
[
t
] < 
n0
 ? SA12[t] * 3 + 1 : (SA12[t] -Ç0Ë* 3 + 2)

	)

68 
i
 = 
	`GëI
();

69 
j
 = 
SA0
[
p
];

70 i‡(
SA12
[
t
] < 
n0
 ?

71 
	`Àq
(
s
[
i
], 
s12
[
SA12
[
t
] + 
n0
], s[
j
], s12[j/3]) :

72 
	`Àq
(
s
[
i
],s[i+1],
s12
[
SA12
[
t
]-
n0
+1], s[
j
],s[j+1],s12[j/3+n0]))

74 
SA
[
k
] = 
i
; 
t
++;

75 i‡(
t
 =
n02
) {

76 
k
++; 
p
 < 
n0
;Ö++, k++Ë
SA
[k] = 
SA0
[p];

79 
SA
[
k
] = 
j
; 
p
++;

80 i‡(
p
 =
n0
) {

81 
k
++; 
t
 < 
n02
;Å++, k++Ë
SA
[k] = 
	`GëI
();

85 
	}
}

89 *
s
, *
ß
;

91 
bích_ss‹t_¥ï¨e
() {

92 
N
 = 
£âög
->
size
;

93 
bích_§™d
(1);

94 
s
 = (*)
bích_Æloc
(()*(
N
+10));

95 
ß
 = (*)
bích_Æloc
(()*(
N
+10));

97 
i
 = 0; i < 
N
; i ++) {

98 
s
[
i
] = 
bích_ønd
() % 26;

102 
bích_ss‹t_run
() {

103 
suffixAºay
(
s
, 
ß
, 
N
, 26);

106 
bích_ss‹t_vÆid©e
() {

107  
checksum
(
ß
, s®+ 
N
Ë=
£âög
->checksum;

	@am-kernels/kernels/hello/hello.c

1 
	~<am.h
>

2 
	~<klib-ma¸os.h
>

4 
	$maö
(c⁄° *
¨gs
) {

5 c⁄° *
fmt
 =

9 c⁄° *
p
 = 
fmt
; *p;Ö++) {

10 (*
p
 ='%'Ë? 
	`put°r
(
¨gs
Ë: 
	`putch
(*p);

13 
	}
}

	@am-kernels/kernels/litenes/src/common.c

1 
	~"comm⁄.h
"

3 
boﬁ
 
	$comm⁄_bô_£t
(
vÆue
, 
byã
 
posôi⁄
Ë{  vÆuê& (1L <<Öosôi⁄); 
	}
}

7 
	#M_comm⁄
(
SUFFIX
, 
TYPE
) \

8 
comm⁄_£t_bô
##
	`SUFFIX
(
TYPE
 *
v¨übÀ
, 
byã
 
posôi⁄
) { *variable |= 1L <<Öosition; } \

9 
comm⁄_un£t_bô
##
	`SUFFIX
(
TYPE
 *
v¨übÀ
, 
byã
 
posôi⁄
) { *variable &= ~(1L <<Öosition); } \

10 
comm⁄_toggÀ_bô
##
	`SUFFIX
(
TYPE
 *
v¨übÀ
, 
byã
 
posôi⁄
) { *variable ^= 1L <<Öosition; } \

11 
comm⁄_modify_bô
##
	`SUFFIX
(
TYPE
 *
v¨übÀ
, 
byã
 
posôi⁄
, 
boﬁ
 
£t
) \

12 { 
£t
 ? 
comm⁄_£t_bô
##
	`SUFFIX
(
v¨übÀ
, 
posôi⁄
Ë: 
comm⁄_un£t_bô
##SUFFIX(v¨übÀ,Öosôi⁄); }

	)

14 
	$M_comm⁄
(
b
, 
byã
)

15 
	$M_comm⁄
(
w
, 
w‹d
)

16 
	`M_comm⁄
(
d
, 
dw‹d
)

	@am-kernels/kernels/litenes/src/common.h

1 #i‚de‡
COMMON_H


2 
	#COMMON_H


	)

4 
	~<am.h
>

5 
	~<klib.h
>

6 
	~<klib-ma¸os.h
>

8 
uöt8_t
 
	tbyã
;

9 
uöt16_t
 
	tw‹d
;

10 
uöt32_t
 
	tdw‹d
;

13 
boﬁ
 
comm⁄_bô_£t
(
vÆue
, 
byã
 
posôi⁄
);

16 
comm⁄_£t_bôb
(
byã
 *
v¨übÀ
, byã 
posôi⁄
);

17 
comm⁄_un£t_bôb
(
byã
 *
v¨übÀ
, byã 
posôi⁄
);

18 
comm⁄_toggÀ_bôb
(
byã
 *
v¨übÀ
, byã 
posôi⁄
);

19 
comm⁄_modify_bôb
(
byã
 *
v¨übÀ
, byã 
posôi⁄
, 
boﬁ
 
£t
);

22 
comm⁄_£t_bôw
(
w‹d
 *
v¨übÀ
, 
byã
 
posôi⁄
);

23 
comm⁄_un£t_bôw
(
w‹d
 *
v¨übÀ
, 
byã
 
posôi⁄
);

24 
comm⁄_toggÀ_bôw
(
w‹d
 *
v¨übÀ
, 
byã
 
posôi⁄
);

25 
comm⁄_modify_bôw
(
w‹d
 *
v¨übÀ
, 
byã
 
posôi⁄
, 
boﬁ
 
£t
);

28 
comm⁄_£t_bôd
(
dw‹d
 *
v¨übÀ
, 
byã
 
posôi⁄
);

29 
comm⁄_un£t_bôd
(
dw‹d
 *
v¨übÀ
, 
byã
 
posôi⁄
);

30 
comm⁄_toggÀ_bôd
(
dw‹d
 *
v¨übÀ
, 
byã
 
posôi⁄
);

31 
comm⁄_modify_bôd
(
dw‹d
 *
v¨übÀ
, 
byã
 
posôi⁄
, 
boﬁ
 
£t
);

	@am-kernels/kernels/litenes/src/cpu-addressing.c

1 
	~"˝u.h
"

2 
	~"˝u-öã∫Æ.h
"

3 
	~"mem‹y.h
"

7 
	$˝u_addªss_im∂õd
(Ë{ 
	}
}

9 
	$˝u_addªss_immedüã
() {

10 
›_vÆue
 = 
	`mem‹y_ªadb
(
˝u
.
PC
);

11 
˝u
.
PC
++;

12 
	}
}

14 
	$˝u_addªss_zîo_∑ge
() {

15 
›_addªss
 = 
	`mem‹y_ªadb
(
˝u
.
PC
);

16 
›_vÆue
 = 
CPU_RAM
[
›_addªss
];

17 
˝u
.
PC
++;

18 
	}
}

20 
	$˝u_addªss_zîo_∑ge_x
() {

21 
›_addªss
 = (
	`mem‹y_ªadb
(
˝u
.
PC
Ë+ cpu.
X
) & 0xFF;

22 
›_vÆue
 = 
CPU_RAM
[
›_addªss
];

23 
˝u
.
PC
++;

24 
	}
}

26 
	$˝u_addªss_zîo_∑ge_y
() {

27 
›_addªss
 = (
	`mem‹y_ªadb
(
˝u
.
PC
Ë+ cpu.
Y
) & 0xFF;

28 
›_vÆue
 = 
CPU_RAM
[
›_addªss
];

29 
˝u
.
PC
++;

30 
	}
}

32 
	$˝u_addªss_absﬁuã
() {

33 
›_addªss
 = 
	`mem‹y_ªadw
(
˝u
.
PC
);

34 
›_vÆue
 = 
	`mem‹y_ªadb
(
›_addªss
);

35 
˝u
.
PC
 += 2;

36 
	}
}

38 
	$˝u_addªss_absﬁuã_x
() {

39 
›_addªss
 = 
	`mem‹y_ªadw
(
˝u
.
PC
Ë+ cpu.
X
;

40 
›_vÆue
 = 
	`mem‹y_ªadb
(
›_addªss
);

41 
˝u
.
PC
 += 2;

43 i‡((
›_addªss
 >> 8Ë!(
˝u
.
PC
 >> 8)) {

44 
›_cy˛es
++;

46 
	}
}

48 
	$˝u_addªss_absﬁuã_y
() {

49 
›_addªss
 = (
	`mem‹y_ªadw
(
˝u
.
PC
Ë+ cpu.
Y
) & 0xFFFF;

50 
›_vÆue
 = 
	`mem‹y_ªadb
(
›_addªss
);

51 
˝u
.
PC
 += 2;

53 i‡((
›_addªss
 >> 8Ë!(
˝u
.
PC
 >> 8)) {

54 
›_cy˛es
++;

56 
	}
}

58 
	$˝u_addªss_ªœtive
() {

59 
›_addªss
 = 
	`mem‹y_ªadb
(
˝u
.
PC
);

60 
˝u
.
PC
++;

61 i‡(
›_addªss
 & 0x80)

62 
›_addªss
 -= 0x100;

63 
›_addªss
 +
˝u
.
PC
;

65 i‡((
›_addªss
 >> 8Ë!(
˝u
.
PC
 >> 8)) {

66 
›_cy˛es
++;

68 
	}
}

70 
	$˝u_addªss_ödúe˘
() {

71 
w‹d
 
¨g_addr
 = 
	`mem‹y_ªadw
(
˝u
.
PC
);

74 i‡((
¨g_addr
 & 0xFF) == 0xFF) {

76 
›_addªss
 = (
	`mem‹y_ªadb
(
¨g_addr
 & 0xFF00) << 8) + memory_readb(arg_addr);

80 
›_addªss
 = 
	`mem‹y_ªadw
(
¨g_addr
);

82 
˝u
.
PC
 += 2;

83 
	}
}

85 
	$˝u_addªss_ödúe˘_x
() {

86 
byã
 
¨g_addr
 = 
	`mem‹y_ªadb
(
˝u
.
PC
);

87 
›_addªss
 = (
	`mem‹y_ªadb
((
¨g_addr
 + 
˝u
.
X
 + 1) & 0xFF) << 8) | memory_readb((arg_addr + cpu.X) & 0xFF);

88 
›_vÆue
 = 
	`mem‹y_ªadb
(
›_addªss
);

89 
˝u
.
PC
++;

90 
	}
}

92 
	$˝u_addªss_ödúe˘_y
() {

93 
byã
 
¨g_addr
 = 
	`mem‹y_ªadb
(
˝u
.
PC
);

94 
›_addªss
 = (((
	`mem‹y_ªadb
((
¨g_addr
 + 1Ë& 0xFFË<< 8Ë| mem‹y_ªadb◊rg_addr)Ë+ 
˝u
.
Y
) & 0xFFFF;

95 
›_vÆue
 = 
	`mem‹y_ªadb
(
›_addªss
);

96 
˝u
.
PC
++;

98 i‡((
›_addªss
 >> 8Ë!(
˝u
.
PC
 >> 8)) {

99 
›_cy˛es
++;

101 
	}
}

	@am-kernels/kernels/litenes/src/cpu-internal.h

1 #i‚de‡
CPU_INTERNAL_H


2 
	#CPU_INTERNAL_H


	)

4 
	~"comm⁄.h
"

7 
	mˇºy_Êag
 = 0x01,

8 
	mzîo_Êag
 = 0x02,

9 
	möãºu±_Êag
 = 0x04,

10 
	mdecimÆ_Êag
 = 0x08,

11 
	mbªak_Êag
 = 0x10,

12 
	munu£d_Êag
 = 0x20,

13 
	movîÊow_Êag
 = 0x40,

14 
	m√g©ive_Êag
 = 0x80

15 } 
	t˝u_p_Êag
;

18 
	mˇºy_bp
 = 0,

19 
	mzîo_bp
 = 1,

20 
	möãºu±_bp
 = 2,

21 
	mdecimÆ_bp
 = 3,

22 
	mbªak_bp
 = 4,

23 
	munu£d_bp
 = 5,

24 
	movîÊow_bp
 = 6,

25 
	m√g©ive_bp
 = 7

26 } 
	t˝u_p_bp
;

29 
w‹d
 
	mPC
;

30 
byã
 
	mSP
;

31 
byã
 
	mA
, 
	mX
, 
	mY
;

32 
byã
 
	mP
;

33 } 
	tCPU_STATE
;

35 
CPU_STATE
 
˝u
;

37 
byã
 
CPU_RAM
[0x8000];

38 
›_vÆue
, 
›_addªss
;

39 
›_cy˛es
;

41 
byã
 
˝u_øm_ªad
(
w‹d
 
addªss
);

42 
˝u_øm_wrôe
(
w‹d
 
addªss
, 
byã
 
d©a
);

45 
w‹d
 
˝u_nmi_öãºu±_addªss
();

46 
w‹d
 
˝u_ª£t_öãºu±_addªss
();

47 
w‹d
 
˝u_úq_öãºu±_addªss
();

50 
˝u_addªss_im∂õd
();

51 
˝u_addªss_immedüã
();

52 
˝u_addªss_zîo_∑ge
();

53 
˝u_addªss_zîo_∑ge_x
();

54 
˝u_addªss_zîo_∑ge_y
();

55 
˝u_addªss_absﬁuã
();

56 
˝u_addªss_absﬁuã_x
();

57 
˝u_addªss_absﬁuã_y
();

58 
˝u_addªss_ªœtive
();

59 
˝u_addªss_ödúe˘
();

60 
˝u_addªss_ödúe˘_x
();

61 
˝u_addªss_ödúe˘_y
();

	@am-kernels/kernels/litenes/src/cpu.c

1 
	~"˝u.h
"

2 
	~"˝u-öã∫Æ.h
"

3 
	~"mem‹y.h
"

4 
	~"µu.h
"

5 
	~"comm⁄.h
"

7 
CPU_STATE
 
	g˝u
;

11 
byã
 
	gCPU_RAM
[0x8000];

13 
byã
 
	$˝u_øm_ªad
(
w‹d
 
addªss
) {

14  
CPU_RAM
[
addªss
 & 0x7FF];

15 
	}
}

17 
	$˝u_øm_wrôe
(
w‹d
 
addªss
, 
byã
 
d©a
) {

18 
CPU_RAM
[
addªss
 & 0x7FF] = 
d©a
;

19 
	}
}

21 
byã
 
	g›_code
;

22 
	g›_vÆue
, 
	g›_addªss
;

23 
	g›_cy˛es
;

24 
	g˝u_cy˛es
;

26 (*
	g˝u_›_addªss_mode
[256])();

27 (*
	g˝u_›_h™dÀr
[256])();

28 
boﬁ
 
	g˝u_›_ö_ba£_ö°ru˘i⁄_£t
[256];

29 *
	g˝u_›_«me
[256];

30 
	g˝u_›_cy˛es
[256];

32 c⁄° 
byã
 
	g˝u_zn_Êag_èbÀ
[256] = {

33 
zîo_Êag
,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,

41 
√g©ive_Êag
,negative_flag,negative_flag,negative_flag,negative_flag,negative_flag,negative_flag,negative_flag,

42 
√g©ive_Êag
,negative_flag,negative_flag,negative_flag,negative_flag,negative_flag,negative_flag,negative_flag,

43 
√g©ive_Êag
,negative_flag,negative_flag,negative_flag,negative_flag,negative_flag,negative_flag,negative_flag,

44 
√g©ive_Êag
,negative_flag,negative_flag,negative_flag,negative_flag,negative_flag,negative_flag,negative_flag,

45 
√g©ive_Êag
,negative_flag,negative_flag,negative_flag,negative_flag,negative_flag,negative_flag,negative_flag,

46 
√g©ive_Êag
,negative_flag,negative_flag,negative_flag,negative_flag,negative_flag,negative_flag,negative_flag,

47 
√g©ive_Êag
,negative_flag,negative_flag,negative_flag,negative_flag,negative_flag,negative_flag,negative_flag,

48 
√g©ive_Êag
,negative_flag,negative_flag,negative_flag,negative_flag,negative_flag,negative_flag,negative_flag,

49 
√g©ive_Êag
,negative_flag,negative_flag,negative_flag,negative_flag,negative_flag,negative_flag,negative_flag,

50 
√g©ive_Êag
,negative_flag,negative_flag,negative_flag,negative_flag,negative_flag,negative_flag,negative_flag,

51 
√g©ive_Êag
,negative_flag,negative_flag,negative_flag,negative_flag,negative_flag,negative_flag,negative_flag,

52 
√g©ive_Êag
,negative_flag,negative_flag,negative_flag,negative_flag,negative_flag,negative_flag,negative_flag,

53 
√g©ive_Êag
,negative_flag,negative_flag,negative_flag,negative_flag,negative_flag,negative_flag,negative_flag,

54 
√g©ive_Êag
,negative_flag,negative_flag,negative_flag,negative_flag,negative_flag,negative_flag,negative_flag,

55 
√g©ive_Êag
,negative_flag,negative_flag,negative_flag,negative_flag,negative_flag,negative_flag,negative_flag,

56 
√g©ive_Êag
,negative_flag,negative_flag,negative_flag,negative_flag,negative_flag,negative_flag,negative_flag,

61 
w‹d
 
	$˝u_nmi_öãºu±_addªss
(Ë{  
	`mem‹y_ªadw
(0xFFFA); 
	}
}

62 
w‹d
 
	$˝u_ª£t_öãºu±_addªss
(Ë{  
	`mem‹y_ªadw
(0xFFFC); 
	}
}

63 
w‹d
 
	$˝u_úq_öãºu±_addªss
(Ë{  
	`mem‹y_ªadw
(0xFFFE); 
	}
}

67 
	$˝u_°ack_pushb
(
byã
 
d©a
Ë{ 
	`mem‹y_wrôeb
(0x100 + 
˝u
.
SP
--, d©a); 
	}
}

68 
	$˝u_°ack_pushw
(
w‹d
 
d©a
Ë{ 
	`mem‹y_wrôew
(0xFF + 
˝u
.
SP
, d©a); cpu.SP -2; 
	}
}

69 
byã
 
	$˝u_°ack_p›b
(Ë{  
	`mem‹y_ªadb
(0x100 + ++
˝u
.
SP
); 
	}
}

70 
w‹d
 
	$˝u_°ack_p›w
(Ë{ 
˝u
.
SP
 +2;  
	`mem‹y_ªadw
(0xFF + cpu.SP); 
	}
}

74 
	$____FE____
(Ë{ 
	}
}

76 
	#˝u_Êag_£t
(
Êag
Ë
	`comm⁄_bô_£t
(
˝u
.
P
, fœg)

	)

77 
	#˝u_modify_Êag
(
Êag
, 
vÆue
Ë
	`comm⁄_modify_bôb
(&
˝u
.
P
, fœg, vÆue)

	)

78 
	#˝u_£t_Êag
(
Êag
Ë
	`comm⁄_£t_bôb
(&
˝u
.
P
, fœg)

	)

79 
	#˝u_un£t_Êag
(
Êag
Ë
	`comm⁄_un£t_bôb
(&
˝u
.
P
, fœg)

	)

81 
	#˝u_upd©e_zn_Êags
(
vÆue
Ë
˝u
.
P
 = (˝u.P & ~(
zîo_Êag
 | 
√g©ive_Êag
)Ë| 
˝u_zn_Êag_èbÀ
[vÆue]

	)

83 
	#˝u_bønch
(
Êag
Ëi‡(ÊagË
˝u
.
PC
 = 
›_addªss
;

	)

84 
	#˝u_com∑ª
(
ªg
) \

85 
ªsu…
 = 
ªg
 - 
›_vÆue
; \

86 
	`˝u_modify_Êag
(
ˇºy_bp
, 
ªsu…
 >= 0); \

87 
	`˝u_modify_Êag
(
zîo_bp
, 
ªsu…
 == 0); \

88 
	`˝u_modify_Êag
(
√g©ive_bp
, (
ªsu…
 >> 7Ë& 1);

	)

95 
	$˝u_›_n›
(Ë{
	}
}

99 
	$˝u_›_adc
() {

100 
ªsu…
 = 
˝u
.
A
 + 
›_vÆue
 + (
	`˝u_Êag_£t
(
ˇºy_bp
) ? 1 : 0);

101 
	`˝u_modify_Êag
(
ˇºy_bp
, !!(
ªsu…
 & 0x100));

102 
	`˝u_modify_Êag
(
ovîÊow_bp
, !!(~(
˝u
.
A
 ^ 
›_vÆue
Ë& (˝u.A ^ 
ªsu…
) & 0x80));

103 
˝u
.
A
 = 
ªsu…
 & 0xFF;

104 
	`˝u_upd©e_zn_Êags
(
˝u
.
A
);

105 
	}
}

109 
	$˝u_›_sbc
() {

110 
ªsu…
 = 
˝u
.
A
 - 
›_vÆue
 - (
	`˝u_Êag_£t
(
ˇºy_bp
) ? 0 : 1);

111 
	`˝u_modify_Êag
(
ˇºy_bp
, !(
ªsu…
 & 0x100));

112 
	`˝u_modify_Êag
(
ovîÊow_bp
, !!((
˝u
.
A
 ^ 
›_vÆue
Ë& (˝u.A ^ 
ªsu…
) & 0x80));

113 
˝u
.
A
 = 
ªsu…
 & 0xFF;

114 
	`˝u_upd©e_zn_Êags
(
˝u
.
A
);

115 
	}
}

119 
	$˝u_›_™d
(Ë{ 
	`˝u_upd©e_zn_Êags
(
˝u
.
A
 &
›_vÆue
); 
	}
}

120 
	$˝u_›_bô
() {

121 
	`˝u_modify_Êag
(
zîo_bp
, !(
˝u
.
A
 & 
›_vÆue
));

122 
˝u
.
P
 = (˝u.P & 0x3FË| (0xC0 & 
›_vÆue
);

123 
	}
}

124 
	$˝u_›_e‹
(Ë{ 
	`˝u_upd©e_zn_Êags
(
˝u
.
A
 ^
›_vÆue
); 
	}
}

125 
	$˝u_›_‹a
(Ë{ 
	`˝u_upd©e_zn_Êags
(
˝u
.
A
 |
›_vÆue
); 
	}
}

126 
	$˝u_›_a¶a
() {

127 
	`˝u_modify_Êag
(
ˇºy_bp
, 
˝u
.
A
 & 0x80);

128 
˝u
.
A
 <<= 1;

129 
	`˝u_upd©e_zn_Êags
(
˝u
.
A
);

130 
	}
}

131 
	$˝u_›_a¶
() {

132 
	`˝u_modify_Êag
(
ˇºy_bp
, 
›_vÆue
 & 0x80);

133 
›_vÆue
 <<= 1;

134 
›_vÆue
 &= 0xFF;

135 
	`˝u_upd©e_zn_Êags
(
›_vÆue
);

136 
	`mem‹y_wrôeb
(
›_addªss
, 
›_vÆue
);

137 
	}
}

138 
	$˝u_›_l§a
() {

139 
vÆue
 = 
˝u
.
A
 >> 1;

140 
	`˝u_modify_Êag
(
ˇºy_bp
, 
˝u
.
A
 & 0x01);

141 
˝u
.
A
 = 
vÆue
 & 0xFF;

142 
	`˝u_upd©e_zn_Êags
(
vÆue
);

143 
	}
}

144 
	$˝u_›_l§
() {

145 
	`˝u_modify_Êag
(
ˇºy_bp
, 
›_vÆue
 & 0x01);

146 
›_vÆue
 >>= 1;

147 
›_vÆue
 &= 0xFF;

148 
	`mem‹y_wrôeb
(
›_addªss
, 
›_vÆue
);

149 
	`˝u_upd©e_zn_Êags
(
›_vÆue
);

150 
	}
}

152 
	$˝u_›_rﬁa
() {

153 
vÆue
 = 
˝u
.
A
 << 1;

154 
vÆue
 |
	`˝u_Êag_£t
(
ˇºy_bp
) ? 1 : 0;

155 
	`˝u_modify_Êag
(
ˇºy_bp
, 
vÆue
 > 0xFF);

156 
˝u
.
A
 = 
vÆue
 & 0xFF;

157 
	`˝u_upd©e_zn_Êags
(
˝u
.
A
);

158 
	}
}

159 
	$˝u_›_rﬁ
() {

160 
›_vÆue
 <<= 1;

161 
›_vÆue
 |
	`˝u_Êag_£t
(
ˇºy_bp
) ? 1 : 0;

162 
	`˝u_modify_Êag
(
ˇºy_bp
, 
›_vÆue
 > 0xFF);

163 
›_vÆue
 &= 0xFF;

164 
	`mem‹y_wrôeb
(
›_addªss
, 
›_vÆue
);

165 
	`˝u_upd©e_zn_Êags
(
›_vÆue
);

166 
	}
}

167 
	$˝u_›_r‹a
() {

168 
ˇºy
 = 
	`˝u_Êag_£t
(
ˇºy_bp
);

169 
	`˝u_modify_Êag
(
ˇºy_bp
, 
˝u
.
A
 & 0x01);

170 
˝u
.
A
 = (˝u.A >> 1Ë| (
ˇºy
 << 7);

171 
	`˝u_modify_Êag
(
zîo_bp
, 
˝u
.
A
 == 0);

172 
	`˝u_modify_Êag
(
√g©ive_bp
, !!
ˇºy
);

173 
	}
}

174 
	$˝u_›_r‹
() {

175 
ˇºy
 = 
	`˝u_Êag_£t
(
ˇºy_bp
);

176 
	`˝u_modify_Êag
(
ˇºy_bp
, 
›_vÆue
 & 0x01);

177 
›_vÆue
 = ((›_vÆuê>> 1Ë| (
ˇºy
 << 7)) & 0xFF;

178 
	`˝u_modify_Êag
(
zîo_bp
, 
›_vÆue
 == 0);

179 
	`˝u_modify_Êag
(
√g©ive_bp
, !!
ˇºy
);

180 
	`mem‹y_wrôeb
(
›_addªss
, 
›_vÆue
);

181 
	}
}

185 
	$˝u_›_lda
(Ë{ 
	`˝u_upd©e_zn_Êags
(
˝u
.
A
 = 
›_vÆue
); 
	}
}

186 
	$˝u_›_ldx
(Ë{ 
	`˝u_upd©e_zn_Êags
(
˝u
.
X
 = 
›_vÆue
); 
	}
}

187 
	$˝u_›_ldy
(Ë{ 
	`˝u_upd©e_zn_Êags
(
˝u
.
Y
 = 
›_vÆue
); 
	}
}

191 
	$˝u_›_°a
(Ë{ 
	`mem‹y_wrôeb
(
›_addªss
, 
˝u
.
A
); 
	}
}

192 
	$˝u_›_°x
(Ë{ 
	`mem‹y_wrôeb
(
›_addªss
, 
˝u
.
X
); 
	}
}

193 
	$˝u_›_°y
(Ë{ 
	`mem‹y_wrôeb
(
›_addªss
, 
˝u
.
Y
); 
	}
}

197 
	$˝u_›_èx
(Ë{ 
	`˝u_upd©e_zn_Êags
(
˝u
.
X
 = cpu.
A
); 
	}
}

198 
	$˝u_›_txa
(Ë{ 
	`˝u_upd©e_zn_Êags
(
˝u
.
A
 = cpu.
X
); 
	}
}

199 
	$˝u_›_èy
(Ë{ 
	`˝u_upd©e_zn_Êags
(
˝u
.
Y
 = cpu.
A
); 
	}
}

200 
	$˝u_›_tya
(Ë{ 
	`˝u_upd©e_zn_Êags
(
˝u
.
A
 = cpu.
Y
); 
	}
}

201 
	$˝u_›_tsx
(Ë{ 
	`˝u_upd©e_zn_Êags
(
˝u
.
X
 = cpu.
SP
); 
	}
}

202 
	$˝u_›_txs
(Ë{ 
˝u
.
SP
 = cpu.
X
; 
	}
}

206 
	$˝u_›_bcs
(Ë{ 
	`˝u_bønch
(
	`˝u_Êag_£t
(
ˇºy_bp
)); 
	}
}

207 
	$˝u_›_beq
(Ë{ 
	`˝u_bønch
(
	`˝u_Êag_£t
(
zîo_bp
)); 
	}
}

208 
	$˝u_›_bmi
(Ë{ 
	`˝u_bønch
(
	`˝u_Êag_£t
(
√g©ive_bp
)); 
	}
}

209 
	$˝u_›_bvs
(Ë{ 
	`˝u_bønch
(
	`˝u_Êag_£t
(
ovîÊow_bp
)); 
	}
}

213 
	$˝u_›_b√
(Ë{ 
	`˝u_bønch
(!
	`˝u_Êag_£t
(
zîo_bp
)); 
	}
}

214 
	$˝u_›_bcc
(Ë{ 
	`˝u_bønch
(!
	`˝u_Êag_£t
(
ˇºy_bp
)); 
	}
}

215 
	$˝u_›_b∂
(Ë{ 
	`˝u_bønch
(!
	`˝u_Êag_£t
(
√g©ive_bp
)); 
	}
}

216 
	$˝u_›_bvc
(Ë{ 
	`˝u_bønch
(!
	`˝u_Êag_£t
(
ovîÊow_bp
)); 
	}
}

220 
	$˝u_›_jmp
(Ë{ 
˝u
.
PC
 = 
›_addªss
; 
	}
}

224 
	$˝u_›_j§
(Ë{ 
	`˝u_°ack_pushw
(
˝u
.
PC
 - 1); cpu.PC = 
›_addªss
; 
	}
}

225 
	$˝u_›_πs
(Ë{ 
˝u
.
PC
 = 
	`˝u_°ack_p›w
(Ë+ 1; 
	}
}

229 
	$˝u_›_brk
() {

230 
	`˝u_°ack_pushw
(
˝u
.
PC
 - 1);

231 
	`˝u_°ack_pushb
(
˝u
.
P
);

232 
˝u
.
P
 |
unu£d_Êag
 | 
bªak_Êag
;

233 
˝u
.
PC
 = 
	`˝u_nmi_öãºu±_addªss
();

234 
	}
}

235 
	$˝u_›_πi
(Ë{ 
˝u
.
P
 = 
	`˝u_°ack_p›b
(Ë| 
unu£d_Êag
; cpu.
PC
 = 
	`˝u_°ack_p›w
(); 
	}
}

239 
	$˝u_›_˛c
(Ë{ 
	`˝u_un£t_Êag
(
ˇºy_bp
); 
	}
}

240 
	$˝u_›_˛d
(Ë{ 
	`˝u_un£t_Êag
(
decimÆ_bp
); 
	}
}

241 
	$˝u_›_˛i
(Ë{ 
	`˝u_un£t_Êag
(
öãºu±_bp
); 
	}
}

242 
	$˝u_›_˛v
(Ë{ 
	`˝u_un£t_Êag
(
ovîÊow_bp
); 
	}
}

243 
	$˝u_›_£c
(Ë{ 
	`˝u_£t_Êag
(
ˇºy_bp
); 
	}
}

244 
	$˝u_›_£d
(Ë{ 
	`˝u_£t_Êag
(
decimÆ_bp
); 
	}
}

245 
	$˝u_›_£i
(Ë{ 
	`˝u_£t_Êag
(
öãºu±_bp
); 
	}
}

249 
	$˝u_›_cmp
(Ë{ 
	`˝u_com∑ª
(
˝u
.
A
); 
	}
}

250 
	$˝u_›_˝x
(Ë{ 
	`˝u_com∑ª
(
˝u
.
X
); 
	}
}

251 
	$˝u_›_˝y
(Ë{ 
	`˝u_com∑ª
(
˝u
.
Y
); 
	}
}

255 
	$˝u_›_öc
() {

256 
byã
 
ªsu…
 = 
›_vÆue
 + 1;

257 
	`mem‹y_wrôeb
(
›_addªss
, 
ªsu…
);

258 
	`˝u_upd©e_zn_Êags
(
ªsu…
);

259 
	}
}

260 
	$˝u_›_öx
(Ë{ 
	`˝u_upd©e_zn_Êags
(++
˝u
.
X
); 
	}
}

261 
	$˝u_›_öy
(Ë{ 
	`˝u_upd©e_zn_Êags
(++
˝u
.
Y
); 
	}
}

265 
	$˝u_›_dec
() {

266 
byã
 
ªsu…
 = 
›_vÆue
 - 1;

267 
	`mem‹y_wrôeb
(
›_addªss
, 
ªsu…
);

268 
	`˝u_upd©e_zn_Êags
(
ªsu…
);

269 
	}
}

270 
	$˝u_›_dex
(Ë{ 
	`˝u_upd©e_zn_Êags
(--
˝u
.
X
); 
	}
}

271 
	$˝u_›_dey
(Ë{ 
	`˝u_upd©e_zn_Êags
(--
˝u
.
Y
); 
	}
}

275 
	$˝u_›_php
(Ë{ 
	`˝u_°ack_pushb
(
˝u
.
P
 | 0x30); 
	}
}

276 
	$˝u_›_pha
(Ë{ 
	`˝u_°ack_pushb
(
˝u
.
A
); 
	}
}

277 
	$˝u_›_∂a
(Ë{ 
˝u
.
A
 = 
	`˝u_°ack_p›b
(); 
	`˝u_upd©e_zn_Êags
(˝u.A); 
	}
}

278 
	$˝u_›_∂p
(Ë{ 
˝u
.
P
 = (
	`˝u_°ack_p›b
(Ë& 0xEFË| 0x20; 
	}
}

283 
	$˝u_›_aso
(Ë{ 
	`˝u_›_a¶
(); 
	`˝u_›_‹a
(); 
	}
}

284 
	$˝u_›_axa
(Ë{ 
	`mem‹y_wrôeb
(
›_addªss
, 
˝u
.
A
 & cpu.
X
 & (›_addªs†>> 8)); 
	}
}

285 
	$˝u_›_axs
(Ë{ 
	`mem‹y_wrôeb
(
›_addªss
, 
˝u
.
A
 & cpu.
X
); 
	}
}

286 
	$˝u_›_dcm
()

288 
›_vÆue
--;

289 
›_vÆue
 &= 0xFF;

290 
	`mem‹y_wrôeb
(
›_addªss
, 
›_vÆue
);

291 
	`˝u_›_cmp
();

292 
	}
}

293 
	$˝u_›_ös
()

295 
›_vÆue
 = (op_value + 1) & 0xFF;

296 
	`mem‹y_wrôeb
(
›_addªss
, 
›_vÆue
);

297 
	`˝u_›_sbc
();

298 
	}
}

299 
	$˝u_›_œx
(Ë{ 
	`˝u_upd©e_zn_Êags
(
˝u
.
A
 = cpu.
X
 = 
›_vÆue
); 
	}
}

300 
	$˝u_›_l£
(Ë{ 
	`˝u_›_l§
(); 
	`˝u_›_e‹
(); 
	}
}

301 
	$˝u_›_æa
(Ë{ 
	`˝u_›_rﬁ
(); 
	`˝u_›_™d
(); 
	}
}

302 
	$˝u_›_ºa
(Ë{ 
	`˝u_›_r‹
(); 
	`˝u_›_adc
(); 
	}
}

307 
	#CPU_OP_BIS
(
o
, 
c
, 
f
, 
n
, 
a
) \

308 
˝u_›_cy˛es
[0x##
o
] = 
c
; \

309 
˝u_›_h™dÀr
[0x##
o
] = 
˝u_›_
##
f
; \

310 
˝u_›_«me
[0x##
o
] = 
n
; \

311 
˝u_›_addªss_mode
[0x##
o
] = 
˝u_addªss_
##
a
; \

312 
˝u_›_ö_ba£_ö°ru˘i⁄_£t
[0x##
o
] = 
åue
;

	)

316 
	#CPU_OP_NII
(
o
, 
a
) \

317 
˝u_›_cy˛es
[0x##
o
] = 1; \

318 
˝u_›_h™dÀr
[0x##
o
] = 
____FE____
; \

319 
˝u_›_«me
[0x##
o
] = "NOP"; \

320 
˝u_›_addªss_mode
[0x##
o
] = 
˝u_addªss_
##
a
; \

321 
˝u_›_ö_ba£_ö°ru˘i⁄_£t
[0x##
o
] = 
Ál£
;

	)

325 
	#CPU_OP_EIS
(
o
, 
c
, 
f
, 
n
, 
a
) \

326 
˝u_›_cy˛es
[0x##
o
] = 
c
; \

327 
˝u_›_h™dÀr
[0x##
o
] = 
˝u_›_
##
f
; \

328 
˝u_›_«me
[0x##
o
] = 
n
; \

329 
˝u_›_addªss_mode
[0x##
o
] = 
˝u_addªss_
##
a
; \

330 
˝u_›_ö_ba£_ö°ru˘i⁄_£t
[0x##
o
] = 
Ál£
;

	)

334 
	$˝u_öô
() {

335 
	`CPU_OP_BIS
(00, 7, 
brk
, "BRK", 
im∂õd
)

336 
	`CPU_OP_BIS
(01, 6, 
‹a
, "ORA", 
ödúe˘_x
)

337 
	`CPU_OP_BIS
(05, 3, 
‹a
, "ORA", 
zîo_∑ge
)

338 
	`CPU_OP_BIS
(06, 5, 
a¶
, "ASL", 
zîo_∑ge
)

339 
	`CPU_OP_BIS
(08, 3, 
php
, "PHP", 
im∂õd
)

340 
	`CPU_OP_BIS
(09, 2, 
‹a
, "ORA", 
immedüã
)

341 
	`CPU_OP_BIS
(0A, 2, 
a¶a
,"ASL", 
im∂õd
)

342 
	`CPU_OP_BIS
(0D, 4, 
‹a
, "ORA", 
absﬁuã
)

343 
	`CPU_OP_BIS
(0E, 6, 
a¶
, "ASL", 
absﬁuã
)

344 
	`CPU_OP_BIS
(10, 2, 
b∂
, "BPL", 
ªœtive
)

345 
	`CPU_OP_BIS
(11, 5, 
‹a
, "ORA", 
ödúe˘_y
)

346 
	`CPU_OP_BIS
(15, 4, 
‹a
, "ORA", 
zîo_∑ge_x
)

347 
	`CPU_OP_BIS
(16, 6, 
a¶
, "ASL", 
zîo_∑ge_x
)

348 
	`CPU_OP_BIS
(18, 2, 
˛c
, "CLC", 
im∂õd
)

349 
	`CPU_OP_BIS
(19, 4, 
‹a
, "ORA", 
absﬁuã_y
)

350 
	`CPU_OP_BIS
(1D, 4, 
‹a
, "ORA", 
absﬁuã_x
)

351 
	`CPU_OP_BIS
(1E, 7, 
a¶
, "ASL", 
absﬁuã_x
)

352 
	`CPU_OP_BIS
(20, 6, 
j§
, "JSR", 
absﬁuã
)

353 
	`CPU_OP_BIS
(21, 6, 
™d
, "AND", 
ödúe˘_x
)

354 
	`CPU_OP_BIS
(24, 3, 
bô
, "BIT", 
zîo_∑ge
)

355 
	`CPU_OP_BIS
(25, 3, 
™d
, "AND", 
zîo_∑ge
)

356 
	`CPU_OP_BIS
(26, 5, 
rﬁ
, "ROL", 
zîo_∑ge
)

357 
	`CPU_OP_BIS
(28, 4, 
∂p
, "PLP", 
im∂õd
)

358 
	`CPU_OP_BIS
(29, 2, 
™d
, "AND", 
immedüã
)

359 
	`CPU_OP_BIS
(2A, 2, 
rﬁa
,"ROL", 
im∂õd
)

360 
	`CPU_OP_BIS
(2C, 4, 
bô
, "BIT", 
absﬁuã
)

361 
	`CPU_OP_BIS
(2D, 2, 
™d
, "AND", 
absﬁuã
)

362 
	`CPU_OP_BIS
(2E, 6, 
rﬁ
, "ROL", 
absﬁuã
)

363 
	`CPU_OP_BIS
(30, 2, 
bmi
, "BMI", 
ªœtive
)

364 
	`CPU_OP_BIS
(31, 5, 
™d
, "AND", 
ödúe˘_y
)

365 
	`CPU_OP_BIS
(35, 4, 
™d
, "AND", 
zîo_∑ge_x
)

366 
	`CPU_OP_BIS
(36, 6, 
rﬁ
, "ROL", 
zîo_∑ge_x
)

367 
	`CPU_OP_BIS
(38, 2, 
£c
, "SEC", 
im∂õd
)

368 
	`CPU_OP_BIS
(39, 4, 
™d
, "AND", 
absﬁuã_y
)

369 
	`CPU_OP_BIS
(3D, 4, 
™d
, "AND", 
absﬁuã_x
)

370 
	`CPU_OP_BIS
(3E, 7, 
rﬁ
, "ROL", 
absﬁuã_x
)

371 
	`CPU_OP_BIS
(40, 6, 
πi
, "RTI", 
im∂õd
)

372 
	`CPU_OP_BIS
(41, 6, 
e‹
, "EOR", 
ödúe˘_x
)

373 
	`CPU_OP_BIS
(45, 3, 
e‹
, "EOR", 
zîo_∑ge
)

374 
	`CPU_OP_BIS
(46, 5, 
l§
, "LSR", 
zîo_∑ge
)

375 
	`CPU_OP_BIS
(48, 3, 
pha
, "PHA", 
im∂õd
)

376 
	`CPU_OP_BIS
(49, 2, 
e‹
, "EOR", 
immedüã
)

377 
	`CPU_OP_BIS
(4A, 2, 
l§a
,"LSR", 
im∂õd
)

378 
	`CPU_OP_BIS
(4C, 3, 
jmp
, "JMP", 
absﬁuã
)

379 
	`CPU_OP_BIS
(4D, 4, 
e‹
, "EOR", 
absﬁuã
)

380 
	`CPU_OP_BIS
(4E, 6, 
l§
, "LSR", 
absﬁuã
)

381 
	`CPU_OP_BIS
(50, 2, 
bvc
, "BVC", 
ªœtive
)

382 
	`CPU_OP_BIS
(51, 5, 
e‹
, "EOR", 
ödúe˘_y
)

383 
	`CPU_OP_BIS
(55, 4, 
e‹
, "EOR", 
zîo_∑ge_x
)

384 
	`CPU_OP_BIS
(56, 6, 
l§
, "LSR", 
zîo_∑ge_x
)

385 
	`CPU_OP_BIS
(58, 2, 
˛i
, "CLI", 
im∂õd
)

386 
	`CPU_OP_BIS
(59, 4, 
e‹
, "EOR", 
absﬁuã_y
)

387 
	`CPU_OP_BIS
(5D, 4, 
e‹
, "EOR", 
absﬁuã_x
)

388 
	`CPU_OP_BIS
(5E, 7, 
l§
, "LSR", 
absﬁuã_x
)

389 
	`CPU_OP_BIS
(60, 6, 
πs
, "RTS", 
im∂õd
)

390 
	`CPU_OP_BIS
(61, 6, 
adc
, "ADC", 
ödúe˘_x
)

391 
	`CPU_OP_BIS
(65, 3, 
adc
, "ADC", 
zîo_∑ge
)

392 
	`CPU_OP_BIS
(66, 5, 
r‹
, "ROR", 
zîo_∑ge
)

393 
	`CPU_OP_BIS
(68, 4, 
∂a
, "PLA", 
im∂õd
)

394 
	`CPU_OP_BIS
(69, 2, 
adc
, "ADC", 
immedüã
)

395 
	`CPU_OP_BIS
(6A, 2, 
r‹a
,"ROR", 
im∂õd
)

396 
	`CPU_OP_BIS
(6C, 5, 
jmp
, "JMP", 
ödúe˘
)

397 
	`CPU_OP_BIS
(6D, 4, 
adc
, "ADC", 
absﬁuã
)

398 
	`CPU_OP_BIS
(6E, 6, 
r‹
, "ROR", 
absﬁuã
)

399 
	`CPU_OP_BIS
(70, 2, 
bvs
, "BVS", 
ªœtive
)

400 
	`CPU_OP_BIS
(71, 5, 
adc
, "ADC", 
ödúe˘_y
)

401 
	`CPU_OP_BIS
(75, 4, 
adc
, "ADC", 
zîo_∑ge_x
)

402 
	`CPU_OP_BIS
(76, 6, 
r‹
, "ROR", 
zîo_∑ge_x
)

403 
	`CPU_OP_BIS
(78, 2, 
£i
, "SEI", 
im∂õd
)

404 
	`CPU_OP_BIS
(79, 4, 
adc
, "ADC", 
absﬁuã_y
)

405 
	`CPU_OP_BIS
(7D, 4, 
adc
, "ADC", 
absﬁuã_x
)

406 
	`CPU_OP_BIS
(7E, 7, 
r‹
, "ROR", 
absﬁuã_x
)

407 
	`CPU_OP_BIS
(81, 6, 
°a
, "STA", 
ödúe˘_x
)

408 
	`CPU_OP_BIS
(84, 3, 
°y
, "STY", 
zîo_∑ge
)

409 
	`CPU_OP_BIS
(85, 3, 
°a
, "STA", 
zîo_∑ge
)

410 
	`CPU_OP_BIS
(86, 3, 
°x
, "STX", 
zîo_∑ge
)

411 
	`CPU_OP_BIS
(88, 2, 
dey
, "DEY", 
im∂õd
)

412 
	`CPU_OP_BIS
(8A, 2, 
txa
, "TXA", 
im∂õd
)

413 
	`CPU_OP_BIS
(8C, 4, 
°y
, "STY", 
absﬁuã
)

414 
	`CPU_OP_BIS
(8D, 4, 
°a
, "STA", 
absﬁuã
)

415 
	`CPU_OP_BIS
(8E, 4, 
°x
, "STX", 
absﬁuã
)

416 
	`CPU_OP_BIS
(90, 2, 
bcc
, "BCC", 
ªœtive
)

417 
	`CPU_OP_BIS
(91, 6, 
°a
, "STA", 
ödúe˘_y
)

418 
	`CPU_OP_BIS
(94, 4, 
°y
, "STY", 
zîo_∑ge_x
)

419 
	`CPU_OP_BIS
(95, 4, 
°a
, "STA", 
zîo_∑ge_x
)

420 
	`CPU_OP_BIS
(96, 4, 
°x
, "STX", 
zîo_∑ge_y
)

421 
	`CPU_OP_BIS
(98, 2, 
tya
, "TYA", 
im∂õd
)

422 
	`CPU_OP_BIS
(99, 5, 
°a
, "STA", 
absﬁuã_y
)

423 
	`CPU_OP_BIS
(9A, 2, 
txs
, "TXS", 
im∂õd
)

424 
	`CPU_OP_BIS
(9D, 5, 
°a
, "STA", 
absﬁuã_x
)

425 
	`CPU_OP_BIS
(
A0
, 2, 
ldy
, "LDY", 
immedüã
)

426 
	`CPU_OP_BIS
(
A1
, 6, 
lda
, "LDA", 
ödúe˘_x
)

427 
	`CPU_OP_BIS
(
A2
, 2, 
ldx
, "LDX", 
immedüã
)

428 
	`CPU_OP_BIS
(
A4
, 3, 
ldy
, "LDY", 
zîo_∑ge
)

429 
	`CPU_OP_BIS
(
A5
, 3, 
lda
, "LDA", 
zîo_∑ge
)

430 
	`CPU_OP_BIS
(
A6
, 3, 
ldx
, "LDX", 
zîo_∑ge
)

431 
	`CPU_OP_BIS
(
A8
, 2, 
èy
, "TAY", 
im∂õd
)

432 
	`CPU_OP_BIS
(
A9
, 2, 
lda
, "LDA", 
immedüã
)

433 
	`CPU_OP_BIS
(
AA
, 2, 
èx
, "TAX", 
im∂õd
)

434 
	`CPU_OP_BIS
(
AC
, 4, 
ldy
, "LDY", 
absﬁuã
)

435 
	`CPU_OP_BIS
(
AD
, 4, 
lda
, "LDA", 
absﬁuã
)

436 
	`CPU_OP_BIS
(
AE
, 4, 
ldx
, "LDX", 
absﬁuã
)

437 
	`CPU_OP_BIS
(
B0
, 2, 
bcs
, "BCS", 
ªœtive
)

438 
	`CPU_OP_BIS
(
B1
, 5, 
lda
, "LDA", 
ödúe˘_y
)

439 
	`CPU_OP_BIS
(
B4
, 4, 
ldy
, "LDY", 
zîo_∑ge_x
)

440 
	`CPU_OP_BIS
(
B5
, 4, 
lda
, "LDA", 
zîo_∑ge_x
)

441 
	`CPU_OP_BIS
(
B6
, 4, 
ldx
, "LDX", 
zîo_∑ge_y
)

442 
	`CPU_OP_BIS
(
B8
, 2, 
˛v
, "CLV", 
im∂õd
)

443 
	`CPU_OP_BIS
(
B9
, 4, 
lda
, "LDA", 
absﬁuã_y
)

444 
	`CPU_OP_BIS
(
BA
, 2, 
tsx
, "TSX", 
im∂õd
)

445 
	`CPU_OP_BIS
(
BC
, 4, 
ldy
, "LDY", 
absﬁuã_x
)

446 
	`CPU_OP_BIS
(
BD
, 4, 
lda
, "LDA", 
absﬁuã_x
)

447 
	`CPU_OP_BIS
(
BE
, 4, 
ldx
, "LDX", 
absﬁuã_y
)

448 
	`CPU_OP_BIS
(
C0
, 2, 
˝y
, "CPY", 
immedüã
)

449 
	`CPU_OP_BIS
(
C1
, 6, 
cmp
, "CMP", 
ödúe˘_x
)

450 
	`CPU_OP_BIS
(
C4
, 3, 
˝y
, "CPY", 
zîo_∑ge
)

451 
	`CPU_OP_BIS
(
C5
, 3, 
cmp
, "CMP", 
zîo_∑ge
)

452 
	`CPU_OP_BIS
(
C6
, 5, 
dec
, "DEC", 
zîo_∑ge
)

453 
	`CPU_OP_BIS
(
C8
, 2, 
öy
, "INY", 
im∂õd
)

454 
	`CPU_OP_BIS
(
C9
, 2, 
cmp
, "CMP", 
immedüã
)

455 
	`CPU_OP_BIS
(
CA
, 2, 
dex
, "DEX", 
im∂õd
)

456 
	`CPU_OP_BIS
(
CC
, 4, 
˝y
, "CPY", 
absﬁuã
)

457 
	`CPU_OP_BIS
(
CD
, 4, 
cmp
, "CMP", 
absﬁuã
)

458 
	`CPU_OP_BIS
(
CE
, 6, 
dec
, "DEC", 
absﬁuã
)

459 
	`CPU_OP_BIS
(
D0
, 2, 
b√
, "BNE", 
ªœtive
)

460 
	`CPU_OP_BIS
(
D1
, 5, 
cmp
, "CMP", 
ödúe˘_y
)

461 
	`CPU_OP_BIS
(
D5
, 4, 
cmp
, "CMP", 
zîo_∑ge_x
)

462 
	`CPU_OP_BIS
(
D6
, 6, 
dec
, "DEC", 
zîo_∑ge_x
)

463 
	`CPU_OP_BIS
(
D8
, 2, 
˛d
, "CLD", 
im∂õd
)

464 
	`CPU_OP_BIS
(
D9
, 4, 
cmp
, "CMP", 
absﬁuã_y
)

465 
	`CPU_OP_BIS
(
DD
, 4, 
cmp
, "CMP", 
absﬁuã_x
)

466 
	`CPU_OP_BIS
(
DE
, 7, 
dec
, "DEC", 
absﬁuã_x
)

467 
	`CPU_OP_BIS
(
E0
, 2, 
˝x
, "CPX", 
immedüã
)

468 
	`CPU_OP_BIS
(
E1
, 6, 
sbc
, "SBC", 
ödúe˘_x
)

469 
	`CPU_OP_BIS
(
E4
, 3, 
˝x
, "CPX", 
zîo_∑ge
)

470 
	`CPU_OP_BIS
(
E5
, 3, 
sbc
, "SBC", 
zîo_∑ge
)

471 
	`CPU_OP_BIS
(
E6
, 5, 
öc
, "INC", 
zîo_∑ge
)

472 
	`CPU_OP_BIS
(
E8
, 2, 
öx
, "INX", 
im∂õd
)

473 
	`CPU_OP_BIS
(
E9
, 2, 
sbc
, "SBC", 
immedüã
)

474 
	`CPU_OP_BIS
(
EA
, 2, 
n›
, "NOP", 
im∂õd
)

475 
	`CPU_OP_BIS
(
EC
, 4, 
˝x
, "CPX", 
absﬁuã
)

476 
	`CPU_OP_BIS
(
ED
, 4, 
sbc
, "SBC", 
absﬁuã
)

477 
	`CPU_OP_BIS
(
EE
, 6, 
öc
, "INC", 
absﬁuã
)

478 
	`CPU_OP_BIS
(
F0
, 2, 
beq
, "BEQ", 
ªœtive
)

479 
	`CPU_OP_BIS
(
F1
, 5, 
sbc
, "SBC", 
ödúe˘_y
)

480 
	`CPU_OP_BIS
(
F5
, 4, 
sbc
, "SBC", 
zîo_∑ge_x
)

481 
	`CPU_OP_BIS
(
F6
, 6, 
öc
, "INC", 
zîo_∑ge_x
)

482 
	`CPU_OP_BIS
(
F8
, 2, 
£d
, "SED", 
im∂õd
)

483 
	`CPU_OP_BIS
(
F9
, 4, 
sbc
, "SBC", 
absﬁuã_y
)

484 
	`CPU_OP_BIS
(
FD
, 4, 
sbc
, "SBC", 
absﬁuã_x
)

485 
	`CPU_OP_BIS
(
FE
, 7, 
öc
, "INC", 
absﬁuã_x
)

487 
	`CPU_OP_EIS
(03, 8, 
aso
, "SLO", 
ödúe˘_x
)

488 
	`CPU_OP_EIS
(07, 5, 
aso
, "SLO", 
zîo_∑ge
)

489 
	`CPU_OP_EIS
(0F, 6, 
aso
, "SLO", 
absﬁuã
)

490 
	`CPU_OP_EIS
(13, 8, 
aso
, "SLO", 
ödúe˘_y
)

491 
	`CPU_OP_EIS
(17, 6, 
aso
, "SLO", 
zîo_∑ge_x
)

492 
	`CPU_OP_EIS
(1B, 7, 
aso
, "SLO", 
absﬁuã_y
)

493 
	`CPU_OP_EIS
(1F, 7, 
aso
, "SLO", 
absﬁuã_x
)

494 
	`CPU_OP_EIS
(23, 8, 
æa
, "RLA", 
ödúe˘_x
)

495 
	`CPU_OP_EIS
(27, 5, 
æa
, "RLA", 
zîo_∑ge
)

496 
	`CPU_OP_EIS
(2F, 6, 
æa
, "RLA", 
absﬁuã
)

497 
	`CPU_OP_EIS
(33, 8, 
æa
, "RLA", 
ödúe˘_y
)

498 
	`CPU_OP_EIS
(37, 6, 
æa
, "RLA", 
zîo_∑ge_x
)

499 
	`CPU_OP_EIS
(3B, 7, 
æa
, "RLA", 
absﬁuã_y
)

500 
	`CPU_OP_EIS
(3F, 7, 
æa
, "RLA", 
absﬁuã_x
)

501 
	`CPU_OP_EIS
(43, 8, 
l£
, "SRE", 
ödúe˘_x
)

502 
	`CPU_OP_EIS
(47, 5, 
l£
, "SRE", 
zîo_∑ge
)

503 
	`CPU_OP_EIS
(4F, 6, 
l£
, "SRE", 
absﬁuã
)

504 
	`CPU_OP_EIS
(53, 8, 
l£
, "SRE", 
ödúe˘_y
)

505 
	`CPU_OP_EIS
(57, 6, 
l£
, "SRE", 
zîo_∑ge_x
)

506 
	`CPU_OP_EIS
(5B, 7, 
l£
, "SRE", 
absﬁuã_y
)

507 
	`CPU_OP_EIS
(5F, 7, 
l£
, "SRE", 
absﬁuã_x
)

508 
	`CPU_OP_EIS
(63, 8, 
ºa
, "RRA", 
ödúe˘_x
)

509 
	`CPU_OP_EIS
(67, 5, 
ºa
, "RRA", 
zîo_∑ge
)

510 
	`CPU_OP_EIS
(6F, 6, 
ºa
, "RRA", 
absﬁuã
)

511 
	`CPU_OP_EIS
(73, 8, 
ºa
, "RRA", 
ödúe˘_y
)

512 
	`CPU_OP_EIS
(77, 6, 
ºa
, "RRA", 
zîo_∑ge_x
)

513 
	`CPU_OP_EIS
(7B, 7, 
ºa
, "RRA", 
absﬁuã_y
)

514 
	`CPU_OP_EIS
(7F, 7, 
ºa
, "RRA", 
absﬁuã_x
)

515 
	`CPU_OP_EIS
(83, 6, 
axs
, "SAX", 
ödúe˘_x
)

516 
	`CPU_OP_EIS
(87, 3, 
axs
, "SAX", 
zîo_∑ge
)

517 
	`CPU_OP_EIS
(8F, 4, 
axs
, "SAX", 
absﬁuã
)

518 
	`CPU_OP_EIS
(93, 6, 
axa
, "SAX", 
ödúe˘_y
)

519 
	`CPU_OP_EIS
(97, 4, 
axs
, "SAX", 
zîo_∑ge_y
)

520 
	`CPU_OP_EIS
(9F, 5, 
axa
, "SAX", 
absﬁuã_y
)

521 
	`CPU_OP_EIS
(
A3
, 6, 
œx
, "LAX", 
ödúe˘_x
)

522 
	`CPU_OP_EIS
(
A7
, 3, 
œx
, "LAX", 
zîo_∑ge
)

523 
	`CPU_OP_EIS
(
AF
, 4, 
œx
, "LAX", 
absﬁuã
)

524 
	`CPU_OP_EIS
(
B3
, 5, 
œx
, "LAX", 
ödúe˘_y
)

525 
	`CPU_OP_EIS
(
B7
, 4, 
œx
, "LAX", 
zîo_∑ge_y
)

526 
	`CPU_OP_EIS
(
BF
, 4, 
œx
, "LAX", 
absﬁuã_y
)

527 
	`CPU_OP_EIS
(
C3
, 8, 
dcm
, "DCP", 
ödúe˘_x
)

528 
	`CPU_OP_EIS
(
C7
, 5, 
dcm
, "DCP", 
zîo_∑ge
)

529 
	`CPU_OP_EIS
(
CF
, 6, 
dcm
, "DCP", 
absﬁuã
)

530 
	`CPU_OP_EIS
(
D3
, 8, 
dcm
, "DCP", 
ödúe˘_y
)

531 
	`CPU_OP_EIS
(
D7
, 6, 
dcm
, "DCP", 
zîo_∑ge_x
)

532 
	`CPU_OP_EIS
(
DB
, 7, 
dcm
, "DCP", 
absﬁuã_y
)

533 
	`CPU_OP_EIS
(
DF
, 7, 
dcm
, "DCP", 
absﬁuã_x
)

534 
	`CPU_OP_EIS
(
E3
, 8, 
ös
, "ISB", 
ödúe˘_x
)

535 
	`CPU_OP_EIS
(
E7
, 5, 
ös
, "ISB", 
zîo_∑ge
)

536 
	`CPU_OP_EIS
(
EB
, 2, 
sbc
, "SBC", 
immedüã
)

537 
	`CPU_OP_EIS
(
EF
, 6, 
ös
, "ISB", 
absﬁuã
)

538 
	`CPU_OP_EIS
(
F3
, 8, 
ös
, "ISB", 
ödúe˘_y
)

539 
	`CPU_OP_EIS
(
F7
, 6, 
ös
, "ISB", 
zîo_∑ge_x
)

540 
	`CPU_OP_EIS
(
FB
, 7, 
ös
, "ISB", 
absﬁuã_y
)

541 
	`CPU_OP_EIS
(
FF
, 7, 
ös
, "ISB", 
absﬁuã_x
)

543 
	`CPU_OP_NII
(04, 
zîo_∑ge
)

544 
	`CPU_OP_NII
(0C, 
absﬁuã
)

545 
	`CPU_OP_NII
(14, 
zîo_∑ge_x
)

546 
	`CPU_OP_NII
(1A, 
im∂õd
)

547 
	`CPU_OP_NII
(1C, 
absﬁuã_x
)

548 
	`CPU_OP_NII
(34, 
zîo_∑ge_x
)

549 
	`CPU_OP_NII
(3A, 
im∂õd
)

550 
	`CPU_OP_NII
(3C, 
absﬁuã_x
)

551 
	`CPU_OP_NII
(44, 
zîo_∑ge
)

552 
	`CPU_OP_NII
(54, 
zîo_∑ge_x
)

553 
	`CPU_OP_NII
(5A, 
im∂õd
)

554 
	`CPU_OP_NII
(5C, 
absﬁuã_x
)

555 
	`CPU_OP_NII
(64, 
zîo_∑ge
)

556 
	`CPU_OP_NII
(74, 
zîo_∑ge_x
)

557 
	`CPU_OP_NII
(7A, 
im∂õd
)

558 
	`CPU_OP_NII
(7C, 
absﬁuã_x
)

559 
	`CPU_OP_NII
(80, 
immedüã
)

560 
	`CPU_OP_NII
(
D4
, 
zîo_∑ge_x
)

561 
	`CPU_OP_NII
(
DA
, 
im∂õd
)

562 
	`CPU_OP_NII
(
DC
, 
absﬁuã_x
)

563 
	`CPU_OP_NII
(
F4
, 
zîo_∑ge_x
)

564 
	`CPU_OP_NII
(
FA
, 
im∂õd
)

565 
	`CPU_OP_NII
(
FC
, 
absﬁuã_x
)

567 
˝u
.
P
 = 0x24;

568 
˝u
.
SP
 = 0x00;

569 
˝u
.
A
 = cpu.
X
 = cpu.
Y
 = 0;

570 
	}
}

572 
	$˝u_ª£t
() {

573 
˝u
.
PC
 = 
	`˝u_ª£t_öãºu±_addªss
();

574 
˝u
.
SP
 -= 3;

575 
˝u
.
P
 |
öãºu±_Êag
;

576 
	}
}

578 
	$˝u_öãºu±
() {

579 i‡(
	`µu_gíî©es_nmi
()) {

580 
˝u
.
P
 |
öãºu±_Êag
;

581 
	`˝u_un£t_Êag
(
unu£d_bp
);

582 
	`˝u_°ack_pushw
(
˝u
.
PC
);

583 
	`˝u_°ack_pushb
(
˝u
.
P
);

584 
˝u
.
PC
 = 
	`˝u_nmi_öãºu±_addªss
();

586 
	}
}

588 
	$˝u_˛ock
() {

589  
˝u_cy˛es
;

590 
	}
}

592 
	$˝u_run
(
cy˛es
) {

593 
cy˛es
 /= 3;

594 
cy˛es
 > 0) {

595 
›_code
 = 
	`mem‹y_ªadb
(
˝u
.
PC
++);

596 i‡(
˝u_›_addªss_mode
[
›_code
] =
NULL
) {

599 
˝u_›_addªss_mode
[
›_code
]();

600 
˝u_›_h™dÀr
[
›_code
]();

602 
cy˛es
 -
˝u_›_cy˛es
[
›_code
] + 
›_cy˛es
;

603 
˝u_cy˛es
 -
˝u_›_cy˛es
[
›_code
] + 
›_cy˛es
;

604 
›_cy˛es
 = 0;

606 
	}
}

	@am-kernels/kernels/litenes/src/cpu.h

1 
	~"comm⁄.h
"

3 #i‚de‡
CPU_H


4 
	#CPU_H


	)

6 
byã
 
˝u_øm_ªad
(
w‹d
 
addªss
);

7 
˝u_øm_wrôe
(
w‹d
 
addªss
, 
byã
 
d©a
);

9 
˝u_öô
();

10 
˝u_ª£t
();

11 
˝u_öãºu±
();

12 
˝u_run
(
cy˛es
);

15 
˝u_˛ock
();

	@am-kernels/kernels/litenes/src/fce.c

1 
	~"f˚.h
"

2 
	~"˝u.h
"

3 
	~"mem‹y.h
"

4 
	~"µu.h
"

5 
	~"psg.h
"

6 
	~<klib.h
>

8 
	g‰ame_˙t
;

9 
ölöe
 
boﬁ
 
	$ˇndøw
(Ë{  
‰ame_˙t
 % (1 + 
FRAME_SKIP
Ë=0; 
	}
}

11 
uöt32_t
 
	gˇnvas
[
SCR_W
 * 
SCR_H
];

13 
	$døw
(
x
, 
y
, 
idx
) {

14 i‡(
x
 >0 && x < 
SCR_W
 && 
y
 >0 && y < 
SCR_H
 && 
	`ˇndøw
()) {

15 
ˇnvas
[
y
 * 
SCR_W
 + 
x
] = 
∑Àâe
[
idx
];

17 
	}
}

20 
	msig«tuª
[4];

21 
byã
 
	m¥g_block_cou¡
;

22 
byã
 
	mchr_block_cou¡
;

23 
w‹d
 
	mrom_ty≥
;

24 
byã
 
	mª£rved
[8];

25 } 
	töes_hódî
;

27 
byã
 *
	gbuf
;

28 
öes_hódî
 *
	gf˚_rom_hódî
;

30 
byã
 *
	$romªad
(
size
) {

31 
byã
 *
ªt
 = 
buf
;

32 
buf
 +
size
;

33  
ªt
;

34 
	}
}

36 
	$f˚_lﬂd_rom
(*
rom
) {

37 
buf
 = (
byã
*)
rom
;

38 
f˚_rom_hódî
 = (
öes_hódî
*)
	`romªad
((ines_header));

40 i‡(
	`memcmp
(
f˚_rom_hódî
->
sig«tuª
, "NES\x1A", 4)) {

44 
mmc_id
 = ((
f˚_rom_hódî
->
rom_ty≥
 & 0xF0) >> 4);

46 
¥g_size
 = 
f˚_rom_hódî
->
¥g_block_cou¡
 * 0x4000;

48 
byã
 *
blk
 = 
	`romªad
(
¥g_size
);

50 i‡(
mmc_id
 == 0 || mmc_id == 3) {

52 i‡(
f˚_rom_hódî
->
¥g_block_cou¡
 == 1) {

53 
	`mmc_c›y
(0x8000, 
blk
, 0x4000);

54 
	`mmc_c›y
(0xC000, 
blk
, 0x4000);

57 
	`mmc_c›y
(0x8000, 
blk
, 0x8000);

65 
i
;

66 
i
 = 0; i < 
f˚_rom_hódî
->
chr_block_cou¡
; i++) {

67 
byã
 *
blk
 = 
	`romªad
(0x2000);

68 
	`mmc_≠≥nd_chr_rom_∑ge
(
blk
);

70 i‡(
i
 == 0) {

71 
	`µu_c›y
(0x0000, 
blk
, 0x2000);

76 
	}
}

78 
	$f˚_öô
() {

79 
	`˝u_öô
();

80 
	`µu_öô
();

81 
	`µu_£t_múr‹ög
(
f˚_rom_hódî
->
rom_ty≥
 & 1);

82 
	`˝u_ª£t
();

83 
	}
}

85 
	ggtime
;

87 
ölöe
 
	$u±ime_ms
() {

88  
	`io_ªad
(
AM_TIMER_UPTIME
).
us
 / 1000;

89 
	}
}

91 
	$waô_f‹_‰ame
() {

92 
cur
 = 
	`u±ime_ms
();

93 
cur
 - 
gtime
 < 1000 / 
FPS
) {

94 
cur
 = 
	`u±ime_ms
();

96 
gtime
 = 
cur
;

97 
	}
}

101 
	$f˚_run
() {

102 
gtime
 = 
	`u±ime_ms
();

103 
ƒ_døw
 = 0;

104 
uöt32_t
 
œ°
 = 
gtime
;

106 
	`waô_f‹_‰ame
();

107 
sˇ∆öes
 = 262;

109 
sˇ∆öes
-- > 0) {

110 
	`µu_cy˛e
();

111 
	`psg_dëe˘_key
();

114 
ƒ_døw
 ++;

115 
u±
 = 
	`u±ime_ms
();

116 i‡(
u±
 - 
œ°
 > 1000) {

117 
œ°
 = 
u±
;

118 
i
 = 0; i < 80; i++Ë
	`putch
('\b');

119 
	`¥ötf
("(Sy°emÅime: %dsËFPS = %d", 
u±
 / 1000, 
ƒ_døw
);

120 
ƒ_døw
 = 0;

123 
	}
}

125 
	$f˚_upd©e_s¸ìn
() {

126 
‰ame_˙t
++;

127 i‡(!
	`ˇndøw
()) ;

129 
idx
 = 
	`µu_øm_ªad
(0x3F00);

130 
uöt32_t
 
bgc
 = 
∑Àâe
[
idx
];

132 
AM_GPU_CONFIG_T
 
cfg
 = 
	`io_ªad
(
AM_GPU_CONFIG
);

133 
x∑d
 = (
cfg
.
width
 - 
SCR_W
) / 2;

134 
y∑d
 = (
cfg
.
height
 - 
SCR_H
) / 2;

135 
	`∑nic_⁄
(
x∑d
 < 0 || 
y∑d
 < 0, "screenÅoo small");

137 
	`io_wrôe
(
AM_GPU_FBDRAW
, 
x∑d
, 
y∑d
, 
ˇnvas
, 
SCR_W
, 
SCR_H
, 
åue
);

139 
i
 = 0; i < 
SCR_W
 * 
SCR_H
; i ++Ë
ˇnvas
[i] = 
bgc
;

140 
	}
}

	@am-kernels/kernels/litenes/src/fce.h

1 #i‚de‡
FCE_H


2 
	#FCE_H


	)

4 
	~"comm⁄.h
"

6 
	#FPS
 60

	)

7 
	#SCR_W
 256

	)

8 
	#SCR_H
 240

	)

9 
	#FRAME_SKIP
 1

	)

11 
f˚_upd©e_s¸ìn
();

12 
f˚_lﬂd_rom
(*
rom
);

13 
f˚_öô
();

14 
f˚_run
();

15 
døw
(
x
, 
y
, 
idx
);

17 c⁄° 
uöt32_t
 
	g∑Àâe
[64] = {

	@am-kernels/kernels/litenes/src/main.c

1 
	~"comm⁄.h
"

2 
	~"f˚.h
"

3 
	~"psg.h
"

5 
rom_m¨io_√s
[];

7 
	$maö
() {

8 
	`i€_öô
();

10 
	`¥ötf
("==================== LiteNES Emulator ====================\n\n");

11 
	`¥ötf
("Control: [%s] SELECT [%s] START [%s]\n"

13 
	`TOSTRING
(
KEY_UP
), TOSTRING(
KEY_SELECT
), TOSTRING(
KEY_START
),

14 
	`TOSTRING
(
KEY_LEFT
), TOSTRING(
KEY_DOWN
), TOSTRING(
KEY_RIGHT
),

15 
	`TOSTRING
(
KEY_A
), TOSTRING(
KEY_B
));

16 
	`¥ötf
("==========================================================\n");

18 
	`f˚_lﬂd_rom
((*)
rom_m¨io_√s
);

19 
	`f˚_öô
();

20 
	`f˚_run
();

22 
	}
}

	@am-kernels/kernels/litenes/src/mario-rom.c

1 
	grom_m¨io_√s
[] = {

3418 
	grom_m¨io_√s_Àn
 = 40976;

	@am-kernels/kernels/litenes/src/memory.c

1 
	~"mem‹y.h
"

2 
	~"˝u.h
"

3 
	~"µu.h
"

4 
	~"psg.h
"

6 
byã
 
	$mem‹y_ªadb
(
w‹d
 
addªss
) {

7 
addªss
 >> 13) {

8 0:  
	`˝u_øm_ªad
(
addªss
 & 0x07FF);

9 1:  
	`µuio_ªad
(
addªss
);

10 2:  
	`psgio_ªad
(
addªss
);

11 3:  
	`˝u_øm_ªad
(
addªss
 & 0x1FFF);

12 :  
	`mmc_ªad
(
addªss
);

14 
	}
}

16 
	$mem‹y_wrôeb
(
w‹d
 
addªss
, 
byã
 
d©a
) {

18 
i
;

19 i‡(
addªss
 == 0x4014) {

20 
i
 = 0; i < 256; i++) {

21 
	`µu_•ºam_wrôe
(
	`˝u_øm_ªad
((0x100 * 
d©a
Ë+ 
i
));

25 
addªss
 >> 13) {

26 0:  
	`˝u_øm_wrôe
(
addªss
 & 0x07FF, 
d©a
);

27 1:  
	`µuio_wrôe
(
addªss
, 
d©a
);

28 2:  
	`psgio_wrôe
(
addªss
, 
d©a
);

29 3:  
	`˝u_øm_wrôe
(
addªss
 & 0x1FFF, 
d©a
);

30 :  
	`mmc_wrôe
(
addªss
, 
d©a
);

32 
	}
}

34 
w‹d
 
	$mem‹y_ªadw
(
w‹d
 
addªss
) {

35  
	`mem‹y_ªadb
(
addªss
) + (memory_readb(address + 1) << 8);

36 
	}
}

38 
	$mem‹y_wrôew
(
w‹d
 
addªss
, w‹d 
d©a
) {

39 
	`mem‹y_wrôeb
(
addªss
, 
d©a
 & 0xFF);

40 
	`mem‹y_wrôeb
(
addªss
 + 1, 
d©a
 >> 8);

41 
	}
}

	@am-kernels/kernels/litenes/src/memory.h

1 #i‚de‡
MEM_H


2 
	#MEM_H


	)

4 
	~"comm⁄.h
"

5 
	~"mmc.h
"

8 
byã
 
mem‹y_ªadb
(
w‹d
 
addªss
);

9 
mem‹y_wrôeb
(
w‹d
 
addªss
, 
byã
 
d©a
);

12 
w‹d
 
mem‹y_ªadw
(w‹d 
addªss
);

13 
mem‹y_wrôew
(
w‹d
 
addªss
, w‹d 
d©a
);

	@am-kernels/kernels/litenes/src/mmc.c

1 
	~"mmc.h
"

2 
	~"µu.h
"

3 
	~<klib.h
>

5 
byã
 
	gmmc_id
;

6 
	#MMC_MAX_PAGE_COUNT
 1

	)

8 
byã
 
	gmmc_chr_∑ges
[
MMC_MAX_PAGE_COUNT
][0x2000];

9 
	gmmc_chr_∑ges_numbî
;

11 
byã
 
	gmem‹y
[0x10000];

13 
byã
 
	$mmc_ªad
(
w‹d
 
addªss
) {

14  
mem‹y
[
addªss
];

15 
	}
}

17 
	$mmc_wrôe
(
w‹d
 
addªss
, 
byã
 
d©a
) {

18 
mmc_id
) {

19 0x3: 
	`µu_c›y
(0x0000, &
mmc_chr_∑ges
[
d©a
 & 3][0], 0x2000); ;

21 
mem‹y
[
addªss
] = 
d©a
;

22 
	}
}

24 
	$mmc_c›y
(
w‹d
 
addªss
, 
byã
 *
sour˚
, 
Àngth
) {

25 
	`mem˝y
(&
mem‹y
[
addªss
], 
sour˚
, 
Àngth
);

26 
	}
}

28 
	$mmc_≠≥nd_chr_rom_∑ge
(
byã
 *
sour˚
) {

29 
	`as£π
(
mmc_chr_∑ges_numbî
 < 
MMC_MAX_PAGE_COUNT
);

30 
	`mem˝y
(&
mmc_chr_∑ges
[
mmc_chr_∑ges_numbî
++][0], 
sour˚
, 0x2000);

31 
	}
}

	@am-kernels/kernels/litenes/src/mmc.h

1 
	~"comm⁄.h
"

3 
byã
 
mmc_id
;

5 
byã
 
mmc_ªad
(
w‹d
 
addªss
);

6 
mmc_wrôe
(
w‹d
 
addªss
, 
byã
 
d©a
);

7 
mmc_c›y
(
w‹d
 
addªss
, 
byã
 *
sour˚
, 
Àngth
);

8 
mmc_≠≥nd_chr_rom_∑ge
(
byã
 *
sour˚
);

	@am-kernels/kernels/litenes/src/ppu.c

1 
	~"µu.h
"

2 
	~"˝u.h
"

3 
	~"f˚.h
"

4 
	~"mem‹y.h
"

5 
	~<klib.h
>

10 
PPU_STATE
 
	gµu
;

12 
boﬁ
 
	gµu_2007_fú°_ªad
;

13 
byã
 
	gµu_addr_œtch
;

14 
byã
 
	gPPU_SPRRAM
[0x100];

15 
byã
 
	gPPU_RAM
[0x4000];

16 
boﬁ
 
	gµu_•rôe_hô_occuªd
 = 
Ál£
;

17 
byã
 
	gµu_œtch
;

20 c⁄° 
w‹d
 
	gµu_ba£_«mëabÀ_addªs£s
[4] = { 0x2000, 0x2400, 0x2800, 0x2C00 };

23 
byã
 
	gµu_s¸ìn_background
[264][248];

26 
byã
 
	gµu_l_h_addôi⁄_èbÀ
[256][256][8];

27 
byã
 
	gµu_l_h_addôi⁄_Êù_èbÀ
[256][256][8];

32 
w‹d
 
	$µu_ba£_«mëabÀ_addªss
(Ë{  
µu_ba£_«mëabÀ_addªs£s
[
µu
.
PPUCTRL
 & 0x3]; 
	}
}

33 
byã
 
	$µu_vøm_addªss_ö¸emít
(Ë{  
	`comm⁄_bô_£t
(
µu
.
PPUCTRL
, 2Ë? 32 : 1; 
	}
}

34 
w‹d
 
	$µu_•rôe_∑âîn_èbÀ_addªss
(Ë{  
	`comm⁄_bô_£t
(
µu
.
PPUCTRL
, 3Ë? 0x1000 : 0x0000; 
	}
}

35 
w‹d
 
	$µu_background_∑âîn_èbÀ_addªss
(Ë{  
	`comm⁄_bô_£t
(
µu
.
PPUCTRL
, 4Ë? 0x1000 : 0x0000; 
	}
}

36 
byã
 
	$µu_•rôe_height
(Ë{  
	`comm⁄_bô_£t
(
µu
.
PPUCTRL
, 5Ë? 16 : 8; 
	}
}

37 
boﬁ
 
	$µu_gíî©es_nmi
(Ë{  
	`comm⁄_bô_£t
(
µu
.
PPUCTRL
, 7); 
	}
}

41 
boﬁ
 
	$µu_ªndîs_gøysˇÀ
(Ë{  
	`comm⁄_bô_£t
(
µu
.
PPUMASK
, 0); 
	}
}

42 
boﬁ
 
	$µu_shows_background_ö_À·mo°_8px
(Ë{  
	`comm⁄_bô_£t
(
µu
.
PPUMASK
, 1); 
	}
}

43 
boﬁ
 
	$µu_shows_•rôes_ö_À·mo°_8px
(Ë{  
	`comm⁄_bô_£t
(
µu
.
PPUMASK
, 2); 
	}
}

44 
boﬁ
 
	$µu_shows_background
(Ë{  
	`comm⁄_bô_£t
(
µu
.
PPUMASK
, 3); 
	}
}

45 
boﬁ
 
	$µu_shows_•rôes
(Ë{  
	`comm⁄_bô_£t
(
µu
.
PPUMASK
, 4); 
	}
}

46 
boﬁ
 
	$µu_öãnsifõs_ªds
(Ë{  
	`comm⁄_bô_£t
(
µu
.
PPUMASK
, 5); 
	}
}

47 
boﬁ
 
	$µu_öãnsifõs_gªís
(Ë{  
	`comm⁄_bô_£t
(
µu
.
PPUMASK
, 6); 
	}
}

48 
boﬁ
 
	$µu_öãnsifõs_blues
(Ë{  
	`comm⁄_bô_£t
(
µu
.
PPUMASK
, 7); 
	}
}

50 
	$µu_£t_ªndîs_gøysˇÀ
(
boﬁ
 
ye¢o
Ë{ 
	`comm⁄_modify_bôb
(&
µu
.
PPUMASK
, 0, ye¢o); 
	}
}

51 
	$µu_£t_shows_background_ö_À·mo°_8px
(
boﬁ
 
ye¢o
Ë{ 
	`comm⁄_modify_bôb
(&
µu
.
PPUMASK
, 1, ye¢o); 
	}
}

52 
	$µu_£t_shows_•rôes_ö_À·mo°_8px
(
boﬁ
 
ye¢o
Ë{ 
	`comm⁄_modify_bôb
(&
µu
.
PPUMASK
, 2, ye¢o); 
	}
}

53 
	$µu_£t_shows_background
(
boﬁ
 
ye¢o
Ë{ 
	`comm⁄_modify_bôb
(&
µu
.
PPUMASK
, 3, ye¢o); 
	}
}

54 
	$µu_£t_shows_•rôes
(
boﬁ
 
ye¢o
Ë{ 
	`comm⁄_modify_bôb
(&
µu
.
PPUMASK
, 4, ye¢o); 
	}
}

55 
	$µu_£t_öãnsifõs_ªds
(
boﬁ
 
ye¢o
Ë{ 
	`comm⁄_modify_bôb
(&
µu
.
PPUMASK
, 5, ye¢o); 
	}
}

56 
	$µu_£t_öãnsifõs_gªís
(
boﬁ
 
ye¢o
Ë{ 
	`comm⁄_modify_bôb
(&
µu
.
PPUMASK
, 6, ye¢o); 
	}
}

57 
	$µu_£t_öãnsifõs_blues
(
boﬁ
 
ye¢o
Ë{ 
	`comm⁄_modify_bôb
(&
µu
.
PPUMASK
, 7, ye¢o); 
	}
}

61 
boﬁ
 
	$µu_•rôe_ovîÊow
(Ë{  
	`comm⁄_bô_£t
(
µu
.
PPUSTATUS
, 5); 
	}
}

62 
boﬁ
 
	$µu_•rôe_0_hô
(Ë{  
	`comm⁄_bô_£t
(
µu
.
PPUSTATUS
, 6); 
	}
}

63 
boﬁ
 
	$µu_ö_vbœnk
(Ë{  
	`comm⁄_bô_£t
(
µu
.
PPUSTATUS
, 7); 
	}
}

65 
	$µu_£t_•rôe_ovîÊow
(
boﬁ
 
ye¢o
Ë{ 
	`comm⁄_modify_bôb
(&
µu
.
PPUSTATUS
, 5, ye¢o); 
	}
}

66 
	$µu_£t_•rôe_0_hô
(
boﬁ
 
ye¢o
Ë{ 
	`comm⁄_modify_bôb
(&
µu
.
PPUSTATUS
, 6, ye¢o); 
	}
}

67 
	$µu_£t_ö_vbœnk
(
boﬁ
 
ye¢o
Ë{ 
	`comm⁄_modify_bôb
(&
µu
.
PPUSTATUS
, 7, ye¢o); 
	}
}

72 
w‹d
 
	$µu_gë_ªÆ_øm_addªss
(
w‹d
 
addªss
) {

73 i‡(
addªss
 < 0x2000) { áddress; }

74 i‡(
addªss
 < 0x3F00) {

75 i‡(
addªss
 < 0x3000) { áddress; }

76 {  
addªss
; }

78 i‡(
addªss
 < 0x4000) {

79 
addªss
 = 0x3F00 | (address & 0x1F);

80 i‡(
addªss
 == 0x3F10 ||áddress == 0x3F14 ||áddress == 0x3F18 ||áddress == 0x3F1C)

81 
addªss
 -= 0x10;

82  
addªss
;

85 
	}
}

87 
byã
 
	$µu_øm_ªad
(
w‹d
 
addªss
) {

88  
PPU_RAM
[
	`µu_gë_ªÆ_øm_addªss
(
addªss
)];

89 
	}
}

91 
	$µu_øm_wrôe
(
w‹d
 
addªss
, 
byã
 
d©a
) {

92 
PPU_RAM
[
	`µu_gë_ªÆ_øm_addªss
(
addªss
)] = 
d©a
;

93 
	}
}

130 
	$µu_døw_background_sˇ∆öe
(
boﬁ
 
múr‹
) {

131 
tûe_x
;

132 
tûe_x
 = 
	`µu_shows_background_ö_À·mo°_8px
() ? 0 : 1;Åile_x < 32;Åile_x ++) {

134 i‡(((
tûe_x
 << 3Ë- 
µu
.
PPUSCROLL_X
 + (
múr‹
 ? 256 : 0)) > 256)

137 
tûe_y
 = 
µu
.
sˇ∆öe
 >> 3;

138 
tûe_ödex
 = 
	`µu_øm_ªad
(
	`µu_ba£_«mëabÀ_addªss
(Ë+ 
tûe_x
 + (
tûe_y
 << 5Ë+ (
múr‹
 ? 0x400 : 0));

139 
w‹d
 
tûe_addªss
 = 
	`µu_background_∑âîn_èbÀ_addªss
(Ë+ 16 * 
tûe_ödex
;

141 
y_ö_tûe
 = 
µu
.
sˇ∆öe
 & 0x7;

142 
byã
 
l
 = 
	`µu_øm_ªad
(
tûe_addªss
 + 
y_ö_tûe
);

143 
byã
 
h
 = 
	`µu_øm_ªad
(
tûe_addªss
 + 
y_ö_tûe
 + 8);

145 
x
;

146 
x
 = 0; x < 8; x ++) {

147 
byã
 
cﬁ‹
 = 
µu_l_h_addôi⁄_èbÀ
[
l
][
h
][
x
];

150 i‡(
cﬁ‹
 != 0) {

151 
w‹d
 
©åibuã_addªss
 = (
	`µu_ba£_«mëabÀ_addªss
(Ë+ (
múr‹
 ? 0x400 : 0Ë+ 0x3C0 + (
tûe_x
 >> 2Ë+ (
µu
.
sˇ∆öe
 >> 5) * 8);

152 
boﬁ
 
t›
 = (
µu
.
sˇ∆öe
 % 32) < 16;

153 
boﬁ
 
À·
 = (
tûe_x
 % 4 < 2);

155 
byã
 
∑Àâe_©åibuã
 = 
	`µu_øm_ªad
(
©åibuã_addªss
);

157 i‡(!
t›
Ë{ 
∑Àâe_©åibuã
 >>= 4; }

158 i‡(!
À·
Ë{ 
∑Àâe_©åibuã
 >>= 2; }

159 
∑Àâe_©åibuã
 &= 3;

161 
w‹d
 
∑Àâe_addªss
 = 0x3F00 + (
∑Àâe_©åibuã
 << 2);

162 
idx
 = 
	`µu_øm_ªad
(
∑Àâe_addªss
 + 
cﬁ‹
);

164 
µu_s¸ìn_background
[(
tûe_x
 << 3Ë+ 
x
][
µu
.
sˇ∆öe
] = 
cﬁ‹
;

166 
	`døw
((
tûe_x
 << 3Ë+ 
x
 - 
µu
.
PPUSCROLL_X
 + (
múr‹
 ? 256 : 0),Öpu.
sˇ∆öe
 + 1, 
idx
);

170 
	}
}

172 
	$µu_døw_•rôe_sˇ∆öe
() {

173 
sˇ∆öe_•rôe_cou¡
 = 0;

174 
n
;

175 
n
 = 0;Ç < 0x100;Ç += 4) {

176 
byã
 
•rôe_x
 = 
PPU_SPRRAM
[
n
 + 3];

177 
byã
 
•rôe_y
 = 
PPU_SPRRAM
[
n
];

180 i‡(
•rôe_y
 > 
µu
.
sˇ∆öe
 || s¥ôe_y + 
	`µu_•rôe_height
() <Öpu.scanline)

183 
sˇ∆öe_•rôe_cou¡
++;

186 i‡(
sˇ∆öe_•rôe_cou¡
 > 8) {

187 
	`µu_£t_•rôe_ovîÊow
(
åue
);

191 
boﬁ
 
vÊù
 = 
PPU_SPRRAM
[
n
 + 2] & 0x80;

192 
boﬁ
 
hÊù
 = 
PPU_SPRRAM
[
n
 + 2] & 0x40;

194 
w‹d
 
tûe_addªss
 = 
	`µu_•rôe_∑âîn_èbÀ_addªss
(Ë+ 16 * 
PPU_SPRRAM
[
n
 + 1];

195 
y_ö_tûe
 = 
µu
.
sˇ∆öe
 & 0x7;

196 
byã
 
l
 = 
	`µu_øm_ªad
(
tûe_addªss
 + (
vÊù
 ? (7 - 
y_ö_tûe
) : y_in_tile));

197 
byã
 
h
 = 
	`µu_øm_ªad
(
tûe_addªss
 + (
vÊù
 ? (7 - 
y_ö_tûe
) : y_in_tile) + 8);

199 
byã
 
∑Àâe_©åibuã
 = 
PPU_SPRRAM
[
n
 + 2] & 0x3;

200 
w‹d
 
∑Àâe_addªss
 = 0x3F10 + (
∑Àâe_©åibuã
 << 2);

201 
x
;

202 
x
 = 0; x < 8; x ++) {

203 
cﬁ‹
 = 
hÊù
 ? 
µu_l_h_addôi⁄_Êù_èbÀ
[
l
][
h
][
x
] : 
µu_l_h_addôi⁄_èbÀ
[l][h][x];

206 i‡(
cﬁ‹
 != 0) {

207 
s¸ìn_x
 = 
•rôe_x
 + 
x
;

208 
idx
 = 
	`µu_øm_ªad
(
∑Àâe_addªss
 + 
cﬁ‹
);

211 i‡(
PPU_SPRRAM
[
n
 + 2] & 0x20) {

212 
	`døw
(
s¸ìn_x
, 
•rôe_y
 + 
y_ö_tûe
 + 1, 
idx
);

215 
	`døw
(
s¸ìn_x
, 
•rôe_y
 + 
y_ö_tûe
 + 1, 
idx
);

219 i‡(
	`µu_shows_background
(Ë&& !
µu_•rôe_hô_occuªd
 && 
n
 =0 && 
µu_s¸ìn_background
[
s¸ìn_x
][
•rôe_y
 + 
y_ö_tûe
] =
cﬁ‹
) {

220 
	`µu_£t_•rôe_0_hô
(
åue
);

221 
µu_•rôe_hô_occuªd
 = 
åue
;

226 
	}
}

230 
	$µu_run
(
cy˛es
) {

231 
cy˛es
-- > 0Ë{ 
	`µu_cy˛e
(); }

232 
	}
}

234 
uöt32_t
 
	gbackground_time
, 
	g•rôe_time
, 
	g˝u_time
;

235 #ifde‡
PROFILE


236 #ifde‡
HAS_US_TIMER


237 
	#TIMER_UNIT
 "us"

	)

238 
	#time_ªad
(
x
Ë
	`ªad_us
(&x)

	)

239 
	#time_diff
(
t1
, 
t0
Ë
	`us_timediff
(&t1, &t0)

	)

240 
	#TIME_TYPE
 
amtime


	)

242 
	#TIMER_UNIT
 "ms"

	)

243 
	#time_ªad
(
x
Ëx = 
	`u±ime
()

	)

244 
	#time_diff
(
t1
, 
t0
Ë—1 -Å0)

	)

245 
	#TIME_TYPE
 
uöt32_t


	)

248 
	#time_ªad
(
x
)

	)

249 
	#time_diff
(
t1
, 
t0
Ë0

	)

252 
	$µu_cy˛e
() {

253 #ifde‡
PROFILE


254 
TIME_TYPE
 
t0
, 
t1
, 
t2
, 
t3
, 
t4
, 
t5
;

257 i‡(!
µu
.
ªady
 && 
	`˝u_˛ock
() > 29658)

258 
µu
.
ªady
 = 
åue
;

260 
	`time_ªad
(
t0
);

261 
	`˝u_run
(256);

262 
	`time_ªad
(
t1
);

264 
µu
.
sˇ∆öe
++;

266 i‡(
µu
.
sˇ∆öe
 < 
SCR_H
 && 
	`µu_shows_background
()) {

267 
	`µu_døw_background_sˇ∆öe
(
Ál£
);

268 
	`µu_døw_background_sˇ∆öe
(
åue
);

271 
	`time_ªad
(
t2
);

272 
	`˝u_run
(85 - 16);

273 
	`time_ªad
(
t3
);

275 i‡(
µu
.
sˇ∆öe
 < 
SCR_H
 && 
	`µu_shows_•rôes
()) {

276 
	`µu_døw_•rôe_sˇ∆öe
();

279 
	`time_ªad
(
t4
);

280 
	`˝u_run
(16);

281 
	`time_ªad
(
t5
);

283 
˝u_time
 +
	`time_diff
(
t1
, 
t0
Ë+Åime_diff(
t3
, 
t2
Ë+Åime_diff(
t5
, 
t4
);

284 
background_time
 +
	`time_diff
(
t2
, 
t1
);

285 
•rôe_time
 +
	`time_diff
(
t4
, 
t3
);

287 i‡(
µu
.
sˇ∆öe
 == 241) {

288 
	`µu_£t_ö_vbœnk
(
åue
);

289 
	`µu_£t_•rôe_0_hô
(
Ál£
);

290 
	`˝u_öãºu±
();

292 i‡(
µu
.
sˇ∆öe
 == 262) {

293 
µu
.
sˇ∆öe
 = -1;

294 
µu_•rôe_hô_occuªd
 = 
Ál£
;

295 
	`µu_£t_ö_vbœnk
(
Ál£
);

297 
	`time_ªad
(
t0
);

298 
	`f˚_upd©e_s¸ìn
();

299 
	`time_ªad
(
t1
);

301 #ifde‡
PROFILE


302 
uöt32_t
 
tŸÆ
 = 
˝u_time
 + 
background_time
 + 
•rôe_time
 + 
	`time_diff
(
t1
, 
t0
);

303 
	`¥ötf
("Time: cpu + bg + spr + scr = (%d + %d + %d + %d)\t= %d %s\n",

304 
˝u_time
, 
background_time
, 
•rôe_time
, 
	`time_diff
(
t1
, 
t0
), 
tŸÆ
, 
TIMER_UNIT
);

306 
˝u_time
 = 0;

307 
background_time
 = 0;

308 
•rôe_time
 = 0;

310 
	}
}

312 
	$µu_c›y
(
w‹d
 
addªss
, 
byã
 *
sour˚
, 
Àngth
) {

313 
	`mem˝y
(&
PPU_RAM
[
addªss
], 
sour˚
, 
Àngth
);

314 
	}
}

316 
byã
 
	$µuio_ªad
(
w‹d
 
addªss
) {

317 
µu
.
PPUADDR
 &= 0x3FFF;

318 
addªss
 & 7) {

321 
byã
 
vÆue
 = 
µu
.
PPUSTATUS
;

322 
	`µu_£t_ö_vbœnk
(
Ál£
);

323 
	`µu_£t_•rôe_0_hô
(
Ál£
);

324 
µu
.
s¸ﬁl_ª˚ived_x
 = 0;

325 
µu
.
PPUSCROLL
 = 0;

326 
µu
.
addr_ª˚ived_high_byã
 = 0;

327 
µu_œtch
 = 
vÆue
;

328 
µu_addr_œtch
 = 0;

329 
µu_2007_fú°_ªad
 = 
åue
;

330  
vÆue
;

332 4:  
µu_œtch
 = 
PPU_SPRRAM
[
µu
.
OAMADDR
];

335 
byã
 
d©a
;

337 i‡(
µu
.
PPUADDR
 < 0x3F00) {

338 
d©a
 = 
µu_œtch
 = 
	`µu_øm_ªad
(
µu
.
PPUADDR
);

341 
d©a
 = 
	`µu_øm_ªad
(
µu
.
PPUADDR
);

342 
µu_œtch
 = 0;

345 i‡(
µu_2007_fú°_ªad
) {

346 
µu_2007_fú°_ªad
 = 
Ál£
;

349 
µu
.
PPUADDR
 +
	`µu_vøm_addªss_ö¸emít
();

351  
d©a
;

355 
	}
}

357 
	$µuio_wrôe
(
w‹d
 
addªss
, 
byã
 
d©a
) {

358 
addªss
 &= 7;

359 
µu_œtch
 = 
d©a
;

360 
µu
.
PPUADDR
 &= 0x3FFF;

361 
addªss
) {

362 0: i‡(
µu
.
ªady
Ëµu.
PPUCTRL
 = 
d©a
; ;

363 1: i‡(
µu
.
ªady
Ëµu.
PPUMASK
 = 
d©a
; ;

364 3: 
µu
.
OAMADDR
 = 
d©a
; ;

365 4: 
PPU_SPRRAM
[
µu
.
OAMADDR
++] = 
d©a
; ;

368 i‡(
µu
.
s¸ﬁl_ª˚ived_x
)

369 
µu
.
PPUSCROLL_Y
 = 
d©a
;

371 
µu
.
PPUSCROLL_X
 = 
d©a
;

373 
µu
.
s¸ﬁl_ª˚ived_x
 ^= 1;

378 i‡(!
µu
.
ªady
)

381 i‡(
µu
.
addr_ª˚ived_high_byã
)

382 
µu
.
PPUADDR
 = (
µu_addr_œtch
 << 8Ë+ 
d©a
;

384 
µu_addr_œtch
 = 
d©a
;

386 
µu
.
addr_ª˚ived_high_byã
 ^= 1;

387 
µu_2007_fú°_ªad
 = 
åue
;

392 i‡(
µu
.
PPUADDR
 > 0x1FFF ||Öpu.PPUADDR < 0x4000) {

393 
	`µu_øm_wrôe
(
µu
.
PPUADDR
 ^Öpu.
múr‹ög_x‹
, 
d©a
);

394 
	`µu_øm_wrôe
(
µu
.
PPUADDR
, 
d©a
);

397 
	`µu_øm_wrôe
(
µu
.
PPUADDR
, 
d©a
);

401 
µu_œtch
 = 
d©a
;

402 
	}
}

404 
	$µu_öô
() {

405 
µu
.
PPUCTRL
 =Öpu.
PPUMASK
 =Öpu.
PPUSTATUS
 =Öpu.
OAMADDR
 =Öpu.
PPUSCROLL_X
 =Öpu.
PPUSCROLL_Y
 =Öpu.
PPUADDR
 = 0;

406 
µu
.
PPUSTATUS
 |= 0xA0;

407 
µu
.
PPUDATA
 = 0;

408 
µu_2007_fú°_ªad
 = 
åue
;

411 
h
, 
l
, 
x
;

412 
h
 = 0; h < 0x100; h ++) {

413 
l
 = 0;Ü < 0x100;Ü ++) {

414 
x
 = 0; x < 8; x ++) {

415 
µu_l_h_addôi⁄_èbÀ
[
l
][
h
][
x
] = (((h >> (7 - x)) & 1) << 1) | ((l >> (7 - x)) & 1);

416 
µu_l_h_addôi⁄_Êù_èbÀ
[
l
][
h
][
x
] = (((h >> x) & 1) << 1) | ((l >> x) & 1);

420 
	}
}

422 
	$µu_•ºam_wrôe
(
byã
 
d©a
) {

423 
PPU_SPRRAM
[
µu
.
OAMADDR
++] = 
d©a
;

424 
	}
}

426 
	$µu_£t_background_cﬁ‹
(
byã
 
cﬁ‹
) {

427 
	}
}

429 
	$µu_£t_múr‹ög
(
byã
 
múr‹ög
) {

430 
µu
.
múr‹ög
 = mirroring;

431 
µu
.
múr‹ög_x‹
 = 0x400 << 
múr‹ög
;

432 
	}
}

	@am-kernels/kernels/litenes/src/ppu.h

1 #i‚de‡
PPU_H


2 
	#PPU_H


	)

4 
	~"comm⁄.h
"

7 
byã
 
	mPPUCTRL
;

8 
byã
 
	mPPUMASK
;

9 
byã
 
	mPPUSTATUS
;

10 
byã
 
	mOAMADDR
;

11 
byã
 
	mOAMDATA
;

12 
w‹d
 
	mPPUSCROLL
;

13 
byã
 
	mPPUSCROLL_X
, 
	mPPUSCROLL_Y
;

14 
w‹d
 
	mPPUADDR
;

15 
w‹d
 
	mPPUDATA
;

17 
boﬁ
 
	ms¸ﬁl_ª˚ived_x
;

18 
boﬁ
 
	maddr_ª˚ived_high_byã
;

19 
boﬁ
 
	mªady
;

21 
	mmúr‹ög
, 
	mmúr‹ög_x‹
;

23 
	mx
, 
	msˇ∆öe
;

24 } 
	tPPU_STATE
;

26 
µu_öô
();

28 
byã
 
µu_øm_ªad
(
w‹d
 
addªss
);

29 
µu_øm_wrôe
(
w‹d
 
addªss
, 
byã
 
d©a
);

30 
byã
 
µuio_ªad
(
w‹d
 
addªss
);

31 
µuio_wrôe
(
w‹d
 
addªss
, 
byã
 
d©a
);

33 
boﬁ
 
µu_gíî©es_nmi
();

35 
µu_£t_múr‹ög
(
byã
 
múr‹ög
);

37 
µu_cy˛e
();

38 
µu_c›y
(
w‹d
 
addªss
, 
byã
 *
sour˚
, 
Àngth
);

39 
µu_•ºam_wrôe
(
byã
 
d©a
);

	@am-kernels/kernels/litenes/src/psg.c

1 
	~"psg.h
"

2 
	~<klib.h
>

4 
	gp
 = 10;

5 
	gkey_°©e
[256];

7 
	#KEYS
 \

8 
	`CONCAT
(
AM_KEY_
, 
KEY_A
), \

9 
	`CONCAT
(
AM_KEY_
, 
KEY_B
), \

10 
	`CONCAT
(
AM_KEY_
, 
KEY_SELECT
), \

11 
	`CONCAT
(
AM_KEY_
, 
KEY_START
), \

12 
	`CONCAT
(
AM_KEY_
, 
KEY_UP
), \

13 
	`CONCAT
(
AM_KEY_
, 
KEY_DOWN
), \

14 
	`CONCAT
(
AM_KEY_
, 
KEY_LEFT
), \

15 
	`CONCAT
(
AM_KEY_
, 
KEY_RIGHT
),

	)

17 
	gMAP
[256] = {

19 
KEYS


23 
byã
 
	$psgio_ªad
(
w‹d
 
addªss
) {

25 i‡(
addªss
 == 0x4016) {

26 i‡(
p
++ < 9) {

27  
key_°©e
[
MAP
[
p
]];

31 
	}
}

33 
	$psgio_wrôe
(
w‹d
 
addªss
, 
byã
 
d©a
) {

34 
byã
 
¥ev_wrôe
;

35 i‡(
addªss
 == 0x4016) {

36 i‡((
d©a
 & 1Ë=0 && 
¥ev_wrôe
 == 1) {

38 
p
 = 0;

41 
¥ev_wrôe
 = 
d©a
 & 1;

42 
	}
}

44 
	$psg_dëe˘_key
() {

46 
AM_INPUT_KEYBRD_T
 
ev
 = 
	`io_ªad
(
AM_INPUT_KEYBRD
);

47 i‡(
ev
.
keycode
 =
AM_KEY_NONE
) ;

48 
key_°©e
[
ev
.
keycode
] =Év.
keydown
;

50 
	}
}

52 
	$psg_öô
() {

53 
key_°©e
[0] = 1;

54 
	}
}

	@am-kernels/kernels/litenes/src/psg.h

1 #i‚de‡
PSG_H


2 
	#PSG_H


	)

4 
	~"comm⁄.h
"

6 
	#KEY_A
 
J


	)

7 
	#KEY_B
 
K


	)

8 
	#KEY_SELECT
 
U


	)

9 
	#KEY_START
 
I


	)

10 
	#KEY_UP
 
W


	)

11 
	#KEY_DOWN
 
S


	)

12 
	#KEY_LEFT
 
A


	)

13 
	#KEY_RIGHT
 
D


	)

15 
byã
 
psgio_ªad
(
w‹d
 
addªss
);

16 
psgio_wrôe
(
w‹d
 
addªss
, 
byã
 
d©a
);

17 
psg_öô
();

18 
psg_dëe˘_key
();

	@am-kernels/kernels/slider/main.c

1 
	~<am.h
>

2 
	~<klib.h
>

3 
	~<klib-ma¸os.h
>

5 
uöt32_t
 
image
[][400][300];

6 
uöt32_t
 
image_íd
[][400][300];

7 
	#NR_IMG
 (
image_íd
 - 
image
)

	)

9 
	$di•œy_image
(
i
) {

10 
	`io_wrôe
(
AM_GPU_FBDRAW
, 0, 0, &
image
[
i
][0][0], 400, 300, 
åue
);

11 
	}
}

13 
	$maö
() {

14 
	`i€_öô
();

16 
i
 = 0;

17 
œ°
 = 0;

18 
cuºít
;

20 
	`di•œy_image
(
i
);

23 
cuºít
 = 
	`io_ªad
(
AM_TIMER_UPTIME
).
us
 / 1000;

24 i‡(
cuºít
 - 
œ°
 > 5000) {

26 
i
 = (ò+ 1Ë% 
NR_IMG
;

27 
	`di•œy_image
(
i
);

28 
œ°
 = 
cuºít
;

32 
	}
}

	@am-kernels/kernels/thread-os/thread-os.c

1 
	~<am.h
>

2 
	~<klib.h
>

3 
	~<klib-ma¸os.h
>

5 
	#MAX_CPU
 8

	)

7 
	uèsk
 {

9 c⁄° *
	m«me
;

10 
èsk
 *
	m√xt
;

11 (*
	míåy
)(*);

12 
C⁄ãxt
 *
	mc⁄ãxt
;

14 
uöt8_t
 
	m°ack
[8192];

15 } 
	tTask
;

17 
Task
 *
	gcuºíts
[
MAX_CPU
];

18 
	#cuºít
 
cuºíts
[
	`˝u_cuºít
()]

	)

22 
	glocked
 = 0;

23 
	$lock
(Ë{ 
	`©omic_xchg
(&
locked
, 1)); 
	}
}

24 
	$u∆ock
(Ë{ 
	`©omic_xchg
(&
locked
, 0); 
	}
}

26 
	$func
(*
¨g
) {

28 
	`lock
();

29 
	`¥ötf
("Thªad-%†⁄ CPU #%d\n", 
¨g
, 
	`˝u_cuºít
());

30 
	`u∆ock
();

31 vﬁ©ûê
i
 = 0; i < 100000; i++) ;

33 
	}
}

35 
Task
 
	gèsks
[] = {

36 { .
«me
 = "A", .
	gíåy
 = 
func
 },

37 { .
	g«me
 = "B", .
	gíåy
 = 
func
 },

38 { .
	g«me
 = "C", .
	gíåy
 = 
func
 },

39 { .
	g«me
 = "D", .
	gíåy
 = 
func
 },

40 { .
	g«me
 = "E", .
	gíåy
 = 
func
 },

45 
C⁄ãxt
 *
	$⁄_öãºu±
(
Evít
 
ev
, 
C⁄ãxt
 *
˘x
) {

46 
Task
 
èsks
[];

47 i‡(!
cuºít
Ëcuºíà&
èsks
[0];

48 
cuºít
->
c⁄ãxt
 = 
˘x
;

50 
cuºít
 = cuºít->
√xt
;

51 } (
cuºít
 - 
èsks
Ë% 
	`˝u_cou¡
(Ë!
	`˝u_cuºít
());

52  
cuºít
->
c⁄ãxt
;

53 
	}
}

55 
	$mp_íåy
() {

56 
	`i£t
(
åue
);

57 
	`yõld
();

58 
	}
}

60 
	$maö
() {

61 
	`˘e_öô
(
⁄_öãºu±
);

63 
i
 = 0; i < 
	`LENGTH
(
èsks
); i++) {

64 
Task
 *
èsk
 = &
èsks
[
i
];

65 
Aªa
 
°ack
 = (AªaË{ &
èsk
->
c⁄ãxt
 + 1,Åask + 1 };

66 
èsk
->
c⁄ãxt
 = 
	`kc⁄ãxt
(
°ack
,Åask->
íåy
, (*Èask->
«me
);

67 
èsk
->
√xt
 = &
èsks
[(
i
 + 1Ë% 
	`LENGTH
(tasks)];

69 
	`m≥_öô
(
mp_íåy
);

70 
	}
}

	@am-kernels/kernels/typing-game/font.c

1 
	gf⁄t
[] = {

	@am-kernels/kernels/typing-game/game.c

1 
	~<am.h
>

2 
	~<klib.h
>

3 
	~<klib-ma¸os.h
>

5 
	#FPS
 30

	)

6 
	#CPS
 5

	)

7 
	#CHAR_W
 8

	)

8 
	#CHAR_H
 16

	)

9 
	#NCHAR
 128

	)

10 
	#COL_WHITE
 0xììì

	)

11 
	#COL_RED
 0xff0033

	)

12 
	#COL_GREEN
 0x00cc33

	)

13 
	#COL_PURPLE
 0x2a0a29

	)

15 íum { 
	mWHITE
 = 0, 
	mRED
, 
	mGREEN
, 
	mPURPLE
 };

16 
	sch¨a˘î
 {

17 
	mch
;

18 
	mx
, 
	my
, 
	mv
, 
	mt
;

19 } 
	gch¨s
[
NCHAR
];

21 
	gs¸ìn_w
, 
	gs¸ìn_h
, 
	ghô
, 
	gmiss
, 
	gwr⁄g
;

22 
uöt32_t
 
	gãxtuª
[3][26][
CHAR_W
 * 
CHAR_H
], 
	gbœnk
[CHAR_W * CHAR_H];

24 
	$mö
(
a
, 
b
) {

25  (
a
 < 
b
) ?á : b;

26 
	}
}

28 
	$øndöt
(
l
, 
r
) {

29  
l
 + (
	`ønd
(Ë& 0x7fffffffË% (
r
 -Ü + 1);

30 
	}
}

32 
	$√w_ch¨
() {

33 
i
 = 0; i < 
	`LENGTH
(
ch¨s
); i++) {

34 
ch¨a˘î
 *
c
 = &
ch¨s
[
i
];

35 i‡(!
c
->
ch
) {

36 
c
->
ch
 = 'A' + 
	`øndöt
(0, 25);

37 
c
->
x
 = 
	`øndöt
(0, 
s¸ìn_w
 - 
CHAR_W
);

38 
c
->
y
 = 0;

39 
c
->
v
 = (
s¸ìn_h
 - 
CHAR_H
 + 1Ë/ 
	`øndöt
(
FPS
 * 3 / 2, FPS * 2);

40 
c
->
t
 = 0;

44 
	}
}

46 
	$game_logic_upd©e
(
‰ame
) {

47 i‡(
‰ame
 % (
FPS
 / 
CPS
Ë=0Ë
	`√w_ch¨
();

48 
i
 = 0; i < 
	`LENGTH
(
ch¨s
); i++) {

49 
ch¨a˘î
 *
c
 = &
ch¨s
[
i
];

50 i‡(
c
->
ch
) {

51 i‡(
c
->
t
 > 0) {

52 i‡(--
c
->
t
 == 0) {

53 
c
->
ch
 = '\0';

56 
c
->
y
 +c->
v
;

57 i‡(
c
->
y
 < 0) {

58 
c
->
ch
 = '\0';

60 i‡(
c
->
y
 + 
CHAR_H
 >
s¸ìn_h
) {

61 
miss
++;

62 
c
->
v
 = 0;

63 
c
->
y
 = 
s¸ìn_h
 - 
CHAR_H
;

64 
c
->
t
 = 
FPS
;

69 
	}
}

71 
	$ªndî
() {

72 
x
[
NCHAR
], 
y
[NCHAR], 
n
 = 0;

74 
i
 = 0; i < 
n
; i++) {

75 
	`io_wrôe
(
AM_GPU_FBDRAW
, 
x
[
i
], 
y
[i], 
bœnk
, 
CHAR_W
, 
CHAR_H
, 
Ál£
);

78 
n
 = 0;

79 
i
 = 0; i < 
	`LENGTH
(
ch¨s
); i++) {

80 
ch¨a˘î
 *
c
 = &
ch¨s
[
i
];

81 i‡(
c
->
ch
) {

82 
x
[
n
] = 
c
->x; 
y
[n] = c->y;Ç++;

83 
cﬁ
 = (
c
->
v
 > 0Ë? 
WHITE
 : (c->v < 0 ? 
GREEN
 : 
RED
);

84 
	`io_wrôe
(
AM_GPU_FBDRAW
, 
c
->
x
, c->
y
, 
ãxtuª
[
cﬁ
][c->
ch
 - 'A'], 
CHAR_W
, 
CHAR_H
, 
Ál£
);

87 
	`io_wrôe
(
AM_GPU_FBDRAW
, 0, 0, 
NULL
, 0, 0, 
åue
);

88 
i
 = 0; i < 40; i++Ë
	`putch
('\b');

89 
	`¥ötf
("Hô: %d; Miss: %d; Wr⁄g: %d", 
hô
, 
miss
, 
wr⁄g
);

90 
	}
}

92 
	$check_hô
(
ch
) {

93 
m
 = -1;

94 
i
 = 0; i < 
	`LENGTH
(
ch¨s
); i++) {

95 
ch¨a˘î
 *
c
 = &
ch¨s
[
i
];

96 i‡(
ch
 =
c
->ch && c->
v
 > 0 && (
m
 < 0 || c->
y
 > 
ch¨s
[m].y)) {

97 
m
 = 
i
;

100 i‡(
m
 == -1) {

101 
wr⁄g
++;

103 
hô
++;

104 
ch¨s
[
m
].
v
 = -(
s¸ìn_h
 - 
CHAR_H
 + 1Ë/ (
FPS
);

106 
	}
}

109 
	$video_öô
() {

110 
s¸ìn_w
 = 
	`io_ªad
(
AM_GPU_CONFIG
).
width
;

111 
s¸ìn_h
 = 
	`io_ªad
(
AM_GPU_CONFIG
).
height
;

113 
f⁄t
[];

114 
i
 = 0; i < 
CHAR_W
 * 
CHAR_H
; i++)

115 
bœnk
[
i
] = 
COL_PURPLE
;

117 
x
 = 0; x < 
s¸ìn_w
; x +
CHAR_W
)

118 
y
 = 0; y < 
s¸ìn_h
; y +
CHAR_H
) {

119 
	`io_wrôe
(
AM_GPU_FBDRAW
, 
x
, 
y
, 
bœnk
, 
	`mö
(
CHAR_W
, 
s¸ìn_w
 - x), mö(
CHAR_H
, 
s¸ìn_h
 - y), 
Ál£
);

122 
ch
 = 0; ch < 26; ch++) {

123 *
c
 = &
f⁄t
[
CHAR_H
 * 
ch
];

124 
i
 = 0, 
y
 = 0; y < 
CHAR_H
; y++)

125 
x
 = 0; x < 
CHAR_W
; x++, 
i
++) {

126 
t
 = (
c
[
y
] >> (
CHAR_W
 - 
x
 - 1)) & 1;

127 
ãxtuª
[
WHITE
][
ch
][
i
] = 
t
 ? 
COL_WHITE
 : 
COL_PURPLE
;

128 
ãxtuª
[
GREEN
][
ch
][
i
] = 
t
 ? 
COL_GREEN
 : 
COL_PURPLE
;

129 
ãxtuª
[
RED
 ][
ch
][
i
] = 
t
 ? 
COL_RED
 : 
COL_PURPLE
;

132 
	}
}

134 
	glut
[256] = {

135 [
AM_KEY_A
] = 'A', [
AM_KEY_B
] = 'B', [
AM_KEY_C
] = 'C', [
AM_KEY_D
] = 'D',

136 [
AM_KEY_E
] = 'E', [
AM_KEY_F
] = 'F', [
AM_KEY_G
] = 'G', [
AM_KEY_H
] = 'H',

137 [
AM_KEY_I
] = 'I', [
AM_KEY_J
] = 'J', [
AM_KEY_K
] = 'K', [
AM_KEY_L
] = 'L',

138 [
AM_KEY_M
] = 'M', [
AM_KEY_N
] = 'N', [
AM_KEY_O
] = 'O', [
AM_KEY_P
] = 'P',

139 [
AM_KEY_Q
] = 'Q', [
AM_KEY_R
] = 'R', [
AM_KEY_S
] = 'S', [
AM_KEY_T
] = 'T',

140 [
AM_KEY_U
] = 'U', [
AM_KEY_V
] = 'V', [
AM_KEY_W
] = 'W', [
AM_KEY_X
] = 'X',

141 [
AM_KEY_Y
] = 'Y', [
AM_KEY_Z
] = 'Z',

144 
	$maö
() {

145 
	`i€_öô
();

146 
	`video_öô
();

148 
	`∑nic_⁄
(!
	`io_ªad
(
AM_TIMER_CONFIG
).
¥e£¡
, "requiresÅimer");

149 
	`∑nic_⁄
(!
	`io_ªad
(
AM_INPUT_CONFIG
).
¥e£¡
, "requires keyboard");

151 
	`¥ötf
("Type 'ESC'ÅoÉxit\n");

153 
cuºít
 = 0, 
ªndîed
 = 0;

155 
‰ames
 = 
	`io_ªad
(
AM_TIMER_UPTIME
).
us
 / (1000000 / 
FPS
);

157 ; 
cuºít
 < 
‰ames
; current++) {

158 
	`game_logic_upd©e
(
cuºít
);

162 
AM_INPUT_KEYBRD_T
 
ev
 = 
	`io_ªad
(
AM_INPUT_KEYBRD
);

163 i‡(
ev
.
keycode
 =
AM_KEY_NONE
) ;

164 i‡(
ev
.
keydown
 &&Év.
keycode
 =
AM_KEY_ESCAPE
Ë
	`hÆt
(0);

165 i‡(
ev
.
keydown
 && 
lut
[ev.
keycode
]) {

166 
	`check_hô
(
lut
[
ev
.
keycode
]);

170 i‡(
cuºít
 > 
ªndîed
) {

171 
	`ªndî
();

172 
ªndîed
 = 
cuºít
;

175 
	}
}

	@am-kernels/tests/am-tests/include/amtest.h

1 #i‚de‡
__AMUNIT_H__


2 
	#__AMUNIT_H__


	)

4 
	~<am.h
>

5 
	~<klib.h
>

6 
	~<klib-ma¸os.h
>

8 
	#IOE
 ({ 
	`i€_öô
(); })

	)

9 
	#CTE
(
h
Ë({ 
C⁄ãxt
 *
	`h
(
Evít
, C⁄ãxà*); 
	`˘e_öô
(h); })

	)

10 
	#VME
(
f1
, 
f2
Ë({ *
	`f1
(); 
	`f2
(*); 
	`vme_öô
(f1, f2); })

	)

11 
	#MPE
 ({ 
	`m≥_öô
(
íåy
); })

	)

13 (*
íåy
)();

15 
	#CASE
(
id
, 
íåy_
, ...) \

16 
id
: { \

17 
	`íåy_
(); \

18 
íåy
 = 
íåy_
; \

19 
__VA_ARGS__
; \

20 
	`íåy_
(); \

22 }

	)

	@am-kernels/tests/am-tests/src/main.c

1 
	~<amã°.h
>

3 (*
	gíåy
)(Ë
NULL
;

5 c⁄° *
	gã°s
[256] = {

18 
	$maö
(c⁄° *
¨gs
) {

19 
¨gs
[0]) {

20 
	`CASE
('h', 
hñlo
);

21 
	`CASE
('i', 
hñlo_öå
, 
IOE
, 
	`CTE
(
sim∂e_å≠
));

22 
	`CASE
('d', 
devsˇn
, 
IOE
);

23 
	`CASE
('m', 
mp_¥öt
, 
MPE
);

24 
	`CASE
('t', 
πc_ã°
, 
IOE
);

25 
	`CASE
('k', 
keybﬂrd_ã°
, 
IOE
);

26 
	`CASE
('v', 
video_ã°
, 
IOE
);

27 
	`CASE
('a', 
audio_ã°
, 
IOE
);

28 
	`CASE
('p', 
vm_ã°
, 
	`CTE
(
vm_h™dÀr
), 
	`VME
(
sim∂e_pgÆloc
, 
sim∂e_pg‰ì
));

31 
	`¥ötf
("Usage: makeÑun mainargs=*\n");

32 
ch
 = 0; ch < 256; ch++) {

33 i‡(
ã°s
[
ch
]) {

34 
	`¥ötf
(" %c: %s\n", 
ch
, 
ã°s
[ch]);

39 
	}
}

	@am-kernels/tests/am-tests/src/tests/audio.c

1 
	~<amã°.h
>

3 
	$audio_ã°
() {

4 i‡(!
	`io_ªad
(
AM_AUDIO_CONFIG
).
¥e£¡
) {

5 
	`¥ötf
("WARNING: %†d€†nŸ suµ‹àaudio\n", 
	`TOSTRING
(
__ARCH__
));

9 
	`io_wrôe
(
AM_AUDIO_CTRL
, 8000, 1, 1024);

11 
uöt8_t
 
audio_∑ylﬂd
, 
audio_∑ylﬂd_íd
;

12 
uöt32_t
 
audio_Àn
 = &
audio_∑ylﬂd_íd
 - &
audio_∑ylﬂd
;

13 
≈œy
 = 0;

14 
Aªa
 
sbuf
;

15 
sbuf
.
°¨t
 = &
audio_∑ylﬂd
;

16 
≈œy
 < 
audio_Àn
) {

17 
Àn
 = (
audio_Àn
 - 
≈œy
 > 4096 ? 4096 :áudio_len -Çplay);

18 
sbuf
.
íd
 = sbuf.
°¨t
 + 
Àn
;

19 
	`io_wrôe
(
AM_AUDIO_PLAY
, 
sbuf
);

20 
sbuf
.
°¨t
 +
Àn
;

21 
≈œy
 +
Àn
;

22 
	`¥ötf
("AÃódyÖœy %d/%d byã†o‡d©a\n", 
≈œy
, 
audio_Àn
);

26 
	`io_ªad
(
AM_AUDIO_STATUS
).
cou¡
 > 0);

27 
	}
}

	@am-kernels/tests/am-tests/src/tests/devscan.c

1 
	~<amã°.h
>

3 
	$öput_ã°
() {

4 
	`¥ötf
("Input deviceÅest skipped.\n");

5 
	}
}

7 
	$timî_ã°
() {

8 
AM_TIMER_UPTIME_T
 
u±ime
;

9 
uöt32_t
 
t0
, 
t1
;

11 
u±ime
 = 
	`io_ªad
(
AM_TIMER_UPTIME
);

12 
t0
 = 
u±ime
.
us
 / 1000;

14 vﬁ©ûê
i
 = 0; i < 10000000; i ++) ;

16 
u±ime
 = 
	`io_ªad
(
AM_TIMER_UPTIME
);

17 
t1
 = 
u±ime
.
us
 / 1000;

19 
	`¥ötf
("Lo› 10^7Åimêñ≠£: %d ms\n", 
t1
 - 
t0
);

20 
	}
}

22 
uöt8_t
 
	gvmem
[512 << 10];

23 
ölöe
 
gpu±r_t
 
	$to_gue°
(*
±r
Ë{ Öå ? (
uöt8_t
 *Ìå - 
vmem
 : 
AM_GPU_NULL
; 
	}
}

25 
	$video_ã°
() {

26 
AM_GPU_CONFIG_T
 
öfo
 = 
	`io_ªad
(
AM_GPU_CONFIG
);

27 
w
 = 
öfo
.
width
, 
h
 = info.
height
;

28 
	`¥ötf
("S¸ì¿size: %d x %d\n", 
w
, 
h
);

30 
gpu_ˇnvas
 *
cv
 = (*)
vmem
;

32 
uöt8_t
 *
p
 = (*)&
cv
[8];Ö !
vmem
 + (vmem);Ö++)

33 *
p
 = 
	`ønd
() & 0xff;

35 
cv
[0] = (
gpu_ˇnvas
) {

36 .
w
 = -1, .
h
 = -1, .
x1
 = w / 4, .
y1
 = 0, .
w1
 = w / 2, .
h1
 = h - 100,

37 .
ty≥
 = 
AM_GPU_TEXTURE
,

38 .
ãxtuª
 = (
gpu_ãxtuªdesc
) {

39 .
w
 = 37, .
h
 = 10,

40 .
pixñs
 = 
	`to_gue°
(&
cv
[8]),

42 .
siblög
 = 
	`to_gue°
(
NULL
),

45 
	`io_wrôe
(
AM_GPU_MEMCPY
, 0, 
vmem
, (vmem));

46 
	`io_wrôe
(
AM_GPU_RENDER
, 0);

47 
	}
}

49 
	$°‹age_ã°
() {

50 
	#nbyãs
 512

	)

51 
buf
[
nbyãs
];

52 
AM_DISK_CONFIG_T
 
öfo
 = 
	`io_ªad
(
AM_DISK_CONFIG
);

53 
	`¥ötf
("St‹age: %d block†o‡%d size. Show fú° 512 byãs\n", 
öfo
.
blk˙t
, info.
blksz
);

54 
	`io_wrôe
(
AM_DISK_BLKIO
, 
Ál£
, 
buf
, 0, 
nbyãs
 / 
öfo
.
blksz
);

55 
uöt32_t
 
i
 = 0; i < 
nbyãs
; i += 2) {

56 
	`¥ötf
("%02x%02x ", 
buf
[
i
] & 0xff, buf[i+1] & 0xff);

57 i‡((
i
+2Ë% 32 =0Ë
	`¥ötf
("\n");

59 
	}
}

61 
	$devsˇn
() {

62 
	`¥ötf
("hó∞[%08x, %08x)\n", 
hóp
.
°¨t
, hóp.
íd
);

63 
	`öput_ã°
();

64 
	`timî_ã°
();

65 
	`video_ã°
();

66 
	`°‹age_ã°
();

67 
	`¥ötf
("Test End!\n");

69 
	}
}

	@am-kernels/tests/am-tests/src/tests/hello.c

1 
	~<amã°.h
>

3 
	$hñlo
() {

4 
i
 = 0; i < 10; i ++) {

5 
	`put°r
("Hñlo, AM W‹ld @ " 
__ISA__
 "\n");

7 
	}
}

	@am-kernels/tests/am-tests/src/tests/intr.c

1 
	~<amã°.h
>

3 
C⁄ãxt
 *
	$sim∂e_å≠
(
Evít
 
ev
, 
C⁄ãxt
 *
˘x
) {

4 
ev
.
evít
) {

5 
EVENT_IRQ_TIMER
:

6 
	`putch
('t'); ;

7 
EVENT_IRQ_IODEV
:

8 
	`putch
('d'); ;

9 
EVENT_YIELD
:

10 
	`putch
('y'); ;

14  
˘x
;

15 
	}
}

17 
	$hñlo_öå
() {

18 
	`¥ötf
("Hñlo, AM W‹ld @ " 
__ISA__
 "\n");

19 
	`¥ötf
("Å =Åimer, d = device, y = yield\n");

20 
	`io_ªad
(
AM_INPUT_CONFIG
);

21 
	`i£t
(1);

23 vﬁ©ûê
i
 = 0; i < 10000000; i++) ;

24 
	`yõld
();

26 
	}
}

	@am-kernels/tests/am-tests/src/tests/keyboard.c

1 
	~<amã°.h
>

3 
	#NAMEINIT
(
key
Ë[ 
AM_KEY_
##key ] = #key,

	)

4 c⁄° *
	g«mes
[] = {

5 
AM_KEYS
(
NAMEINIT
)

8 
boﬁ
 
	ghas_u¨t
, 
	ghas_kbd
;

10 
	$døö_keys
() {

11 i‡(
has_u¨t
) {

13 
ch
 = 
	`io_ªad
(
AM_UART_RX
).
d©a
;

14 i‡(
ch
 == -1) ;

15 
	`¥ötf
("GŸ (u¨t): %¯(%d)\n", 
ch
, ch & 0xff);

19 i‡(
has_kbd
) {

21 
AM_INPUT_KEYBRD_T
 
ev
 = 
	`io_ªad
(
AM_INPUT_KEYBRD
);

22 i‡(
ev
.
keycode
 =
AM_KEY_NONE
) ;

23 
	`¥ötf
("GŸ (kbd): %†(%dË%s\n", 
«mes
[
ev
.
keycode
],Év.keycode,Év.
keydown
 ? "DOWN" : "UP");

26 
	}
}

28 
	$keybﬂrd_ã°
() {

29 
	`¥ötf
("TryÅoÖressány key (uart or keyboard)...\n");

30 
has_u¨t
 = 
	`io_ªad
(
AM_UART_CONFIG
).
¥e£¡
;

31 
has_kbd
 = 
	`io_ªad
(
AM_INPUT_CONFIG
).
¥e£¡
;

33 
	`døö_keys
();

35 
	}
}

	@am-kernels/tests/am-tests/src/tests/mp.c

1 
	~<amã°.h
>

3 
	$mp_¥öt
() {

5 
	`¥ötf
("%d", 
	`˝u_cuºít
());

7 
	}
}

	@am-kernels/tests/am-tests/src/tests/rtc.c

1 
	~<amã°.h
>

3 
	$πc_ã°
() {

4 
AM_TIMER_RTC_T
 
πc
;

5 
£c
 = 1;

7 
	`io_ªad
(
AM_TIMER_UPTIME
).
us
 / 1000000 < 
£c
) ;

8 
πc
 = 
	`io_ªad
(
AM_TIMER_RTC
);

9 
	`¥ötf
("%d-%d-%d %02d:%02d:%02d GMT (", 
πc
.
yór
,Ñtc.
m⁄th
,Ñtc.
day
,Ñtc.
hour
,Ñtc.
möuã
,Ñtc.
£c⁄d
);

10 i‡(
£c
 == 1) {

11 
	`¥ötf
("%d sec⁄d).\n", 
£c
);

13 
	`¥ötf
("%d sec⁄ds).\n", 
£c
);

15 
£c
 ++;

17 
	}
}

	@am-kernels/tests/am-tests/src/tests/video.c

1 
	~<amã°.h
>

3 
	#FPS
 30

	)

4 
	#N
 32

	)

6 
ölöe
 
uöt32_t
 
	$pixñ
(
uöt8_t
 
r
, uöt8_à
g
, uöt8_à
b
) {

7  (
r
 << 16Ë| (
g
 << 8Ë| 
b
;

8 
	}
}

9 
ölöe
 
uöt8_t
 
	$R
(
uöt32_t
 
p
Ë{ Ö >> 16; 
	}
}

10 
ölöe
 
uöt8_t
 
	$G
(
uöt32_t
 
p
Ë{ Ö >> 8; 
	}
}

11 
ölöe
 
uöt8_t
 
	$B
(
uöt32_t
 
p
Ë{ Ö; 
	}
}

13 
uöt32_t
 
	gˇnvas
[
N
][N];

14 
	gu£d
[
N
][N];

16 
uöt32_t
 
	gcﬁ‹_buf
[32 * 32];

18 
	$ªdøw
() {

19 
w
 = 
	`io_ªad
(
AM_GPU_CONFIG
).
width
 / 
N
;

20 
h
 = 
	`io_ªad
(
AM_GPU_CONFIG
).
height
 / 
N
;

21 
block_size
 = 
w
 * 
h
;

22 
	`as£π
((
uöt32_t
)
block_size
 <
	`LENGTH
(
cﬁ‹_buf
));

24 
x
, 
y
, 
k
;

25 
y
 = 0; y < 
N
; y ++) {

26 
x
 = 0; x < 
N
; x ++) {

27 
k
 = 0; k < 
block_size
; k ++) {

28 
cﬁ‹_buf
[
k
] = 
ˇnvas
[
y
][
x
];

30 
	`io_wrôe
(
AM_GPU_FBDRAW
, 
x
 * 
w
, 
y
 * 
h
, 
cﬁ‹_buf
, w, h, 
Ál£
);

33 
	`io_wrôe
(
AM_GPU_FBDRAW
, 0, 0, 
NULL
, 0, 0, 
åue
);

34 
	}
}

36 
uöt32_t
 
	$p
(
tsc
) {

37 
b
 = 
tsc
 & 0xff;

38  
	`pixñ
(
b
 * 6, b * 7, b);

39 
	}
}

41 
	$upd©e
() {

42 
tsc
 = 0;

43 
dx
[4] = {0, 1, 0, -1};

44 
dy
[4] = {1, 0, -1, 0};

46 
tsc
 ++;

48 
i
 = 0; i < 
N
; i ++)

49 
j
 = 0; j < 
N
; j ++) {

50 
u£d
[
i
][
j
] = 0;

53 
öô
 = 
tsc
 * 1;

54 
ˇnvas
[0][0] = 
	`p
(
öô
); 
u£d
[0][0] = 1;

55 
x
 = 0, 
y
 = 0, 
d
 = 0;

56 
°ï
 = 1; sã∞< 
N
 * N; step ++) {

57 
t
 = 0;Å < 4;Å ++) {

58 
x1
 = 
x
 + 
dx
[
d
], 
y1
 = 
y
 + 
dy
[d];

59 i‡(
x1
 >0 && x1 < 
N
 && 
y1
 >0 && y1 < N && !
u£d
[x1][y1]) {

60 
x
 = 
x1
; 
y
 = 
y1
;

61 
u£d
[
x
][
y
] = 1;

62 
ˇnvas
[
x
][
y
] = 
	`p
(
öô
 + 
°ï
 / 2);

65 
d
 = (d + 1) % 4;

68 
	}
}

70 
	$video_ã°
() {

71 
œ°
 = 0;

72 
Âs_œ°
 = 0;

73 
Âs
 = 0;

76 
u±
 = 
	`io_ªad
(
AM_TIMER_UPTIME
).
us
 / 1000;

77 i‡(
u±
 - 
œ°
 > 1000 / 
FPS
) {

78 
	`upd©e
();

79 
	`ªdøw
();

80 
œ°
 = 
u±
;

81 
Âs
 ++;

83 i‡(
u±
 - 
Âs_œ°
 > 1000) {

85 
	`¥ötf
("%d: FPS = %d\n", 
u±
, 
Âs
);

86 
Âs_œ°
 = 
u±
;

87 
Âs
 = 0;

90 
	}
}

	@am-kernels/tests/am-tests/src/tests/vm.c

1 
	~<amã°.h
>

3 
C⁄ãxt
 *
	gu˘x
;

4 
AddrS∑˚
 
	g¥Ÿ
;

5 
uöçå_t
 
	g°
 = 0;

6 
	gfú°_å≠
 = 1;

8 *
	$sim∂e_pgÆloc
(
size
) {

9 i‡(
°
 =0Ë{ sà(
uöçå_t
)
hóp
.
°¨t
; }

10 
°
 % 
size
 != 0) st++;

11 *
ªt
 = (*)
°
;

12 
°
 +
size
;

13  
ªt
;

14 
	}
}

16 
	$sim∂e_pg‰ì
(*
±r
) {

17 
	}
}

19 
C⁄ãxt
* 
	$vm_h™dÀr
(
Evít
 
ev
, 
C⁄ãxt
 *
˘x
) {

20 
ev
.
evít
) {

21 
EVENT_YIELD
:

23 
EVENT_IRQ_TIMER
:

24 
EVENT_IRQ_IODEV
:

25 
	`¥ötf
("===öãºu± (%sË ====\n", 
ev
.
msg
);

27 
EVENT_PAGEFAULT
:

28 
	`¥ötf
("PF: %x %s%s%s\n",

29 
ev
.
ªf
,

30 (
ev
.
ˇu£
 & 
MMAP_NONE
) ? "[notÖresent]" : "",

31 (
ev
.
ˇu£
 & 
MMAP_READ
) ? "[read fail]" : "",

32 (
ev
.
ˇu£
 & 
MMAP_WRITE
) ? "[write fail]" : "");

34 
EVENT_SYSCALL
:

35 
	`i£t
(1);

36 vﬁ©ûê
i
 = 0; i < 1000000; i++) ;

37 
	`¥ötf
("%d ", 
˘x
->
GPRx
);

40 
	`as£π
(0);

42 i‡(
fú°_å≠
) {

43 
fú°_å≠
 = 0;

44  
u˘x
;

46  
˘x
;

48 
	}
}

50 
uöt8_t
 
	gcode
[] = {

51 #ifde‡
__ARCH_NATIVE


67 
	$vm_ã°
() {

68 i‡(!
	`°∫cmp
(
__ISA__
, "x86", 3) == 0 &&

69 !
	`°rcmp
(
__ISA__
, "native") == 0) {

70 
	`¥ötf
("Not supportedárchitecture.\n");

73 
	`¥Ÿe˘
(&
¥Ÿ
);

74 
	`¥ötf
("PrŸe˘edáddªs†•a˚: [%p, %p)\n", 
¥Ÿ
.
¨ó
.
°¨t
,ÖrŸ.¨ó.
íd
);

76 
uöt8_t
 *
±r
 = (*)((
uöçå_t
)(
¥Ÿ
.
¨ó
.
°¨t
) +

77 ((
uöçå_t
)(
¥Ÿ
.
¨ó
.
íd
Ë- (uöçå_t)’rŸ.¨ó.
°¨t
)) / 2);

79 *
pg
 = 
	`sim∂e_pgÆloc
(
¥Ÿ
.
pgsize
);

80 
	`mem˝y
(
pg
, 
code
, (code));

82 
	`m≠
(&
¥Ÿ
, 
±r
, 
pg
, 
MMAP_WRITE
 | 
MMAP_READ
);

83 
	`¥ötf
("Codêc›õdÅÿ%∞’hysiˇ»%pËexecuã\n", 
±r
, 
pg
);

85 
uöt8_t
 
°ack
[4096];

86 
u˘x
 = 
	`uc⁄ãxt
(&
¥Ÿ
, 
	`RANGE
(
°ack
, sèck + (°ack)), 
±r
);

88 
	`i£t
(1);

89 
	`yõld
();

90 
	}
}

	@am-kernels/tests/cpu-tests/include/trap.h

1 #i‚de‡
__TRAP_H__


2 
	#__TRAP_H__


	)

4 
	~<am.h
>

5 
	~<klib.h
>

6 
	~<klib-ma¸os.h
>

8 
__©åibuã__
((
noölöe
))

9 
	$check
(
boﬁ
 
c⁄d
) {

10 i‡(!
c⁄d
Ë
	`hÆt
(1);

11 
	}
}

	@am-kernels/tests/cpu-tests/tests/add-longlong.c

1 
	~"å≠.h
"

3 
	$add
(
a
, 
b
) {

4 
c
 = 
a
 + 
b
;

5  
c
;

6 
	}
}

8 
	gã°_d©a
[] = {0, 1, 2, 0x7fffffffffffffffLL, 0x8000000000000000LL, 0x8000000000000001LL, 0xfffffffffffffffeLL, 0xffffffffffffffffLL};

9 
	g™s
[] = {0LL, 0x1LL, 0x2LL, 0x7fffffffffffffffLL, 0x8000000000000000LL, 0x8000000000000001LL, 0xfffffffffffffffeLL, 0xffffffffffffffffLL, 0x1LL, 0x2LL, 0x3LL, 0x8000000000000000LL, 0x8000000000000001LL, 0x8000000000000002LL, 0xffffffffffffffffLL, 0LL, 0x2LL, 0x3LL, 0x4LL, 0x8000000000000001LL, 0x8000000000000002LL, 0x8000000000000003LL, 0LL, 0x1LL, 0x7fffffffffffffffLL, 0x8000000000000000LL, 0x8000000000000001LL, 0xfffffffffffffffeLL, 0xffffffffffffffffLL, 0LL, 0x7ffffffffffffffdLL, 0x7ffffffffffffffeLL, 0x8000000000000000LL, 0x8000000000000001LL, 0x8000000000000002LL, 0xffffffffffffffffLL, 0LL, 0x1LL, 0x7ffffffffffffffeLL, 0x7fffffffffffffffLL, 0x8000000000000001LL, 0x8000000000000002LL, 0x8000000000000003LL, 0LL, 0x1LL, 0x2LL, 0x7fffffffffffffffLL, 0x8000000000000000LL, 0xfffffffffffffffeLL, 0xffffffffffffffffLL, 0LL, 0x7ffffffffffffffdLL, 0x7ffffffffffffffeLL, 0x7fffffffffffffffLL, 0xfffffffffffffffcLL, 0xfffffffffffffffdLL, 0xffffffffffffffffLL, 0LL, 0x1LL, 0x7ffffffffffffffeLL, 0x7fffffffffffffffLL, 0x8000000000000000LL, 0xfffffffffffffffdLL, 0xfffffffffffffffeLL};

11 
	#NR_DATA
 
	`LENGTH
(
ã°_d©a
)

	)

13 
	$maö
() {

14 
i
, 
j
, 
™s_idx
 = 0;

15 
i
 = 0; i < 
NR_DATA
; i ++) {

16 
j
 = 0; j < 
NR_DATA
; j ++) {

17 
	`check
(
	`add
(
ã°_d©a
[
i
],Åe°_d©a[
j
]Ë=
™s
[
™s_idx
 ++]);

22 
	}
}

	@am-kernels/tests/cpu-tests/tests/add.c

1 
	~"å≠.h
"

3 
	$add
(
a
, 
b
) {

4 
c
 = 
a
 + 
b
;

5  
c
;

6 
	}
}

8 
	gã°_d©a
[] = {0, 1, 2, 0x7fffffff, 0x80000000, 0x80000001, 0xfffffffe, 0xffffffff};

9 
	g™s
[] = {0, 0x1, 0x2, 0x7fffffff, 0x80000000, 0x80000001, 0xfffffffe, 0xffffffff, 0x1, 0x2, 0x3, 0x80000000, 0x80000001, 0x80000002, 0xffffffff, 0, 0x2, 0x3, 0x4, 0x80000001, 0x80000002, 0x80000003, 0, 0x1, 0x7fffffff, 0x80000000, 0x80000001, 0xfffffffe, 0xffffffff, 0, 0x7ffffffd, 0x7ffffffe, 0x80000000, 0x80000001, 0x80000002, 0xffffffff, 0, 0x1, 0x7ffffffe, 0x7fffffff, 0x80000001, 0x80000002, 0x80000003, 0, 0x1, 0x2, 0x7fffffff, 0x80000000, 0xfffffffe, 0xffffffff, 0, 0x7ffffffd, 0x7ffffffe, 0x7fffffff, 0xfffffffc, 0xfffffffd, 0xffffffff, 0, 0x1, 0x7ffffffe, 0x7fffffff, 0x80000000, 0xfffffffd, 0xfffffffe};

11 
	#NR_DATA
 
	`LENGTH
(
ã°_d©a
)

	)

13 
	$maö
() {

14 
i
, 
j
, 
™s_idx
 = 0;

15 
i
 = 0; i < 
NR_DATA
; i ++) {

16 
j
 = 0; j < 
NR_DATA
; j ++) {

17 
	`check
(
	`add
(
ã°_d©a
[
i
],Åe°_d©a[
j
]Ë=
™s
[
™s_idx
 ++]);

19 
	`check
(
j
 =
NR_DATA
);

22 
	`check
(
i
 =
NR_DATA
);

25 
	}
}

	@am-kernels/tests/cpu-tests/tests/bit.c

1 
	~"å≠.h
"

3 
	tuöt8_t
;

4 
__©åibuã__
((
noölöe
))

5 
boﬁ
 
	$gëbô
(*
buf
, 
off£t
){

6 
byã
 = 
off£t
 >> 3;

7 
off£t
 &= 7;

8 
uöt8_t
 
mask
 = 1 << 
off£t
;

9  (((
uöt8_t
 *)
buf
)[
byã
] & 
mask
) != 0;

10 
	}
}

11 
__©åibuã__
((
noölöe
))

12 
	$£tbô
(*
buf
, 
off£t
, 
boﬁ
 
bô
){

13 
byã
 = 
off£t
 >> 3;

14 
off£t
 &= 7;

15 
uöt8_t
 
mask
 = 1 << 
off£t
;

17 
uöt8_t
 * vﬁ©ûê
p
 = 
buf
 + 
byã
;

18 *
p
 = (
bô
 =0 ? (*∞& ~
mask
) : (*p | mask));

19 
	}
}

21 
	$maö
() {

22 
uöt8_t
 
buf
[2];

24 
buf
[0] = 0xaa;

25 
buf
[1] = 0x0;

26 
	`check
(
	`gëbô
(
buf
, 0) == 0);

27 
	`check
(
	`gëbô
(
buf
, 1) == 1);

28 
	`check
(
	`gëbô
(
buf
, 2) == 0);

29 
	`check
(
	`gëbô
(
buf
, 3) == 1);

30 
	`check
(
	`gëbô
(
buf
, 4) == 0);

31 
	`check
(
	`gëbô
(
buf
, 5) == 1);

32 
	`check
(
	`gëbô
(
buf
, 6) == 0);

33 
	`check
(
	`gëbô
(
buf
, 7) == 1);

35 
	`£tbô
(
buf
, 8, 1);

36 
	`£tbô
(
buf
, 9, 0);

37 
	`£tbô
(
buf
, 10, 1);

38 
	`£tbô
(
buf
, 11, 0);

39 
	`£tbô
(
buf
, 12, 1);

40 
	`£tbô
(
buf
, 13, 0);

41 
	`£tbô
(
buf
, 14, 1);

42 
	`£tbô
(
buf
, 15, 0);

43 
	`check
(
buf
[1] == 0x55);

46 
	}
}

	@am-kernels/tests/cpu-tests/tests/bubble-sort.c

1 
	~"å≠.h
"

3 
	#N
 20

	)

5 
	ga
[
N
] = {2, 12, 14, 6, 13, 15, 16, 10, 0, 18, 11, 19, 9, 1, 7, 5, 4, 3, 8, 17};

7 
	$bubbÀ_s‹t
() {

8 
i
, 
j
, 
t
;

9 
j
 = 0; j < 
N
; j ++) {

10 
i
 = 0; i < 
N
 - 1 - 
j
; i ++) {

11 if(
a
[
i
] >á[i + 1]) {

12 
t
 = 
a
[
i
];

13 
a
[
i
] =á[i + 1];

14 
a
[
i
 + 1] = 
t
;

18 
	}
}

20 
	$maö
() {

21 
	`bubbÀ_s‹t
();

23 
i
;

24 
i
 = 0; i < 
N
; i ++) {

25 
	`check
(
a
[
i
] == i);

28 
	`check
(
i
 =
N
);

30 
	`bubbÀ_s‹t
();

32 
i
 = 0; i < 
N
; i ++) {

33 
	`check
(
a
[
i
] == i);

36 
	`check
(
i
 =
N
);

39 
	}
}

	@am-kernels/tests/cpu-tests/tests/div.c

1 
	~"å≠.h
"

3 
	#N
 10

	)

4 
	ga
[
N
];

6 
	$maö
() {

7 
i
, 
j
;

8 
i
 = 0; i < 
N
; i ++)

9 
a
[
i
] = i;

10 
i
 = 0; i < 
N
; i ++)

11 
j
 = 1; j < 
N
 + 1; j ++)

12 
a
[
i
] *
j
;

13 
i
 = 0; i < 
N
; i ++)

14 
j
 = 1; j < 
N
 + 1; j ++)

15 
a
[
i
] /
j
;

17 
i
 = 0; i < 
N
; i ++)

18 
	`check
(
a
[
i
] == i);

21 
	}
}

	@am-kernels/tests/cpu-tests/tests/dummy.c

1 
	$maö
() {

3 
	}
}

	@am-kernels/tests/cpu-tests/tests/fact.c

1 
	~"å≠.h
"

3 
	gf
[15];

4 
	g™s
[] = {1, 1, 2, 6, 24, 120, 720, 5040, 40320, 362880, 3628800, 39916800, 479001600};

6 
	$Á˘
(
n
) {

7 if(
n
 == 0 ||Ç == 1)  1;

8  
	`Á˘
(
n
 - 1) *Ç;

9 
	}
}

11 
	$maö
() {

12 
i
;

13 
i
 = 0; i < 13; i ++) {

14 
f
[
i
] = 
	`Á˘
(i);

15 
	`check
(
f
[
i
] =
™s
[i]);

19 
	}
}

	@am-kernels/tests/cpu-tests/tests/fib.c

1 
	~"å≠.h
"

3 
	gfib
[40] = {1, 1};

4 
	g™s
[] = {1, 1, 2, 3, 5, 8, 13, 21, 34, 55, 89, 144, 233, 377, 610, 987, 1597, 2584, 4181, 6765, 10946, 17711, 28657, 46368, 75025, 121393, 196418, 317811, 514229, 832040, 1346269, 2178309, 3524578, 5702887, 9227465, 14930352, 24157817, 39088169, 63245986, 102334155};

6 
	$maö
() {

7 
i
;

8 
i
 = 2; i < 40; i ++) {

9 
fib
[
i
] = fib[i - 1] + fib[i - 2];

10 
	`check
(
fib
[
i
] =
™s
[i]);

13 
	`check
(
i
 == 40);

16 
	}
}

	@am-kernels/tests/cpu-tests/tests/goldbach.c

1 
	~"å≠.h
"

3 
	$is_¥ime
(
n
) {

4 if(
n
 < 2)  0;

6 
i
;

7 
i
 = 2; i < 
n
; i ++) {

8 if(
n
 % 
i
 == 0) {

14 
	}
}

16 
	$gﬁdbach
(
n
) {

17 
i
;

18 
i
 = 2; i < 
n
; i ++) {

19 if(
	`is_¥ime
(
i
Ë&& is_¥ime(
n
 - i)) {

25 
	}
}

27 
	$maö
() {

28 
n
;

29 
n
 = 4;Ç <= 30;Ç += 2) {

30 
	`check
(
	`gﬁdbach
(
n
) == 1);

34 
	}
}

	@am-kernels/tests/cpu-tests/tests/hello-str.c

1 
	~"å≠.h
"

3 
	gbuf
[128];

5 
	$maö
() {

6 
	`•rötf
(
buf
, "%s", "Hello world!\n");

7 
	`check
(
	`°rcmp
(
buf
, "Hello world!\n") == 0);

9 
	`•rötf
(
buf
, "%d + %d = %d\n", 1, 1, 2);

10 
	`check
(
	`°rcmp
(
buf
, "1 + 1 = 2\n") == 0);

12 
	`•rötf
(
buf
, "%d + %d = %d\n", 2, 10, 12);

13 
	`check
(
	`°rcmp
(
buf
, "2 + 10 = 12\n") == 0);

16 
	}
}

	@am-kernels/tests/cpu-tests/tests/if-else.c

1 
	~"å≠.h
"

3 
	$if_ñ£
(
n
) {

4 
co°
;

5 if(
n
 > 500Ë
co°
 = 150;

6 if(
n
 > 300Ë
co°
 = 100;

7 if(
n
 > 100Ë
co°
 = 75;

8 if(
n
 > 50Ë
co°
 = 50;

9 
co°
 = 0;

11  
co°
;

12 
	}
}

14 
	gã°_d©a
[] = {-1, 0, 49, 50, 51, 99, 100, 101, 299, 300, 301, 499, 500, 501};

15 
	g™s
[] = {0, 0, 0, 0, 50, 50, 50, 75, 75, 75, 100, 100, 100, 150};

17 
	#NR_DATA
 
	`LENGTH
(
ã°_d©a
)

	)

19 
	$maö
() {

20 
i
, 
™s_idx
 = 0;

21 
i
 = 0; i < 
NR_DATA
; i ++) {

22 
	`check
(
	`if_ñ£
(
ã°_d©a
[
i
]Ë=
™s
[
™s_idx
 ++]);

25 
	`check
(
i
 =
NR_DATA
);

28 
	}
}

	@am-kernels/tests/cpu-tests/tests/leap-year.c

1 
	~"å≠.h
"

3 
	$is_À≠_yór
(
n
) {

4  (
n
 % 4 == 0 &&Ç % 100 != 0) || (n % 400 == 0);

5 
	}
}

7 
	g™s
[] = {0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0};

9 
	$maö
() {

10 
i
;

11 
i
 = 0; i < 125; i ++) {

12 
	`check
(
	`is_À≠_yór
(
i
 + 1890Ë=
™s
[i]);

16 
	}
}

	@am-kernels/tests/cpu-tests/tests/load-store.c

1 
	~"å≠.h
"

3 
	gmem
[] = {

7 
	glh_™s
[] = {

11 
	glhu_™s
[] = {

15 
	gsh_™s
[] = {

19 
	glwÃ_™s
[] = {

23 
	$maö
() {

24 
i
;

26 
i
 = 0; i < 
	`LENGTH
(
mem
); i ++) {

27 
	`check
(()
mem
[
i
] =
lh_™s
[i]);

30 
i
 = 0; i < 
	`LENGTH
(
mem
); i ++) {

31 
	`check
(
mem
[
i
] =
lhu_™s
[i]);

34 
i
 = 0; i < ((
	`LENGTH
(
mem
) / 2) - 1); i ++) {

35 
x
 = ((*)((*)
mem
 + 1))[
i
];

36 
	`check
(
x
 =
lwÃ_™s
[
i
]);

39 
i
 = 0; i < 
	`LENGTH
(
mem
); i ++) {

40 
mem
[
i
] = ~(1 << (2 * i + 1));

41 
	`check
(
mem
[
i
] =
sh_™s
[i]);

45 
	}
}

	@am-kernels/tests/cpu-tests/tests/matrix-mul.c

1 
	~"å≠.h
"

3 
	#N
 10

	)

4 
	ga
[
N
][N] = {

16 
	gb
[
N
][N] = {

29 
	g™s
[
N
][N] = {

41 
	gc
[
N
][N];

43 
	$maö
() {

44 
i
, 
j
, 
k
;

45 
i
 = 0; i < 
N
; i ++) {

46 
j
 = 0; j < 
N
; j ++) {

47 
c
[
i
][
j
] = 0;

48 
k
 = 0; k < 
N
; k ++) {

49 
c
[
i
][
j
] +
a
[i][
k
] * 
b
[k][j];

51 
	`check
(
c
[
i
][
j
] =
™s
[i][j]);

52 
	`check
(
k
 =
N
);

54 
	`check
(
j
 =
N
);

57 
	`check
(
i
 =
N
);

60 
	}
}

	@am-kernels/tests/cpu-tests/tests/max.c

1 
	~"å≠.h
"

3 
	$max
(
x
, 
y
) {

4 
z
;

5 if(
x
 > 
y
Ë{ 
z
 = x; }

6 { 
z
 = 
y
; }

7  
z
;

8 
	}
}

10 
	gã°_d©a
[] = {0, 1, 2, 0x7fffffff, 0x80000000, 0x80000001, 0xfffffffe, 0xffffffff};

11 
	g™s
[] = {0, 0x1, 0x2, 0x7fffffff, 0, 0, 0, 0, 0x1, 0x1, 0x2, 0x7fffffff, 0x1, 0x1, 0x1, 0x1, 0x2, 0x2, 0x2, 0x7fffffff, 0x2, 0x2, 0x2, 0x2, 0x7fffffff, 0x7fffffff, 0x7fffffff, 0x7fffffff, 0x7fffffff, 0x7fffffff, 0x7fffffff, 0x7fffffff, 0, 0x1, 0x2, 0x7fffffff, 0x80000000, 0x80000001, 0xfffffffe, 0xffffffff, 0, 0x1, 0x2, 0x7fffffff, 0x80000001, 0x80000001, 0xfffffffe, 0xffffffff, 0, 0x1, 0x2, 0x7fffffff, 0xfffffffe, 0xfffffffe, 0xfffffffe, 0xffffffff, 0, 0x1, 0x2, 0x7fffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff};

13 
	#NR_DATA
 
	`LENGTH
(
ã°_d©a
)

	)

15 
	$maö
() {

16 
i
, 
j
, 
™s_idx
 = 0;

17 
i
 = 0; i < 
NR_DATA
; i ++) {

18 
j
 = 0; j < 
NR_DATA
; j ++) {

19 
	`check
(
	`max
(
ã°_d©a
[
i
],Åe°_d©a[
j
]Ë=
™s
[
™s_idx
 ++]);

21 
	`check
(
j
 =
NR_DATA
);

24 
	`check
(
i
 =
NR_DATA
);

27 
	}
}

	@am-kernels/tests/cpu-tests/tests/min3.c

1 
	~"å≠.h
"

3 
	$mö3
(
x
, 
y
, 
z
) {

4 
m
;

5 if(
x
 < 
y
Ë{ 
m
 = x; }

6 { 
m
 = 
y
; }

7 if(
z
 < 
m
) m = z;

8  
m
;

9 
	}
}

11 
	gã°_d©a
[] = {0, 0x7fffffff, 0x80000000, 0xffffffff};

12 
	g™s
 [] = {0, 0, -2147483648, -1, 0, 0, -2147483648, -1, -2147483648, -2147483648, -2147483648, -2147483648, -1, -1, -2147483648, -1, 0, 0, -2147483648, -1, 0, 2147483647, -2147483648, -1, -2147483648, -2147483648, -2147483648, -2147483648, -1, -1, -2147483648, -1, -2147483648, -2147483648, -2147483648, -2147483648, -2147483648, -2147483648, -2147483648, -2147483648, -2147483648, -2147483648, -2147483648, -2147483648, -2147483648, -2147483648, -2147483648, -2147483648, -1, -1, -2147483648, -1, -1, -1, -2147483648, -1, -2147483648, -2147483648, -2147483648, -2147483648, -1, -1, -2147483648, -1};

14 
	#NR_DATA
 
	`LENGTH
(
ã°_d©a
)

	)

16 
	$maö
() {

17 
i
, 
j
, 
k
, 
™s_idx
 = 0;

18 
i
 = 0; i < 
NR_DATA
; i ++) {

19 
j
 = 0; j < 
NR_DATA
; j ++) {

20 
k
 = 0; k < 
NR_DATA
; k ++) {

21 
	`check
(
	`mö3
(
ã°_d©a
[
i
],Åe°_d©a[
j
],Åe°_d©a[
k
]Ë=
™s
[
™s_idx
 ++]);

23 
	`check
(
k
 =
NR_DATA
);

25 
	`check
(
j
 =
NR_DATA
);

28 
	`check
(
i
 =
NR_DATA
);

31 
	}
}

	@am-kernels/tests/cpu-tests/tests/mov-c.c

1 
	~"å≠.h
"

3 vﬁ©ûê
	gA
[10];

4 vﬁ©ûê
	gb
;

6 
	$maö
() {

7 
A
[0] = 0;

8 
A
[1] = 1;

9 
A
[2] = 2;

10 
A
[3] = 3;

11 
A
[4] = 4;

13 
b
 = 
A
[3];

14 
A
[5] = 
b
;

16 
	`check
(
A
[0] == 0);

17 
	`check
(
A
[1] == 1);

18 
	`check
(
A
[2] == 2);

19 
	`check
(
A
[3] == 3);

20 
	`check
(
A
[4] == 4);

21 
	`check
(
b
 == 3);

22 
	`check
(
A
[5] == 3);

25 
	}
}

	@am-kernels/tests/cpu-tests/tests/movsx.c

1 
	~"å≠.h
"

3 vﬁ©ûê
	gA
[10];

4 vﬁ©ûê
	gb
;

5 vﬁ©ûêsig√d 
	gC
[10];

6 
	$maö
() {

7 
A
[0] = 0;

8 
A
[1] = 1;

9 
A
[2] = 2;

10 
A
[3] = 3;

11 
A
[4] = 4;

13 
b
 = 
A
[3];

14 
A
[5] = 
b
;

15 
C
[0] = 'a';

16 
	`check
(
C
[0] == 'a');

17 
C
[1] = C[0];

18 
	`check
(
C
[1] == 'a');

19 
A
[0] = ()
C
[0];

20 
	`check
(
A
[0] == 'a');

21 
C
[1] = 0x80;

22 
A
[0] = ()
C
[1];

23 
	`check
(
A
[1] == 1);

24 
	`check
(
A
[2] == 2);

25 
	`check
(
A
[3] == 3);

26 
	`check
(
A
[4] == 4);

27 
	`check
(
b
 == 3);

28 
	`check
(
A
[5] == 3);

29 
	`check
(
C
[1] == 0xffffff80);

30 
	`check
(
A
[0] == 0xffffff80);

33 
	}
}

	@am-kernels/tests/cpu-tests/tests/mul-longlong.c

1 
	~"å≠.h
"

3 
	$mul
(
a
,
b
) {

4 
™s
 = 
a
*
b
;

5  
™s
;

6 
	}
}

8 
	gã°_d©a
[] = { 0xaeb1c2aa, 0x4500ff2b, 0x877190af, 0x11f42438};

9 
	g™s
[] = { 0x19d29ab9db1a18e4LL, 0xea15986d3ac3088eLL, 0x2649e980fc0db236LL, 0xfa4c43da0a4a7d30LL, 0x1299898e2c56b139LL, 0xdf8123d50a319e65LL, 0x4d6dfa84c15dd68LL, 0x38c5d79b9e4357a1LL, 0xf78b91cb1efc4248LL, 0x14255a47fdfcc40LL};

11 
	#NR_DATA
 
	`LENGTH
(
ã°_d©a
)

	)

13 
	$maö
() {

14 
i
,
j
,
™s_idx
 = 0;

15 
i
 = 0;ò< 
NR_DATA
;i++) {

16 
j
 = 
i
;j < 
NR_DATA
;j++) {

17 
	`check
(
™s
[
™s_idx
++] =
	`mul
(
ã°_d©a
[
i
],ã°_d©a[
j
]));

19 
	`check
(
j
 =
NR_DATA
);

22 
	`check
(
i
 =
NR_DATA
);

25 
	}
}

	@am-kernels/tests/cpu-tests/tests/pascal.c

1 
	~"å≠.h
"

3 
	#N
 31

	)

5 
	ga
[
N
];

6 
	g™s
[] = {1, 30, 435, 4060, 27405, 142506, 593775, 2035800, 5852925, 14307150, 30045015, 54627300, 86493225, 119759850, 145422675, 155117520, 145422675, 119759850, 86493225, 54627300, 30045015, 14307150, 5852925, 2035800, 593775, 142506, 27405, 4060, 435, 30, 1};

8 
	$maö
() {

9 
i
, 
j
;

10 
t0
, 
t1
;

11 
a
[0] =á[1] = 1;

13 
i
 = 2; i < 
N
; i ++) {

14 
t0
 = 1;

15 
j
 = 1; j < 
i
; j ++) {

16 
t1
 = 
a
[
j
];

17 
a
[
j
] = 
t0
 + 
t1
;

18 
t0
 = 
t1
;

20 
a
[
i
] = 1;

23 
j
 = 0; j < 
N
; j ++) {

24 
	`check
(
a
[
j
] =
™s
[j]);

27 
	`check
(
j
 =
N
);

30 
	}
}

	@am-kernels/tests/cpu-tests/tests/prime.c

1 
	~"å≠.h
"

3 
	g™s
[] = {101, 103, 107, 109, 113, 127, 131, 137, 139, 149};

5 
	$maö
() {

6 
m
, 
i
, 
n
 = 0;

7 
¥ime
;

8 
m
 = 101; m <= 150; m += 2) {

9 
¥ime
 = 1;

10 
i
 = 2; i < 
m
; i ++) {

11 if(
m
 % 
i
 == 0) {

12 
¥ime
 = 0;

16 if(
¥ime
) {

17 
	`check
(
i
 =
™s
[
n
]);

18 
n
 ++;

22 
	`check
(
n
 == 10);

25 
	}
}

	@am-kernels/tests/cpu-tests/tests/quick-sort.c

1 
	~"å≠.h
"

3 
	#N
 20

	)

5 
	ga
[
N
] = {2, 12, 14, 6, 13, 15, 16, 10, 0, 18, 11, 19, 9, 1, 7, 5, 4, 3, 8, 17};

7 
	$∑πôi⁄
(*
a
, 
p
, 
q
) {

8 
pivŸ
 = 
a
[
p
];

9 
i
 = 
p
, 
j
 = 
q
;

10 
i
 < 
j
) {

11 
i
 < 
j
 && 
a
[j] > 
pivŸ
) j --;

12 
a
[
i
] =á[
j
];

14 
i
 < 
j
 && 
a
[i] <
pivŸ
) i ++;

15 
a
[
j
] =á[
i
];

18 
a
[
i
] = 
pivŸ
;

19  
i
;

20 
	}
}

22 
	$quick_s‹t
(*
a
, 
p
, 
q
) {

23 if(
p
 >
q
) ;

25 
m
 = 
	`∑πôi⁄
(
a
, 
p
, 
q
);

26 
	`quick_s‹t
(
a
, 
p
, 
m
 - 1);

27 
	`quick_s‹t
(
a
, 
m
 + 1, 
q
);

28 
	}
}

30 
	$maö
() {

31 
	`quick_s‹t
(
a
, 0, 
N
 - 1);

33 
i
;

34 
i
 = 0; i < 
N
; i ++) {

35 
	`check
(
a
[
i
] == i);

38 
	`check
(
i
 =
N
);

40 
	`quick_s‹t
(
a
, 0, 
N
 - 1);

42 
i
 = 0; i < 
N
; i ++) {

43 
	`check
(
a
[
i
] == i);

46 
	`check
(
i
 =
N
);

49 
	}
}

	@am-kernels/tests/cpu-tests/tests/recursion.c

1 
	~"å≠.h
"

3 
f0
(, );

4 
f1
(, );

5 
f2
(, );

6 
f3
(, );

8 (*
func
[])(, ) = {

9 
f0
, 
f1
, 
f2
, 
f3
,

10 
	}
};

12 
	gªc
 = 0, 
	glvl
 = 0;

14 
	$f0
(
n
, 
l
) {

15 i‡(
l
 > 
lvl
)Üvl =Ü;

16 
ªc
 ++;

17  
n
 <0 ? 1 : 
func
[3]“ / 3, 
l
 + 1);

18 
	}
};

20 
	$f1
(
n
, 
l
) {

21 i‡(
l
 > 
lvl
)Üvl =Ü;

22 
ªc
 ++;

23  
n
 <0 ? 1 : 
func
[0]“ - 1, 
l
 + 1);

24 
	}
};

26 
	$f2
(
n
, 
l
) {

27 i‡(
l
 > 
lvl
)Üvl =Ü;

28 
ªc
 ++;

29  
n
 <0 ? 1 : 
func
[1]“, 
l
 + 1) + 9;

30 
	}
};

32 
	$f3
(
n
, 
l
) {

33 i‡(
l
 > 
lvl
)Üvl =Ü;

34 
ªc
 ++;

35  
n
 <0 ? 1 : 
func
[2]“ / 2, 
l
 + 1) * 3 + func[2](n / 2,Ü + 1) * 2;

36 
	}
};

38 
	g™s
[] = {38270, 218, 20};

40 
	$maö
() {

41 
x
 = 
func
[0](14371, 0);

42 
	`check
(
x
 =
™s
[0]);

43 
	`check
(
ªc
 =
™s
[1]);

44 
	`check
(
lvl
 =
™s
[2]);

46 
	}
}

	@am-kernels/tests/cpu-tests/tests/select-sort.c

1 
	~"å≠.h
"

3 
	#N
 20

	)

5 
	ga
[
N
] = {2, 12, 14, 6, 13, 15, 16, 10, 0, 18, 11, 19, 9, 1, 7, 5, 4, 3, 8, 17};

7 
	$£À˘_s‹t
() {

8 
i
, 
j
, 
k
, 
t
;

9 
i
 = 0; i < 
N
 - 1; i ++) {

10 
k
 = 
i
;

11 
j
 = 
i
 + 1; j < 
N
; j ++) {

12 if(
a
[
j
] <á[
k
]) {

13 
k
 = 
j
;

17 
t
 = 
a
[
i
];

18 
a
[
i
] =á[
k
];

19 
a
[
k
] = 
t
;

21 
	}
}

23 
	$maö
() {

24 
	`£À˘_s‹t
();

26 
i
;

27 
i
 = 0; i < 
N
; i ++) {

28 
	`check
(
a
[
i
] == i);

31 
	`check
(
i
 =
N
);

33 
	`£À˘_s‹t
();

35 
i
 = 0; i < 
N
; i ++) {

36 
	`check
(
a
[
i
] == i);

39 
	`check
(
i
 =
N
);

42 
	}
}

	@am-kernels/tests/cpu-tests/tests/shift.c

1 
	~"å≠.h
"

3 
	gã°
[] = {

7 
	g§l_™s
[] = {

11 
	g§lv_™s
[] = {

15 
	g§av_™s
[] = {

20 
	$maö
() {

21 
i
;

23 
i
 = 0; i < 
	`LENGTH
(
ã°
); i ++) {

24 
	`check
((
ã°
[
i
] >> 7Ë=
§l_™s
[i]);

27 
i
 = 0; i < 
	`LENGTH
(
ã°
); i ++) {

28 
	`check
(()(()
ã°
[
i
] >> (ò+ 4)Ë=
§av_™s
[i]);

31 
i
 = 0; i < 
	`LENGTH
(
ã°
); i ++) {

32 
	`check
((
ã°
[
i
] >> (ò+ 4)Ë=
§lv_™s
[i]);

36 
	}
}

	@am-kernels/tests/cpu-tests/tests/shuixianhua.c

1 
	~"å≠.h
"

3 
	g™s
[] = {153, 370, 371, 407};

5 
	$cube
(
n
) {

6  
n
 *Ç *Ç;

7 
	}
}

9 
	$maö
() {

10 
n
, 
n2
, 
n1
, 
n0
;

11 
k
 = 0;

12 
n
 = 100;Ç < 500;Ç ++) {

13 
n2
 = 
n
 / 100;

14 
n1
 = (
n
 / 10) % 10;

15 
n0
 = 
n
 % 10;

17 if(
n
 =
	`cube
(
n2
Ë+ cube(
n1
Ë+ cube(
n0
)) {

18 
	`check
(
n
 =
™s
[
k
]);

19 
k
 ++;

23 
	`check
(
k
 == 4);

26 
	}
}

	@am-kernels/tests/cpu-tests/tests/string.c

1 
	~"å≠.h
"

3 *
	gs
[] = {

12 
	g°r1
[] = "Hello";

13 
	g°r
[20];

15 
	$maö
() {

16 
	`check
(
	`°rcmp
(
s
[0], s[2]) == 0);

17 
	`check
(
	`°rcmp
(
s
[0], s[1]) < 0);

18 
	`check
(
	`°rcmp
(
s
[0] + 1, s[1] + 1) < 0);

19 
	`check
(
	`°rcmp
(
s
[0] + 2, s[1] + 2) < 0);

20 
	`check
(
	`°rcmp
(
s
[0] + 3, s[1] + 3) < 0);

22 
	`check
(
	`°rcmp
–
	`°rˇt
(
	`°r˝y
(
°r
, 
°r1
), 
s
[3]), s[4]) == 0);

24 
	`check
(
	`memcmp
(
	`mem£t
(
°r
, '#', 5), 
s
[5], 5) == 0);

27 
	}
}

	@am-kernels/tests/cpu-tests/tests/sub-longlong.c

1 
	~"å≠.h
"

3 
	$sub
(
a
, 
b
) {

4 
c
 = 
a
 - 
b
;

5  
c
;

6 
	}
}

8 
	gã°_d©a
[] = {0, 1, 2, 0x7fffffffffffffffLL, 0x8000000000000000LL, 0x8000000000000001LL, 0xfffffffffffffffeLL, 0xffffffffffffffffLL};

9 
	g™s
[] = {0LL, 0xffffffffffffffffLL, 0xfffffffffffffffeLL, 0x8000000000000001LL, 0x8000000000000000LL, 0x7fffffffffffffffLL, 0x2LL, 0x1LL, 0x1LL, 0LL, 0xffffffffffffffffLL, 0x8000000000000002LL, 0x8000000000000001LL, 0x8000000000000000LL, 0x3LL, 0x2LL, 0x2LL, 0x1LL, 0LL, 0x8000000000000003LL, 0x8000000000000002LL, 0x8000000000000001LL, 0x4LL, 0x3LL, 0x7fffffffffffffffLL, 0x7ffffffffffffffeLL, 0x7ffffffffffffffdLL, 0LL, 0xffffffffffffffffLL, 0xfffffffffffffffeLL, 0x8000000000000001LL, 0x8000000000000000LL, 0x8000000000000000LL, 0x7fffffffffffffffLL, 0x7ffffffffffffffeLL, 0x1LL, 0LL, 0xffffffffffffffffLL, 0x8000000000000002LL, 0x8000000000000001LL, 0x8000000000000001LL, 0x8000000000000000LL, 0x7fffffffffffffffLL, 0x2LL, 0x1LL, 0LL, 0x8000000000000003LL, 0x8000000000000002LL, 0xfffffffffffffffeLL, 0xfffffffffffffffdLL, 0xfffffffffffffffcLL, 0x7fffffffffffffffLL, 0x7ffffffffffffffeLL, 0x7ffffffffffffffdLL, 0LL, 0xffffffffffffffffLL, 0xffffffffffffffffLL, 0xfffffffffffffffeLL, 0xfffffffffffffffdLL, 0x8000000000000000LL, 0x7fffffffffffffffLL, 0x7ffffffffffffffeLL, 0x1LL, 0LL};

11 
	#NR_DATA
 
	`LENGTH
(
ã°_d©a
)

	)

13 
	$maö
() {

14 
i
, 
j
, 
™s_idx
 = 0;

15 
i
 = 0; i < 
NR_DATA
; i ++) {

16 
j
 = 0; j < 
NR_DATA
; j ++) {

17 
	`check
(
	`sub
(
ã°_d©a
[
i
],Åe°_d©a[
j
]Ë=
™s
[
™s_idx
 ++]);

22 
	}
}

	@am-kernels/tests/cpu-tests/tests/sum.c

1 
	~"å≠.h
"

3 
	$maö
() {

4 
i
 = 1;

5 vﬁ©ûê
sum
 = 0;

6 
i
 <= 100) {

7 
sum
 +
i
;

8 
i
 ++;

11 
	`check
(
sum
 == 5050);

14 
	}
}

	@am-kernels/tests/cpu-tests/tests/switch.c

1 
	~"å≠.h
"

3 
	$swôch_ˇ£
(
n
) {

4 
ªt
;

5 
n
) {

6 0: 
ªt
 = 0; ;

7 1: 
ªt
 = 2; ;

8 2: 3: 
ªt
 = 5; ;

9 4: 5: 6: 7: 
ªt
 = 8; ;

10 8: 9: 10: 11: 
ªt
 = 10; ;

11 12: 
ªt
 = 15; ;

12 : 
ªt
 = -1; ;

15  
ªt
;

16 
	}
}

18 
	g™s
[] = {-1, 0, 2, 5, 5, 8, 8, 8, 8, 10, 10, 10, 10, 15, -1};

20 
	$maö
() {

21 
i
;

22 
i
 = 0; i < 15; i ++) {

23 
	`check
(
	`swôch_ˇ£
(
i
 - 1Ë=
™s
[i]);

26 
	`check
(
i
 == 15);

29 
	}
}

	@am-kernels/tests/cpu-tests/tests/to-lower-case.c

1 
	~"å≠.h
"

3 
	$to_lowî_ˇ£
(
c
) {

4  (
c
 >= 'A' && c <= 'Z' ? (c + 32) : c);

5 
	}
}

7 vﬁ©ûê
	g™s
 [] = {0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64,

11 
	$maö
() {

12 
i
;

13 
i
 = 0; i < 128; i ++) {

14 
	`check
(
	`to_lowî_ˇ£
(
i
Ë=
™s
[i]);

18 
	}
}

	@am-kernels/tests/cpu-tests/tests/unalign.c

1 
	~"å≠.h
"

3 vﬁ©ûê
	gx
 = 0xffffffff;

4 vﬁ©ûê
	gbuf
[16];

6 
	$maö
() {

8 
i
 = 0; i < 4; i++) {

9 *((vﬁ©ûê*)(
buf
 + 3)) = 0xaabbccdd;

11 
x
 = *((vﬁ©ûê*)(
buf
 + 3));

12 
	`check
(
x
 == 0xaabbccdd);

14 
buf
[0] = buf[1] = 0;

18 
	}
}

	@am-kernels/tests/cpu-tests/tests/wanshu.c

1 
	~"å≠.h
"

3 
	g™s
[] = {6, 28};

5 
	$maö
() {

6 
n
, 
sum
, 
i
, 
k
 = 0;

7 
n
 = 1;Ç < 30;Ç ++) {

8 
sum
 = 0;

9 
i
 = 1; i < 
n
; i ++) {

10 if(
n
 % 
i
 == 0) {

11 
sum
 +
i
;

15 if(
sum
 =
n
) {

16 
	`check
(
n
 =
™s
[
k
]);

17 
k
 ++;

21 
	`check
(
k
 == 2);

24 
	}
}

	@fceux-am/src/boards/01-222.cpp

38 
	~"m≠öc.h
"

40 
uöt8
 
	gªg
[4], 
	gcmd
, 
	gis172
, 
	gis173
;

41 
SFORMAT
 
	gSèãRegs
[] =

43 { 
ªg
, 4, "REGS" },

44 { &
cmd
, 1, "CMD" },

48 
	$Sync
() {

49 
	`£çrg32
(0x8000, (
ªg
[2] >> 2) & 1);

50 i‡(
is172
)

51 
	`£tchr8
((((
cmd
 ^ 
ªg
[2]) >> 3) & 2) | (((cmd ^Ñeg[2]) >> 5) & 1));

54 
	`£tchr8
(
ªg
[2] & 3);

55 
	}
}

57 
	$DECLFW
(
UNL22211WrôeLo
) {

59 
ªg
[
A
 & 3] = 
V
;

60 
	}
}

62 
	$DECLFW
(
UNL22211WrôeHi
) {

64 
cmd
 = 
V
;

65 
	`Sync
();

66 
	}
}

68 
	$DECLFR
(
UNL22211RódLo
) {

69  (
ªg
[1] ^Ñeg[2]Ë| (
is173
 ? 0x01 : 0x40);

74 
	}
}

76 
	$UNL22211Powî
() {

77 
	`Sync
();

78 
	`SëRódH™dÀr
(0x8000, 0xFFFF, 
C¨tBR
);

79 
	`SëRódH™dÀr
(0x4100, 0x4100, 
UNL22211RódLo
);

80 
	`SëWrôeH™dÀr
(0x4100, 0x4103, 
UNL22211WrôeLo
);

81 
	`SëWrôeH™dÀr
(0x8000, 0xFFFF, 
UNL22211WrôeHi
);

82 
	}
}

84 
	$SèãRe°‹e
(
vîsi⁄
) {

85 
	`Sync
();

86 
	}
}

88 
	$UNL22211_Inô
(
C¨tInfo
 *
öfo
) {

89 
is172
 = 0;

90 
is173
 = 0;

91 
öfo
->
Powî
 = 
UNL22211Powî
;

92 
GameSèãRe°‹e
 = 
SèãRe°‹e
;

93 
	`AddExSèã
(&
SèãRegs
, ~0, 0, 0);

94 
	}
}

96 
	$M≠≥r172_Inô
(
C¨tInfo
 *
öfo
) {

97 
is172
 = 1;

98 
is173
 = 0;

99 
öfo
->
Powî
 = 
UNL22211Powî
;

100 
GameSèãRe°‹e
 = 
SèãRe°‹e
;

101 
	`AddExSèã
(&
SèãRegs
, ~0, 0, 0);

102 
	}
}

104 
	$M≠≥r173_Inô
(
C¨tInfo
 *
öfo
) {

105 
is172
 = 0;

106 
is173
 = 1;

107 
öfo
->
Powî
 = 
UNL22211Powî
;

108 
GameSèãRe°‹e
 = 
SèãRe°‹e
;

109 
	`AddExSèã
(&
SèãRegs
, ~0, 0, 0);

110 
	}
}

	@fceux-am/src/boards/09-034a.cpp

33 
	~"m≠öc.h
"

35 
uöt8
 
	g¥g
;

36 
uöt32
 
	gIRQCou¡
, 
	gIRQa
;

38 
SFORMAT
 
	gSèãRegs
[] =

40 { &
IRQCou¡
, 4, "IRQC" },

41 { &
IRQa
, 4, "IRQA" },

42 { &
¥g
, 1, "PRG" },

46 
	$Sync
() {

47 
	`£çrg8r
(1, 0x6000, 
¥g
);

48 
	`£çrg32
(0x8000, 0);

49 
	`£tchr8
(0);

50 
	}
}

52 
	$DECLFW
(
UNLSMB2JWrôe1
) {

53 
¥g
 = 
V
 & 1;

54 
	`Sync
();

55 
	}
}

57 
	$DECLFW
(
UNLSMB2JWrôe2
) {

58 
IRQa
 = 
V
 & 1;

59 
IRQCou¡
 = 0;

60 
	`X6502_IRQEnd
(
FCEU_IQEXT
);

61 
	}
}

63 
	$DECLFR
(
UNLSMB2JRód
) {

65 
	}
}

67 
	$UNLSMB2JPowî
() {

68 
¥g
 = 0;

69 
	`Sync
();

70 
	`SëRódH™dÀr
(0x6000, 0xFFFF, 
C¨tBR
);

71 
	`SëRódH™dÀr
(0x4042, 0x4055, 
UNLSMB2JRód
);

72 
	`SëWrôeH™dÀr
(0x4068, 0x4068, 
UNLSMB2JWrôe2
);

73 
	`SëWrôeH™dÀr
(0x4027, 0x4027, 
UNLSMB2JWrôe1
);

74 
	}
}

76 
	$UNLSMB2JIRQHook
(
a
) {

77 i‡(
IRQa
)

79 i‡(
IRQCou¡
 < 5750)

80 
IRQCou¡
 +
a
;

82 
IRQa
 = 0;

83 
	`X6502_IRQBegö
(
FCEU_IQEXT
);

86 
	}
}

88 
	$SèãRe°‹e
(
vîsi⁄
) {

89 
	`Sync
();

90 
	}
}

92 
	$UNLSMB2J_Inô
(
C¨tInfo
 *
öfo
) {

93 
öfo
->
Powî
 = 
UNLSMB2JPowî
;

94 
M≠IRQHook
 = 
UNLSMB2JIRQHook
;

95 
GameSèãRe°‹e
 = 
SèãRe°‹e
;

96 
	`AddExSèã
(&
SèãRegs
, ~0, 0, 0);

97 
	}
}

	@fceux-am/src/boards/103.cpp

21 
	~"m≠öc.h
"

23 
uöt8
 
	gªg0
, 
	gªg1
, 
	gªg2
;

24 
uöt8
 *
	gWRAM
 = 
NULL
;

25 
uöt32
 
	gWRAMSIZE
;

27 
SFORMAT
 
	gSèãRegs
[] =

29 { &
ªg0
, 1, "REG0" },

30 { &
ªg1
, 1, "REG1" },

31 { &
ªg2
, 1, "REG2" },

35 
	$Sync
() {

36 
	`£tchr8
(0);

37 
	`£çrg8
(0x8000, 0xc);

38 
	`£çrg8
(0xe000, 0xf);

39 i‡(
ªg2
 & 0x10) {

40 
	`£çrg8
(0x6000, 
ªg0
);

41 
	`£çrg8
(0xa000, 0xd);

42 
	`£çrg8
(0xc000, 0xe);

44 
	`£çrg8r
(0x10, 0x6000, 0);

45 
	`£çrg4
(0xa000, (0xd << 1));

46 
	`£çrg2
(0xb000, (0xd << 2) + 2);

47 
	`£çrg2r
(0x10, 0xb800, 4);

48 
	`£çrg2r
(0x10, 0xc000, 5);

49 
	`£çrg2r
(0x10, 0xc800, 6);

50 
	`£çrg2r
(0x10, 0xd000, 7);

51 
	`£çrg2
(0xd800, (0xe << 2) + 3);

53 
	`£tmúr‹
(
ªg1
 ^ 1);

54 
	}
}

56 
	$DECLFW
(
M103RamWrôe0
) {

57 
WRAM
[
A
 & 0x1FFF] = 
V
;

58 
	}
}

60 
	$DECLFW
(
M103RamWrôe1
) {

61 
WRAM
[0x2000 + ((
A
 - 0xB800Ë& 0x1FFF)] = 
V
;

62 
	}
}

64 
	$DECLFW
(
M103Wrôe0
) {

65 
ªg0
 = 
V
 & 0xf;

66 
	`Sync
();

67 
	}
}

69 
	$DECLFW
(
M103Wrôe1
) {

70 
ªg1
 = (
V
 >> 3) & 1;

71 
	`Sync
();

72 
	}
}

74 
	$DECLFW
(
M103Wrôe2
) {

75 
ªg2
 = 
V
;

76 
	`Sync
();

77 
	}
}

79 
	$M103Powî
() {

80 
ªg0
 = 
ªg1
 = 0; 
ªg2
 = 0;

81 
	`Sync
();

82 
	`SëRódH™dÀr
(0x6000, 0x7FFF, 
C¨tBR
);

83 
	`SëWrôeH™dÀr
(0x6000, 0x7FFF, 
M103RamWrôe0
);

84 
	`SëRódH™dÀr
(0x8000, 0xFFFF, 
C¨tBR
);

85 
	`SëWrôeH™dÀr
(0xB800, 0xD7FF, 
M103RamWrôe1
);

86 
	`SëWrôeH™dÀr
(0x8000, 0x8FFF, 
M103Wrôe0
);

87 
	`SëWrôeH™dÀr
(0xE000, 0xEFFF, 
M103Wrôe1
);

88 
	`SëWrôeH™dÀr
(0xF000, 0xFFFF, 
M103Wrôe2
);

89 
	}
}

91 
	$M103Clo£
() {

92 i‡(
WRAM
)

93 
	`FCEU_g‰ì
(
WRAM
);

94 
WRAM
 = 
NULL
;

95 
	}
}

97 
	$SèãRe°‹e
(
vîsi⁄
) {

98 
	`Sync
();

99 
	}
}

101 
	$M≠≥r103_Inô
(
C¨tInfo
 *
öfo
) {

102 
öfo
->
Powî
 = 
M103Powî
;

103 
öfo
->
Clo£
 = 
M103Clo£
;

104 
GameSèãRe°‹e
 = 
SèãRe°‹e
;

106 
WRAMSIZE
 = 16384;

107 
WRAM
 = (
uöt8
*)
	`FCEU_gmÆloc
(
WRAMSIZE
);

108 
	`SëupC¨tPRGM≠pög
(0x10, 
WRAM
, 
WRAMSIZE
, 1);

109 
	`AddExSèã
(
WRAM
, 
WRAMSIZE
, 0, "WRAM");

111 
	`AddExSèã
(&
SèãRegs
, ~0, 0, 0);

112 
	}
}

	@fceux-am/src/boards/106.cpp

21 
	~"m≠öc.h
"

23 
uöt8
 
	gªg
[16], 
	gIRQa
;

24 
uöt32
 
	gIRQCou¡
;

25 
uöt8
 *
	gWRAM
 = 
NULL
;

26 
uöt32
 
	gWRAMSIZE
;

28 
SFORMAT
 
	gSèãRegs
[] =

30 { &
IRQa
, 1, "IRQA" },

31 { &
IRQCou¡
, 4, "IRQC" },

32 { 
ªg
, 16, "REGS" },

36 
	$Sync
() {

37 
	`£tchr1
(0x0000, 
ªg
[0] & 0xfe);

38 
	`£tchr1
(0x0400, 
ªg
[1] | 1);

39 
	`£tchr1
(0x0800, 
ªg
[2] & 0xfe);

40 
	`£tchr1
(0x0c00, 
ªg
[3] | 1);

41 
	`£tchr1
(0x1000, 
ªg
[4]);

42 
	`£tchr1
(0x1400, 
ªg
[5]);

43 
	`£tchr1
(0x1800, 
ªg
[6]);

44 
	`£tchr1
(0x1c00, 
ªg
[7]);

45 
	`£çrg8r
(0x10, 0x6000, 0);

46 
	`£çrg8
(0x8000, (
ªg
[0x8] & 0xf) | 0x10);

47 
	`£çrg8
(0xA000, (
ªg
[0x9] & 0x1f));

48 
	`£çrg8
(0xC000, (
ªg
[0xa] & 0x1f));

49 
	`£çrg8
(0xE000, (
ªg
[0xb] & 0xf) | 0x10);

50 
	`£tmúr‹
((
ªg
[0xc] & 1) ^ 1);

51 
	}
}

53 
	$DECLFW
(
M106Wrôe
) {

54 
A
 &= 0xF;

55 
A
) {

56 0xD: 
IRQa
 = 0; 
IRQCou¡
 = 0; 
	`X6502_IRQEnd
(
FCEU_IQEXT
); ;

57 0xE: 
IRQCou¡
 = (IRQCou¡ & 0xFF00Ë| 
V
; ;

58 0xF: 
IRQCou¡
 = (IRQCou¡ & 0x00FFË| (
V
 << 8); 
IRQa
 = 1; ;

59 : 
ªg
[
A
] = 
V
; 
	`Sync
(); ;

61 
	}
}

63 
	$M106Powî
() {

64 
ªg
[8] =Ñeg[9] =Ñeg[0xa] =Ñeg[0xb] = -1;

65 
	`Sync
();

66 
	`SëRódH™dÀr
(0x6000, 0x7FFF, 
C¨tBR
);

67 
	`SëRódH™dÀr
(0x8000, 0xFFFF, 
C¨tBR
);

68 
	`SëWrôeH™dÀr
(0x6000, 0x7FFF, 
C¨tBW
);

69 
	`SëWrôeH™dÀr
(0x8000, 0xFFFF, 
M106Wrôe
);

70 
	}
}

72 
	$M106Re£t
() {

73 
	}
}

75 
	$M106Clo£
() {

76 i‡(
WRAM
)

77 
	`FCEU_g‰ì
(
WRAM
);

78 
WRAM
 = 
NULL
;

79 
	}
}

81 
	$M106CpuHook
(
a
) {

82 i‡(
IRQa
) {

83 
IRQCou¡
 +
a
;

84 i‡(
IRQCou¡
 > 0x10000) {

85 
	`X6502_IRQBegö
(
FCEU_IQEXT
);

86 
IRQa
 = 0;

89 
	}
}

91 
	$SèãRe°‹e
(
vîsi⁄
) {

92 
	`Sync
();

93 
	}
}

95 
	$M≠≥r106_Inô
(
C¨tInfo
 *
öfo
) {

96 
öfo
->
Re£t
 = 
M106Re£t
;

97 
öfo
->
Powî
 = 
M106Powî
;

98 
öfo
->
Clo£
 = 
M106Clo£
;

99 
M≠IRQHook
 = 
M106CpuHook
;

100 
GameSèãRe°‹e
 = 
SèãRe°‹e
;

102 
WRAMSIZE
 = 8192;

103 
WRAM
 = (
uöt8
*)
	`FCEU_gmÆloc
(
WRAMSIZE
);

104 
	`SëupC¨tPRGM≠pög
(0x10, 
WRAM
, 
WRAMSIZE
, 1);

105 
	`AddExSèã
(
WRAM
, 
WRAMSIZE
, 0, "WRAM");

107 
	`AddExSèã
(&
SèãRegs
, ~0, 0, 0);

108 
	}
}

	@fceux-am/src/boards/108.cpp

21 
	~"m≠öc.h
"

23 
uöt8
 
	gªg
;

25 
SFORMAT
 
	gSèãRegs
[] =

27 { &
ªg
, 1, "REG" },

31 
	$Sync
() {

32 
	`£çrg8
(0x6000, 
ªg
);

33 
	`£çrg32
(0x8000, ~0);

34 
	`£tchr8
(0);

35 
	}
}

37 
	$DECLFW
(
M108Wrôe
) {

38 
ªg
 = 
V
;

39 
	`Sync
();

40 
	}
}

42 
	$M108Powî
() {

43 
	`Sync
();

44 
	`SëRódH™dÀr
(0x6000, 0x7FFF, 
C¨tBR
);

45 
	`SëRódH™dÀr
(0x8000, 0xFFFF, 
C¨tBR
);

46 
	`SëWrôeH™dÀr
(0x8000, 0x8FFF, 
M108Wrôe
);

47 
	`SëWrôeH™dÀr
(0xF000, 0xFFFF, 
M108Wrôe
);

48 
	}
}

50 
	$SèãRe°‹e
(
vîsi⁄
) {

51 
	`Sync
();

52 
	}
}

54 
	$M≠≥r108_Inô
(
C¨tInfo
 *
öfo
) {

55 
öfo
->
Powî
 = 
M108Powî
;

56 
GameSèãRe°‹e
 = 
SèãRe°‹e
;

57 
	`AddExSèã
(&
SèãRegs
, ~0, 0, 0);

58 
	}
}

	@fceux-am/src/boards/112.cpp

24 
	~"m≠öc.h
"

26 
uöt8
 
	gªg
[8];

27 
uöt8
 
	gmúr‹
, 
	gcmd
, 
	gb™k
;

28 
uöt8
 *
	gWRAM
 = 
NULL
;

30 
SFORMAT
 
	gSèãRegs
[] =

32 { &
cmd
, 1, "CMD" },

33 { &
múr‹
, 1, "MIRR" },

34 { &
b™k
, 1, "BANK" },

35 { 
ªg
, 8, "REGS" },

39 
	$Sync
() {

40 
	`£tmúr‹
(
múr‹
 ^ 1);

41 
	`£çrg8
(0x8000, 
ªg
[0]);

42 
	`£çrg8
(0xA000, 
ªg
[1]);

43 
	`£tchr2
(0x0000, (
ªg
[2] >> 1));

44 
	`£tchr2
(0x0800, (
ªg
[3] >> 1));

45 
	`£tchr1
(0x1000, ((
b™k
 & 0x10Ë<< 4Ë| 
ªg
[4]);

46 
	`£tchr1
(0x1400, ((
b™k
 & 0x20Ë<< 3Ë| 
ªg
[5]);

47 
	`£tchr1
(0x1800, ((
b™k
 & 0x40Ë<< 2Ë| 
ªg
[6]);

48 
	`£tchr1
(0x1C00, ((
b™k
 & 0x80Ë<< 1Ë| 
ªg
[7]);

49 
	}
}

51 
	$DECLFW
(
M112Wrôe
) {

52 
A
) {

53 0xe000: 
múr‹
 = 
V
 & 1; 
	`Sync
();; ;

54 0x8000: 
cmd
 = 
V
 & 7; ;

55 0xa000: 
ªg
[
cmd
] = 
V
; 
	`Sync
(); ;

56 0xc000: 
b™k
 = 
V
; 
	`Sync
(); ;

58 
	}
}

60 
	$M112Clo£
() {

61 i‡(
WRAM
)

62 
	`FCEU_g‰ì
(
WRAM
);

63 
WRAM
 = 
NULL
;

64 
	}
}

66 
	$M112Powî
() {

67 
b™k
 = 0;

68 
	`£çrg16
(0xC000, ~0);

69 
	`£çrg8r
(0x10, 0x6000, 0);

70 
	`SëRódH™dÀr
(0x8000, 0xFFFF, 
C¨tBR
);

71 
	`SëWrôeH™dÀr
(0x8000, 0xFFFF, 
M112Wrôe
);

72 
	`SëWrôeH™dÀr
(0x4020, 0x5FFF, 
M112Wrôe
);

73 
	`SëRódH™dÀr
(0x6000, 0x7FFF, 
C¨tBR
);

74 
	`SëWrôeH™dÀr
(0x6000, 0x7FFF, 
C¨tBW
);

75 
	`FCEU_ChótAddRAM
(8, 0x6000, 
WRAM
);

76 
	}
}

78 
	$SèãRe°‹e
(
vîsi⁄
) {

79 
	`Sync
();

80 
	}
}

82 
	$M≠≥r112_Inô
(
C¨tInfo
 *
öfo
) {

83 
öfo
->
Powî
 = 
M112Powî
;

84 
öfo
->
Clo£
 = 
M112Clo£
;

85 
GameSèãRe°‹e
 = 
SèãRe°‹e
;

86 
WRAM
 = (
uöt8
*)
	`FCEU_gmÆloc
(8192);

87 
	`SëupC¨tPRGM≠pög
(0x10, 
WRAM
, 8192, 1);

88 
	`AddExSèã
(
WRAM
, 8192, 0, "WRAM");

89 
	`AddExSèã
(&
SèãRegs
, ~0, 0, 0);

90 
	}
}

	@fceux-am/src/boards/116.cpp

36 
	~"m≠öc.h
"

38 
uöt8
 
	gmode
;

39 
uöt8
 
	gvrc2_chr
[8], 
	gvrc2_¥g
[2], 
	gvrc2_múr
;

40 
uöt8
 
	gmmc3_ªgs
[10], 
	gmmc3_˘æ
, 
	gmmc3_múr
;

41 
uöt8
 
	gIRQCou¡
, 
	gIRQL©ch
, 
	gIRQa
;

42 
uöt8
 
	gIRQRñﬂd
;

43 
uöt8
 
	gmmc1_ªgs
[4], 
	gmmc1_buf„r
, 
	gmmc1_shi·
;

45 
SFORMAT
 
	gSèãRegs
[] =

47 { &
mode
, 1, "MODE" },

48 { 
vrc2_chr
, 8, "VRCC" },

49 { 
vrc2_¥g
, 2, "VRCP" },

50 { &
vrc2_múr
, 1, "VRCM" },

51 { 
mmc3_ªgs
, 10, "M3RG" },

52 { &
mmc3_˘æ
, 1, "M3CT" },

53 { &
mmc3_múr
, 1, "M3MR" },

54 { &
IRQRñﬂd
, 1, "IRQR" },

55 { &
IRQCou¡
, 1, "IRQC" },

56 { &
IRQL©ch
, 1, "IRQL" },

57 { &
IRQa
, 1, "IRQA" },

58 { 
mmc1_ªgs
, 4, "M1RG" },

59 { &
mmc1_buf„r
, 1, "M1BF" },

60 { &
mmc1_shi·
, 1, "M1MR" },

64 
	$SyncPRG
() {

65 
mode
 & 3) {

67 
	`£çrg8
(0x8000, 
vrc2_¥g
[0]);

68 
	`£çrg8
(0xA000, 
vrc2_¥g
[1]);

69 
	`£çrg8
(0xC000, ~1);

70 
	`£çrg8
(0xE000, ~0);

74 
uöt32
 
sw≠
 = (
mmc3_˘æ
 >> 5) & 2;

75 
	`£çrg8
(0x8000, 
mmc3_ªgs
[6 + 
sw≠
]);

76 
	`£çrg8
(0xA000, 
mmc3_ªgs
[7]);

77 
	`£çrg8
(0xC000, 
mmc3_ªgs
[6 + (
sw≠
 ^ 2)]);

78 
	`£çrg8
(0xE000, 
mmc3_ªgs
[9]);

84 
uöt8
 
b™k
 = 
mmc1_ªgs
[3] & 0xF;

85 i‡(
mmc1_ªgs
[0] & 8) {

86 i‡(
mmc1_ªgs
[0] & 4) {

87 
	`£çrg16
(0x8000, 
b™k
);

88 
	`£çrg16
(0xC000, 0x0F);

90 
	`£çrg16
(0x8000, 0);

91 
	`£çrg16
(0xC000, 
b™k
);

94 
	`£çrg32
(0x8000, 
b™k
 >> 1);

98 
	}
}

100 
	$SyncCHR
() {

101 
uöt32
 
ba£
 = (
mode
 & 4) << 6;

102 
mode
 & 3) {

104 
	`£tchr1
(0x0000, 
ba£
 | 
vrc2_chr
[0]);

105 
	`£tchr1
(0x0400, 
ba£
 | 
vrc2_chr
[1]);

106 
	`£tchr1
(0x0800, 
ba£
 | 
vrc2_chr
[2]);

107 
	`£tchr1
(0x0c00, 
ba£
 | 
vrc2_chr
[3]);

108 
	`£tchr1
(0x1000, 
ba£
 | 
vrc2_chr
[4]);

109 
	`£tchr1
(0x1400, 
ba£
 | 
vrc2_chr
[5]);

110 
	`£tchr1
(0x1800, 
ba£
 | 
vrc2_chr
[6]);

111 
	`£tchr1
(0x1c00, 
ba£
 | 
vrc2_chr
[7]);

114 
uöt32
 
sw≠
 = (
mmc3_˘æ
 & 0x80) << 5;

115 
	`£tchr1
(0x0000 ^ 
sw≠
, 
ba£
 | ((
mmc3_ªgs
[0]) & 0xFE));

116 
	`£tchr1
(0x0400 ^ 
sw≠
, 
ba£
 | (
mmc3_ªgs
[0] | 1));

117 
	`£tchr1
(0x0800 ^ 
sw≠
, 
ba£
 | ((
mmc3_ªgs
[1]) & 0xFE));

118 
	`£tchr1
(0x0c00 ^ 
sw≠
, 
ba£
 | (
mmc3_ªgs
[1] | 1));

119 
	`£tchr1
(0x1000 ^ 
sw≠
, 
ba£
 | 
mmc3_ªgs
[2]);

120 
	`£tchr1
(0x1400 ^ 
sw≠
, 
ba£
 | 
mmc3_ªgs
[3]);

121 
	`£tchr1
(0x1800 ^ 
sw≠
, 
ba£
 | 
mmc3_ªgs
[4]);

122 
	`£tchr1
(0x1c00 ^ 
sw≠
, 
ba£
 | 
mmc3_ªgs
[5]);

127 i‡(
mmc1_ªgs
[0] & 0x10) {

128 
	`£tchr4
(0x0000, 
mmc1_ªgs
[1]);

129 
	`£tchr4
(0x1000, 
mmc1_ªgs
[2]);

131 
	`£tchr8
(
mmc1_ªgs
[1] >> 1);

134 
	}
}

136 
	$SyncMIR
() {

137 
mode
 & 3) {

139 
	`£tmúr‹
((
vrc2_múr
 & 1) ^ 1);

143 
	`£tmúr‹
((
mmc3_múr
 & 1) ^ 1);

148 
mmc1_ªgs
[0] & 3) {

149 0: 
	`£tmúr‹
(
MI_0
); ;

150 1: 
	`£tmúr‹
(
MI_1
); ;

151 2: 
	`£tmúr‹
(
MI_V
); ;

152 3: 
	`£tmúr‹
(
MI_H
); ;

157 
	}
}

159 
	$Sync
() {

160 
	`SyncPRG
();

161 
	`SyncCHR
();

162 
	`SyncMIR
();

163 
	}
}

165 
	$DECLFW
(
UNLSL12ModeWrôe
) {

167 i‡((
A
 & 0x4100) == 0x4100) {

168 
mode
 = 
V
;

169 i‡(
A
 & 1) {

175 
mmc1_ªgs
[0] = 0xc;

176 
mmc1_ªgs
[3] = 0;

177 
mmc1_buf„r
 = 0;

178 
mmc1_shi·
 = 0;

180 
	`Sync
();

182 
	}
}

184 
	$DECLFW
(
UNLSL12Wrôe
) {

186 
mode
 & 3) {

188 i‡((
A
 >= 0xB000) && (A <= 0xE003)) {

189 
öt32
 
öd
 = ((((
A
 & 2) | (A >> 10)) >> 1) + 2) & 7;

190 
öt32
 
ßr
 = ((
A
 & 1) << 2);

191 
vrc2_chr
[
öd
] = (vrc2_chr[öd] & (0xF0 >> 
ßr
)Ë| ((
V
 & 0x0F) << sar);

192 
	`SyncCHR
();

194 
A
 & 0xF000) {

195 0x8000: 
vrc2_¥g
[0] = 
V
; 
	`SyncPRG
(); ;

196 0xA000: 
vrc2_¥g
[1] = 
V
; 
	`SyncPRG
(); ;

197 0x9000: 
vrc2_múr
 = 
V
; 
	`SyncMIR
(); ;

202 
A
 & 0xE001) {

204 
uöt8
 
ﬁd_˘æ
 = 
mmc3_˘æ
;

205 
mmc3_˘æ
 = 
V
;

206 i‡((
ﬁd_˘æ
 & 0x40Ë!(
mmc3_˘æ
 & 0x40))

207 
	`SyncPRG
();

208 i‡((
ﬁd_˘æ
 & 0x80Ë!(
mmc3_˘æ
 & 0x80))

209 
	`SyncCHR
();

213 
mmc3_ªgs
[
mmc3_˘æ
 & 7] = 
V
;

214 i‡((
mmc3_˘æ
 & 7) < 6)

215 
	`SyncCHR
();

217 
	`SyncPRG
();

220 
mmc3_múr
 = 
V
;

221 
	`SyncMIR
();

224 
IRQL©ch
 = 
V
;

227 
IRQRñﬂd
 = 1;

230 
	`X6502_IRQEnd
(
FCEU_IQEXT
);

231 
IRQa
 = 0;

234 
IRQa
 = 1;

241 i‡(
V
 & 0x80) {

242 
mmc1_ªgs
[0] |= 0xc;

243 
mmc1_buf„r
 = 
mmc1_shi·
 = 0;

244 
	`SyncPRG
();

246 
uöt8
 
n
 = (
A
 >> 13) - 4;

247 
mmc1_buf„r
 |(
V
 & 1Ë<< (
mmc1_shi·
++);

248 i‡(
mmc1_shi·
 == 5) {

249 
mmc1_ªgs
[
n
] = 
mmc1_buf„r
;

250 
mmc1_buf„r
 = 
mmc1_shi·
 = 0;

251 
n
) {

252 0: 
	`SyncMIR
();

253 2: 
	`SyncCHR
();

255 1: 
	`SyncPRG
();

262 
	}
}

264 
	$UNLSL12HBIRQ
() {

265 i‡((
mode
 & 3) == 1) {

266 
öt32
 
cou¡
 = 
IRQCou¡
;

267 i‡(!
cou¡
 || 
IRQRñﬂd
) {

268 
IRQCou¡
 = 
IRQL©ch
;

269 
IRQRñﬂd
 = 0;

271 
IRQCou¡
--;

272 i‡(!
IRQCou¡
) {

273 i‡(
IRQa
)

274 
	`X6502_IRQBegö
(
FCEU_IQEXT
);

277 
	}
}

279 
	$SèãRe°‹e
(
vîsi⁄
) {

280 
	`Sync
();

281 
	}
}

283 
	$UNLSL12Powî
() {

284 
mode
 = 0;

285 
vrc2_chr
[0] = ~0;

286 
vrc2_chr
[1] = ~0;

287 
vrc2_chr
[2] = ~0;

288 
vrc2_chr
[3] = ~0;

289 
vrc2_chr
[4] = 4;

290 
vrc2_chr
[5] = 5;

291 
vrc2_chr
[6] = 6;

292 
vrc2_chr
[7] = 7;

293 
vrc2_¥g
[0] = 0;

294 
vrc2_¥g
[1] = 1;

295 
vrc2_múr
 = 0;

296 
mmc3_ªgs
[0] = 0;

297 
mmc3_ªgs
[1] = 2;

298 
mmc3_ªgs
[2] = 4;

299 
mmc3_ªgs
[3] = 5;

300 
mmc3_ªgs
[4] = 6;

301 
mmc3_ªgs
[5] = 7;

302 
mmc3_ªgs
[6] = ~3;

303 
mmc3_ªgs
[7] = ~2;

304 
mmc3_ªgs
[8] = ~1;

305 
mmc3_ªgs
[9] = ~0;

306 
mmc3_˘æ
 = 
mmc3_múr
 = 
IRQCou¡
 = 
IRQL©ch
 = 
IRQa
 = 0;

307 
mmc1_ªgs
[0] = 0xc;

308 
mmc1_ªgs
[1] = 0;

309 
mmc1_ªgs
[2] = 0;

310 
mmc1_ªgs
[3] = 0;

311 
mmc1_buf„r
 = 0;

312 
mmc1_shi·
 = 0;

313 
	`Sync
();

314 
	`SëRódH™dÀr
(0x8000, 0xFFFF, 
C¨tBR
);

315 
	`SëWrôeH™dÀr
(0x4100, 0x7FFF, 
UNLSL12ModeWrôe
);

316 
	`SëWrôeH™dÀr
(0x8000, 0xFFFF, 
UNLSL12Wrôe
);

317 
	}
}

319 
	$UNLSL12_Inô
(
C¨tInfo
 *
öfo
) {

320 
öfo
->
Powî
 = 
UNLSL12Powî
;

321 
GameHBIRQHook
 = 
UNLSL12HBIRQ
;

322 
GameSèãRe°‹e
 = 
SèãRe°‹e
;

323 
	`AddExSèã
(&
SèãRegs
, ~0, 0, 0);

324 
	}
}

	@fceux-am/src/boards/117.cpp

21 
	~"m≠öc.h
"

23 
uöt8
 
	g¥gªg
[4], 
	gchºeg
[8], 
	gmúr‹
;

24 
uöt8
 
	gIRQa
, 
	gIRQCou¡
, 
	gIRQL©ch
;

26 
SFORMAT
 
	gSèãRegs
[] =

28 { &
IRQa
, 1, "IRQA" },

29 { &
IRQCou¡
, 1, "IRQC" },

30 { &
IRQL©ch
, 1, "IRQL" },

31 { 
¥gªg
, 4, "PREG" },

32 { 
chºeg
, 8, "CREG" },

33 { &
múr‹
, 1, "MREG" },

37 
	$Sync
() {

38 
	`£çrg8
(0x8000, 
¥gªg
[0]);

39 
	`£çrg8
(0xa000, 
¥gªg
[1]);

40 
	`£çrg8
(0xc000, 
¥gªg
[2]);

41 
	`£çrg8
(0xe000, 
¥gªg
[3]);

42 
i
;

43 
i
 = 0; i < 8; i++)

44 
	`£tchr1
(
i
 << 10, 
chºeg
[i]);

45 
	`£tmúr‹
(
múr‹
 ^ 1);

46 
	}
}

48 
	$DECLFW
(
M117Wrôe
) {

49 i‡(
A
 < 0x8004) {

50 
¥gªg
[
A
 & 3] = 
V
;

51 
	`Sync
();

52 } i‡((
A
 >= 0xA000) && (A <= 0xA007)) {

53 
chºeg
[
A
 & 7] = 
V
;

54 
	`Sync
();

55 } 
A
) {

56 0xc001: 
IRQL©ch
 = 
V
; ;

57 0xc003: 
IRQCou¡
 = 
IRQL©ch
; 
IRQa
 |= 2; ;

58 0xe000: 
IRQa
 &~1; IRQ®|
V
 & 1; 
	`X6502_IRQEnd
(
FCEU_IQEXT
); ;

59 0xc002: 
	`X6502_IRQEnd
(
FCEU_IQEXT
); ;

60 0xd000: 
múr‹
 = 
V
 & 1;

62 
	}
}

64 
	$M117Powî
() {

65 
¥gªg
[0] = ~3;Örgreg[1] = ~2;Örgreg[2] = ~1;Örgreg[3] = ~0;

66 
	`Sync
();

67 
	`SëRódH™dÀr
(0x8000, 0xFFFF, 
C¨tBR
);

68 
	`SëWrôeH™dÀr
(0x8000, 0xFFFF, 
M117Wrôe
);

69 
	}
}

71 
	$M117IRQHook
() {

72 i‡(
IRQa
 =3 && 
IRQCou¡
) {

73 
IRQCou¡
--;

74 i‡(!
IRQCou¡
) {

75 
IRQa
 &= 1;

76 
	`X6502_IRQBegö
(
FCEU_IQEXT
);

79 
	}
}

81 
	$SèãRe°‹e
(
vîsi⁄
) {

82 
	`Sync
();

83 
	}
}

85 
	$M≠≥r117_Inô
(
C¨tInfo
 *
öfo
) {

86 
öfo
->
Powî
 = 
M117Powî
;

87 
GameHBIRQHook
 = 
M117IRQHook
;

88 
GameSèãRe°‹e
 = 
SèãRe°‹e
;

89 
	`AddExSèã
(&
SèãRegs
, ~0, 0, 0);

90 
	}
}

	@fceux-am/src/boards/120.cpp

21 
	~"m≠öc.h
"

23 
uöt8
 
	gªg
;

25 
SFORMAT
 
	gSèãRegs
[] =

27 { &
ªg
, 1, "REG" },

31 
	$Sync
() {

32 
	`£çrg8
(0x6000, 
ªg
);

33 
	`£çrg32
(0x8000, 2);

34 
	`£tchr8
(0);

35 
	}
}

37 
	$DECLFW
(
M120Wrôe
) {

38 i‡(
A
 == 0x41FF) {

39 
ªg
 = 
V
 & 7;

40 
	`Sync
();

42 
	}
}

44 
	$M120Powî
() {

45 
ªg
 = 0;

46 
	`Sync
();

47 
	`SëRódH™dÀr
(0x6000, 0xFFFF, 
C¨tBR
);

48 
	`SëWrôeH™dÀr
(0x4100, 0x5FFF, 
M120Wrôe
);

49 
	}
}

51 
	$SèãRe°‹e
(
vîsi⁄
) {

52 
	`Sync
();

53 
	}
}

55 
	$M≠≥r120_Inô
(
C¨tInfo
 *
öfo
) {

56 
öfo
->
Powî
 = 
M120Powî
;

57 
GameSèãRe°‹e
 = 
SèãRe°‹e
;

58 
	`AddExSèã
(&
SèãRegs
, ~0, 0, 0);

59 
	}
}

	@fceux-am/src/boards/121.cpp

28 
	~"m≠öc.h
"

29 
	~"mmc3.h
"

31 
	$Sync
() {

32 
EXPREGS
[5] & 0x3F) {

33 0x20: 
EXPREGS
[7] = 1; EXPREGS[0] = EXPREGS[6]; ;

34 0x29: 
EXPREGS
[7] = 1; EXPREGS[0] = EXPREGS[6]; ;

35 0x26: 
EXPREGS
[7] = 0; EXPREGS[0] = EXPREGS[6]; ;

36 0x2B: 
EXPREGS
[7] = 1; EXPREGS[0] = EXPREGS[6]; ;

37 0x2C: 
EXPREGS
[7] = 1; if (EXPREGS[6]) EXPREGS[0] = EXPREGS[6]; ;

39 0x3F: 
EXPREGS
[7] = 1; EXPREGS[0] = EXPREGS[6]; ;

40 0x28: 
EXPREGS
[7] = 0; EXPREGS[1] = EXPREGS[6]; ;

41 0x2A: 
EXPREGS
[7] = 0; EXPREGS[2] = EXPREGS[6]; ;

43 : 
EXPREGS
[5] = 0; ;

45 
	}
}

47 
	$M121CW
(
uöt32
 
A
, 
uöt8
 
V
) {

48 i‡(
PRGsize
[0] =
CHRsize
[0]) {

49 
	`£tchr1
(
A
, 
V
 | ((
EXPREGS
[3] & 0x80) << 1));

51 i‡((
A
 & 0x1000Ë=((
MMC3_cmd
 & 0x80) << 5))

52 
	`£tchr1
(
A
, 
V
 | 0x100);

54 
	`£tchr1
(
A
, 
V
);

56 
	}
}

58 
	$M121PW
(
uöt32
 
A
, 
uöt8
 
V
) {

59 i‡(
EXPREGS
[5] & 0x3F) {

61 
	`£çrg8
(
A
, (
V
 & 0x1FË| ((
EXPREGS
[3] & 0x80) >> 2));

62 
	`£çrg8
(0xE000, (
EXPREGS
[0]) | ((EXPREGS[3] & 0x80) >> 2));

63 
	`£çrg8
(0xC000, (
EXPREGS
[1]) | ((EXPREGS[3] & 0x80) >> 2));

64 
	`£çrg8
(0xA000, (
EXPREGS
[2]) | ((EXPREGS[3] & 0x80) >> 2));

67 
	`£çrg8
(
A
, (
V
 & 0x1FË| ((
EXPREGS
[3] & 0x80) >> 2));

69 
	}
}

71 
	$DECLFW
(
M121Wrôe
) {

73 
A
 & 0xE003) {

77 
	`MMC3_CMDWrôe
(
A
, 
V
);

78 
	`FixMMC3PRG
(
MMC3_cmd
);

81 
EXPREGS
[6] = ((
V
 & 1) << 5) | ((V & 2) << 3) | ((V & 4) << 1) | ((V & 8) >> 1) | ((V & 0x10) >> 3) | ((V & 0x20) >> 5);

83 i‡(!
EXPREGS
[7]Ë
	`Sync
();

84 
	`MMC3_CMDWrôe
(
A
, 
V
);

85 
	`FixMMC3PRG
(
MMC3_cmd
);

88 
EXPREGS
[5] = 
V
;

91 
	`Sync
();

92 
	`MMC3_CMDWrôe
(0x8000, 
V
);

93 
	`FixMMC3PRG
(
MMC3_cmd
);

96 
	}
}

98 
uöt8
 
	g¥Ÿ_¨øy
[16] = { 0x83, 0x83, 0x42, 0x00 };

99 
	$DECLFW
(
M121LoWrôe
) {

100 
EXPREGS
[4] = 
¥Ÿ_¨øy
[
V
 & 3];

101 i‡((
A
 & 0x5180) == 0x5180) {

102 
EXPREGS
[3] = 
V
;

103 
	`FixMMC3PRG
(
MMC3_cmd
);

104 
	`FixMMC3CHR
(
MMC3_cmd
);

107 
	}
}

109 
	$DECLFR
(
M121Ród
) {

111  
EXPREGS
[4];

112 
	}
}

114 
	$M121Powî
() {

115 
EXPREGS
[3] = 0x80;

116 
EXPREGS
[5] = 0;

117 
	`GíMMC3Powî
();

118 
	`SëRódH™dÀr
(0x5000, 0x5FFF, 
M121Ród
);

119 
	`SëWrôeH™dÀr
(0x5000, 0x5FFF, 
M121LoWrôe
);

120 
	`SëWrôeH™dÀr
(0x8000, 0x9FFF, 
M121Wrôe
);

121 
	}
}

123 
	$M≠≥r121_Inô
(
C¨tInfo
 *
öfo
) {

124 
	`GíMMC3_Inô
(
öfo
, 128, 256, 8, 0);

125 
pwøp
 = 
M121PW
;

126 
cwøp
 = 
M121CW
;

127 
öfo
->
Powî
 = 
M121Powî
;

128 
	`AddExSèã
(
EXPREGS
, 8, 0, "EXPR");

129 
	}
}

	@fceux-am/src/boards/12in1.cpp

25 
	~"m≠öc.h
"

27 
uöt8
 
	g¥gchr
[2], 
	g˘æ
;

28 
SFORMAT
 
	gSèãRegs
[] =

30 { 
¥gchr
, 2, "REGS" },

31 { &
˘æ
, 1, "CTRL" },

35 
	$Sync
() {

36 
uöt8
 
b™k
 = (
˘æ
 & 3) << 3;

37 
	`£tchr4
(0x0000, (
¥gchr
[0] >> 3Ë| (
b™k
 << 2));

38 
	`£tchr4
(0x1000, (
¥gchr
[1] >> 3Ë| (
b™k
 << 2));

39 i‡(
˘æ
 & 8) {

40 
	`£çrg16
(0x8000, 
b™k
 | (
¥gchr
[0] & 6) | 0);

41 
	`£çrg16
(0xc000, 
b™k
 | (
¥gchr
[0] & 6) | 1);

43 
	`£çrg16
(0x8000, 
b™k
 | (
¥gchr
[0] & 7));

44 
	`£çrg16
(0xc000, 
b™k
 | 7 );

46 
	`£tmúr‹
(((
˘æ
 & 4) >> 2) ^ 1);

47 
	}
}

49 
	$DECLFW
(
BMC12IN1Wrôe
) {

50 
A
 & 0xE000) {

51 0xA000: 
¥gchr
[0] = 
V
; 
	`Sync
(); ;

52 0xC000: 
¥gchr
[1] = 
V
; 
	`Sync
(); ;

53 0xE000: 
˘æ
 = 
V
 & 0x0F; 
	`Sync
(); ;

55 
	}
}

57 
	$BMC12IN1Powî
() {

58 
¥gchr
[0] =Örgchr[1] = 
˘æ
 = 0;

59 
	`Sync
();

60 
	`SëRódH™dÀr
(0x8000, 0xFFFF, 
C¨tBR
);

61 
	`SëWrôeH™dÀr
(0x8000, 0xFFFF, 
BMC12IN1Wrôe
);

62 
	}
}

64 
	$SèãRe°‹e
(
vîsi⁄
) {

65 
	`Sync
();

66 
	}
}

68 
	$BMC12IN1_Inô
(
C¨tInfo
 *
öfo
) {

69 
öfo
->
Powî
 = 
BMC12IN1Powî
;

70 
GameSèãRe°‹e
 = 
SèãRe°‹e
;

71 
	`AddExSèã
(&
SèãRegs
, ~0, 0, 0);

72 
	}
}

	@fceux-am/src/boards/15.cpp

22 
	~"m≠öc.h
"

24 
uöt16
 
	gœtchó
;

25 
uöt8
 
	gœtched
;

26 
uöt8
 *
	gWRAM
 = 
NULL
;

27 
uöt32
 
	gWRAMSIZE
;

28 
SFORMAT
 
	gSèãRegs
[] =

30 { &
œtchó
, 2, "AREG" },

31 { &
œtched
, 1, "DREG" },

35 
	$Sync
() {

36 
i
;

37 
	`£tmúr‹
(((
œtched
 >> 6) & 1) ^ 1);

38 
œtchó
 & 3) {

40 
i
 = 0; i < 4; i++)

41 
	`£çrg8
(0x8000 + (
i
 << 13), ((
œtched
 & 0x3F) << 1) + i);

44 
i
 = 0; i < 4; i++)

45 
	`£çrg8
(0x8000 + (
i
 << 13), ((
œtched
 & 0x3F) << 1) + (latched >> 7));

49 
i
 = 0; i < 4; i++) {

50 
b
;

51 
b
 = 
œtched
 & 0x3F;

52 i‡(
i
 >2 && !(
œtchó
 & 0x2))

53 
b
 = b | 0x07;

54 
	`£çrg8
(0x8000 + (
i
 << 13), (ò& 1Ë+ (
b
 << 1));

58 
	`£tchr8
(0);

59 
	}
}

61 
	$DECLFW
(
M15Wrôe
) {

62 
œtchó
 = 
A
;

63 
œtched
 = 
V
;

67 if((
œtchó
 & 3) == 3)

68 
	`SëupC¨tCHRM≠pög
(0, 
CHR±r
[0], 0x2000, 0);

70 
	`SëupC¨tCHRM≠pög
(0, 
CHR±r
[0], 0x2000, 1);

71 
	`Sync
();

72 
	}
}

74 
	$SèãRe°‹e
(
vîsi⁄
) {

75 
	`Sync
();

76 
	}
}

78 
	$M15Powî
() {

79 
œtchó
 = 0x8000;

80 
œtched
 = 0;

81 
	`£çrg8r
(0x10, 0x6000, 0);

82 
	`SëRódH™dÀr
(0x6000, 0x7FFF, 
C¨tBR
);

83 
	`SëWrôeH™dÀr
(0x6000, 0x7FFF, 
C¨tBW
);

84 
	`SëWrôeH™dÀr
(0x8000, 0xFFFF, 
M15Wrôe
);

85 
	`SëRódH™dÀr
(0x8000, 0xFFFF, 
C¨tBR
);

86 
	`FCEU_ChótAddRAM
(
WRAMSIZE
 >> 10, 0x6000, 
WRAM
);

87 
	`Sync
();

88 
	}
}

90 
	$M15Re£t
() {

91 
œtchó
 = 0x8000;

92 
œtched
 = 0;

93 
	`Sync
();

94 
	}
}

96 
	$M15Clo£
() {

97 i‡(
WRAM
)

98 
	`FCEU_g‰ì
(
WRAM
);

99 
WRAM
 = 
NULL
;

100 
	}
}

102 
	$M≠≥r15_Inô
(
C¨tInfo
 *
öfo
) {

103 
öfo
->
Powî
 = 
M15Powî
;

104 
öfo
->
Re£t
 = 
M15Re£t
;

105 
öfo
->
Clo£
 = 
M15Clo£
;

106 
GameSèãRe°‹e
 = 
SèãRe°‹e
;

107 
WRAMSIZE
 = 8192;

108 
WRAM
 = (
uöt8
*)
	`FCEU_gmÆloc
(
WRAMSIZE
);

109 
	`SëupC¨tPRGM≠pög
(0x10, 
WRAM
, 
WRAMSIZE
, 1);

110 i‡(
öfo
->
b©ãry
) {

111 
öfo
->
SaveGame
[0] = 
WRAM
;

112 
öfo
->
SaveGameLí
[0] = 
WRAMSIZE
;

114 
	`AddExSèã
(
WRAM
, 
WRAMSIZE
, 0, "WRAM");

115 
	`AddExSèã
(&
SèãRegs
, ~0, 0, 0);

116 
	}
}

	@fceux-am/src/boards/151.cpp

21 
	~"m≠öc.h
"

23 
uöt8
 
	gªgs
[8];

25 
SFORMAT
 
	gSèãRegs
[] =

27 { 
ªgs
, 8, "REGS" },

31 
	$Sync
() {

32 
	`£çrg8
(0x8000, 
ªgs
[0]);

33 
	`£çrg8
(0xA000, 
ªgs
[2]);

34 
	`£çrg8
(0xC000, 
ªgs
[4]);

35 
	`£çrg8
(0xE000, ~0);

36 
	`£tchr4
(0x0000, 
ªgs
[6]);

37 
	`£tchr4
(0x1000, 
ªgs
[7]);

38 
	}
}

40 
	$DECLFW
(
M151Wrôe
) {

41 
ªgs
[(
A
 >> 12Ë& 7] = 
V
;

42 
	`Sync
();

43 
	}
}

45 
	$M151Powî
() {

46 
	`Sync
();

47 
	`SëRódH™dÀr
(0x8000, 0xFFFF, 
C¨tBR
);

48 
	`SëWrôeH™dÀr
(0x8000, 0xFFFF, 
M151Wrôe
);

49 
	}
}

51 
	$SèãRe°‹e
(
vîsi⁄
) {

52 
	`Sync
();

53 
	}
}

55 
	$M≠≥r151_Inô
(
C¨tInfo
 *
öfo
) {

56 
öfo
->
Powî
 = 
M151Powî
;

57 
GameSèãRe°‹e
 = 
SèãRe°‹e
;

58 
	`AddExSèã
(&
SèãRegs
, ~0, 0, 0);

59 
	}
}

	@fceux-am/src/boards/156.cpp

21 
	~"m≠öc.h
"

23 
uöt8
 
	gchæo
[8], 
	gchrhi
[8], 
	g¥g
, 
	gmúr
, 
	gmúrisu£d
 = 0;

24 
uöt8
 *
	gWRAM
 = 
NULL
;

25 
uöt32
 
	gWRAMSIZE
;

27 
SFORMAT
 
	gSèãRegs
[] =

29 { &
¥g
, 1, "PREG" },

30 { 
chæo
, 8, "CRGL" },

31 { 
chrhi
, 8, "CRGH" },

32 { &
múr
, 1, "MIRR" },

36 
	$Sync
() {

37 
uöt32
 
i
;

38 
i
 = 0; i < 8; i++)

39 
	`£tchr1
(
i
 << 10, 
chæo
[i] | (
chrhi
[i] << 8));

40 
	`£çrg8r
(0x10, 0x6000, 0);

41 
	`£çrg16
(0x8000, 
¥g
);

42 
	`£çrg16
(0xC000, ~0);

43 i‡(
múrisu£d
)

44 
	`£tmúr‹
(
múr
 ^ 1);

46 
	`£tmúr‹
(
MI_0
);

47 
	}
}

49 
	$DECLFW
(
M156Wrôe
) {

50 
A
) {

54 0xC003: 
chæo
[
A
 & 3] = 
V
; 
	`Sync
(); ;

58 0xC007: 
chrhi
[
A
 & 3] = 
V
; 
	`Sync
(); ;

62 0xC00B: 
chæo
[4 + (
A
 & 3)] = 
V
; 
	`Sync
(); ;

66 0xC00F: 
chrhi
[4 + (
A
 & 3)] = 
V
; 
	`Sync
(); ;

67 0xC010: 
¥g
 = 
V
; 
	`Sync
(); ;

68 0xC014: 
múr
 = 
V
; 
múrisu£d
 = 1; 
	`Sync
(); ;

70 
	}
}

72 
	$M156Re£t
() {

73 
uöt32
 
i
;

74 
i
 = 0; i < 8; i++) {

75 
chæo
[
i
] = 0;

76 
chrhi
[
i
] = 0;

78 
¥g
 = 0;

79 
múr
 = 0;

80 
múrisu£d
 = 0;

81 
	}
}

83 
	$M156Powî
() {

84 
	`M156Re£t
();

85 
	`Sync
();

86 
	`SëRódH™dÀr
(0x6000, 0xFFFF, 
C¨tBR
);

87 
	`SëWrôeH™dÀr
(0x6000, 0x7FFF, 
C¨tBW
);

88 
	`SëWrôeH™dÀr
(0xC000, 0xCFFF, 
M156Wrôe
);

89 
	`FCEU_ChótAddRAM
(
WRAMSIZE
 >> 10, 0x6000, 
WRAM
);

90 
	}
}

92 
	$M156Clo£
() {

93 i‡(
WRAM
)

94 
	`FCEU_g‰ì
(
WRAM
);

95 
WRAM
 = 
NULL
;

96 
	}
}

98 
	$SèãRe°‹e
(
vîsi⁄
) {

99 
	`Sync
();

100 
	}
}

102 
	$M≠≥r156_Inô
(
C¨tInfo
 *
öfo
) {

103 
öfo
->
Re£t
 = 
M156Re£t
;

104 
öfo
->
Powî
 = 
M156Powî
;

105 
öfo
->
Clo£
 = 
M156Clo£
;

107 
WRAMSIZE
 = 8192;

108 
WRAM
 = (
uöt8
*)
	`FCEU_gmÆloc
(
WRAMSIZE
);

109 
	`SëupC¨tPRGM≠pög
(0x10, 
WRAM
, 
WRAMSIZE
, 1);

110 
	`AddExSèã
(
WRAM
, 
WRAMSIZE
, 0, "WRAM");

112 
GameSèãRe°‹e
 = 
SèãRe°‹e
;

113 
	`AddExSèã
(&
SèãRegs
, ~0, 0, 0);

114 
	}
}

	@fceux-am/src/boards/158B.cpp

24 
	~"m≠öc.h
"

25 
	~"mmc3.h
"

27 
uöt8
 
	glut
[8] = { 0x00, 0x00, 0x00, 0x01, 0x02, 0x04, 0x0F, 0x00 };

29 
	$UNL158BPW
(
uöt32
 
A
, 
uöt8
 
V
) {

30 i‡(
EXPREGS
[0] & 0x80) {

31 
uöt32
 
b™k
 = 
EXPREGS
[0] & 7;

32 if(
EXPREGS
[0] & 0x20) {

33 
	`£çrg32
(0x8000, 
b™k
 >> 1);

35 
	`£çrg16
(0x8000, 
b™k
);

36 
	`£çrg16
(0xC000, 
b™k
);

39 
	`£çrg8
(
A
, 
V
 & 0xF);

41 
	}
}

43 
	$DECLFW
(
UNL158BPrŸWrôe
) {

44 
EXPREGS
[
A
 & 7] = 
V
;

45 
A
 & 7) {

47 
	`FixMMC3PRG
(
MMC3_cmd
);

50 
	`FCEU_¥ötf
("UNK PROT WRITE\n");

54 
	}
}

56 
	$DECLFR
(
UNL158BPrŸRód
) {

57  
X
.
DB
 | 
lut
[
A
 & 7];

58 
	}
}

60 
	$UNL158BPowî
() {

61 
	`GíMMC3Powî
();

62 
	`SëWrôeH™dÀr
(0x5000, 0x5FFF, 
UNL158BPrŸWrôe
);

63 
	`SëRódH™dÀr
(0x5000, 0x5FFF, 
UNL158BPrŸRód
);

64 
	}
}

66 
	$UNL158B_Inô
(
C¨tInfo
 *
öfo
) {

67 
	`GíMMC3_Inô
(
öfo
, 128, 128, 0, 0);

68 
pwøp
 = 
UNL158BPW
;

69 
öfo
->
Powî
 = 
UNL158BPowî
;

70 
	`AddExSèã
(
EXPREGS
, 8, 0, "EXPR");

71 
	}
}

	@fceux-am/src/boards/164.cpp

25 
	~"m≠öc.h
"

27 
uöt8
 
	gœ°°robe
, 
	gåiggî
;

28 
uöt8
 
	gªg
[8];

29 
uöt8
 *
	gWRAM
 = 
NULL
;

30 
uöt32
 
	gWRAMSIZE
;

32 
wrôefunc
 
	gpcmwrôe
;

34 (*
WSync
)();

36 
SFORMAT
 
SèãRegs
[] =

38 { &
œ°°robe
, 1, "STB" },

39 { &
åiggî
, 1, "TRG" },

40 { 
ªg
, 8, "REGS" },

42 
	}
};

44 
	$Sync
() {

45 
	`£çrg8r
(0x10, 0x6000, 0);

46 
	`£çrg32
(0x8000, (
ªg
[0] << 4) | (reg[1] & 0xF));

47 
	`£tchr8
(0);

48 
	}
}

50 
	$SèãRe°‹e
(
vîsi⁄
) {

51 
	`WSync
();

52 
	}
}

54 
	$DECLFR
(
RódLow
) {

55 
A
 & 0x7700) {

56 0x5100:  
ªg
[2] |Ñeg[0] |Ñeg[1] | (reg[3] ^ 0xff); ;

58 i‡(
åiggî
)

59  
ªg
[2] |Ñeg[1];

64 
	}
}

66 
	$M163HB
() {

67 i‡(
ªg
[1] & 0x80) {

68 i‡(
sˇ∆öe
 == 239) {

69 
	`£tchr4
(0x0000, 0);

70 
	`£tchr4
(0x1000, 0);

71 } i‡(
sˇ∆öe
 == 127) {

72 
	`£tchr4
(0x0000, 1);

73 
	`£tchr4
(0x1000, 1);

88 
	}
}

90 
	$DECLFW
(
Wrôe
) {

91 
A
 & 0x7300) {

92 0x5100: 
ªg
[0] = 
V
; 
	`WSync
(); ;

93 0x5000: 
ªg
[1] = 
V
; 
	`WSync
(); ;

94 0x5300: 
ªg
[2] = 
V
; ;

95 0x5200: 
ªg
[3] = 
V
; 
	`WSync
(); ;

97 
	}
}

99 
	$Powî
() {

100 
	`mem£t
(
ªg
, 0, 8);

101 
ªg
[1] = 0xFF;

102 
	`SëWrôeH™dÀr
(0x5000, 0x5FFF, 
Wrôe
);

103 
	`SëRódH™dÀr
(0x6000, 0xFFFF, 
C¨tBR
);

104 
	`SëWrôeH™dÀr
(0x6000, 0x7FFF, 
C¨tBW
);

105 
	`FCEU_ChótAddRAM
(
WRAMSIZE
 >> 10, 0x6000, 
WRAM
);

106 
	`WSync
();

107 
	}
}

109 
	$Clo£
() {

110 i‡(
WRAM
)

111 
	`FCEU_g‰ì
(
WRAM
);

112 
WRAM
 = 
NULL
;

113 
	}
}

115 
	$M≠≥r164_Inô
(
C¨tInfo
 *
öfo
) {

116 
öfo
->
Powî
 = Power;

117 
öfo
->
Clo£
 = Close;

118 
WSync
 = 
Sync
;

120 
WRAMSIZE
 = 8192;

121 
WRAM
 = (
uöt8
*)
	`FCEU_gmÆloc
(
WRAMSIZE
);

122 
	`SëupC¨tPRGM≠pög
(0x10, 
WRAM
, 
WRAMSIZE
, 1);

123 
	`AddExSèã
(
WRAM
, 
WRAMSIZE
, 0, "WRAM");

125 i‡(
öfo
->
b©ãry
) {

126 
öfo
->
SaveGame
[0] = 
WRAM
;

127 
öfo
->
SaveGameLí
[0] = 
WRAMSIZE
;

130 
GameSèãRe°‹e
 = 
SèãRe°‹e
;

131 
	`AddExSèã
(&
SèãRegs
, ~0, 0, 0);

132 
	}
}

134 
	$DECLFW
(
Wrôe2
) {

135 i‡(
A
 == 0x5101) {

136 i‡(
œ°°robe
 && !
V
) {

137 
åiggî
 ^= 1;

139 
œ°°robe
 = 
V
;

140 } i‡(
A
 =0x5100 && 
V
 == 6)

141 
	`£çrg32
(0x8000, 3);

143 
A
 & 0x7300) {

144 0x5200: 
ªg
[0] = 
V
; 
	`WSync
(); ;

145 0x5000: 
ªg
[1] = 
V
; 
	`WSync
(); i‡(!‘eg[1] & 0x80Ë&& (
sˇ∆öe
 < 128)Ë
	`£tchr8
(0); ;

146 0x5300: 
ªg
[2] = 
V
; ;

147 0x5100: 
ªg
[3] = 
V
; 
	`WSync
(); ;

149 
	}
}

151 
	$Powî2
() {

152 
	`mem£t
(
ªg
, 0, 8);

153 
œ°°robe
 = 1;

154 
pcmwrôe
 = 
	`GëWrôeH™dÀr
(0x4011);

155 
	`SëRódH™dÀr
(0x5000, 0x5FFF, 
RódLow
);

156 
	`SëWrôeH™dÀr
(0x5000, 0x5FFF, 
Wrôe2
);

157 
	`SëRódH™dÀr
(0x6000, 0xFFFF, 
C¨tBR
);

158 
	`SëWrôeH™dÀr
(0x6000, 0x7FFF, 
C¨tBW
);

159 
	`FCEU_ChótAddRAM
(
WRAMSIZE
 >> 10, 0x6000, 
WRAM
);

160 
	`WSync
();

161 
	}
}

163 
	$M≠≥r163_Inô
(
C¨tInfo
 *
öfo
) {

164 
öfo
->
Powî
 = 
Powî2
;

165 
öfo
->
Clo£
 = Close;

166 
WSync
 = 
Sync
;

167 
GameHBIRQHook
 = 
M163HB
;

169 
WRAMSIZE
 = 8192;

170 
WRAM
 = (
uöt8
*)
	`FCEU_gmÆloc
(
WRAMSIZE
);

171 
	`SëupC¨tPRGM≠pög
(0x10, 
WRAM
, 
WRAMSIZE
, 1);

172 
	`AddExSèã
(
WRAM
, 
WRAMSIZE
, 0, "WRAM");

174 i‡(
öfo
->
b©ãry
) {

175 
öfo
->
SaveGame
[0] = 
WRAM
;

176 
öfo
->
SaveGameLí
[0] = 
WRAMSIZE
;

178 
GameSèãRe°‹e
 = 
SèãRe°‹e
;

179 
	`AddExSèã
(&
SèãRegs
, ~0, 0, 0);

180 
	}
}

182 
	$Sync3
() {

183 
	`£tchr8
(0);

184 
	`£çrg8r
(0x10, 0x6000, 0);

185 
ªg
[3] & 7) {

187 2: 
	`£çrg32
(0x8000, (
ªg
[0] & 0xc) | (reg[1] & 2) | ((reg[2] & 0xf) << 4)); ;

189 3: 
	`£çrg32
(0x8000, (
ªg
[0] & 0xc) | (reg[2] & 0xf) << 4); ;

191 6: 
	`£çrg32
(0x8000, (
ªg
[0] & 0xe) | ((reg[1] >> 1) & 1) | ((reg[2] & 0xf) << 4)); ;

193 7: 
	`£çrg32
(0x8000, (
ªg
[0] & 0xf) | ((reg[2] & 0xf) << 4)); ;

195 
	}
}

197 
	$DECLFW
(
Wrôe3
) {

199 
ªg
[(
A
 >> 8Ë& 3] = 
V
;

200 
	`WSync
();

201 
	}
}

203 
	$Powî3
() {

204 
ªg
[0] = 3;

205 
ªg
[1] = 0;

206 
ªg
[2] = 0;

207 
ªg
[3] = 7;

208 
	`SëWrôeH™dÀr
(0x5000, 0x5FFF, 
Wrôe3
);

209 
	`SëRódH™dÀr
(0x6000, 0xFFFF, 
C¨tBR
);

210 
	`SëWrôeH™dÀr
(0x6000, 0x7FFF, 
C¨tBW
);

211 
	`FCEU_ChótAddRAM
(
WRAMSIZE
 >> 10, 0x6000, 
WRAM
);

212 
	`WSync
();

213 
	}
}

215 
	$UNLFS304_Inô
(
C¨tInfo
 *
öfo
) {

216 
öfo
->
Powî
 = 
Powî3
;

217 
öfo
->
Clo£
 = Close;

218 
WSync
 = 
Sync3
;

220 
WRAMSIZE
 = 8192;

221 
WRAM
 = (
uöt8
*)
	`FCEU_gmÆloc
(
WRAMSIZE
);

222 
	`SëupC¨tPRGM≠pög
(0x10, 
WRAM
, 
WRAMSIZE
, 1);

223 
	`AddExSèã
(
WRAM
, 
WRAMSIZE
, 0, "WRAM");

225 i‡(
öfo
->
b©ãry
) {

226 
öfo
->
SaveGame
[0] = 
WRAM
;

227 
öfo
->
SaveGameLí
[0] = 
WRAMSIZE
;

230 
GameSèãRe°‹e
 = 
SèãRe°‹e
;

231 
	`AddExSèã
(&
SèãRegs
, ~0, 0, 0);

232 
	}
}

	@fceux-am/src/boards/168.cpp

21 
	~"m≠öc.h
"

23 
uöt8
 
	gªg
;

24 
uöt8
 *
	gCHRRAM
 = 
NULL
;

25 
uöt32
 
	gCHRRAMSIZE
;

27 
SFORMAT
 
	gSèãRegs
[] =

29 { &
ªg
, 1, "REGS" },

33 
	$Sync
() {

34 
	`£tchr4r
(0x10, 0x0000, 0);

35 
	`£tchr4r
(0x10, 0x1000, 
ªg
 & 0x0f);

36 
	`£çrg16
(0x8000, 
ªg
 >> 6);

37 
	`£çrg16
(0xc000, ~0);

38 
	}
}

40 
	$DECLFW
(
M168Wrôe
) {

41 
ªg
 = 
V
;

42 
	`Sync
();

43 
	}
}

45 
	$DECLFW
(
M168Dummy
) {

46 
	}
}

48 
	$M168Powî
() {

49 
ªg
 = 0;

50 
	`Sync
();

51 
	`SëWrôeH™dÀr
(0x4020, 0x7fff, 
M168Dummy
);

52 
	`SëWrôeH™dÀr
(0xB000, 0xB000, 
M168Wrôe
);

53 
	`SëWrôeH™dÀr
(0xF000, 0xF000, 
M168Dummy
);

54 
	`SëWrôeH™dÀr
(0xF080, 0xF080, 
M168Dummy
);

55 
	`SëRódH™dÀr
(0x8000, 0xFFFF, 
C¨tBR
);

56 
	}
}

58 
	$M168Clo£
() {

59 i‡(
CHRRAM
)

60 
	`FCEU_g‰ì
(
CHRRAM
);

61 
CHRRAM
 = 
NULL
;

62 
	}
}

64 
	$SèãRe°‹e
(
vîsi⁄
) {

65 
	`Sync
();

66 
	}
}

68 
	$M≠≥r168_Inô
(
C¨tInfo
 *
öfo
) {

69 
öfo
->
Powî
 = 
M168Powî
;

70 
öfo
->
Clo£
 = 
M168Clo£
;

71 
GameSèãRe°‹e
 = 
SèãRe°‹e
;

72 
	`AddExSèã
(&
SèãRegs
, ~0, 0, 0);

74 
CHRRAMSIZE
 = 8192 * 8;

75 
CHRRAM
 = (
uöt8
*)
	`FCEU_gmÆloc
(
CHRRAMSIZE
);

76 
	`SëupC¨tCHRM≠pög
(0x10, 
CHRRAM
, 
CHRRAMSIZE
, 1);

77 
	`AddExSèã
(
CHRRAM
, 
CHRRAMSIZE
, 0, "CRAM");

78 
	}
}

	@fceux-am/src/boards/170.cpp

21 
	~"m≠öc.h
"

23 
uöt8
 
	gªg
;

25 
SFORMAT
 
	gSèãRegs
[] =

27 { &
ªg
, 1, "REGS" },

31 
	$Sync
() {

32 
	`£çrg16
(0x8000, 0);

33 
	`£çrg16
(0xc000, ~0);

34 
	`£tchr8
(0);

35 
	}
}

37 
	$DECLFW
(
M170PrŸW
) {

38 
ªg
 = 
V
 << 1 & 0x80;

39 
	}
}

41 
	$DECLFR
(
M170PrŸR
) {

42  
ªg
 | (
X
.
DB
 & 0x7F);

43 
	}
}

45 
	$M170Powî
() {

46 
	`Sync
();

47 
	`SëWrôeH™dÀr
(0x6502, 0x6502, 
M170PrŸW
);

48 
	`SëWrôeH™dÀr
(0x7000, 0x7000, 
M170PrŸW
);

49 
	`SëRódH™dÀr
(0x7001, 0x7001, 
M170PrŸR
);

50 
	`SëRódH™dÀr
(0x7777, 0x7777, 
M170PrŸR
);

51 
	`SëRódH™dÀr
(0x8000, 0xFFFF, 
C¨tBR
);

52 
	}
}

54 
	$SèãRe°‹e
(
vîsi⁄
) {

55 
	`Sync
();

56 
	}
}

58 
	$M≠≥r170_Inô
(
C¨tInfo
 *
öfo
) {

59 
öfo
->
Powî
 = 
M170Powî
;

60 
GameSèãRe°‹e
 = 
SèãRe°‹e
;

61 
	`AddExSèã
(&
SèãRegs
, ~0, 0, 0);

62 
	}
}

	@fceux-am/src/boards/175.cpp

21 
	~"m≠öc.h
"

23 
uöt8
 
	gªg
, 
	gdñay
, 
	gmúr
;

25 
SFORMAT
 
	gSèãRegs
[] =

27 { &
ªg
, 1, "REG" },

28 { &
múr
, 1, "MIRR" },

32 
	$Sync
() {

33 
	`£tchr8
(
ªg
);

34 i‡(!
dñay
) {

35 
	`£çrg16
(0x8000, 
ªg
);

36 
	`£çrg8
(0xC000, 
ªg
 << 1);

38 
	`£çrg8
(0xE000, (
ªg
 << 1) + 1);

39 
	`£tmúr‹
(((
múr
 & 4) >> 2) ^ 1);

40 
	}
}

42 
	$DECLFW
(
M175Wrôe1
) {

43 
múr
 = 
V
;

44 
dñay
 = 1;

45 
	`Sync
();

46 
	}
}

48 
	$DECLFW
(
M175Wrôe2
) {

49 
ªg
 = 
V
 & 0x0F;

50 
dñay
 = 1;

51 
	`Sync
();

52 
	}
}

54 
	$DECLFR
(
M175Ród
) {

55 i‡(
A
 == 0xFFFC) {

56 
dñay
 = 0;

57 
	`Sync
();

59  
	`C¨tBR
(
A
);

60 
	}
}

62 
	$M175Powî
() {

63 
ªg
 = 
múr
 = 
dñay
 = 0;

64 
	`SëRódH™dÀr
(0x8000, 0xFFFF, 
M175Ród
);

65 
	`SëWrôeH™dÀr
(0x8000, 0x8000, 
M175Wrôe1
);

66 
	`SëWrôeH™dÀr
(0xA000, 0xA000, 
M175Wrôe2
);

67 
	`Sync
();

68 
	}
}

70 
	$SèãRe°‹e
(
vîsi⁄
) {

71 
	`Sync
();

72 
	}
}

74 
	$M≠≥r175_Inô
(
C¨tInfo
 *
öfo
) {

75 
öfo
->
Powî
 = 
M175Powî
;

76 
GameSèãRe°‹e
 = 
SèãRe°‹e
;

78 
	`AddExSèã
(&
SèãRegs
, ~0, 0, 0);

79 
	}
}

	@fceux-am/src/boards/176.cpp

22 
	~"m≠öc.h
"

24 
uöt32
 
ROM_size
;

26 
uöt8
 
	g¥g
[4], 
	gchr
, 
	gsbw
, 
	gwe_§am
;

27 
uöt8
 *
	gWRAM
 = 
NULL
;

28 
uöt32
 
	gWRAMSIZE
;

30 
SFORMAT
 
	gSèãRegs
[]=

32 {
¥g
, 4, "PRG"},

33 {&
chr
, 1, "CHR"},

34 {&
sbw
, 1, "SBW"},

38 
	$Sync
()

40 
	`£çrg8r
(0x10,0x6000,0);

41 
	`£çrg8
(0x8000,
¥g
[0]);

42 
	`£çrg8
(0xA000,
¥g
[1]);

43 
	`£çrg8
(0xC000,
¥g
[2]);

44 
	`£çrg8
(0xE000,
¥g
[3]);

46 
	`£tchr8
(
chr
);

47 
	}
}

49 
	$DECLFW
(
M176Wrôe_5001
)

51 
	`¥ötf
("%04X = $%02X\n",
A
,
V
);

52 if(
sbw
)

54 
¥g
[0] = 
V
*4;

55 
¥g
[1] = 
V
*4+1;

56 
¥g
[2] = 
V
*4+2;

57 
¥g
[3] = 
V
*4+3;

59 
	`Sync
();

60 
	}
}

62 
	$DECLFW
(
M176Wrôe_5010
)

64 
	`¥ötf
("%04X = $%02X\n",
A
,
V
);

65 if(
V
 =0x24Ë
sbw
 = 1;

66 
	`Sync
();

67 
	}
}

69 
	$DECLFW
(
M176Wrôe_5011
)

71 
	`¥ötf
("%04X = $%02X\n",
A
,
V
);

72 
V
 >>= 1;

73 if(
sbw
)

75 
¥g
[0] = 
V
*4;

76 
¥g
[1] = 
V
*4+1;

77 
¥g
[2] = 
V
*4+2;

78 
¥g
[3] = 
V
*4+3;

80 
	`Sync
();

81 
	}
}

83 
	$DECLFW
(
M176Wrôe_5FF1
)

85 
	`¥ötf
("%04X = $%02X\n",
A
,
V
);

86 
V
 >>= 1;

87 
¥g
[0] = 
V
*4;

88 
¥g
[1] = 
V
*4+1;

89 
¥g
[2] = 
V
*4+2;

90 
¥g
[3] = 
V
*4+3;

91 
	`Sync
();

92 
	}
}

94 
	$DECLFW
(
M176Wrôe_5FF2
)

96 
	`¥ötf
("%04X = $%02X\n",
A
,
V
);

97 
chr
 = 
V
;

98 
	`Sync
();

99 
	}
}

101 
	$DECLFW
(
M176Wrôe_A001
)

103 
we_§am
 = 
V
 & 0x03;

104 
	}
}

106 
	$DECLFW
(
M176Wrôe_WrôeSRAM
)

109 
	`C¨tBW
(
A
,
V
);

110 
	}
}

112 
	$M176Powî
()

114 
	`SëRódH™dÀr
(0x6000,0x7fff,
C¨tBR
);

115 
	`SëWrôeH™dÀr
(0x6000,0x7fff,
M176Wrôe_WrôeSRAM
);

116 
	`SëRódH™dÀr
(0x8000,0xFFFF,
C¨tBR
);

117 
	`SëWrôeH™dÀr
(0xA001,0xA001,
M176Wrôe_A001
);

118 
	`SëWrôeH™dÀr
(0x5001,0x5001,
M176Wrôe_5001
);

119 
	`SëWrôeH™dÀr
(0x5010,0x5010,
M176Wrôe_5010
);

120 
	`SëWrôeH™dÀr
(0x5011,0x5011,
M176Wrôe_5011
);

121 
	`SëWrôeH™dÀr
(0x5ff1,0x5ff1,
M176Wrôe_5FF1
);

122 
	`SëWrôeH™dÀr
(0x5ff2,0x5ff2,
M176Wrôe_5FF2
);

123 
	`FCEU_ChótAddRAM
(
WRAMSIZE
 >> 10, 0x6000, 
WRAM
);

125 
we_§am
 = 0;

126 
sbw
 = 0;

127 
¥g
[0] = 0;

128 
¥g
[1] = 1;

129 
¥g
[2] = (
ROM_size
-2)&63;

130 
¥g
[3] = (
ROM_size
-1)&63;

131 
	`Sync
();

132 
	}
}

135 
	$M176Clo£
()

137 if(
WRAM
)

138 
	`FCEU_g‰ì
(
WRAM
);

139 
WRAM
 = 
NULL
;

140 
	}
}

142 
	$SèãRe°‹e
(
vîsi⁄
)

144 
	`Sync
();

145 
	}
}

147 
	$M≠≥r176_Inô
(
C¨tInfo
 *
öfo
)

149 
öfo
->
Powî
=
M176Powî
;

150 
öfo
->
Clo£
=
M176Clo£
;

152 
GameSèãRe°‹e
=
SèãRe°‹e
;

154 
WRAMSIZE
=8192;

155 
WRAM
=(
uöt8
*)
	`FCEU_gmÆloc
(
WRAMSIZE
);

156 
	`SëupC¨tPRGM≠pög
(0x10,
WRAM
,
WRAMSIZE
,1);

157 
	`AddExSèã
(
WRAM
, 
WRAMSIZE
, 0, "WRAM");

158 
	`AddExSèã
(&
SèãRegs
, ~0, 0, 0);

159 
	}
}

	@fceux-am/src/boards/177.cpp

21 
	~"m≠öc.h
"

23 
uöt8
 
	gªg
;

25 
uöt8
 *
	gWRAM
 = 
NULL
;

26 
uöt32
 
	gWRAMSIZE
;

28 
SFORMAT
 
	gSèãRegs
[] =

30 { &
ªg
, 1, "REG" },

34 
	$Sync
() {

35 
	`£tchr8
(0);

36 
	`£çrg8r
(0x10, 0x6000, 0);

37 
	`£çrg32
(0x8000, 
ªg
 & 0x1f);

38 
	`£tmúr‹
(((
ªg
 & 0x20) >> 5) ^ 1);

39 
	}
}

41 
	$DECLFW
(
M177Wrôe
) {

42 
ªg
 = 
V
;

43 
	`Sync
();

44 
	}
}

46 
	$M177Powî
() {

47 
ªg
 = 0;

48 
	`Sync
();

49 
	`SëRódH™dÀr
(0x6000, 0x7fff, 
C¨tBR
);

50 
	`SëWrôeH™dÀr
(0x6000, 0x7fff, 
C¨tBW
);

51 
	`SëRódH™dÀr
(0x8000, 0xFFFF, 
C¨tBR
);

52 
	`SëWrôeH™dÀr
(0x8000, 0xFFFF, 
M177Wrôe
);

53 
	`FCEU_ChótAddRAM
(
WRAMSIZE
 >> 10, 0x6000, 
WRAM
);

54 
	}
}

56 
	$M177Clo£
() {

57 i‡(
WRAM
)

58 
	`FCEU_g‰ì
(
WRAM
);

59 
WRAM
 = 
NULL
;

60 
	}
}

62 
	$SèãRe°‹e
(
vîsi⁄
) {

63 
	`Sync
();

64 
	}
}

66 
	$M≠≥r177_Inô
(
C¨tInfo
 *
öfo
) {

67 
öfo
->
Powî
 = 
M177Powî
;

68 
öfo
->
Clo£
 = 
M177Clo£
;

69 
GameSèãRe°‹e
 = 
SèãRe°‹e
;

71 
WRAMSIZE
 = 8192;

72 
WRAM
 = (
uöt8
*)
	`FCEU_gmÆloc
(
WRAMSIZE
);

73 
	`SëupC¨tPRGM≠pög
(0x10, 
WRAM
, 
WRAMSIZE
, 1);

74 
	`AddExSèã
(
WRAM
, 
WRAMSIZE
, 0, "WRAM");

75 i‡(
öfo
->
b©ãry
) {

76 
öfo
->
SaveGame
[0] = 
WRAM
;

77 
öfo
->
SaveGameLí
[0] = 
WRAMSIZE
;

80 
	`AddExSèã
(&
SèãRegs
, ~0, 0, 0);

81 
	}
}

	@fceux-am/src/boards/178.cpp

25 
	~"m≠öc.h
"

27 
uöt8
 
	gªg
[4];

29 
uöt8
 *
	gWRAM
 = 
NULL
;

30 
uöt32
 
	gWRAMSIZE
;

33 
GëMou£D©a
(
uöt32
 (&
md
)[3]);

34 
uöt32
 
	gMou£D©a
[3], 
	g˛ick
, 
	gœ°˛ick
;

35 
öt32
 
	gSís‹Dñay
;

39 
uöt8
 
	gpcm_íabÀ
 = 0;

41 
SFORMAT
 
	gSèãRegs
[] =

43 { 
ªg
, 4, "REGS" },

83 
	$Sync
() {

84 
uöt32
 
sb™k
 = 
ªg
[1] & 0x7;

85 
uöt32
 
bb™k
 = 
ªg
[2];

86 
	`£tchr8
(0);

87 
	`£çrg8r
(0x10, 0x6000, 
ªg
[3] & 3);

88 i‡(
ªg
[0] & 2) {

89 
	`£çrg16
(0x8000, (
bb™k
 << 3Ë| 
sb™k
);

90 i‡(
ªg
[0] & 4)

91 
	`£çrg16
(0xC000, (
bb™k
 << 3Ë| 6 | (
ªg
[1] & 1));

93 
	`£çrg16
(0xC000, (
bb™k
 << 3) | 7);

95 
uöt32
 
b™k
 = (
bb™k
 << 3Ë| 
sb™k
;

96 i‡(
ªg
[0] & 4) {

97 
	`£çrg16
(0x8000, 
b™k
);

98 
	`£çrg16
(0xC000, 
b™k
);

100 
	`£çrg32
(0x8000, 
b™k
 >> 1);

102 
	`£tmúr‹
((
ªg
[0] & 1) ^ 1);

103 
	}
}

105 
	$DECLFW
(
M178Wrôe
) {

106 
ªg
[
A
 & 3] = 
V
;

108 
	`Sync
();

109 
	}
}

111 
	$DECLFW
(
M178WrôeSnd
) {

112 i‡(
A
 == 0x5800) {

113 i‡(
V
 & 0xF0) {

114 
pcm_íabÀ
 = 1;

118 
pcm_íabÀ
 = 0;

121 
	}
}

123 
	$DECLFR
(
M178RódSnd
) {

124 i‡(
A
 == 0x5800)

125  (
X
.
DB
 & 0xBFË| ((
pcm_íabÀ
 ^ 1) << 6);

127  
X
.
DB
;

128 
	}
}

130 
	$DECLFR
(
M178RódSís‹
) {

131 
	`X6502_IRQEnd
(
FCEU_IQEXT
);

133 
	}
}

135 
	$M178Powî
() {

136 
ªg
[0] =Ñeg[1] =Ñeg[2] =Ñeg[3] = 
Sís‹Dñay
 = 0;

137 
	`Sync
();

139 
	`SëWrôeH™dÀr
(0x4800, 0x4fff, 
M178Wrôe
);

140 
	`SëWrôeH™dÀr
(0x5800, 0x5fff, 
M178WrôeSnd
);

141 
	`SëRódH™dÀr
(0x5800, 0x5fff, 
M178RódSnd
);

142 
	`SëRódH™dÀr
(0x5000, 0x5000, 
M178RódSís‹
);

143 
	`SëRódH™dÀr
(0x6000, 0x7fff, 
C¨tBR
);

144 
	`SëWrôeH™dÀr
(0x6000, 0x7fff, 
C¨tBW
);

145 
	`SëRódH™dÀr
(0x8000, 0xffff, 
C¨tBR
);

146 
	`FCEU_ChótAddRAM
(
WRAMSIZE
 >> 10, 0x6000, 
WRAM
);

147 
	}
}

149 
	$M178SndClk
(
a
) {

150 
Sís‹Dñay
 +
a
;

151 if(
Sís‹Dñay
 > 0x32768) {

152 
Sís‹Dñay
 -= 32768;

153 
	`GëMou£D©a
 (
Mou£D©a
);

154 
œ°˛ick
 = 
˛ick
;

155 
˛ick
 = 
Mou£D©a
[2] & 1;

158 if(
œ°˛ick
 && !
˛ick
)

159 
	`X6502_IRQBegö
(
FCEU_IQEXT
);

169 
	}
}

171 
	$M178Clo£
() {

172 i‡(
WRAM
)

173 
	`FCEU_g‰ì
(
WRAM
);

174 
WRAM
 = 
NULL
;

175 
	}
}

177 
	$SèãRe°‹e
(
vîsi⁄
) {

178 
	`Sync
();

179 
	}
}

181 
	$M≠≥r178_Inô
(
C¨tInfo
 *
öfo
) {

182 
öfo
->
Powî
 = 
M178Powî
;

183 
öfo
->
Clo£
 = 
M178Clo£
;

184 
GameSèãRe°‹e
 = 
SèãRe°‹e
;

185 
M≠IRQHook
 = 
M178SndClk
;

189 
WRAMSIZE
 = 32768;

190 
WRAM
 = (
uöt8
*)
	`FCEU_gmÆloc
(
WRAMSIZE
);

191 
	`SëupC¨tPRGM≠pög
(0x10, 
WRAM
, 
WRAMSIZE
, 1);

192 i‡(
öfo
->
b©ãry
) {

193 
öfo
->
SaveGame
[0] = 
WRAM
;

194 
öfo
->
SaveGameLí
[0] = 
WRAMSIZE
;

196 
	`AddExSèã
(
WRAM
, 
WRAMSIZE
, 0, "WRAM");

198 
	`AddExSèã
(&
SèãRegs
, ~0, 0, 0);

199 
	}
}

	@fceux-am/src/boards/18.cpp

21 
	~"m≠öc.h
"

23 
uöt8
 
	g¥eg
[4], 
	g¸eg
[8];

24 
uöt8
 
	gIRQa
, 
	gmúr
;

25 
öt32
 
	gIRQCou¡
, 
	gIRQL©ch
;

26 
uöt8
 *
	gWRAM
 = 
NULL
;

27 
uöt32
 
	gWRAMSIZE
;

29 
SFORMAT
 
	gSèãRegs
[] =

31 { 
¥eg
, 4, "PREG" },

32 { 
¸eg
, 8, "CREG" },

33 { &
múr
, 1, "MIRR" },

34 { &
IRQa
, 1, "IRQA" },

35 { &
IRQCou¡
, 4, "IRQC" },

36 { &
IRQL©ch
, 4, "IRQL" },

40 
	$Sync
() {

41 
i
;

42 
i
 = 0; i < 8; i++Ë
	`£tchr1
(ò<< 10, 
¸eg
[i]);

43 
	`£çrg8r
(0x10, 0x6000, 0);

44 
	`£çrg8
(0x8000, 
¥eg
[0]);

45 
	`£çrg8
(0xA000, 
¥eg
[1]);

46 
	`£çrg8
(0xC000, 
¥eg
[2]);

47 
	`£çrg8
(0xE000, ~0);

48 i‡(
múr
 & 2)

49 
	`£tmúr‹
(
MI_0
);

51 
	`£tmúr‹
(
múr
 & 1);

52 
	}
}

54 
	$DECLFW
(
M18WrôeIRQ
) {

55 
A
 & 0xF003) {

56 0xE000: 
IRQL©ch
 &0xFFF0; IRQL©ch |(
V
 & 0x0f) << 0x0; ;

57 0xE001: 
IRQL©ch
 &0xFF0F; IRQL©ch |(
V
 & 0x0f) << 0x4; ;

58 0xE002: 
IRQL©ch
 &0xF0FF; IRQL©ch |(
V
 & 0x0f) << 0x8; ;

59 0xE003: 
IRQL©ch
 &0x0FFF; IRQL©ch |(
V
 & 0x0f) << 0xC; ;

60 0xF000: 
IRQCou¡
 = 
IRQL©ch
; ;

61 0xF001: 
IRQa
 = 
V
 & 1; 
	`X6502_IRQEnd
(
FCEU_IQEXT
); ;

62 0xF002: 
múr
 = 
V
 & 3; 
	`Sync
(); ;

64 
	}
}

66 
	$DECLFW
(
M18WrôePrg
) {

67 
uöt32
 
i
 = ((
A
 >> 1) & 1) | ((A - 0x8000) >> 11);

68 
¥eg
[
i
] &(0xF0Ë>> ((
A
 & 1) << 2);

69 
¥eg
[
i
] |(
V
 & 0xFË<< ((
A
 & 1) << 2);

70 
	`Sync
();

71 
	}
}

73 
	$DECLFW
(
M18WrôeChr
) {

74 
uöt32
 
i
 = ((
A
 >> 1) & 1) | ((A - 0xA000) >> 11);

75 
¸eg
[
i
] &(0xF0Ë>> ((
A
 & 1) << 2);

76 
¸eg
[
i
] |(
V
 & 0xFË<< ((
A
 & 1) << 2);

77 
	`Sync
();

78 
	}
}

80 
	$M18Powî
() {

81 
IRQa
 = 0;

82 
¥eg
[0] = 0;

83 
¥eg
[1] = 1;

84 
¥eg
[2] = ~1;

85 
¥eg
[3] = ~0;

86 
	`Sync
();

87 
	`SëRódH™dÀr
(0x6000, 0xFFFF, 
C¨tBR
);

88 
	`SëWrôeH™dÀr
(0x6000, 0x7FFF, 
C¨tBW
);

89 
	`SëWrôeH™dÀr
(0x8000, 0x9FFF, 
M18WrôePrg
);

90 
	`SëWrôeH™dÀr
(0xA000, 0xDFFF, 
M18WrôeChr
);

91 
	`SëWrôeH™dÀr
(0xE000, 0xFFFF, 
M18WrôeIRQ
);

92 
	`FCEU_ChótAddRAM
(
WRAMSIZE
 >> 10, 0x6000, 
WRAM
);

93 
	}
}

95 
	$M18IRQHook
(
a
) {

96 i‡(
IRQa
 && 
IRQCou¡
) {

97 
IRQCou¡
 -
a
;

98 i‡(
IRQCou¡
 <= 0) {

99 
	`X6502_IRQBegö
(
FCEU_IQEXT
);

100 
IRQCou¡
 = 0;

101 
IRQa
 = 0;

104 
	}
}

106 
	$M18Clo£
()

108 i‡(
WRAM
)

109 
	`FCEU_g‰ì
(
WRAM
);

110 
WRAM
 = 
NULL
;

111 
	}
}

113 
	$SèãRe°‹e
(
vîsi⁄
) {

114 
	`Sync
();

115 
	}
}

117 
	$M≠≥r18_Inô
(
C¨tInfo
 *
öfo
) {

118 
öfo
->
Powî
 = 
M18Powî
;

119 
öfo
->
Clo£
 = 
M18Clo£
;

120 
M≠IRQHook
 = 
M18IRQHook
;

121 
GameSèãRe°‹e
 = 
SèãRe°‹e
;

123 
WRAMSIZE
 = 8192;

124 
WRAM
 = (
uöt8
*)
	`FCEU_gmÆloc
(
WRAMSIZE
);

125 
	`SëupC¨tPRGM≠pög
(0x10, 
WRAM
, 
WRAMSIZE
, 1);

126 
	`AddExSèã
(
WRAM
, 
WRAMSIZE
, 0, "WRAM");

127 i‡(
öfo
->
b©ãry
) {

128 
öfo
->
SaveGame
[0] = 
WRAM
;

129 
öfo
->
SaveGameLí
[0] = 
WRAMSIZE
;

132 
	`AddExSèã
(&
SèãRegs
, ~0, 0, 0);

133 
	}
}

	@fceux-am/src/boards/183.cpp

23 
	~"m≠öc.h
"

25 
uöt8
 
	g¥g
[4], 
	gchr
[8], 
	gmúr
;

26 
uöt8
 
	gIRQCou¡
;

27 
uöt8
 
	gIRQPª
;

28 
uöt8
 
	gIRQa
;

30 
SFORMAT
 
	gSèãRegs
[] =

32 { 
¥g
, 4, "PRG" },

33 { 
chr
, 8, "CHR" },

34 { &
múr
, 1, "MIRR" },

35 { &
IRQCou¡
, 1, "IRQC" },

36 { &
IRQPª
, 1, "IRQP" },

37 { &
IRQa
, 1, "IRQA" },

41 
	$SyncPrg
() {

42 
	`£çrg8
(0x6000, 
¥g
[3]);

43 
	`£çrg8
(0x8000, 
¥g
[0]);

44 
	`£çrg8
(0xA000, 
¥g
[1]);

45 
	`£çrg8
(0xC000, 
¥g
[2]);

46 
	`£çrg8
(0xE000, ~0);

47 
	}
}

49 
	$SyncMúr
() {

50 
múr
) {

51 0: 
	`£tmúr‹
(
MI_V
); ;

52 1: 
	`£tmúr‹
(
MI_H
); ;

53 2: 
	`£tmúr‹
(
MI_0
); ;

54 3: 
	`£tmúr‹
(
MI_1
); ;

56 
	}
}

58 
	$SyncChr
() {

59 
i
;

60 
i
 = 0; i < 8; i++)

61 
	`£tchr1
(
i
 << 10, 
chr
[i]);

62 
	}
}

64 
	$SèãRe°‹e
(
vîsi⁄
) {

65 
	`SyncPrg
();

66 
	`SyncChr
();

67 
	`SyncMúr
();

68 
	}
}

70 
	$DECLFW
(
M183Wrôe
) {

71 i‡((
A
 & 0xF800) == 0x6800) {

72 
¥g
[3] = 
A
 & 0x3F;

73 
	`SyncPrg
();

74 } i‡(((
A
 & 0xF80C) >= 0xB000) && ((A & 0xF80C) <= 0xE00C)) {

75 
ödex
 = (((
A
 >> 11) - 6) | (A >> 3)) & 7;

76 
chr
[
ödex
] = (chr[ödex] & (0xF0 >> (
A
 & 4))Ë| ((
V
 & 0x0F) << (A & 4));

77 
	`SyncChr
();

78 } 
A
 & 0xF80C) {

79 0x8800: 
¥g
[0] = 
V
; 
	`SyncPrg
(); ;

80 0xA800: 
¥g
[1] = 
V
; 
	`SyncPrg
(); ;

81 0xA000: 
¥g
[2] = 
V
; 
	`SyncPrg
(); ;

82 0x9800: 
múr
 = 
V
 & 3; 
	`SyncMúr
(); ;

83 0xF000: 
IRQCou¡
 = ((IRQCou¡ & 0xF0Ë| (
V
 & 0xF)); ;

84 0xF004: 
IRQCou¡
 = ((IRQCou¡ & 0x0FË| ((
V
 & 0xF) << 4)); ;

85 0xF008: 
IRQa
 = 
V
; i‡(!VË
IRQPª
 = 0; 
	`X6502_IRQEnd
(
FCEU_IQEXT
); ;

86 0xF00C: 
IRQPª
 = 16; ;

88 
	}
}

90 
	$M183IRQCou¡î
() {

91 i‡(
IRQa
) {

92 
IRQCou¡
++;

93 i‡((
IRQCou¡
 - 
IRQPª
) == 238)

94 
	`X6502_IRQBegö
(
FCEU_IQEXT
);

96 
	}
}

98 
	$M183Powî
() {

99 
IRQPª
 = 
IRQCou¡
 = 
IRQa
 = 0;

100 
	`SëRódH™dÀr
(0x6000, 0xFFFF, 
C¨tBR
);

101 
	`SëWrôeH™dÀr
(0x6000, 0xFFFF, 
M183Wrôe
);

102 
	`SyncPrg
();

103 
	`SyncChr
();

104 
	}
}

106 
	$M≠≥r183_Inô
(
C¨tInfo
 *
öfo
) {

107 
öfo
->
Powî
 = 
M183Powî
;

108 
GameHBIRQHook
 = 
M183IRQCou¡î
;

109 
GameSèãRe°‹e
 = 
SèãRe°‹e
;

110 
	`AddExSèã
(&
SèãRegs
, ~0, 0, 0);

111 
	}
}

	@fceux-am/src/boards/185.cpp

22 
	~"m≠öc.h
"

24 
uöt8
 *
	gDummyCHR
 = 
NULL
;

25 
uöt8
 
	gd©¨eg
;

26 (*
Sync
)();

29 
SFORMAT
 
SèãRegs
[] =

31 { &
d©¨eg
, 1, "DREG" },

33 
	}
};

44 
	$Sync185
() {

46 i‡((
d©¨eg
 & 3) && (datareg != 0x13))

47 
	`£tchr8
(0);

49 
	`£tchr8r
(0x10, 0);

50 
	}
}

52 
	$Sync181
() {

53 i‡(!(
d©¨eg
 & 1))

54 
	`£tchr8
(0);

56 
	`£tchr8r
(0x10, 0);

57 
	}
}

59 
	$DECLFW
(
MWrôe
) {

60 
d©¨eg
 = 
V
;

61 
	`Sync
();

62 
	}
}

64 
	$MPowî
() {

65 
d©¨eg
 = 0;

66 
	`Sync
();

67 
	`£çrg16
(0x8000, 0);

68 
	`£çrg16
(0xC000, ~0);

69 
	`SëWrôeH™dÀr
(0x8000, 0xFFFF, 
MWrôe
);

70 
	`SëRódH™dÀr
(0x8000, 0xFFFF, 
C¨tBR
);

71 
	}
}

73 
	$MClo£
() {

74 i‡(
DummyCHR
)

75 
	`FCEU_g‰ì
(
DummyCHR
);

76 
DummyCHR
 = 
NULL
;

77 
	}
}

79 
	$MRe°‹e
(
vîsi⁄
) {

80 
	`Sync
();

81 
	}
}

83 
	$M≠≥r185_Inô
(
C¨tInfo
 *
öfo
) {

84 
Sync
 = 
Sync185
;

85 
öfo
->
Powî
 = 
MPowî
;

86 
öfo
->
Clo£
 = 
MClo£
;

87 
GameSèãRe°‹e
 = 
MRe°‹e
;

88 
DummyCHR
 = (
uöt8
*)
	`FCEU_gmÆloc
(8192);

89 
x
;

90 
x
 = 0; x < 8192; x++)

91 
DummyCHR
[
x
] = 0xff;

92 
	`SëupC¨tCHRM≠pög
(0x10, 
DummyCHR
, 8192, 0);

93 
	`AddExSèã
(
SèãRegs
, ~0, 0, 0);

94 
	}
}

96 
	$M≠≥r181_Inô
(
C¨tInfo
 *
öfo
) {

97 
Sync
 = 
Sync181
;

98 
öfo
->
Powî
 = 
MPowî
;

99 
öfo
->
Clo£
 = 
MClo£
;

100 
GameSèãRe°‹e
 = 
MRe°‹e
;

101 
DummyCHR
 = (
uöt8
*)
	`FCEU_gmÆloc
(8192);

102 
x
;

103 
x
 = 0; x < 8192; x++)

104 
DummyCHR
[
x
] = 0xff;

105 
	`SëupC¨tCHRM≠pög
(0x10, 
DummyCHR
, 8192, 0);

106 
	`AddExSèã
(
SèãRegs
, ~0, 0, 0);

107 
	}
}

	@fceux-am/src/boards/186.cpp

50 
	~"m≠öc.h
"

52 
uöt8
 
	gSWRAM
[3072];

53 
uöt8
 *
	gWRAM
 = 
NULL
;

54 
uöt8
 
	gªgs
[4];

56 
SFORMAT
 
	gSèãRegs
[] =

58 { 
ªgs
, 4, "DREG" },

59 { 
SWRAM
, 3072, "SWRM" },

63 
	$Sync
() {

64 
	`£çrg8r
(0x10, 0x6000, 
ªgs
[0] >> 6);

65 
	`£çrg16
(0x8000, 
ªgs
[1]);

66 
	`£çrg16
(0xc000, 0);

67 
	}
}

69 
	$DECLFW
(
M186Wrôe
) {

70 i‡(
A
 & 0x4203Ë
ªgs
[A & 3] = 
V
;

71 
	`Sync
();

72 
	}
}

74 
	$DECLFR
(
M186Ród
) {

75 
A
) {

82 
	}
}

84 
	$DECLFR
(
ASWRAM
) {

85 (
SWRAM
[
A
 - 0x4400]);

86 
	}
}

87 
	$DECLFW
(
BSWRAM
) {

88 
SWRAM
[
A
 - 0x4400] = 
V
;

89 
	}
}

91 
	$M186Powî
() {

92 
	`£tchr8
(0);

93 
	`SëRódH™dÀr
(0x6000, 0xFFFF, 
C¨tBR
);

94 
	`SëWrôeH™dÀr
(0x6000, 0xFFFF, 
C¨tBW
);

95 
	`SëRódH™dÀr
(0x4200, 0x43FF, 
M186Ród
);

96 
	`SëWrôeH™dÀr
(0x4200, 0x43FF, 
M186Wrôe
);

97 
	`SëRódH™dÀr
(0x4400, 0x4FFF, 
ASWRAM
);

98 
	`SëWrôeH™dÀr
(0x4400, 0x4FFF, 
BSWRAM
);

99 
	`FCEU_ChótAddRAM
(32, 0x6000, 
WRAM
);

100 
ªgs
[0] =Ñegs[1] =Ñegs[2] =Ñegs[3];

101 
	`Sync
();

102 
	}
}

104 
	$M186Clo£
() {

105 i‡(
WRAM
)

106 
	`FCEU_g‰ì
(
WRAM
);

107 
WRAM
 = 
NULL
;

108 
	}
}

110 
	$M186Re°‹e
(
vîsi⁄
) {

111 
	`Sync
();

112 
	}
}

114 
	$M≠≥r186_Inô
(
C¨tInfo
 *
öfo
) {

115 
öfo
->
Powî
 = 
M186Powî
;

116 
öfo
->
Clo£
 = 
M186Clo£
;

117 
GameSèãRe°‹e
 = 
M186Re°‹e
;

118 
WRAM
 = (
uöt8
*)
	`FCEU_gmÆloc
(32768);

119 
	`SëupC¨tPRGM≠pög
(0x10, 
WRAM
, 32768, 1);

120 
	`AddExSèã
(
WRAM
, 32768, 0, "WRAM");

121 
	`AddExSèã
(
SèãRegs
, ~0, 0, 0);

122 
	}
}

	@fceux-am/src/boards/187.cpp

21 
	~"m≠öc.h
"

22 
	~"mmc3.h
"

24 
	$M187CW
(
uöt32
 
A
, 
uöt8
 
V
) {

25 i‡((
A
 & 0x1000Ë=((
MMC3_cmd
 & 0x80) << 5))

26 
	`£tchr1
(
A
, 
V
 | 0x100);

28 
	`£tchr1
(
A
, 
V
);

29 
	}
}

31 
	$M187PW
(
uöt32
 
A
, 
uöt8
 
V
) {

32 i‡(
EXPREGS
[0] & 0x80) {

33 
uöt8
 
b™k
 = 
EXPREGS
[0] & 0x1F;

34 i‡(
EXPREGS
[0] & 0x20) {

35 i‡(
EXPREGS
[0] & 0x40)

36 
	`£çrg32
(0x8000, 
b™k
 >> 2);

38 
	`£çrg32
(0x8000, 
b™k
 >> 1);

40 
	`£çrg16
(0x8000, 
b™k
);

41 
	`£çrg16
(0xC000, 
b™k
);

44 
	`£çrg8
(
A
, 
V
 & 0x3F);

45 
	}
}

47 
	$DECLFW
(
M187Wrôe8000
) {

48 
EXPREGS
[1] = 1;

49 
	`MMC3_CMDWrôe
(
A
, 
V
);

50 
	}
}

52 
	$DECLFW
(
M187Wrôe8001
) {

53 i‡(
EXPREGS
[1])

54 
	`MMC3_CMDWrôe
(
A
, 
V
);

55 
	}
}

57 
	$DECLFW
(
M187WrôeLo
) {

58 i‡((
A
 == 0x5000) || (A == 0x6000)) {

59 
EXPREGS
[0] = 
V
;

60 
	`FixMMC3PRG
(
MMC3_cmd
);

62 
	}
}

64 
uöt8
 
	g¥Ÿ_d©a
[4] = { 0x83, 0x83, 0x42, 0x00 };

65 
	$DECLFR
(
M187Ród
) {

66  
¥Ÿ_d©a
[
EXPREGS
[1] & 3];

67 
	}
}

69 
	$M187Powî
() {

70 
EXPREGS
[0] = EXPREGS[1] = 0;

71 
	`GíMMC3Powî
();

72 
	`SëRódH™dÀr
(0x5000, 0x5FFF, 
M187Ród
);

73 
	`SëWrôeH™dÀr
(0x5000, 0x6FFF, 
M187WrôeLo
);

74 
	`SëWrôeH™dÀr
(0x8000, 0x8000, 
M187Wrôe8000
);

75 
	`SëWrôeH™dÀr
(0x8001, 0x8001, 
M187Wrôe8001
);

76 
	}
}

78 
	$M≠≥r187_Inô
(
C¨tInfo
 *
öfo
) {

79 
	`GíMMC3_Inô
(
öfo
, 256, 256, 0, 0);

80 
pwøp
 = 
M187PW
;

81 
cwøp
 = 
M187CW
;

82 
öfo
->
Powî
 = 
M187Powî
;

83 
	`AddExSèã
(
EXPREGS
, 3, 0, "EXPR");

84 
	}
}

	@fceux-am/src/boards/189.cpp

21 
	~"m≠öc.h
"

22 
	~"mmc3.h
"

24 
	$M189PW
(
uöt32
 
A
, 
uöt8
 
V
) {

25 
	`£çrg32
(0x8000, 
EXPREGS
[0] & 7);

26 
	}
}

28 
	$DECLFW
(
M189Wrôe
) {

29 
EXPREGS
[0] = 
V
 | (V >> 4);

30 
	`FixMMC3PRG
(
MMC3_cmd
);

31 
	}
}

33 
	$M189Powî
() {

34 
EXPREGS
[0] = EXPREGS[1] = 0;

35 
	`GíMMC3Powî
();

36 
	`SëWrôeH™dÀr
(0x4120, 0x7FFF, 
M189Wrôe
);

37 
	}
}

39 
	$M≠≥r189_Inô
(
C¨tInfo
 *
öfo
) {

40 
	`GíMMC3_Inô
(
öfo
, 256, 256, 0, 0);

41 
pwøp
 = 
M189PW
;

42 
öfo
->
Powî
 = 
M189Powî
;

43 
	`AddExSèã
(
EXPREGS
, 2, 0, "EXPR");

44 
	}
}

	@fceux-am/src/boards/190.cpp

22 
	~"m≠öc.h
"

24 
uöt8
 
	g¥gr
, 
	gchº
[4];

25 
uöt8
 *
	gWRAM
 = 
NULL
;

27 
	$M≠≥r190_Sync
() {

28 
	`£çrg8r
(0x10, 0x6000, 0);

30 
	`£çrg16
(0x8000, 
¥gr
);

31 
	`£çrg16
(0xC000, 0);

32 
	`£tchr2
(0x0000, 
chº
[0]);

33 
	`£tchr2
(0x0800, 
chº
[1]);

34 
	`£tchr2
(0x1000, 
chº
[2]);

35 
	`£tchr2
(0x1800, 
chº
[3]);

36 
	}
}

38 
	$DECLFW
(
M≠≥r190_Wrôe89
Ë{ 
¥gr
 = 
V
&7; 
	`M≠≥r190_Sync
(); 
	}
}

39 
	$DECLFW
(
M≠≥r190_WrôeCD
Ë{ 
¥gr
 = 8|(
V
&7); 
	`M≠≥r190_Sync
(); 
	}
}

41 
	$DECLFW
(
M≠≥r190_WrôeAB
) {

42 
b™k
 = 
A
&3;

43 
chº
[
b™k
] = 
V
&63;

44 
	`M≠≥r190_Sync
();

45 
	}
}

48 
	$M≠≥r190_Powî
() {

49 
	`FCEU_ChótAddRAM
(0x2000 >> 10, 0x6000, 
WRAM
);

51 
	`SëRódH™dÀr
(0x6000, 0xFFFF, 
C¨tBR
);

53 
	`SëWrôeH™dÀr
(0x6000, 0x7FFF, 
C¨tBW
);

54 
	`SëWrôeH™dÀr
(0x8000, 0x9FFF, 
M≠≥r190_Wrôe89
);

55 
	`SëWrôeH™dÀr
(0xA000, 0xBFFF, 
M≠≥r190_WrôeAB
);

56 
	`SëWrôeH™dÀr
(0xC000, 0xDFFF, 
M≠≥r190_WrôeCD
);

57 
	`M≠≥r190_Sync
();

59 
	`£tmúr‹
(
MI_V
);

60 
	}
}

62 
	$M≠≥r190_Clo£
() {

63 
	`FCEU_g‰ì
(
WRAM
);

64 
WRAM
 = 
NULL
;

65 
	}
}

67 
	$M≠≥r190_Re°‹e
() {

68 
	`M≠≥r190_Sync
();

69 
	}
}

72 
	$M≠≥r190_Inô
(
C¨tInfo
 *
öfo
) {

73 
öfo
->
Powî
 = 
M≠≥r190_Powî
;

74 
öfo
->
Clo£
 = 
M≠≥r190_Clo£
;

75 
GameSèãRe°‹e
 = 
M≠≥r190_Re°‹e
;

77 
WRAM
 = (
uöt8
*)
	`FCEU_gmÆloc
(0x2000);

78 
	`SëupC¨tPRGM≠pög
(0x10, 
WRAM
, 0x2000, 1);

80 
chº
[0] = chº[1] = chº[2] = chº[3] = 
¥gr
 = 0;

82 
	`AddExSèã
(&
¥gr
, 1, 0, "PRGR");

83 
	`AddExSèã
(
chº
, 4, 0, "CHRR");

84 
	`AddExSèã
(
WRAM
, 0x2000, 0, "WRAM");

85 
	}
}

	@fceux-am/src/boards/193.cpp

21 
	~"m≠öc.h
"

23 
uöt8
 
	gªg
[8];

24 
uöt8
 
	gmúr‹
, 
	gcmd
, 
	gb™k
;

26 
SFORMAT
 
	gSèãRegs
[] =

28 { &
cmd
, 1, "CMD" },

29 { &
múr‹
, 1, "MIRR" },

30 { &
b™k
, 1, "BANK" },

31 { 
ªg
, 8, "REGS" },

35 
	$Sync
() {

36 
	`£tmúr‹
(
múr‹
 ^ 1);

37 
	`£çrg8
(0x8000, 
ªg
[3]);

38 
	`£çrg8
(0xA000, 0xD);

39 
	`£çrg8
(0xC000, 0xE);

40 
	`£çrg8
(0xE000, 0xF);

41 
	`£tchr4
(0x0000, 
ªg
[0] >> 2);

42 
	`£tchr2
(0x1000, 
ªg
[1] >> 1);

43 
	`£tchr2
(0x1800, 
ªg
[2] >> 1);

44 
	}
}

46 
	$DECLFW
(
M193Wrôe
) {

47 
ªg
[
A
 & 3] = 
V
;

48 
	`Sync
();

49 
	}
}

51 
	$M193Powî
() {

52 
b™k
 = 0;

53 
	`Sync
();

54 
	`SëWrôeH™dÀr
(0x6000, 0x6003, 
M193Wrôe
);

55 
	`SëRódH™dÀr
(0x8000, 0xFFFF, 
C¨tBR
);

56 
	`SëWrôeH™dÀr
(0x8000, 0xFFFF, 
C¨tBW
);

57 
	}
}

59 
	$M193Re£t
() {

60 
	}
}

62 
	$SèãRe°‹e
(
vîsi⁄
) {

63 
	`Sync
();

64 
	}
}

66 
	$M≠≥r193_Inô
(
C¨tInfo
 *
öfo
) {

67 
öfo
->
Re£t
 = 
M193Re£t
;

68 
öfo
->
Powî
 = 
M193Powî
;

69 
GameSèãRe°‹e
 = 
SèãRe°‹e
;

70 
	`AddExSèã
(&
SèãRegs
, ~0, 0, 0);

71 
	}
}

	@fceux-am/src/boards/199.cpp

26 
	~"m≠öc.h
"

27 
	~"mmc3.h
"

29 
uöt8
 *
	gCHRRAM
 = 
NULL
;

30 
uöt32
 
	gCHRRAMSIZE
;

32 
	$M199PW
(
uöt32
 
A
, 
uöt8
 
V
) {

33 
	`£çrg8
(
A
, 
V
);

34 
	`£çrg8
(0xC000, 
EXPREGS
[0]);

35 
	`£çrg8
(0xE000, 
EXPREGS
[1]);

36 
	}
}

38 
	$M199CW
(
uöt32
 
A
, 
uöt8
 
V
) {

39 
	`£tchr1r
((
V
 < 8Ë? 0x10 : 0x00, 
A
, V);

40 
	`£tchr1r
((
DRegBuf
[0] < 8) ? 0x10 : 0x00, 0x0000, DRegBuf[0]);

41 
	`£tchr1r
((
EXPREGS
[2] < 8) ? 0x10 : 0x00, 0x0400, EXPREGS[2]);

42 
	`£tchr1r
((
DRegBuf
[1] < 8) ? 0x10 : 0x00, 0x0800, DRegBuf[1]);

43 
	`£tchr1r
((
EXPREGS
[3] < 8) ? 0x10 : 0x00, 0x0c00, EXPREGS[3]);

44 
	}
}

46 
	$M199MW
(
uöt8
 
V
) {

48 
V
 & 3) {

49 0: 
	`£tmúr‹
(
MI_V
); ;

50 1: 
	`£tmúr‹
(
MI_H
); ;

51 2: 
	`£tmúr‹
(
MI_0
); ;

52 3: 
	`£tmúr‹
(
MI_1
); ;

54 
	}
}

56 
	$DECLFW
(
M199Wrôe
) {

57 i‡((
A
 =0x8001Ë&& (
MMC3_cmd
 & 8)) {

58 
EXPREGS
[
MMC3_cmd
 & 3] = 
V
;

59 
	`FixMMC3PRG
(
MMC3_cmd
);

60 
	`FixMMC3CHR
(
MMC3_cmd
);

62 i‡(
A
 < 0xC000)

63 
	`MMC3_CMDWrôe
(
A
, 
V
);

65 
	`MMC3_IRQWrôe
(
A
, 
V
);

66 
	}
}

68 
	$M199Powî
() {

69 
EXPREGS
[0] = ~1;

70 
EXPREGS
[1] = ~0;

71 
EXPREGS
[2] = 1;

72 
EXPREGS
[3] = 3;

73 
	`GíMMC3Powî
();

74 
	`SëWrôeH™dÀr
(0x8000, 0xFFFF, 
M199Wrôe
);

75 
	}
}

77 
	$M199Clo£
() {

78 i‡(
CHRRAM
)

79 
	`FCEU_g‰ì
(
CHRRAM
);

80 
CHRRAM
 = 
NULL
;

81 
	}
}

83 
	$M≠≥r199_Inô
(
C¨tInfo
 *
öfo
) {

84 
	`GíMMC3_Inô
(
öfo
, 512, 256, 8, info->
b©ãry
);

85 
cwøp
 = 
M199CW
;

86 
pwøp
 = 
M199PW
;

87 
mwøp
 = 
M199MW
;

88 
öfo
->
Powî
 = 
M199Powî
;

89 
öfo
->
Clo£
 = 
M199Clo£
;

91 
CHRRAMSIZE
 = 8192;

92 
CHRRAM
 = (
uöt8
*)
	`FCEU_gmÆloc
(
CHRRAMSIZE
);

93 
	`SëupC¨tCHRM≠pög
(0x10, 
CHRRAM
, 
CHRRAMSIZE
, 1);

94 
	`AddExSèã
(
CHRRAM
, 
CHRRAMSIZE
, 0, "CHRR");

96 
	`AddExSèã
(
EXPREGS
, 4, 0, "EXPR");

97 
	}
}

	@fceux-am/src/boards/206.cpp

21 
	~"m≠öc.h
"

23 
uöt8
 
	gcmd
;

24 
uöt8
 
	gDRegs
[8];

26 
SFORMAT
 
	gSèãRegs
[] =

28 { &
cmd
, 1, "CMD" },

29 { 
DRegs
, 8, "DREG" },

33 
	$Sync
() {

34 
	`£tchr2
(0x0000, 
DRegs
[0]);

35 
	`£tchr2
(0x0800, 
DRegs
[1]);

36 
x
;

37 
x
 = 0; x < 4; x++)

38 
	`£tchr1
(0x1000 + (
x
 << 10), 
DRegs
[2 + x]);

39 
	`£çrg8
(0x8000, 
DRegs
[6]);

40 
	`£çrg8
(0xa000, 
DRegs
[7]);

41 
	`£çrg8
(0xc000, ~1);

42 
	`£çrg8
(0xe000, ~0);

43 
	}
}

45 
	$SèãRe°‹e
(
vîsi⁄
) {

46 
	`Sync
();

47 
	}
}

49 
	$DECLFW
(
M206Wrôe
) {

50 
A
 & 0x8001) {

51 0x8000: 
cmd
 = 
V
 & 0x07; ;

53 i‡(
cmd
 <= 0x05)

54 
V
 &= 0x3F;

56 
V
 &= 0x0F;

57 i‡(
cmd
 <0x01Ë
V
 >>= 1;

58 
DRegs
[
cmd
 & 0x07] = 
V
;

59 
	`Sync
();

62 
	}
}

64 
	$M206Powî
() {

65 
cmd
 = 0;

66 
DRegs
[6] = 0;

67 
DRegs
[7] = 1;

68 
	`Sync
();

69 
	`SëRódH™dÀr
(0x8000, 0xFFFF, 
C¨tBR
);

70 
	`SëWrôeH™dÀr
(0x8000, 0xFFFF, 
M206Wrôe
);

71 
	}
}

74 
	$M≠≥r206_Inô
(
C¨tInfo
 *
öfo
) {

75 
öfo
->
Powî
 = 
M206Powî
;

76 
GameSèãRe°‹e
 = 
SèãRe°‹e
;

77 
	`AddExSèã
(&
SèãRegs
, ~0, 0, 0);

78 
	}
}

	@fceux-am/src/boards/208.cpp

21 
	~"m≠öc.h
"

22 
	~"mmc3.h
"

24 
uöt8
 
	glut
[256] = {

43 
	$M208PW
(
uöt32
 
A
, 
uöt8
 
V
) {

44 
	`£çrg32
(0x8000, 
EXPREGS
[5]);

45 
	}
}

47 
	$DECLFW
(
M208Wrôe
) {

48 
EXPREGS
[5] = (
V
 & 0x1) | ((V >> 3) & 0x2);

49 
	`FixMMC3PRG
(
MMC3_cmd
);

50 
	}
}

52 
	$DECLFW
(
M208PrŸWrôe
) {

53 i‡(
A
 <= 0x57FF)

54 
EXPREGS
[4] = 
V
;

56 
EXPREGS
[(
A
 & 0x03)] = 
V
 ^ 
lut
[EXPREGS[4]];

57 
	}
}

59 
	$DECLFR
(
M208PrŸRód
) {

60 (
EXPREGS
[(
A
 & 0x3)]);

61 
	}
}

63 
	$M208Powî
() {

64 
EXPREGS
[5] = 3;

65 
	`GíMMC3Powî
();

66 
	`SëWrôeH™dÀr
(0x4800, 0x4fff, 
M208Wrôe
);

67 
	`SëWrôeH™dÀr
(0x6800, 0x6fff, 
M208Wrôe
);

68 
	`SëWrôeH™dÀr
(0x5000, 0x5fff, 
M208PrŸWrôe
);

69 
	`SëRódH™dÀr
(0x5800, 0x5fff, 
M208PrŸRód
);

70 
	`SëRódH™dÀr
(0x8000, 0xffff, 
C¨tBR
);

71 
	}
}

73 
	$M≠≥r208_Inô
(
C¨tInfo
 *
öfo
) {

74 
	`GíMMC3_Inô
(
öfo
, 128, 256, 0, 0);

75 
pwøp
 = 
M208PW
;

76 
öfo
->
Powî
 = 
M208Powî
;

77 
	`AddExSèã
(
EXPREGS
, 6, 0, "EXPR");

78 
	}
}

	@fceux-am/src/boards/222.cpp

24 
	~"m≠öc.h
"

26 
uöt8
 
	gIRQCou¡
;

27 
uöt8
 
	gIRQa
;

28 
uöt8
 
	g¥g_ªg
[2];

29 
uöt8
 
	gchr_ªg
[8];

30 
uöt8
 
	gmúr
;

32 
SFORMAT
 
	gSèãRegs
[] =

34 { &
IRQCou¡
, 1, "IRQC" },

35 { &
IRQa
, 1, "IRQA" },

36 { 
¥g_ªg
, 2, "PRG" },

37 { 
chr_ªg
, 8, "CHR" },

38 { &
múr
, 1, "MIRR" },

42 
	$M222IRQ
() {

43 i‡(
IRQa
) {

44 
IRQCou¡
++;

45 i‡(
IRQCou¡
 >= 238) {

46 
	`X6502_IRQBegö
(
FCEU_IQEXT
);

50 
	}
}

52 
	$Sync
() {

53 
	`£çrg8
(0x8000, 
¥g_ªg
[0]);

54 
	`£çrg8
(0xA000, 
¥g_ªg
[1]);

55 
i
;

56 
i
 = 0; i < 8; i++)

57 
	`£tchr1
(
i
 << 10, 
chr_ªg
[i]);

58 
	`£tmúr‹
(
múr
 ^ 1);

59 
	}
}

61 
	$DECLFW
(
M222Wrôe
) {

62 
A
 & 0xF003) {

63 0x8000: 
¥g_ªg
[0] = 
V
; ;

64 0x9000: 
múr
 = 
V
 & 1; ;

65 0xA000: 
¥g_ªg
[1] = 
V
; ;

66 0xB000: 
chr_ªg
[0] = 
V
; ;

67 0xB002: 
chr_ªg
[1] = 
V
; ;

68 0xC000: 
chr_ªg
[2] = 
V
; ;

69 0xC002: 
chr_ªg
[3] = 
V
; ;

70 0xD000: 
chr_ªg
[4] = 
V
; ;

71 0xD002: 
chr_ªg
[5] = 
V
; ;

72 0xE000: 
chr_ªg
[6] = 
V
; ;

73 0xE002: 
chr_ªg
[7] = 
V
; ;

79 0xF000: 
IRQa
 = 
IRQCou¡
 = 
V
; i‡(
sˇ∆öe
 < 240ËIRQCou¡ -8; IRQCou¡ +4; 
	`X6502_IRQEnd
(
FCEU_IQEXT
); ;

81 
	`Sync
();

82 
	}
}

84 
	$M222Powî
() {

85 
	`£çrg16
(0xC000, ~0);

86 
	`SëRódH™dÀr
(0x8000, 0xFFFF, 
C¨tBR
);

87 
	`SëWrôeH™dÀr
(0x8000, 0xFFFF, 
M222Wrôe
);

88 
	}
}

90 
	$SèãRe°‹e
(
vîsi⁄
) {

91 
	`Sync
();

92 
	}
}

94 
	$M≠≥r222_Inô
(
C¨tInfo
 *
öfo
) {

95 
öfo
->
Powî
 = 
M222Powî
;

96 
GameHBIRQHook
 = 
M222IRQ
;

97 
GameSèãRe°‹e
 = 
SèãRe°‹e
;

98 
	`AddExSèã
(&
SèãRegs
, ~0, 0, 0);

99 
	}
}

	@fceux-am/src/boards/225.cpp

21 
	~"m≠öc.h
"

23 
uöt8
 
	g¥Ÿ
[4], 
	g¥g
, 
	gmode
, 
	gchr
, 
	gmúr
;

25 
SFORMAT
 
	gSèãRegs
[] =

27 { 
¥Ÿ
, 4, "PROT" },

28 { &
¥g
, 1, "PRG" },

29 { &
chr
, 1, "CHR" },

30 { &
mode
, 1, "MODE" },

31 { &
múr
, 1, "MIRR" },

35 
	$Sync
() {

36 i‡(
mode
) {

37 
	`£çrg16
(0x8000, 
¥g
);

38 
	`£çrg16
(0xC000, 
¥g
);

40 
	`£çrg32
(0x8000, 
¥g
 >> 1);

41 
	`£tchr8
(
chr
);

42 
	`£tmúr‹
(
múr
 ^ 1);

43 
	}
}

45 
	$DECLFW
(
M225Wrôe
) {

46 
uöt32
 
b™k
 = (
A
 >> 14) & 1;

47 
múr
 = (
A
 >> 13) & 1;

48 
mode
 = (
A
 >> 12) & 1;

49 
chr
 = (
A
 & 0x3fË| (
b™k
 << 6);

50 
¥g
 = ((
A
 >> 6Ë& 0x3fË| (
b™k
 << 6);

51 
	`Sync
();

52 
	}
}

54 
	$DECLFW
(
M225LoWrôe
) {

55 
	}
}

57 
	$DECLFR
(
M225LoRód
) {

59 
	}
}

61 
	$M225Powî
() {

62 
¥g
 = 0;

63 
mode
 = 0;

64 
	`Sync
();

65 
	`SëRódH™dÀr
(0x5000, 0x5FFF, 
M225LoRód
);

66 
	`SëWrôeH™dÀr
(0x5000, 0x5FFF, 
M225LoWrôe
);

67 
	`SëRódH™dÀr
(0x8000, 0xFFFF, 
C¨tBR
);

68 
	`SëWrôeH™dÀr
(0x8000, 0xFFFF, 
M225Wrôe
);

69 
	}
}

71 
	$M225Re£t
() {

72 
¥g
 = 0;

73 
mode
 = 0;

74 
	`Sync
();

75 
	}
}

77 
	$SèãRe°‹e
(
vîsi⁄
) {

78 
	`Sync
();

79 
	}
}

81 
	$M≠≥r225_Inô
(
C¨tInfo
 *
öfo
) {

82 
öfo
->
Re£t
 = 
M225Re£t
;

83 
öfo
->
Powî
 = 
M225Powî
;

84 
GameSèãRe°‹e
 = 
SèãRe°‹e
;

85 
	`AddExSèã
(&
SèãRegs
, ~0, 0, 0);

86 
	}
}

	@fceux-am/src/boards/228.cpp

21 
	~"m≠öc.h
"

23 
uöt8
 
	gmøm
[4], 
	gvªg
;

24 
uöt16
 
	g¨eg
;

26 
SFORMAT
 
	gSèãRegs
[] =

28 { 
møm
, 4, "MRAM" },

29 { &
¨eg
, 2, "AREG" },

30 { &
vªg
, 1, "VREG" },

34 
	$Sync
() {

35 
uöt32
 
¥gl
, 
¥gh
, 
∑ge
 = (
¨eg
 >> 7) & 0x3F;

36 i‡((
∑ge
 & 0x30) == 0x30)

37 
∑ge
 -= 0x10;

38 
¥gl
 = 
¥gh
 = (
∑ge
 << 1Ë+ (((
¨eg
 >> 6) & 1) & ((areg >> 5) & 1));

39 
¥gh
 +((
¨eg
 >> 5) & 1) ^ 1;

41 
	`£tmúr‹
(((
¨eg
 >> 13) & 1) ^ 1);

42 
	`£çrg16
(0x8000,
¥gl
);

43 
	`£çrg16
(0xc000,
¥gh
);

44 
	`£tchr8
(((
vªg
 & 0x3Ë| ((
¨eg
 & 0xF) << 2)));

45 
	}
}

47 
	$DECLFW
(
M228RamWrôe
) {

48 
møm
[
A
 & 3] = 
V
 & 0x0F;

49 
	}
}

51 
	$DECLFR
(
M228RamRód
) {

52  
møm
[
A
 & 3];

53 
	}
}

55 
	$DECLFW
(
M228Wrôe
) {

56 
¨eg
 = 
A
;

57 
vªg
 = 
V
;

58 
	`Sync
();

59 
	}
}

61 
	$M228Re£t
() {

62 
¨eg
 = 0x8000;

63 
vªg
 = 0;

64 
	`mem£t
(
møm
, 0, (mram));

65 
	`Sync
();

66 
	}
}

68 
	$M228Powî
() {

69 
	`M228Re£t
();

70 
	`SëRódH™dÀr
(0x5000,0x5FFF,
M228RamRód
);

71 
	`SëWrôeH™dÀr
(0x5000,0x5FFF,
M228RamWrôe
);

72 
	`SëRódH™dÀr
(0x8000, 0xFFFF, 
C¨tBR
);

73 
	`SëWrôeH™dÀr
(0x8000, 0xFFFF, 
M228Wrôe
);

74 
	}
}

76 
	$SèãRe°‹e
(
vîsi⁄
) {

77 
	`Sync
();

78 
	}
}

80 
	$M≠≥r228_Inô
(
C¨tInfo
 *
öfo
) {

81 
öfo
->
Re£t
 = 
M228Re£t
;

82 
öfo
->
Powî
 = 
M228Powî
;

83 
GameSèãRe°‹e
 = 
SèãRe°‹e
;

84 
	`AddExSèã
(&
SèãRegs
, ~0, 0, 0);

85 
	}
}

	@fceux-am/src/boards/230.cpp

25 
	~"m≠öc.h
"

27 
uöt8
 
	gœtche
, 
	gª£t
;

28 
SFORMAT
 
	gSèãRegs
[] =

30 { &
ª£t
, 1, "RST" },

31 { &
œtche
, 1, "LATC" },

35 
	$Sync
() {

36 if(
ª£t
) {

37 
	`£çrg16
(0x8000, 
œtche
 & 7);

38 
	`£çrg16
(0xC000, 7);

39 
	`£tmúr‹
(
MI_V
);

41 
uöt32
 
b™k
 = (
œtche
 & 0x1F) + 8;

42 i‡(
œtche
 & 0x20) {

43 
	`£çrg16
(0x8000, 
b™k
);

44 
	`£çrg16
(0xC000, 
b™k
);

46 
	`£çrg32
(0x8000, 
b™k
 >> 1);

47 
	`£tmúr‹
((
œtche
 >> 6) & 1);

49 
	`£tchr8
(0);

50 
	}
}

52 
	$DECLFW
(
M230Wrôe
) {

53 
œtche
 = 
V
;

54 
	`Sync
();

55 
	}
}

57 
	$M230Re£t
() {

58 
ª£t
 ^= 1;

59 
	`Sync
();

60 
	}
}

62 
	$M230Powî
() {

63 
œtche
 = 
ª£t
 = 0;

64 
	`Sync
();

65 
	`SëWrôeH™dÀr
(0x8000, 0xFFFF, 
M230Wrôe
);

66 
	`SëRódH™dÀr
(0x8000, 0xFFFF, 
C¨tBR
);

67 
	}
}

69 
	$SèãRe°‹e
(
vîsi⁄
) {

70 
	`Sync
();

71 
	}
}

73 
	$M≠≥r230_Inô
(
C¨tInfo
 *
öfo
) {

74 
öfo
->
Powî
 = 
M230Powî
;

75 
öfo
->
Re£t
 = 
M230Re£t
;

76 
	`AddExSèã
(&
SèãRegs
, ~0, 0, 0);

77 
GameSèãRe°‹e
 = 
SèãRe°‹e
;

78 
	}
}

	@fceux-am/src/boards/232.cpp

21 
	~"m≠öc.h
"

23 
uöt8
 
	gb™k
, 
	g¥eg
;

24 
SFORMAT
 
	gSèãRegs
[] =

26 { &
b™k
, 1, "BANK" },

27 { &
¥eg
, 1, "PREG" },

31 
	$Sync
() {

33 
uöt32
 
bb™k
 = ((
b™k
 & 0x10) >> 2) | (bank & 8);

37 
	`£çrg16
(0x8000, 
bb™k
 | (
¥eg
 & 3));

38 
	`£çrg16
(0xC000, 
bb™k
 | 3);

39 
	`£tchr8
(0);

40 
	}
}

42 
	$DECLFW
(
M232WrôeB™k
) {

43 
b™k
 = 
V
;

44 
	`Sync
();

45 
	}
}

47 
	$DECLFW
(
M232WrôePªg
) {

48 
¥eg
 = 
V
;

49 
	`Sync
();

50 
	}
}

52 
	$M232Powî
() {

53 
b™k
 = 
¥eg
 = 0;

54 
	`Sync
();

55 
	`SëWrôeH™dÀr
(0x8000, 0xBFFF, 
M232WrôeB™k
);

56 
	`SëWrôeH™dÀr
(0xC000, 0xFFFF, 
M232WrôePªg
);

57 
	`SëRódH™dÀr
(0x8000, 0xFFFF, 
C¨tBR
);

58 
	}
}

60 
	$SèãRe°‹e
(
vîsi⁄
) {

61 
	`Sync
();

62 
	}
}

64 
	$M≠≥r232_Inô
(
C¨tInfo
 *
öfo
) {

65 
öfo
->
Powî
 = 
M232Powî
;

66 
	`AddExSèã
(&
SèãRegs
, ~0, 0, 0);

67 
GameSèãRe°‹e
 = 
SèãRe°‹e
;

68 
	}
}

	@fceux-am/src/boards/234.cpp

21 
	~"m≠öc.h
"

23 
uöt8
 
	gb™k
, 
	g¥eg
;

24 
SFORMAT
 
	gSèãRegs
[] =

26 { &
b™k
, 1, "BANK" },

27 { &
¥eg
, 1, "PREG" },

31 
	$Sync
() {

32 i‡(
b™k
 & 0x40) {

33 
	`£çrg32
(0x8000, (
b™k
 & 0xEË| (
¥eg
 & 1));

34 
	`£tchr8
(((
b™k
 & 0xEË<< 2Ë| ((
¥eg
 >> 4) & 7));

36 
	`£çrg32
(0x8000, 
b™k
 & 0xF);

37 
	`£tchr8
(((
b™k
 & 0xFË<< 2Ë| ((
¥eg
 >> 4) & 3));

39 
	`£tmúr‹
((
b™k
 >> 7) ^ 1);

40 
	}
}

42 
	$DECLFR
(
M234RódB™k
) {

43 
uöt8
 
r
 = 
	`C¨tBR
(
A
);

44 i‡(!
b™k
) {

45 
b™k
 = 
r
;

46 
	`Sync
();

48  
r
;

49 
	}
}

51 
	$DECLFR
(
M234RódPªg
) {

52 
uöt8
 
r
 = 
	`C¨tBR
(
A
);

53 
¥eg
 = 
r
;

54 
	`Sync
();

55  
r
;

56 
	}
}

58 
	$M234Re£t
() {

59 
b™k
 = 
¥eg
 = 0;

60 
	`Sync
();

61 
	}
}

63 
	$M234Powî
() {

64 
	`M234Re£t
();

65 
	`SëRódH™dÀr
(0x8000, 0xFFFF, 
C¨tBR
);

66 
	`SëRódH™dÀr
(0xFF80, 0xFF9F, 
M234RódB™k
);

67 
	`SëRódH™dÀr
(0xFFE8, 0xFFF7, 
M234RódPªg
);

68 
	}
}

70 
	$SèãRe°‹e
(
vîsi⁄
) {

71 
	`Sync
();

72 
	}
}

74 
	$M≠≥r234_Inô
(
C¨tInfo
 *
öfo
) {

75 
öfo
->
Powî
 = 
M234Powî
;

76 
öfo
->
Re£t
 = 
M234Re£t
;

77 
	`AddExSèã
(&
SèãRegs
, ~0, 0, 0);

78 
GameSèãRe°‹e
 = 
SèãRe°‹e
;

79 
	}
}

	@fceux-am/src/boards/235.cpp

21 
	~"m≠öc.h
"

23 
uöt16
 
	gcmdªg
;

24 
SFORMAT
 
	gSèãRegs
[] =

26 { &
cmdªg
, 2, "CREG" },

30 
	$Sync
() {

31 i‡(
cmdªg
 & 0x400)

32 
	`£tmúr‹
(
MI_0
);

34 
	`£tmúr‹
(((
cmdªg
 >> 13) & 1) ^ 1);

35 i‡(
cmdªg
 & 0x800) {

36 
	`£çrg16
(0x8000, ((
cmdªg
 & 0x300) >> 3) | ((cmdreg & 0x1F) << 1) | ((cmdreg >> 12) & 1));

37 
	`£çrg16
(0xC000, ((
cmdªg
 & 0x300) >> 3) | ((cmdreg & 0x1F) << 1) | ((cmdreg >> 12) & 1));

39 
	`£çrg32
(0x8000, ((
cmdªg
 & 0x300) >> 4) | (cmdreg & 0x1F));

40 
	}
}

42 
	$DECLFW
(
M235Wrôe
) {

43 
cmdªg
 = 
A
;

44 
	`Sync
();

45 
	}
}

47 
	$M235Powî
() {

48 
	`£tchr8
(0);

49 
	`SëWrôeH™dÀr
(0x8000, 0xFFFF, 
M235Wrôe
);

50 
	`SëRódH™dÀr
(0x8000, 0xFFFF, 
C¨tBR
);

51 
cmdªg
 = 0;

52 
	`Sync
();

53 
	}
}

55 
	$M235Re°‹e
(
vîsi⁄
) {

56 
	`Sync
();

57 
	}
}

59 
	$M≠≥r235_Inô
(
C¨tInfo
 *
öfo
) {

60 
öfo
->
Powî
 = 
M235Powî
;

61 
GameSèãRe°‹e
 = 
M235Re°‹e
;

62 
	`AddExSèã
(&
SèãRegs
, ~0, 0, 0);

63 
	}
}

	@fceux-am/src/boards/244.cpp

21 
	~"m≠öc.h
"

23 
uöt8
 
	g¥eg
, 
	g¸eg
;

24 
SFORMAT
 
	gSèãRegs
[] =

26 { &
¥eg
, 1, "PREG" },

27 { &
¸eg
, 1, "CREG" },

31 
uöt8
 
	g¥g_≥rm
[4][4] = {

38 
uöt8
 
	gchr_≥rm
[8][8] = {

49 
	$Sync
() {

50 
	`£çrg32
(0x8000, 
¥eg
);

51 
	`£tchr8
(
¸eg
);

52 
	}
}

54 
	$DECLFW
(
M244Wrôe
) {

55 i‡(
V
 & 8)

56 
¸eg
 = 
chr_≥rm
[(
V
 >> 4) & 7][V & 7];

58 
¥eg
 = 
¥g_≥rm
[(
V
 >> 4) & 3][V & 3];

59 
	`Sync
();

60 
	}
}

62 
	$M244Powî
() {

63 
¥eg
 = 
¸eg
 = 0;

64 
	`Sync
();

65 
	`SëWrôeH™dÀr
(0x8000, 0xFFFF, 
M244Wrôe
);

66 
	`SëRódH™dÀr
(0x8000, 0xFFFF, 
C¨tBR
);

67 
	}
}

69 
	$SèãRe°‹e
(
vîsi⁄
) {

70 
	`Sync
();

71 
	}
}

73 
	$M≠≥r244_Inô
(
C¨tInfo
 *
öfo
) {

74 
öfo
->
Powî
 = 
M244Powî
;

75 
	`AddExSèã
(&
SèãRegs
, ~0, 0, 0);

76 
GameSèãRe°‹e
 = 
SèãRe°‹e
;

77 
	}
}

	@fceux-am/src/boards/246.cpp

21 
	~"m≠öc.h
"

23 
uöt8
 
	gªgs
[8];

24 
uöt8
 *
	gWRAM
 = 
NULL
;

25 
uöt32
 
	gWRAMSIZE
;

27 
SFORMAT
 
	gSèãRegs
[] =

29 { 
ªgs
, 8, "REGS" },

33 
	$Sync
() {

34 
	`£çrg2r
(0x10, 0x6800, 0);

35 
	`£çrg8
(0x8000, 
ªgs
[0]);

36 
	`£çrg8
(0xA000, 
ªgs
[1]);

37 
	`£çrg8
(0xC000, 
ªgs
[2]);

38 
	`£çrg8
(0xE000, 
ªgs
[3]);

39 
	`£tchr2
(0x0000, 
ªgs
[4]);

40 
	`£tchr2
(0x0800, 
ªgs
[5]);

41 
	`£tchr2
(0x1000, 
ªgs
[6]);

42 
	`£tchr2
(0x1800, 
ªgs
[7]);

43 
	}
}

45 
	$DECLFW
(
M246Wrôe
) {

46 
ªgs
[
A
 & 7] = 
V
;

47 
	`Sync
();

48 
	}
}

50 
	$M246Powî
() {

51 
ªgs
[0] =Ñegs[1] =Ñegs[2] =Ñegs[3] = ~0;

52 
	`Sync
();

53 
	`SëWrôeH™dÀr
(0x6000, 0x67FF, 
M246Wrôe
);

54 
	`SëRódH™dÀr
(0x6800, 0x6FFF, 
C¨tBR
);

55 
	`SëWrôeH™dÀr
(0x6800, 0x6FFF, 
C¨tBW
);

56 
	`SëRódH™dÀr
(0x8000, 0xFFFF, 
C¨tBR
);

57 
	`FCEU_ChótAddRAM
(
WRAMSIZE
 >> 10, 0x6000, 
WRAM
);

58 
	}
}

60 
	$M246Clo£
()

62 if(
WRAM
)

63 
	`FCEU_g‰ì
(
WRAM
);

64 
WRAM
 = 
NULL
;

65 
	}
}

67 
	$SèãRe°‹e
(
vîsi⁄
) {

68 
	`Sync
();

69 
	}
}

71 
	$M≠≥r246_Inô
(
C¨tInfo
 *
öfo
) {

72 
öfo
->
Powî
 = 
M246Powî
;

73 
öfo
->
Clo£
 = 
M246Clo£
;

74 
GameSèãRe°‹e
 = 
SèãRe°‹e
;

76 
WRAMSIZE
 = 2048;

77 
WRAM
 = (
uöt8
*)
	`FCEU_gmÆloc
(
WRAMSIZE
);

78 
	`SëupC¨tPRGM≠pög
(0x10, 
WRAM
, 
WRAMSIZE
, 1);

79 
	`AddExSèã
(
WRAM
, 
WRAMSIZE
, 0, "WRAM");

81 i‡(
öfo
->
b©ãry
) {

82 
öfo
->
SaveGame
[0] = 
WRAM
;

83 
öfo
->
SaveGameLí
[0] = 
WRAMSIZE
;

86 
	`AddExSèã
(&
SèãRegs
, ~0, 0, 0);

87 
	}
}

	@fceux-am/src/boards/252.cpp

21 
	~"m≠öc.h
"

23 
uöt8
 
	g¸eg
[8], 
	g¥eg
[2];

24 
öt32
 
	gIRQa
, 
	gIRQCou¡
, 
	gIRQClock
, 
	gIRQL©ch
;

25 
uöt8
 *
	gWRAM
 = 
NULL
;

26 
uöt32
 
	gWRAMSIZE
;

27 
uöt8
 *
	gCHRRAM
 = 
NULL
;

28 
uöt32
 
	gCHRRAMSIZE
;

30 
SFORMAT
 
	gSèãRegs
[] =

32 { 
¸eg
, 8, "CREG" },

33 { 
¥eg
, 2, "PREG" },

34 { &
IRQa
, 4, "IRQA" },

35 { &
IRQCou¡
, 4, "IRQC" },

36 { &
IRQL©ch
, 4, "IRQL" },

37 { &
IRQClock
, 4, "IRQK" },

41 
	$Sync
() {

42 
uöt8
 
i
;

43 
	`£çrg8r
(0x10, 0x6000, 0);

44 
	`£çrg8
(0x8000, 
¥eg
[0]);

45 
	`£çrg8
(0xa000, 
¥eg
[1]);

46 
	`£çrg8
(0xc000, ~1);

47 
	`£çrg8
(0xe000, ~0);

48 
i
 = 0; i < 8; i++)

49 i‡((
¸eg
[
i
] == 6) || (creg[i] == 7))

50 
	`£tchr1r
(0x10, 
i
 << 10, 
¸eg
[i] & 1);

52 
	`£tchr1
(
i
 << 10, 
¸eg
[i]);

53 
	}
}

55 
	$DECLFW
(
M252Wrôe
) {

56 i‡((
A
 >= 0xB000) && (A <= 0xEFFF)) {

57 
uöt8
 
öd
 = ((((
A
 & 8) | (A >> 8)) >> 3) + 2) & 7;

58 
uöt8
 
ßr
 = 
A
 & 4;

59 
¸eg
[
öd
] = (¸eg[öd] & (0xF0 >> 
ßr
)Ë| ((
V
 & 0x0F) << sar);

60 
	`Sync
();

62 
A
 & 0xF00C) {

66 0x800C: 
¥eg
[0] = 
V
; 
	`Sync
(); ;

70 0xA00C: 
¥eg
[1] = 
V
; 
	`Sync
(); ;

71 0xF000: 
	`X6502_IRQEnd
(
FCEU_IQEXT
); 
IRQL©ch
 &0xF0; IRQL©ch |
V
 & 0xF; ;

72 0xF004: 
	`X6502_IRQEnd
(
FCEU_IQEXT
); 
IRQL©ch
 &0x0F; IRQL©ch |
V
 << 4; ;

73 0xF008: 
	`X6502_IRQEnd
(
FCEU_IQEXT
); 
IRQClock
 = 0; 
IRQCou¡
 = 
IRQL©ch
; 
IRQa
 = 
V
 & 2; ;

75 
	}
}

77 
	$M252Powî
() {

78 
	`Sync
();

79 
	`SëRódH™dÀr
(0x6000, 0x7FFF, 
C¨tBR
);

80 
	`SëWrôeH™dÀr
(0x6000, 0x7FFF, 
C¨tBW
);

81 
	`SëRódH™dÀr
(0x8000, 0xFFFF, 
C¨tBR
);

82 
	`SëWrôeH™dÀr
(0x8000, 0xFFFF, 
M252Wrôe
);

83 
	`FCEU_ChótAddRAM
(
WRAMSIZE
 >> 10, 0x6000, 
WRAM
);

84 
	}
}

86 
	$M252IRQ
(
a
) {

87 
	#LCYCS
 341

	)

88 i‡(
IRQa
) {

89 
IRQClock
 +
a
 * 3;

90 i‡(
IRQClock
 >
LCYCS
) {

91 
IRQClock
 >
LCYCS
) {

92 
IRQClock
 -
LCYCS
;

93 
IRQCou¡
++;

94 i‡(
IRQCou¡
 & 0x100) {

95 
	`X6502_IRQBegö
(
FCEU_IQEXT
);

96 
IRQCou¡
 = 
IRQL©ch
;

101 
	}
}

103 
	$M252Clo£
() {

104 i‡(
WRAM
)

105 
	`FCEU_g‰ì
(
WRAM
);

106 i‡(
CHRRAM
)

107 
	`FCEU_g‰ì
(
CHRRAM
);

108 
WRAM
 = 
CHRRAM
 = 
NULL
;

109 
	}
}

111 
	$SèãRe°‹e
(
vîsi⁄
) {

112 
	`Sync
();

113 
	}
}

115 
	$M≠≥r252_Inô
(
C¨tInfo
 *
öfo
) {

116 
öfo
->
Powî
 = 
M252Powî
;

117 
öfo
->
Clo£
 = 
M252Clo£
;

118 
M≠IRQHook
 = 
M252IRQ
;

120 
CHRRAMSIZE
 = 2048;

121 
CHRRAM
 = (
uöt8
*)
	`FCEU_gmÆloc
(
CHRRAMSIZE
);

122 
	`SëupC¨tCHRM≠pög
(0x10, 
CHRRAM
, 
CHRRAMSIZE
, 1);

123 
	`AddExSèã
(
CHRRAM
, 
CHRRAMSIZE
, 0, "CRAM");

125 
WRAMSIZE
 = 8192;

126 
WRAM
 = (
uöt8
*)
	`FCEU_gmÆloc
(
WRAMSIZE
);

127 
	`SëupC¨tPRGM≠pög
(0x10, 
WRAM
, 
WRAMSIZE
, 1);

128 
	`AddExSèã
(
WRAM
, 
WRAMSIZE
, 0, "WRAM");

129 i‡(
öfo
->
b©ãry
) {

130 
öfo
->
SaveGame
[0] = 
WRAM
;

131 
öfo
->
SaveGameLí
[0] = 
WRAMSIZE
;

133 
GameSèãRe°‹e
 = 
SèãRe°‹e
;

134 
	`AddExSèã
(&
SèãRegs
, ~0, 0, 0);

135 
	}
}

	@fceux-am/src/boards/253.cpp

21 
	~"m≠öc.h
"

23 
uöt8
 
	gchæo
[8], 
	gchrhi
[8], 
	g¥g
[2], 
	gmúr
, 
	gvlock
;

24 
öt32
 
	gIRQa
, 
	gIRQCou¡
, 
	gIRQL©ch
, 
	gIRQClock
;

25 
uöt8
 *
	gWRAM
 = 
NULL
;

26 
uöt32
 
	gWRAMSIZE
;

27 
uöt8
 *
	gCHRRAM
 = 
NULL
;

28 
uöt32
 
	gCHRRAMSIZE
;

30 
SFORMAT
 
	gSèãRegs
[] =

32 { 
chæo
, 8, "CHRL" },

33 { 
chrhi
, 8, "CHRH" },

34 { 
¥g
, 2, "PRGR" },

35 { &
múr
, 1, "MIRR" },

36 { &
vlock
, 1, "VLCK" },

37 { &
IRQa
, 4, "IRQA" },

38 { &
IRQCou¡
, 4, "IRQC" },

39 { &
IRQL©ch
, 4, "IRQL" },

40 { &
IRQClock
, 4, "IRQK" },

44 
	$Sync
() {

45 
uöt8
 
i
;

46 
	`£çrg8r
(0x10, 0x6000, 0);

47 
	`£çrg8
(0x8000, 
¥g
[0]);

48 
	`£çrg8
(0xa000, 
¥g
[1]);

49 
	`£çrg8
(0xc000, ~1);

50 
	`£çrg8
(0xe000, ~0);

51 
i
 = 0; i < 8; i++) {

52 
uöt32
 
chr
 = 
chæo
[
i
] | (
chrhi
[i] << 8);

53 i‡(((
chæo
[
i
] =4Ë|| (chæo[i] =5)Ë&& !
vlock
)

54 
	`£tchr1r
(0x10, 
i
 << 10, 
chr
 & 1);

56 
	`£tchr1
(
i
 << 10, 
chr
);

58 
múr
) {

59 0: 
	`£tmúr‹
(
MI_V
); ;

60 1: 
	`£tmúr‹
(
MI_H
); ;

61 2: 
	`£tmúr‹
(
MI_0
); ;

62 3: 
	`£tmúr‹
(
MI_1
); ;

64 
	}
}

66 
	$DECLFW
(
M253Wrôe
) {

67 i‡((
A
 >= 0xB000) && (A <= 0xE00C)) {

68 
uöt8
 
öd
 = ((((
A
 & 8) | (A >> 8)) >> 3) + 2) & 7;

69 
uöt8
 
ßr
 = 
A
 & 4;

70 
uöt8
 
˛o
 = (
chæo
[
öd
] & (0xF0 >> 
ßr
)Ë| ((
V
 & 0x0F) << sar);

71 
chæo
[
öd
] = 
˛o
;

72 i‡(
öd
 == 0) {

73 i‡(
˛o
 == 0xc8)

74 
vlock
 = 0;

75 i‡(
˛o
 == 0x88)

76 
vlock
 = 1;

78 i‡(
ßr
)

79 
chrhi
[
öd
] = 
V
 >> 4;

80 
	`Sync
();

82 
A
) {

83 0x8010: 
¥g
[0] = 
V
; 
	`Sync
(); ;

84 0xA010: 
¥g
[1] = 
V
; 
	`Sync
(); ;

85 0x9400: 
múr
 = 
V
 & 3; 
	`Sync
(); ;

86 0xF000: 
	`X6502_IRQEnd
(
FCEU_IQEXT
); 
IRQL©ch
 &0xF0; IRQL©ch |
V
 & 0xF; ;

87 0xF004: 
	`X6502_IRQEnd
(
FCEU_IQEXT
); 
IRQL©ch
 &0x0F; IRQL©ch |
V
 << 4; ;

88 0xF008: 
	`X6502_IRQEnd
(
FCEU_IQEXT
); 
IRQClock
 = 0; 
IRQCou¡
 = 
IRQL©ch
; 
IRQa
 = 
V
 & 2; ;

90 
	}
}

92 
	$M253Powî
() {

93 
vlock
 = 0;

94 
	`Sync
();

95 
	`SëRódH™dÀr
(0x6000, 0x7FFF, 
C¨tBR
);

96 
	`SëWrôeH™dÀr
(0x6000, 0x7FFF, 
C¨tBW
);

97 
	`SëRódH™dÀr
(0x8000, 0xFFFF, 
C¨tBR
);

98 
	`SëWrôeH™dÀr
(0x8000, 0xFFFF, 
M253Wrôe
);

99 
	`FCEU_ChótAddRAM
(
WRAMSIZE
 >> 10, 0x6000, 
WRAM
);

100 
	}
}

102 
	$M253Clo£
() {

103 i‡(
WRAM
)

104 
	`FCEU_g‰ì
(
WRAM
);

105 i‡(
CHRRAM
)

106 
	`FCEU_g‰ì
(
CHRRAM
);

107 
WRAM
 = 
CHRRAM
 = 
NULL
;

108 
	}
}

110 
	$M253IRQ
(
a
) {

111 
	#LCYCS
 341

	)

112 i‡(
IRQa
) {

113 
IRQClock
 +
a
 * 3;

114 i‡(
IRQClock
 >
LCYCS
) {

115 
IRQClock
 >
LCYCS
) {

116 
IRQClock
 -
LCYCS
;

117 
IRQCou¡
++;

118 i‡(
IRQCou¡
 & 0x100) {

119 
	`X6502_IRQBegö
(
FCEU_IQEXT
);

120 
IRQCou¡
 = 
IRQL©ch
;

125 
	}
}

127 
	$SèãRe°‹e
(
vîsi⁄
) {

128 
	`Sync
();

129 
	}
}

131 
	$M≠≥r253_Inô
(
C¨tInfo
 *
öfo
) {

132 
öfo
->
Powî
 = 
M253Powî
;

133 
öfo
->
Clo£
 = 
M253Clo£
;

134 
M≠IRQHook
 = 
M253IRQ
;

135 
GameSèãRe°‹e
 = 
SèãRe°‹e
;

137 
CHRRAMSIZE
 = 2048;

138 
CHRRAM
 = (
uöt8
*)
	`FCEU_gmÆloc
(
CHRRAMSIZE
);

139 
	`SëupC¨tCHRM≠pög
(0x10, 
CHRRAM
, 
CHRRAMSIZE
, 1);

140 
	`AddExSèã
(
CHRRAM
, 
CHRRAMSIZE
, 0, "CRAM");

142 
WRAMSIZE
 = 8192;

143 
WRAM
 = (
uöt8
*)
	`FCEU_gmÆloc
(
WRAMSIZE
);

144 
	`SëupC¨tPRGM≠pög
(0x10, 
WRAM
, 
WRAMSIZE
, 1);

145 
	`AddExSèã
(
WRAM
, 
WRAMSIZE
, 0, "WRAM");

146 i‡(
öfo
->
b©ãry
) {

147 
öfo
->
SaveGame
[0] = 
WRAM
;

148 
öfo
->
SaveGameLí
[0] = 
WRAMSIZE
;

151 
	`AddExSèã
(&
SèãRegs
, ~0, 0, 0);

152 
	}
}

	@fceux-am/src/boards/28.cpp

18 
	~"m≠öc.h
"

23 
	g¥g_mask_16k
;

26 
uöt8
 
	gªg
;

27 
uöt8
 
	gchr
;

28 
uöt8
 
	g¥g
;

29 
uöt8
 
	gmode
;

30 
uöt8
 
	gouãr
;

32 
	$SyncMúr‹
()

34 
mode
 & 3)

36 0: 
	`£tmúr‹
(
MI_0
); ;

37 1: 
	`£tmúr‹
(
MI_1
); ;

38 2: 
	`£tmúr‹
(
MI_V
); ;

39 3: 
	`£tmúr‹
(
MI_H
); ;

41 
	}
}

43 
	$Múr‹
(
uöt8
 
vÆue
)

45 i‡((
mode
 & 2) == 0)

47 
mode
 &= 0xfe;

48 
mode
 |
vÆue
 >> 4 & 1;

50 
	`SyncMúr‹
();

51 
	}
}

54 
	$Sync
()

56 
¥glo
 = 0;

57 
¥ghi
 = 0;

59 
outb
 = 
ouãr
 << 1;

62 
mode
 & 0x3c)

67 
¥glo
 = 
outb
;

68 
¥ghi
 = 
outb
 | 1;

72 
¥glo
 = (
outb
 & ~2Ë| ((
¥g
 << 1) & 2);

73 
¥ghi
 = (
outb
 & ~2Ë| ((
¥g
 << 1) & 2) | 1;

77 
¥glo
 = (
outb
 & ~6Ë| ((
¥g
 << 1) & 6);

78 
¥ghi
 = (
outb
 & ~6Ë| ((
¥g
 << 1) & 6) | 1;

82 
¥glo
 = (
outb
 & ~14Ë| ((
¥g
 << 1) & 14);

83 
¥ghi
 = (
outb
 & ~14Ë| ((
¥g
 << 1) & 14) | 1;

87 
¥glo
 = 
outb
;

88 
¥ghi
 = 
outb
 | (
¥g
 & 1);

91 
¥glo
 = 
outb
;

92 
¥ghi
 = (
outb
 & ~2Ë| (
¥g
 & 3);

95 
¥glo
 = 
outb
;

96 
¥ghi
 = (
outb
 & ~6Ë| (
¥g
 & 7);

99 
¥glo
 = 
outb
;

100 
¥ghi
 = (
outb
 & ~14Ë| (
¥g
 & 15);

104 
¥glo
 = 
outb
 | (
¥g
 & 1);

105 
¥ghi
 = 
outb
 | 1;

108 
¥glo
 = (
outb
 & ~2Ë| (
¥g
 & 3);

109 
¥ghi
 = 
outb
 | 1;

112 
¥glo
 = (
outb
 & ~6Ë| (
¥g
 & 7);

113 
¥ghi
 = 
outb
 | 1;

116 
¥glo
 = (
outb
 & ~14Ë| (
¥g
 & 15);

117 
¥ghi
 = 
outb
 | 1;

120 
¥glo
 &
¥g_mask_16k
;

121 
¥ghi
 &
¥g_mask_16k
;

123 
	`£çrg16
(0x8000, 
¥glo
);

124 
	`£çrg16
(0xC000, 
¥ghi
);

125 
	`£tchr8
(
chr
);

126 
	}
}

128 
	$DECLFW
(
WrôeEXP
)

130 
uöt8
 
vÆue
 = 
V
;

131 
ªg
 = 
vÆue
 & 0x81;

132 
	}
}

134 
	$DECLFW
(
WrôePRG
)

136 
uöt8
 
vÆue
 = 
V
;

137 
ªg
)

140 
chr
 = 
vÆue
 & 3;

141 
	`Múr‹
(
vÆue
);

142 
	`Sync
();

145 
¥g
 = 
vÆue
 & 15;

146 
	`Múr‹
(
vÆue
);

147 
	`Sync
();

150 
mode
 = 
vÆue
 & 63;

151 
	`SyncMúr‹
();

152 
	`Sync
();

155 
ouãr
 = 
vÆue
 & 63;

156 
	`Sync
();

159 
	}
}

163 
	$M28Re£t
()

165 
ouãr
 = 63;

166 
¥g
 = 15;

167 
	`Sync
();

168 
	}
}

171 
	$M28Powî
()

173 
¥g_mask_16k
 = 
PRGsize
[0] - 1;

176 
	`SëWrôeH™dÀr
(0x5000,0x5FFF,
WrôeEXP
);

179 
	`SëWrôeH™dÀr
(0x8000,0xFFFF,
WrôePRG
);

180 
	`SëRódH™dÀr
(0x8000,0xFFFF,
C¨tBR
);

183 
	`SëRódH™dÀr
(0x6000,0x7FFF,
C¨tBR
);

184 
	`SëWrôeH™dÀr
(0x6000,0x7FFF,
C¨tBW
);

186 
	`M28Re£t
();

187 
	}
}

189 
	$M28Clo£
()

191 
	}
}

193 
SFORMAT
 
	gSèãRegs
[]=

195 {&
ªg
, 1, "REG"},

196 {&
chr
, 1, "CHR"},

197 {&
¥g
, 1, "PRG"},

198 {&
mode
, 1, "MODE"},

199 {&
ouãr
, 1, "OUTR"},

203 
	$SèãRe°‹e
(
vîsi⁄
)

205 
	`Sync
();

206 
	}
}

208 
	$M≠≥r28_Inô
(
C¨tInfo
* 
öfo
)

210 
öfo
->
Powî
=
M28Powî
;

211 
öfo
->
Re£t
=
M28Re£t
;

212 
öfo
->
Clo£
=
M28Clo£
;

213 
GameSèãRe°‹e
=
SèãRe°‹e
;

214 
	`AddExSèã
(&
SèãRegs
, ~0, 0, 0);

215 
	}
}

	@fceux-am/src/boards/32.cpp

21 
	~"m≠öc.h
"

23 
uöt8
 
	g¥eg
[2], 
	g¸eg
[8], 
	gmúr
;

25 
uöt8
 *
	gWRAM
 = 
NULL
;

26 
uöt32
 
	gWRAMSIZE
;

28 
SFORMAT
 
	gSèãRegs
[] =

30 { 
¥eg
, 4, "PREG" },

31 { 
¸eg
, 8, "CREG" },

32 { &
múr
, 1, "MIRR" },

36 
	$Sync
() {

37 
uöt16
 
sw≠
 = ((
múr
 & 2) << 13);

38 
	`£tmúr‹
((
múr
 & 1) ^ 1);

39 
	`£çrg8r
(0x10, 0x6000, 0);

40 
	`£çrg8
(0x8000 ^ 
sw≠
, 
¥eg
[0]);

41 
	`£çrg8
(0xA000, 
¥eg
[1]);

42 
	`£çrg8
(0xC000 ^ 
sw≠
, ~1);

43 
	`£çrg8
(0xE000, ~0);

44 
uöt8
 
i
;

45 
i
 = 0; i < 8; i++)

46 
	`£tchr1
(
i
 << 10, 
¸eg
[i]);

47 
	}
}

49 
	$DECLFW
(
M32Wrôe0
) {

50 
¥eg
[0] = 
V
;

51 
	`Sync
();

52 
	}
}

54 
	$DECLFW
(
M32Wrôe1
) {

55 
múr
 = 
V
;

56 
	`Sync
();

57 
	}
}

59 
	$DECLFW
(
M32Wrôe2
) {

60 
¥eg
[1] = 
V
;

61 
	`Sync
();

62 
	}
}

64 
	$DECLFW
(
M32Wrôe3
) {

65 
¸eg
[
A
 & 7] = 
V
;

66 
	`Sync
();

67 
	}
}

69 
	$M32Powî
() {

70 
	`Sync
();

71 
	`SëRódH™dÀr
(0x6000,0x7fff,
C¨tBR
);

72 
	`SëWrôeH™dÀr
(0x6000,0x7fff,
C¨tBW
);

73 
	`SëRódH™dÀr
(0x8000, 0xFFFF, 
C¨tBR
);

74 
	`SëWrôeH™dÀr
(0x8000, 0x8FFF, 
M32Wrôe0
);

75 
	`SëWrôeH™dÀr
(0x9000, 0x9FFF, 
M32Wrôe1
);

76 
	`SëWrôeH™dÀr
(0xA000, 0xAFFF, 
M32Wrôe2
);

77 
	`SëWrôeH™dÀr
(0xB000, 0xBFFF, 
M32Wrôe3
);

78 
	`FCEU_ChótAddRAM
(
WRAMSIZE
 >> 10, 0x6000, 
WRAM
);

79 
	}
}

81 
	$M32Clo£
()

83 i‡(
WRAM
)

84 
	`FCEU_g‰ì
(
WRAM
);

85 
WRAM
 = 
NULL
;

86 
	}
}

88 
	$SèãRe°‹e
(
vîsi⁄
) {

89 
	`Sync
();

90 
	}
}

92 
	$M≠≥r32_Inô
(
C¨tInfo
 *
öfo
) {

93 
öfo
->
Powî
 = 
M32Powî
;

94 
öfo
->
Clo£
 = 
M32Clo£
;

95 
GameSèãRe°‹e
 = 
SèãRe°‹e
;

97 
WRAMSIZE
 = 8192;

98 
WRAM
 = (
uöt8
*)
	`FCEU_gmÆloc
(
WRAMSIZE
);

99 
	`SëupC¨tPRGM≠pög
(0x10, 
WRAM
, 
WRAMSIZE
, 1);

100 
	`AddExSèã
(
WRAM
, 
WRAMSIZE
, 0, "WRAM");

102 
	`AddExSèã
(&
SèãRegs
, ~0, 0, 0);

103 
	}
}

	@fceux-am/src/boards/33.cpp

21 
	~"m≠öc.h
"

23 
uöt8
 
	gis48
;

24 
uöt8
 
	gªgs
[8], 
	gmúr
;

25 
uöt8
 
	gIRQa
;

26 
öt16
 
	gIRQCou¡
, 
	gIRQL©ch
;

28 
SFORMAT
 
	gSèãRegs
[] =

30 { 
ªgs
, 8, "PREG" },

31 { &
múr
, 1, "MIRR" },

32 { &
IRQa
, 1, "IRQA" },

33 { &
IRQCou¡
, 2, "IRQC" },

34 { &
IRQL©ch
, 2, "IRQL" },

38 
	$Sync
() {

39 
	`£tmúr‹
(
múr
);

40 
	`£çrg8
(0x8000, 
ªgs
[0]);

41 
	`£çrg8
(0xA000, 
ªgs
[1]);

42 
	`£çrg8
(0xC000, ~1);

43 
	`£çrg8
(0xE000, ~0);

44 
	`£tchr2
(0x0000, 
ªgs
[2]);

45 
	`£tchr2
(0x0800, 
ªgs
[3]);

46 
	`£tchr1
(0x1000, 
ªgs
[4]);

47 
	`£tchr1
(0x1400, 
ªgs
[5]);

48 
	`£tchr1
(0x1800, 
ªgs
[6]);

49 
	`£tchr1
(0x1C00, 
ªgs
[7]);

50 
	}
}

52 
	$DECLFW
(
M33Wrôe
) {

53 
A
 &= 0xF003;

54 
A
) {

55 0x8000: 
ªgs
[0] = 
V
 & 0x3F; if(!
is48
Ë
múr
 = ((V >> 6Ë& 1Ë^ 1; 
	`Sync
(); ;

56 0x8001: 
ªgs
[1] = 
V
 & 0x3F; 
	`Sync
(); ;

57 0x8002: 
ªgs
[2] = 
V
; 
	`Sync
(); ;

58 0x8003: 
ªgs
[3] = 
V
; 
	`Sync
(); ;

59 0xA000: 
ªgs
[4] = 
V
; 
	`Sync
(); ;

60 0xA001: 
ªgs
[5] = 
V
; 
	`Sync
(); ;

61 0xA002: 
ªgs
[6] = 
V
; 
	`Sync
(); ;

62 0xA003: 
ªgs
[7] = 
V
; 
	`Sync
(); ;

64 
	}
}

66 
	$DECLFW
(
M48Wrôe
) {

67 
A
 & 0xF003) {

68 0xC000: 
IRQL©ch
 = 
V
; ;

69 0xC001: 
IRQCou¡
 = 
IRQL©ch
; ;

70 0xC003: 
IRQa
 = 0; 
	`X6502_IRQEnd
(
FCEU_IQEXT
); ;

71 0xC002: 
IRQa
 = 1; ;

72 0xE000: 
múr
 = ((
V
 >> 6Ë& 1Ë^ 1; 
	`Sync
(); ;

74 
	}
}

76 
	$M33Powî
() {

77 
	`Sync
();

78 
	`SëRódH™dÀr
(0x8000, 0xFFFF, 
C¨tBR
);

79 
	`SëWrôeH™dÀr
(0x8000, 0xFFFF, 
M33Wrôe
);

80 
	}
}

82 
	$M48Powî
() {

83 
	`Sync
();

84 
	`SëRódH™dÀr
(0x8000, 0xFFFF, 
C¨tBR
);

85 
	`SëWrôeH™dÀr
(0x8000, 0xBFFF, 
M33Wrôe
);

86 
	`SëWrôeH™dÀr
(0xC000, 0xFFFF, 
M48Wrôe
);

87 
	}
}

89 
	$M48IRQ
() {

90 i‡(
IRQa
) {

91 
IRQCou¡
++;

92 i‡(
IRQCou¡
 == 0x100) {

93 
	`X6502_IRQBegö
(
FCEU_IQEXT
);

94 
IRQa
 = 0;

97 
	}
}

99 
	$SèãRe°‹e
(
vîsi⁄
) {

100 
	`Sync
();

101 
	}
}

103 
	$M≠≥r33_Inô
(
C¨tInfo
 *
öfo
) {

104 
is48
 = 0;

105 
öfo
->
Powî
 = 
M33Powî
;

106 
GameSèãRe°‹e
 = 
SèãRe°‹e
;

107 
	`AddExSèã
(&
SèãRegs
, ~0, 0, 0);

108 
	}
}

110 
	$M≠≥r48_Inô
(
C¨tInfo
 *
öfo
) {

111 
is48
 = 1;

112 
öfo
->
Powî
 = 
M48Powî
;

113 
GameHBIRQHook
 = 
M48IRQ
;

114 
GameSèãRe°‹e
 = 
SèãRe°‹e
;

115 
	`AddExSèã
(&
SèãRegs
, ~0, 0, 0);

116 
	}
}

	@fceux-am/src/boards/34.cpp

30 
	~"m≠öc.h
"

32 
uöt8
 
	gªgs
[3];

33 
uöt8
 *
	gWRAM
 = 
NULL
;

34 
uöt32
 
	gWRAMSIZE
;

36 
SFORMAT
 
	gSèãRegs
[] =

38 { 
ªgs
, 3, "REGS" },

42 
	$Sync
() {

43 
	`£çrg8r
(0x10, 0x6000, 0);

44 
	`£çrg32
(0x8000, 
ªgs
[0]);

45 
	`£tchr4
(0x0000, 
ªgs
[1]);

46 
	`£tchr4
(0x1000, 
ªgs
[2]);

47 
	}
}

49 
	$DECLFW
(
M34Wrôe
) {

50 i‡(
A
 >= 0x8000)

51 
ªgs
[0] = 
V
;

53 
A
) {

54 0x7ffd: 
ªgs
[0] = 
V
; ;

55 0x7f„: 
ªgs
[1] = 
V
; ;

56 0x7fff: 
ªgs
[2] = 
V
; ;

58 
	`Sync
();

59 
	}
}

61 
	$M34Powî
() {

62 
ªgs
[0] =Ñegs[1] = 0;

63 
ªgs
[2] = 1;

64 
	`Sync
();

65 
	`SëRódH™dÀr
(0x6000, 0x7ffc, 
C¨tBR
);

66 
	`SëWrôeH™dÀr
(0x6000, 0x7ffc, 
C¨tBW
);

67 
	`SëRódH™dÀr
(0x8000, 0xffff, 
C¨tBR
);

68 
	`SëWrôeH™dÀr
(0x7ffd, 0xffff, 
M34Wrôe
);

69 
	`FCEU_ChótAddRAM
(
WRAMSIZE
 >> 10, 0x6000, 
WRAM
);

70 
	}
}

72 
	$M34Clo£
() {

73 i‡(
WRAM
)

74 
	`FCEU_g‰ì
(
WRAM
);

75 
WRAM
 = 
NULL
;

76 
	}
}

78 
	$SèãRe°‹e
(
vîsi⁄
) {

79 
	`Sync
();

80 
	}
}

82 
	$M≠≥r34_Inô
(
C¨tInfo
 *
öfo
) {

83 
öfo
->
Powî
 = 
M34Powî
;

84 
öfo
->
Clo£
 = 
M34Clo£
;

85 
GameSèãRe°‹e
 = 
SèãRe°‹e
;

87 
WRAMSIZE
 = 8192;

88 
WRAM
 = (
uöt8
*)
	`FCEU_gmÆloc
(
WRAMSIZE
);

89 
	`SëupC¨tPRGM≠pög
(0x10, 
WRAM
, 
WRAMSIZE
, 1);

90 
	`AddExSèã
(
WRAM
, 
WRAMSIZE
, 0, "WRAM");

92 
	`AddExSèã
(&
SèãRegs
, ~0, 0, 0);

93 
	}
}

	@fceux-am/src/boards/36.cpp

23 
	~"m≠öc.h
"

25 
uöt8
 
	gœtche
, 
	gmúr
;

27 
SFORMAT
 
	gSèãRegs
[] =

29 { &
œtche
, 1, "LATC" },

30 { &
múr
, 1, "MIRR" },

34 
	$Sync
() {

35 
	`£çrg32
(0x8000, 
œtche
 >> 4);

36 
	`£tchr8
(
œtche
 & 0xf);

37 
	}
}

39 
	$DECLFW
(
M36Wrôe
) {

41 (
A
>>12)&7) {

42 0: 
múr
 = 
MI_V
; 
	`£tmúr‹
(mirr); ;

43 4: 
múr
 = 
MI_H
; 
	`£tmúr‹
(mirr); ;

45 
œtche
 = 
V
;

46 
	`Sync
();

47 
	}
}

49 
	$DECLFR
(
M36Ród
) {

50  
œtche
;

51 
	}
}

53 
	$M36Powî
() {

54 
œtche
 = 0;

55 
	`Sync
();

56 
	`SëRódH™dÀr
(0x4100, 0x4100, 
M36Ród
);

57 
	`SëRódH™dÀr
(0x8000, 0xFFFF, 
C¨tBR
);

58 
	`SëWrôeH™dÀr
(0x8000, 0xFFFE, 
M36Wrôe
);

59 
	}
}

61 
	$M36Re°‹e
(
vîsi⁄
) {

62 
	`Sync
();

63 
	}
}

65 
	$M≠≥r36_Inô
(
C¨tInfo
 *
öfo
) {

66 
öfo
->
Powî
 = 
M36Powî
;

67 
GameSèãRe°‹e
 = 
M36Re°‹e
;

68 
	`AddExSèã
(
SèãRegs
, ~0, 0, 0);

69 
	}
}

	@fceux-am/src/boards/3d-block.cpp

21 
	~"m≠öc.h
"

23 
uöt8
 
	gªg
[4], 
	gIRQa
;

24 
öt16
 
	gIRQCou¡
, 
	gIRQPau£
;

26 
öt16
 
	gCou¡
 = 0x0000;

28 
SFORMAT
 
	gSèãRegs
[] =

30 { 
ªg
, 4, "REGS" },

31 { &
IRQa
, 1, "IRQA" },

32 { &
IRQCou¡
, 2, "IRQC" },

36 
	$Sync
() {

37 
	`£çrg32
(0x8000, 0);

38 
	`£tchr8
(0);

39 
	}
}

42 
	#Pau£
 0x010

	)

44 
	$DECLFW
(
UNL3DBlockWrôe
) {

45 
A
) {

50 0x4800: 
ªg
[0] = 
V
; ;

51 0x4900: 
ªg
[1] = 
V
; ;

52 0x4a00: 
ªg
[2] = 
V
; ;

53 0x4e00: 
ªg
[3] = 
V
; 
IRQCou¡
 = 
Cou¡
; 
IRQPau£
 = 
Pau£
; 
IRQa
 = 1; 
	`X6502_IRQEnd
(
FCEU_IQEXT
); ;

55 
	}
}

57 
	$UNL3DBlockPowî
() {

58 
	`Sync
();

59 
	`SëRódH™dÀr
(0x8000, 0xFFFF, 
C¨tBR
);

60 
	`SëWrôeH™dÀr
(0x4800, 0x4E00, 
UNL3DBlockWrôe
);

61 
	}
}

63 
	$UNL3DBlockRe£t
() {

64 
Cou¡
 += 0x10;

65 
	`FCEU_¥ötf
("Cou¡=%04x\n", 
Cou¡
);

66 
	}
}

68 
	$UNL3DBlockIRQHook
(
a
) {

69 i‡(
IRQa
) {

70 i‡(
IRQCou¡
 > 0) {

71 
IRQCou¡
 -
a
;

73 i‡(
IRQPau£
 > 0) {

74 
IRQPau£
 -
a
;

75 
	`X6502_IRQBegö
(
FCEU_IQEXT
);

77 
IRQCou¡
 = 
Cou¡
;

78 
IRQPau£
 = 
Pau£
;

79 
	`X6502_IRQEnd
(
FCEU_IQEXT
);

83 
	}
}

85 
	$SèãRe°‹e
(
vîsi⁄
) {

86 
	`Sync
();

87 
	}
}

89 
	$UNL3DBlock_Inô
(
C¨tInfo
 *
öfo
) {

90 
öfo
->
Powî
 = 
UNL3DBlockPowî
;

91 
öfo
->
Re£t
 = 
UNL3DBlockRe£t
;

92 
M≠IRQHook
 = 
UNL3DBlockIRQHook
;

93 
GameSèãRe°‹e
 = 
SèãRe°‹e
;

94 
	`AddExSèã
(&
SèãRegs
, ~0, 0, 0);

95 
	}
}

	@fceux-am/src/boards/40.cpp

25 
	~"m≠öc.h
"

27 
uöt8
 
	gªg
;

28 
uöt32
 
	gIRQCou¡
, 
	gIRQa
;

30 
SFORMAT
 
	gSèãRegs
[] =

32 { &
IRQCou¡
, 4, "IRQC" },

33 { &
IRQa
, 4, "IRQA" },

34 { &
ªg
, 1, "REG" },

38 
	$Sync
() {

39 
	`£çrg8
(0x6000, ~1);

40 
	`£çrg8
(0x8000, ~3);

41 
	`£çrg8
(0xa000, ~2);

42 
	`£çrg8
(0xc000, 
ªg
);

43 
	`£çrg8
(0xe000, ~0);

44 
	`£tchr8
(0);

45 
	}
}

47 
	$DECLFW
(
M40Wrôe
) {

48 
A
 & 0xe000) {

49 0x8000: 
IRQa
 = 0; 
IRQCou¡
 = 0; 
	`X6502_IRQEnd
(
FCEU_IQEXT
); ;

50 0xa000: 
IRQa
 = 1; ;

51 0xe000: 
ªg
 = 
V
 & 7; 
	`Sync
(); ;

53 
	}
}

55 
	$M40Powî
() {

56 
ªg
 = 0;

57 
	`Sync
();

58 
	`SëRódH™dÀr
(0x6000, 0xffff, 
C¨tBR
);

59 
	`SëWrôeH™dÀr
(0x8000, 0xffff, 
M40Wrôe
);

60 
	}
}

62 
	$M40Re£t
() {

63 
	}
}

65 
	$M40IRQHook
(
a
) {

66 i‡(
IRQa
) {

67 i‡(
IRQCou¡
 < 4096)

68 
IRQCou¡
 +
a
;

70 
IRQa
 = 0;

71 
	`X6502_IRQBegö
(
FCEU_IQEXT
);

74 
	}
}

76 
	$SèãRe°‹e
(
vîsi⁄
) {

77 
	`Sync
();

78 
	}
}

80 
	$M≠≥r40_Inô
(
C¨tInfo
 *
öfo
) {

81 
öfo
->
Re£t
 = 
M40Re£t
;

82 
öfo
->
Powî
 = 
M40Powî
;

83 
M≠IRQHook
 = 
M40IRQHook
;

84 
GameSèãRe°‹e
 = 
SèãRe°‹e
;

85 
	`AddExSèã
(&
SèãRegs
, ~0, 0, 0);

86 
	}
}

	@fceux-am/src/boards/41.cpp

21 
	~"m≠öc.h
"

23 
uöt8
 
	gmaöªg
, 
	gchºeg
, 
	gmúr‹
;

25 
SFORMAT
 
	gSèãRegs
[] =

27 { &
maöªg
, 1, "MREG" },

28 { &
chºeg
, 1, "CREG" },

29 { &
múr‹
, 1, "MIRR" },

33 
	$Sync
() {

34 
	`£çrg32
(0x8000, 
maöªg
 & 7);

35 
	`£tchr8
(
chºeg
);

36 
	`£tmúr‹
(
múr‹
);

37 
	}
}

39 
	$DECLFW
(
M41Wrôe0
) {

40 
maöªg
 = 
A
 & 0xFF;

41 
múr‹
 = ((
A
 >> 5) & 1) ^ 1;

42 
chºeg
 = (chºeg & 3Ë| ((
A
 >> 1) & 0xC);

43 
	`Sync
();

44 
	}
}

46 
	$DECLFW
(
M41Wrôe1
) {

47 i‡(
maöªg
 & 0x4) {

48 
chºeg
 = (chºeg & 0xCË| (
A
 & 3);

49 
	`Sync
();

51 
	}
}

53 
	$M41Powî
() {

54 
maöªg
 = 
chºeg
 = 0;

55 
	`Sync
();

56 
	`SëRódH™dÀr
(0x8000, 0xFFFF, 
C¨tBR
);

57 
	`SëWrôeH™dÀr
(0x6000, 0x67FF, 
M41Wrôe0
);

58 
	`SëWrôeH™dÀr
(0x8000, 0xFFFF, 
M41Wrôe1
);

59 
	}
}

61 
	$SèãRe°‹e
(
vîsi⁄
) {

62 
	`Sync
();

63 
	}
}

65 
	$M≠≥r41_Inô
(
C¨tInfo
 *
öfo
) {

66 
öfo
->
Powî
 = 
M41Powî
;

67 
GameSèãRe°‹e
 = 
SèãRe°‹e
;

68 
	`AddExSèã
(&
SèãRegs
, ~0, 0, 0);

69 
	}
}

	@fceux-am/src/boards/411120-c.cpp

23 
	~"m≠öc.h
"

24 
	~"mmc3.h
"

26 
uöt8
 
	gª£t_Êag
 = 0;

28 
	$BMC411120CCW
(
uöt32
 
A
, 
uöt8
 
V
) {

29 
	`£tchr1
(
A
, 
V
 | ((
EXPREGS
[0] & 3) << 7));

30 
	}
}

32 
	$BMC411120CPW
(
uöt32
 
A
, 
uöt8
 
V
) {

33 i‡(
EXPREGS
[0] & (8 | 
ª£t_Êag
))

34 
	`£çrg32
(0x8000, ((
EXPREGS
[0] >> 4) & 3) | (0x0C));

36 
	`£çrg8
(
A
, (
V
 & 0x0FË| ((
EXPREGS
[0] & 3) << 4));

37 
	}
}

39 
	$DECLFW
(
BMC411120CLoWrôe
) {

40 
EXPREGS
[0] = 
A
;

41 
	`FixMMC3PRG
(
MMC3_cmd
);

42 
	`FixMMC3CHR
(
MMC3_cmd
);

43 
	}
}

45 
	$BMC411120CRe£t
() {

46 
EXPREGS
[0] = 0;

47 
ª£t_Êag
 ^= 4;

48 
	`MMC3RegRe£t
();

49 
	}
}

51 
	$BMC411120CPowî
() {

52 
EXPREGS
[0] = 0;

53 
	`GíMMC3Powî
();

54 
	`SëWrôeH™dÀr
(0x6000, 0x7FFF, 
BMC411120CLoWrôe
);

55 
	}
}

57 
	$BMC411120C_Inô
(
C¨tInfo
 *
öfo
) {

58 
	`GíMMC3_Inô
(
öfo
, 128, 128, 8, 0);

59 
pwøp
 = 
BMC411120CPW
;

60 
cwøp
 = 
BMC411120CCW
;

61 
öfo
->
Powî
 = 
BMC411120CPowî
;

62 
öfo
->
Re£t
 = 
BMC411120CRe£t
;

63 
	`AddExSèã
(
EXPREGS
, 1, 0, "EXPR");

64 
	}
}

	@fceux-am/src/boards/42.cpp

25 
	~"m≠öc.h
"

27 
uöt8
 
	g¥eg
, 
	g¸eg
, 
	gmúr
;

28 
uöt32
 
	gIRQCou¡
, 
	gIRQa
;

30 
SFORMAT
 
	gSèãRegs
[] =

32 { &
¥eg
, 1, "PREG" },

33 { &
¸eg
, 1, "CREG" },

34 { &
múr
, 1, "MIRR" },

35 { &
IRQCou¡
, 4, "IRQC" },

36 { &
IRQa
, 4, "IRQA" },

40 
	$Sync
() {

41 
	`£çrg8
(0x6000, 
¥eg
);

42 
	`£çrg32
(0x8000, ~0);

43 
	`£tchr8
(
¸eg
);

44 
	`£tmúr‹
(
múr
);

45 
	}
}

47 
	$DECLFW
(
M42Wrôe
) {

48 
A
 & 0xE003) {

49 0x8000: 
¸eg
 = 
V
; 
	`Sync
(); ;

50 0xE000: 
¥eg
 = 
V
 & 0x0F; 
	`Sync
(); ;

51 0xE001: 
múr
 = ((
V
 >> 3Ë& 1 ) ^ 1; 
	`Sync
(); ;

52 0xE002: 
IRQa
 = 
V
 & 2; i‡(!IRQaË
IRQCou¡
 = 0; 
	`X6502_IRQEnd
(
FCEU_IQEXT
); ;

54 
	}
}

56 
	$M42Powî
() {

57 
¥eg
 = 0;

58 
múr
 = 1;

59 
	`Sync
();

60 
	`SëRódH™dÀr
(0x6000, 0xffff, 
C¨tBR
);

61 
	`SëWrôeH™dÀr
(0x6000, 0xffff, 
M42Wrôe
);

62 
	}
}

64 
	$M42IRQHook
(
a
) {

65 i‡(
IRQa
) {

66 
IRQCou¡
 +
a
;

67 i‡(
IRQCou¡
 >= 32768) IRQCount -= 32768;

68 i‡(
IRQCou¡
 >= 24576)

69 
	`X6502_IRQBegö
(
FCEU_IQEXT
);

71 
	`X6502_IRQEnd
(
FCEU_IQEXT
);

73 
	}
}

75 
	$SèãRe°‹e
(
vîsi⁄
) {

76 
	`Sync
();

77 
	}
}

79 
	$M≠≥r42_Inô
(
C¨tInfo
 *
öfo
) {

80 
öfo
->
Powî
 = 
M42Powî
;

81 
M≠IRQHook
 = 
M42IRQHook
;

82 
GameSèãRe°‹e
 = 
SèãRe°‹e
;

83 
	`AddExSèã
(&
SèãRegs
, ~0, 0, 0);

84 
	}
}

	@fceux-am/src/boards/43.cpp

24 
	~"m≠öc.h
"

26 
uöt8
 
	gªg
, 
	gsw≠
;

27 
uöt32
 
	gIRQCou¡
, 
	gIRQa
;

29 
SFORMAT
 
	gSèãRegs
[] =

31 { &
IRQCou¡
, 4, "IRQC" },

32 { &
IRQa
, 4, "IRQA" },

33 { &
ªg
, 1, "REG" },

34 { &
sw≠
, 1, "SWAP" },

38 
	$Sync
() {

39 
	`£çrg4
(0x5000, 8 << 1);

40 
	`£çrg8
(0x6000, 
sw≠
?0:2);

41 
	`£çrg8
(0x8000, 1);

42 
	`£çrg8
(0xa000, 0);

43 
	`£çrg8
(0xc000, 
ªg
);

44 
	`£çrg8
(0xe000, 
sw≠
?8:9);

48 
	`£tchr8
(0);

49 
	}
}

51 
	$DECLFW
(
M43Wrôe
) {

53 
å™so
[8] = { 4, 3, 5, 3, 6, 3, 7, 3 };

54 
A
 & 0xf1ff) {

55 0x4022: 
ªg
 = 
å™so
[
V
 & 7]; 
	`Sync
(); ;

56 0x4120: 
sw≠
 = 
V
 & 1; 
	`Sync
(); ;

58 0x4122: 
IRQa
 = 
V
 & 1; 
	`X6502_IRQEnd
(
FCEU_IQEXT
); 
IRQCou¡
 = 0; ;

60 
	}
}

62 
	$M43Powî
() {

63 
ªg
 = 
sw≠
 = 0;

64 
	`Sync
();

65 
	`SëRódH™dÀr
(0x5000, 0xffff, 
C¨tBR
);

66 
	`SëWrôeH™dÀr
(0x4020, 0xffff, 
M43Wrôe
);

67 
	}
}

69 
	$M43Re£t
() {

70 
	}
}

72 
	$M43IRQHook
(
a
) {

73 
IRQCou¡
 +
a
;

74 i‡(
IRQa
)

75 i‡(
IRQCou¡
 >= 4096) {

76 
IRQa
 = 0;

77 
	`X6502_IRQBegö
(
FCEU_IQEXT
);

79 
	}
}

81 
	$SèãRe°‹e
(
vîsi⁄
) {

82 
	`Sync
();

83 
	}
}

85 
	$M≠≥r43_Inô
(
C¨tInfo
 *
öfo
) {

86 
öfo
->
Re£t
 = 
M43Re£t
;

87 
öfo
->
Powî
 = 
M43Powî
;

88 
M≠IRQHook
 = 
M43IRQHook
;

89 
GameSèãRe°‹e
 = 
SèãRe°‹e
;

90 
	`AddExSèã
(&
SèãRegs
, ~0, 0, 0);

91 
	}
}

	@fceux-am/src/boards/46.cpp

21 
	~"m≠öc.h
"

23 
uöt8
 
	gªg0
, 
	gªg1
;

25 
SFORMAT
 
	gSèãRegs
[] =

27 { &
ªg0
, 1, "REG0" },

28 { &
ªg1
, 1, "REG1" },

32 
	$Sync
() {

33 
	`£çrg32
(0x8000, (
ªg1
 & 1Ë+ ((
ªg0
 & 0xF) << 1));

34 
	`£tchr8
(((
ªg1
 >> 4Ë& 7Ë+ ((
ªg0
 & 0xF0) >> 1));

35 
	}
}

37 
	$DECLFW
(
M46Wrôe0
) {

38 
ªg0
 = 
V
;

39 
	`Sync
();

40 
	}
}

42 
	$DECLFW
(
M46Wrôe1
) {

43 
ªg1
 = 
V
;

44 
	`Sync
();

45 
	}
}

47 
	$M46Powî
() {

48 
ªg0
 = 
ªg1
 = 0;

49 
	`Sync
();

50 
	`SëRódH™dÀr
(0x8000, 0xFFFF, 
C¨tBR
);

51 
	`SëWrôeH™dÀr
(0x6000, 0x7FFF, 
M46Wrôe0
);

52 
	`SëWrôeH™dÀr
(0x8000, 0xFFFF, 
M46Wrôe1
);

53 
	}
}

55 
	$M46Re£t
() {

56 
ªg0
 = 
ªg1
 = 0;

57 
	`Sync
();

58 
	}
}

60 
	$SèãRe°‹e
(
vîsi⁄
) {

61 
	`Sync
();

62 
	}
}

64 
	$M≠≥r46_Inô
(
C¨tInfo
 *
öfo
) {

65 
öfo
->
Powî
 = 
M46Powî
;

66 
öfo
->
Re£t
 = 
M46Re£t
;

67 
GameSèãRe°‹e
 = 
SèãRe°‹e
;

68 
	`AddExSèã
(&
SèãRegs
, ~0, 0, 0);

69 
	}
}

	@fceux-am/src/boards/50.cpp

25 
	~"m≠öc.h
"

27 
uöt8
 
	gªg
;

28 
uöt32
 
	gIRQCou¡
, 
	gIRQa
;

30 
SFORMAT
 
	gSèãRegs
[] =

32 { &
IRQCou¡
, 4, "IRQC" },

33 { &
IRQa
, 4, "IRQA" },

34 { &
ªg
, 1, "REG" },

38 
	$Sync
() {

39 
	`£çrg8
(0x6000, 0xF);

40 
	`£çrg8
(0x8000, 0x8);

41 
	`£çrg8
(0xa000, 0x9);

42 
	`£çrg8
(0xc000, 
ªg
);

43 
	`£çrg8
(0xe000, 0xB);

44 
	`£tchr8
(0);

45 
	}
}

47 
	$DECLFW
(
M50Wrôe
) {

48 
A
 & 0xD160) {

49 0x4120: 
IRQa
 = 
V
 & 1; i‡(!IRQaË
IRQCou¡
 = 0; 
	`X6502_IRQEnd
(
FCEU_IQEXT
); ;

50 0x4020: 
ªg
 = ((
V
 & 1Ë<< 2Ë| ((V & 2Ë>> 1Ë| ((V & 4Ë>> 1Ë| (V & 8); 
	`Sync
(); ;

52 
	}
}

54 
	$M50Powî
() {

55 
ªg
 = 0;

56 
	`Sync
();

57 
	`SëRódH™dÀr
(0x6000, 0xffff, 
C¨tBR
);

58 
	`SëWrôeH™dÀr
(0x4020, 0x5fff, 
M50Wrôe
);

59 
	}
}

61 
	$M50Re£t
() {

62 
	}
}

64 
	$M50IRQHook
(
a
) {

65 i‡(
IRQa
) {

66 i‡(
IRQCou¡
 < 4096)

67 
IRQCou¡
 +
a
;

69 
IRQa
 = 0;

70 
	`X6502_IRQBegö
(
FCEU_IQEXT
);

73 
	}
}

75 
	$SèãRe°‹e
(
vîsi⁄
) {

76 
	`Sync
();

77 
	}
}

79 
	$M≠≥r50_Inô
(
C¨tInfo
 *
öfo
) {

80 
öfo
->
Re£t
 = 
M50Re£t
;

81 
öfo
->
Powî
 = 
M50Powî
;

82 
M≠IRQHook
 = 
M50IRQHook
;

83 
GameSèãRe°‹e
 = 
SèãRe°‹e
;

84 
	`AddExSèã
(&
SèãRegs
, ~0, 0, 0);

85 
	}
}

	@fceux-am/src/boards/51.cpp

21 
	~"m≠öc.h
"

23 
uöt8
 
	gb™k
, 
	gmode
;

24 
SFORMAT
 
	gSèãRegs
[] =

26 { &
b™k
, 1, "BANK" },

27 { &
mode
, 1, "MODE" },

31 
	$Sync
() {

32 i‡(
mode
 & 2) {

33 
	`£çrg8
(0x6000, ((
b™k
 & 7) << 2) | 0x23);

34 
	`£çrg16
(0x8000, (
b™k
 << 1) | 0);

35 
	`£çrg16
(0xC000, (
b™k
 << 1) | 1);

37 
	`£çrg8
(0x6000, ((
b™k
 & 4) << 2) | 0x2F);

38 
	`£çrg16
(0x8000, (
b™k
 << 1Ë| (
mode
 >> 4));

39 
	`£çrg16
(0xC000, ((
b™k
 & 0xC) << 1) | 7);

41 i‡(
mode
 == 0x12)

42 
	`£tmúr‹
(
MI_H
);

44 
	`£tmúr‹
(
MI_V
);

45 
	`£tchr8
(0);

46 
	}
}

48 
	$DECLFW
(
M51WrôeMode
) {

49 
mode
 = 
V
 & 0x12;

50 
	`Sync
();

51 
	}
}

53 
	$DECLFW
(
M51WrôeB™k
) {

54 
b™k
 = 
V
 & 0x0F;

55 i‡(
A
 & 0x4000)

56 
mode
 = (modê& 2Ë| (
V
 & 0x10);

57 
	`Sync
();

58 
	}
}

60 
	$M51Powî
() {

61 
b™k
 = 0;

62 
mode
 = 2;

63 
	`Sync
();

64 
	`SëWrôeH™dÀr
(0x6000, 0x7FFF, 
M51WrôeMode
);

65 
	`SëWrôeH™dÀr
(0x8000, 0xFFFF, 
M51WrôeB™k
);

66 
	`SëRódH™dÀr
(0x6000, 0xFFFF, 
C¨tBR
);

67 
	}
}

69 
	$M51Re£t
() {

70 
b™k
 = 0;

71 
mode
 = 2;

72 
	`Sync
();

73 
	}
}

75 
	$SèãRe°‹e
(
vîsi⁄
) {

76 
	`Sync
();

77 
	}
}

79 
	$M≠≥r51_Inô
(
C¨tInfo
 *
öfo
) {

80 
öfo
->
Powî
 = 
M51Powî
;

81 
öfo
->
Re£t
 = 
M51Re£t
;

82 
	`AddExSèã
(&
SèãRegs
, ~0, 0, 0);

83 
GameSèãRe°‹e
 = 
SèãRe°‹e
;

84 
	}
}

	@fceux-am/src/boards/57.cpp

22 
	~"m≠öc.h
"

24 
uöt8
 
	g¥g_ªg
;

25 
uöt8
 
	gchr_ªg
;

26 
uöt8
 
	ghrd_Êag
;

28 
SFORMAT
 
	gSèãRegs
[] =

30 { &
hrd_Êag
, 1, "DPSW" },

31 { &
¥g_ªg
, 1, "PRG" },

32 { &
chr_ªg
, 1, "CHR" },

36 
	$Sync
() {

37 i‡(
¥g_ªg
 & 0x80)

38 
	`£çrg32
(0x8000, 
¥g_ªg
 >> 6);

40 
	`£çrg16
(0x8000, (
¥g_ªg
 >> 5) & 3);

41 
	`£çrg16
(0xC000, (
¥g_ªg
 >> 5) & 3);

43 
	`£tmúr‹
((
¥g_ªg
 & 8) >> 3);

44 
	`£tchr8
((
chr_ªg
 & 3Ë| (
¥g_ªg
 & 7) | ((prg_reg & 0x10) >> 1));

45 
	}
}

47 
	$DECLFR
(
M57Ród
) {

48  
hrd_Êag
;

49 
	}
}

51 
	$DECLFW
(
M57Wrôe
) {

52 i‡((
A
 & 0x8800) == 0x8800)

53 
¥g_ªg
 = 
V
;

55 
chr_ªg
 = 
V
;

56 
	`Sync
();

57 
	}
}

59 
	$M57Powî
() {

60 
¥g_ªg
 = 0;

61 
chr_ªg
 = 0;

62 
hrd_Êag
 = 0;

63 
	`SëRódH™dÀr
(0x8000, 0xFFFF, 
C¨tBR
);

64 
	`SëWrôeH™dÀr
(0x8000, 0xFFFF, 
M57Wrôe
);

65 
	`SëRódH™dÀr
(0x6000, 0x6000, 
M57Ród
);

66 
	`Sync
();

67 
	}
}

69 
	$M57Re£t
() {

70 
hrd_Êag
++;

71 
hrd_Êag
 &= 3;

72 
	`FCEU_¥ötf
("Sñe˘ Regi°î = %02x\n", 
hrd_Êag
);

73 
	}
}

75 
	$SèãRe°‹e
(
vîsi⁄
) {

76 
	`Sync
();

77 
	}
}

79 
	$M≠≥r57_Inô
(
C¨tInfo
 *
öfo
) {

80 
öfo
->
Powî
 = 
M57Powî
;

81 
öfo
->
Re£t
 = 
M57Re£t
;

82 
GameSèãRe°‹e
 = 
SèãRe°‹e
;

83 
	`AddExSèã
(&
SèãRegs
, ~0, 0, 0);

84 
	}
}

	@fceux-am/src/boards/603-5052.cpp

21 
	~"m≠öc.h
"

22 
	~"mmc3.h
"

24 
uöt8
 
	glut
[4] = { 0x00, 0x02, 0x02, 0x03 };

26 
	$DECLFW
(
UNL6035052PrŸWrôe
) {

27 
EXPREGS
[0] = 
lut
[
V
 & 3];

28 
	}
}

30 
	$DECLFR
(
UNL6035052PrŸRód
) {

31  
EXPREGS
[0];

32 
	}
}

34 
	$UNL6035052Powî
() {

35 
	`GíMMC3Powî
();

36 
	`SëWrôeH™dÀr
(0x4020, 0x7FFF, 
UNL6035052PrŸWrôe
);

37 
	`SëRódH™dÀr
(0x4020, 0x7FFF, 
UNL6035052PrŸRód
);

38 
	}
}

40 
	$UNL6035052_Inô
(
C¨tInfo
 *
öfo
) {

41 
	`GíMMC3_Inô
(
öfo
, 128, 256, 0, 0);

42 
öfo
->
Powî
 = 
UNL6035052Powî
;

43 
	`AddExSèã
(
EXPREGS
, 6, 0, "EXPR");

44 
	}
}

	@fceux-am/src/boards/62.cpp

21 
	~"m≠öc.h
"

23 
uöt8
 
	gb™k
;

24 
uöt16
 
	gmode
;

25 
SFORMAT
 
	gSèãRegs
[] =

27 { &
b™k
, 1, "BANK" },

28 { &
mode
, 2, "MODE" },

32 
	$Sync
() {

33 
	`£tchr8
(((
mode
 & 0x1FË<< 2Ë| (
b™k
 & 0x03));

34 i‡(
mode
 & 0x20) {

35 
	`£çrg16
(0x8000, (
mode
 & 0x40) | ((mode >> 8) & 0x3F));

36 
	`£çrg16
(0xc000, (
mode
 & 0x40) | ((mode >> 8) & 0x3F));

38 
	`£çrg32
(0x8000, ((
mode
 & 0x40) | ((mode >> 8) & 0x3F)) >> 1);

39 
	`£tmúr‹
(((
mode
 >> 7) & 1) ^ 1);

40 
	}
}

42 
	$DECLFW
(
M62Wrôe
) {

43 
mode
 = 
A
 & 0x3FFF;

44 
b™k
 = 
V
 & 3;

45 
	`Sync
();

46 
	}
}

48 
	$M62Powî
() {

49 
b™k
 = 
mode
 = 0;

50 
	`Sync
();

51 
	`SëWrôeH™dÀr
(0x8000, 0xFFFF, 
M62Wrôe
);

52 
	`SëRódH™dÀr
(0x8000, 0xFFFF, 
C¨tBR
);

53 
	}
}

55 
	$M62Re£t
() {

56 
b™k
 = 
mode
 = 0;

57 
	`Sync
();

58 
	}
}

60 
	$SèãRe°‹e
(
vîsi⁄
) {

61 
	`Sync
();

62 
	}
}

64 
	$M≠≥r62_Inô
(
C¨tInfo
 *
öfo
) {

65 
öfo
->
Powî
 = 
M62Powî
;

66 
öfo
->
Re£t
 = 
M62Re£t
;

67 
	`AddExSèã
(&
SèãRegs
, ~0, 0, 0);

68 
GameSèãRe°‹e
 = 
SèãRe°‹e
;

69 
	}
}

	@fceux-am/src/boards/65.cpp

22 
	~"m≠öc.h
"

24 
uöt8
 
	g¥eg
[3], 
	g¸eg
[8], 
	gmúr
;

25 
uöt8
 
	gIRQa
;

26 
öt16
 
	gIRQCou¡
, 
	gIRQL©ch
;

28 
SFORMAT
 
	gSèãRegs
[] =

30 { 
¥eg
, 3, "PREG" },

31 { 
¸eg
, 8, "CREG" },

32 { &
múr
, 1, "MIRR" },

33 { &
IRQa
, 1, "IRQA" },

34 { &
IRQCou¡
, 2, "IRQC" },

35 { &
IRQL©ch
, 2, "IRQL" },

39 
	$Sync
() {

40 
	`£tmúr‹
(
múr
);

41 
	`£çrg8
(0x8000, 
¥eg
[0]);

42 
	`£çrg8
(0xA000, 
¥eg
[1]);

43 
	`£çrg8
(0xC000, 
¥eg
[2]);

44 
	`£çrg8
(0xE000, ~0);

45 
	`£tchr1
(0x0000, 
¸eg
[0]);

46 
	`£tchr1
(0x0400, 
¸eg
[1]);

47 
	`£tchr1
(0x0800, 
¸eg
[2]);

48 
	`£tchr1
(0x0C00, 
¸eg
[3]);

49 
	`£tchr1
(0x1000, 
¸eg
[4]);

50 
	`£tchr1
(0x1400, 
¸eg
[5]);

51 
	`£tchr1
(0x1800, 
¸eg
[6]);

52 
	`£tchr1
(0x1C00, 
¸eg
[7]);

53 
	`£tmúr‹
(
múr
);

54 
	}
}

56 
	$DECLFW
(
M65Wrôe
) {

57 
A
) {

58 0x8000: 
¥eg
[0] = 
V
; 
	`Sync
(); ;

59 0xA000: 
¥eg
[1] = 
V
; 
	`Sync
(); ;

60 0xC000: 
¥eg
[2] = 
V
; 
	`Sync
(); ;

61 0x9001: 
múr
 = ((
V
 >> 7Ë& 1Ë^ 1; 
	`Sync
(); ;

62 0x9003: 
IRQa
 = 
V
 & 0x80; 
	`X6502_IRQEnd
(
FCEU_IQEXT
); ;

63 0x9004: 
IRQCou¡
 = 
IRQL©ch
; ;

64 0x9005: 
IRQL©ch
 &0x00FF; IRQL©ch |
V
 << 8; ;

65 0x9006: 
IRQL©ch
 &0xFF00; IRQL©ch |
V
; ;

66 0xB000: 
¸eg
[0] = 
V
; 
	`Sync
(); ;

67 0xB001: 
¸eg
[1] = 
V
; 
	`Sync
(); ;

68 0xB002: 
¸eg
[2] = 
V
; 
	`Sync
(); ;

69 0xB003: 
¸eg
[3] = 
V
; 
	`Sync
(); ;

70 0xB004: 
¸eg
[4] = 
V
; 
	`Sync
(); ;

71 0xB005: 
¸eg
[5] = 
V
; 
	`Sync
(); ;

72 0xB006: 
¸eg
[6] = 
V
; 
	`Sync
(); ;

73 0xB007: 
¸eg
[7] = 
V
; 
	`Sync
(); ;

75 
	}
}

77 
	$M65Powî
() {

78 
¥eg
[2] = ~1;

79 
	`Sync
();

80 
	`SëRódH™dÀr
(0x8000, 0xFFFF, 
C¨tBR
);

81 
	`SëWrôeH™dÀr
(0x8000, 0xFFFF, 
M65Wrôe
);

82 
	}
}

84 
	$M65IRQ
(
a
) {

85 i‡(
IRQa
) {

86 
IRQCou¡
 -
a
;

87 i‡(
IRQCou¡
 < -4) {

88 
	`X6502_IRQBegö
(
FCEU_IQEXT
);

89 
IRQa
 = 0;

90 
IRQCou¡
 = -1;

93 
	}
}

95 
	$SèãRe°‹e
(
vîsi⁄
) {

96 
	`Sync
();

97 
	}
}

99 
	$M≠≥r65_Inô
(
C¨tInfo
 *
öfo
) {

100 
öfo
->
Powî
 = 
M65Powî
;

101 
M≠IRQHook
 = 
M65IRQ
;

102 
GameSèãRe°‹e
 = 
SèãRe°‹e
;

103 
	`AddExSèã
(&
SèãRegs
, ~0, 0, 0);

104 
	}
}

	@fceux-am/src/boards/67.cpp

22 
	~"m≠öc.h
"

24 
uöt8
 
	g¥eg
, 
	g¸eg
[4], 
	gmúr
, 
	gsu¡oggÀ
 = 0;

25 
uöt8
 
	gIRQa
;

26 
öt16
 
	gIRQCou¡
, 
	gIRQL©ch
;

28 
SFORMAT
 
	gSèãRegs
[] =

30 { &
¥eg
, 1, "PREG" },

31 { &
su¡oggÀ
, 1, "STOG" },

32 { 
¸eg
, 4, "CREG" },

33 { &
múr
, 1, "MIRR" },

34 { &
IRQa
, 1, "IRQA" },

35 { &
IRQCou¡
, 2, "IRQC" },

36 { &
IRQL©ch
, 2, "IRQL" },

40 
	$Sync
() {

41 
	`£tmúr‹
(
múr
);

42 
	`£çrg16
(0x8000, 
¥eg
);

43 
	`£çrg16
(0xC000, ~0);

44 
	`£tchr2
(0x0000, 
¸eg
[0]);

45 
	`£tchr2
(0x0800, 
¸eg
[1]);

46 
	`£tchr2
(0x1000, 
¸eg
[2]);

47 
	`£tchr2
(0x1800, 
¸eg
[3]);

48 
múr
) {

49 0: 
	`£tmúr‹
(
MI_V
); ;

50 1: 
	`£tmúr‹
(
MI_H
); ;

51 2: 
	`£tmúr‹
(
MI_0
); ;

52 3: 
	`£tmúr‹
(
MI_1
); ;

54 
	}
}

56 
	$DECLFW
(
M67Wrôe
) {

57 
A
 & 0xF800) {

58 0x8800: 
¸eg
[0] = 
V
; 
	`Sync
(); ;

59 0x9800: 
¸eg
[1] = 
V
; 
	`Sync
(); ;

60 0xA800: 
¸eg
[2] = 
V
; 
	`Sync
(); ;

61 0xB800: 
¸eg
[3] = 
V
; 
	`Sync
(); ;

64 
IRQCou¡
 &0xFF << (
su¡oggÀ
 << 3);

65 
IRQCou¡
 |
V
 << ((
su¡oggÀ
 ^ 1) << 3);

66 
su¡oggÀ
 ^= 1;

69 
su¡oggÀ
 = 0;

70 
IRQa
 = 
V
 & 0x10;

71 
	`X6502_IRQEnd
(
FCEU_IQEXT
);

73 0xE800: 
múr
 = 
V
 & 3; 
	`Sync
(); ;

74 0xF800: 
¥eg
 = 
V
; 
	`Sync
(); ;

76 
	}
}

78 
	$M67Powî
() {

79 
su¡oggÀ
 = 0;

80 
	`Sync
();

81 
	`SëRódH™dÀr
(0x8000, 0xFFFF, 
C¨tBR
);

82 
	`SëWrôeH™dÀr
(0x8000, 0xFFFF, 
M67Wrôe
);

83 
	}
}

85 
	$M67IRQ
(
a
) {

86 i‡(
IRQa
) {

87 
IRQCou¡
 -
a
;

88 i‡(
IRQCou¡
 <= 0) {

89 
	`X6502_IRQBegö
(
FCEU_IQEXT
);

90 
IRQa
 = 0;

91 
IRQCou¡
 = -1;

94 
	}
}

96 
	$SèãRe°‹e
(
vîsi⁄
) {

97 
	`Sync
();

98 
	}
}

100 
	$M≠≥r67_Inô
(
C¨tInfo
 *
öfo
) {

101 
öfo
->
Powî
 = 
M67Powî
;

102 
M≠IRQHook
 = 
M67IRQ
;

103 
GameSèãRe°‹e
 = 
SèãRe°‹e
;

104 
	`AddExSèã
(&
SèãRegs
, ~0, 0, 0);

105 
	}
}

	@fceux-am/src/boards/68.cpp

21 
	~"m≠öc.h
"

23 
uöt8
 
	gchr_ªg
[4];

24 
uöt8
 
	gkogame
, 
	g¥g_ªg
, 
	g¡1
, 
	g¡2
, 
	gmúr
;

26 
uöt8
 *
	gWRAM
 = 
NULL
;

27 
uöt32
 
	gWRAMSIZE
, 
	gcou¡
;

29 
SFORMAT
 
	gSèãRegs
[] =

31 { &
¡1
, 1, "NT1" },

32 { &
¡2
, 1, "NT2" },

33 { &
múr
, 1, "MIRR" },

34 { &
¥g_ªg
, 1, "PRG" },

35 { &
kogame
, 1, "KGME" },

36 { &
cou¡
, 4, "CNT" },

37 { 
chr_ªg
, 4, "CHR" },

41 
	$M68NTfix
() {

42 i‡((!
UNIFchºama
Ë&& (
múr
 & 0x10)) {

43 
PPUNTARAM
 = 0;

44 
múr
 & 3) {

46 
v«∑ge
[0] = v«∑ge[2] = 
CHR±r
[0] + (((
¡1
 | 128Ë& 
CHRmask1
[0]) << 10);

47 
v«∑ge
[1] = v«∑ge[3] = 
CHR±r
[0] + (((
¡2
 | 128Ë& 
CHRmask1
[0]) << 10);

50 
v«∑ge
[0] = v«∑ge[1] = 
CHR±r
[0] + (((
¡1
 | 128Ë& 
CHRmask1
[0]) << 10);

51 
v«∑ge
[2] = v«∑ge[3] = 
CHR±r
[0] + (((
¡2
 | 128Ë& 
CHRmask1
[0]) << 10);

54 
v«∑ge
[0] = v«∑ge[1] = v«∑ge[2] = v«∑ge[3] = 
CHR±r
[0] + (((
¡1
 | 128Ë& 
CHRmask1
[0]) << 10);

57 
v«∑ge
[0] = v«∑ge[1] = v«∑ge[2] = v«∑ge[3] = 
CHR±r
[0] + (((
¡2
 | 128Ë& 
CHRmask1
[0]) << 10);

61 
múr
 & 3) {

62 0: 
	`£tmúr‹
(
MI_V
); ;

63 1: 
	`£tmúr‹
(
MI_H
); ;

64 2: 
	`£tmúr‹
(
MI_0
); ;

65 3: 
	`£tmúr‹
(
MI_1
); ;

67 
	}
}

69 
	$Sync
() {

70 
	`£tchr2
(0x0000, 
chr_ªg
[0]);

71 
	`£tchr2
(0x0800, 
chr_ªg
[1]);

72 
	`£tchr2
(0x1000, 
chr_ªg
[2]);

73 
	`£tchr2
(0x1800, 
chr_ªg
[3]);

74 
	`£çrg8r
(0x10, 0x6000, 0);

75 
	`£çrg16r
((
PRG±r
[1]Ë? 
kogame
 : 0, 0x8000, 
¥g_ªg
);

76 
	`£çrg16
(0xC000, ~0);

77 
	}
}

79 
	$DECLFR
(
M68Ród
) {

80 i‡(!(
kogame
 & 8)) {

81 
cou¡
++;

82 i‡(
cou¡
 == 1784)

83 
	`£çrg16r
(0, 0x8000, 
¥g_ªg
);

85  
	`C¨tBR
(
A
);

86 
	}
}

88 
	$DECLFW
(
M68WrôeLo
) {

89 i‡(!
V
) {

90 
cou¡
 = 0;

91 
	`£çrg16r
((
PRG±r
[1]Ë? 
kogame
 : 0, 0x8000, 
¥g_ªg
);

93 
	`C¨tBW
(
A
, 
V
);

94 
	}
}

96 
	$DECLFW
(
M68WrôeCHR
) {

97 
chr_ªg
[(
A
 >> 12Ë& 3] = 
V
;

98 
	`Sync
();

99 
	}
}

101 
	$DECLFW
(
M68WrôeNT1
) {

102 
¡1
 = 
V
;

103 
	`M68NTfix
();

104 
	}
}

106 
	$DECLFW
(
M68WrôeNT2
) {

107 
¡2
 = 
V
;

108 
	`M68NTfix
();

109 
	}
}

111 
	$DECLFW
(
M68WrôeMIR
) {

112 
múr
 = 
V
;

113 
	`M68NTfix
();

114 
	}
}

116 
	$DECLFW
(
M68WrôeROM
) {

117 
¥g_ªg
 = 
V
 & 7;

118 
kogame
 = ((
V
 >> 3) & 1) ^ 1;

119 
	`Sync
();

120 
	}
}

122 
	$M68Powî
() {

123 
¥g_ªg
 = 0;

124 
kogame
 = 0;

125 
	`Sync
();

126 
	`M68NTfix
();

127 
	`SëRódH™dÀr
(0x6000, 0x7FFF, 
C¨tBR
);

128 
	`SëRódH™dÀr
(0x8000, 0xBFFF, 
M68Ród
);

129 
	`SëRódH™dÀr
(0xC000, 0xFFFF, 
C¨tBR
);

130 
	`SëWrôeH™dÀr
(0x8000, 0xBFFF, 
M68WrôeCHR
);

131 
	`SëWrôeH™dÀr
(0xC000, 0xCFFF, 
M68WrôeNT1
);

132 
	`SëWrôeH™dÀr
(0xD000, 0xDFFF, 
M68WrôeNT2
);

133 
	`SëWrôeH™dÀr
(0xE000, 0xEFFF, 
M68WrôeMIR
);

134 
	`SëWrôeH™dÀr
(0xF000, 0xFFFF, 
M68WrôeROM
);

135 
	`SëWrôeH™dÀr
(0x6000, 0x6000, 
M68WrôeLo
);

136 
	`SëWrôeH™dÀr
(0x6001, 0x7FFF, 
C¨tBW
);

137 
	`FCEU_ChótAddRAM
(
WRAMSIZE
 >> 10, 0x6000, 
WRAM
);

138 
	}
}

140 
	$M68Clo£
() {

141 i‡(
WRAM
)

142 
	`FCEU_g‰ì
(
WRAM
);

143 
WRAM
 = 
NULL
;

144 
	}
}

146 
	$SèãRe°‹e
(
vîsi⁄
) {

147 
	`Sync
();

148 
	`M68NTfix
();

149 
	}
}

151 
	$M≠≥r68_Inô
(
C¨tInfo
 *
öfo
) {

152 
öfo
->
Powî
 = 
M68Powî
;

153 
öfo
->
Clo£
 = 
M68Clo£
;

154 
GameSèãRe°‹e
 = 
SèãRe°‹e
;

155 
WRAMSIZE
 = 8192;

156 
WRAM
 = (
uöt8
*)
	`FCEU_gmÆloc
(
WRAMSIZE
);

157 
	`SëupC¨tPRGM≠pög
(0x10, 
WRAM
, 
WRAMSIZE
, 1);

158 i‡(
öfo
->
b©ãry
) {

159 
öfo
->
SaveGame
[0] = 
WRAM
;

160 
öfo
->
SaveGameLí
[0] = 
WRAMSIZE
;

162 
	`AddExSèã
(
WRAM
, 
WRAMSIZE
, 0, "WRAM");

163 
	`AddExSèã
(&
SèãRegs
, ~0, 0, 0);

164 
	}
}

	@fceux-am/src/boards/69.cpp

22 
	~"m≠öc.h
"

24 
uöt8
 
	gcmdªg
, 
	g¥eg
[4], 
	g¸eg
[8], 
	gmúr
;

25 
uöt8
 
	gIRQa
;

26 
öt32
 
	gIRQCou¡
;

27 
uöt8
 *
	gWRAM
 = 
NULL
;

28 
uöt32
 
	gWRAMSIZE
;

30 
SFORMAT
 
	gSèãRegs
[] =

32 { &
cmdªg
, 1, "CMDR" },

33 { 
¥eg
, 4, "PREG" },

34 { 
¸eg
, 8, "CREG" },

35 { &
múr
, 1, "MIRR" },

36 { &
IRQa
, 1, "IRQA" },

37 { &
IRQCou¡
, 4, "IRQC" },

41 
	$Sync
() {

42 
uöt8
 
i
;

43 i‡((
¥eg
[3] & 0xC0) == 0xC0)

44 
	`£çrg8r
(0x10, 0x6000, 
¥eg
[3] & 0x3F);

46 
	`£çrg8
(0x6000, 
¥eg
[3] & 0x3F);

47 
	`£çrg8
(0x8000, 
¥eg
[0]);

48 
	`£çrg8
(0xA000, 
¥eg
[1]);

49 
	`£çrg8
(0xC000, 
¥eg
[2]);

50 
	`£çrg8
(0xE000, ~0);

51 
i
 = 0; i < 8; i++)

52 
	`£tchr1
(
i
 << 10, 
¸eg
[i]);

53 
múr
 & 3) {

54 0: 
	`£tmúr‹
(
MI_V
); ;

55 1: 
	`£tmúr‹
(
MI_H
); ;

56 2: 
	`£tmúr‹
(
MI_0
); ;

57 3: 
	`£tmúr‹
(
MI_1
); ;

59 
	}
}

61 
	$DECLFW
(
M69WRAMWrôe
) {

62 i‡((
¥eg
[3] & 0xC0) == 0xC0)

63 
	`C¨tBW
(
A
, 
V
);

64 
	}
}

66 
	$DECLFR
(
M69WRAMRód
) {

67 i‡((
¥eg
[3] & 0xC0) == 0x40)

68  
X
.
DB
;

70  
	`C¨tBR
(
A
);

71 
	}
}

73 
	$DECLFW
(
M69Wrôe0
) {

74 
cmdªg
 = 
V
 & 0xF;

75 
	}
}

77 
	$DECLFW
(
M69Wrôe1
) {

78 
cmdªg
) {

79 0x0: 
¸eg
[0] = 
V
; 
	`Sync
(); ;

80 0x1: 
¸eg
[1] = 
V
; 
	`Sync
(); ;

81 0x2: 
¸eg
[2] = 
V
; 
	`Sync
(); ;

82 0x3: 
¸eg
[3] = 
V
; 
	`Sync
(); ;

83 0x4: 
¸eg
[4] = 
V
; 
	`Sync
(); ;

84 0x5: 
¸eg
[5] = 
V
; 
	`Sync
(); ;

85 0x6: 
¸eg
[6] = 
V
; 
	`Sync
(); ;

86 0x7: 
¸eg
[7] = 
V
; 
	`Sync
(); ;

87 0x8: 
¥eg
[3] = 
V
; 
	`Sync
(); ;

88 0x9: 
¥eg
[0] = 
V
; 
	`Sync
(); ;

89 0xA: 
¥eg
[1] = 
V
; 
	`Sync
(); ;

90 0xB: 
¥eg
[2] = 
V
; 
	`Sync
(); ;

91 0xC: 
múr
 = 
V
 & 3; 
	`Sync
();;

92 0xD: 
IRQa
 = 
V
; 
	`X6502_IRQEnd
(
FCEU_IQEXT
); ;

93 0xE: 
IRQCou¡
 &0xFF00; IRQCou¡ |
V
; ;

94 0xF: 
IRQCou¡
 &0x00FF; IRQCou¡ |
V
 << 8; ;

96 
	}
}

100 
AYSound
(
Cou¡
);

101 
AYSoundHQ
();

102 
DoAYSQ
(
x
);

103 
DoAYSQHQ
(
x
);

105 
uöt8
 
	g¢dcmd
, 
	g§eg
[14];

106 
öt32
 
	gvcou¡
[3];

107 
öt32
 
	gdcou¡
[3];

108 
	gCAYBC
[3];

110 
SFORMAT
 
	gSSèãRegs
[] =

112 { &
¢dcmd
, 1, "SCMD" },

113 { 
§eg
, 14, "SREG" },

117 
	$DECLFW
(
M69SWrôe0
) {

118 
¢dcmd
 = 
V
 % 14;

119 
	}
}

121 
	$DECLFW
(
M69SWrôe1
) {

122 
x
;

123 
GameExpSound
.
Fûl
 = 
AYSound
;

124 
GameExpSound
.
HiFûl
 = 
AYSoundHQ
;

125 i‡(
FSëtögs
.
SndR©e
)

126 
¢dcmd
) {

129 8: i‡(
FSëtögs
.
soundq
 >1Ë
	`DoAYSQHQ
(0); 
	`DoAYSQ
(0); ;

132 9: i‡(
FSëtögs
.
soundq
 >1Ë
	`DoAYSQHQ
(1); 
	`DoAYSQ
(1); ;

135 10: i‡(
FSëtögs
.
soundq
 >1Ë
	`DoAYSQHQ
(2); 
	`DoAYSQ
(2); ;

137 
x
 = 0; x < 2; x++)

138 i‡(
FSëtögs
.
soundq
 >1Ë
	`DoAYSQHQ
(
x
); 
	`DoAYSQ
(x);

141 
§eg
[
¢dcmd
] = 
V
;

142 
	}
}

144 
	$DoAYSQ
(
x
) {

145 
öt32
 
‰eq
 = ((
§eg
[
x
 << 1] | ((sreg[(x << 1) + 1] & 15) << 8)) + 1) << (4 + 17);

146 
öt32
 
amp
 = (
§eg
[0x8 + 
x
] & 15) << 2;

147 
öt32
 
°¨t
, 
íd
;

148 
V
;

150 
amp
 +=ámp >> 1;

152 
°¨t
 = 
CAYBC
[
x
];

153 
íd
 = (
SOUNDTS
 << 16Ë/ 
soundtsöc
;

154 i‡(
íd
 <
°¨t
) ;

155 
CAYBC
[
x
] = 
íd
;

157 i‡(
amp
 && !(
§eg
[0x7] & (1 << 
x
)))

158 
V
 = 
°¨t
; V < 
íd
; V++) {

159 i‡(
dcou¡
[
x
])

160 
Wave
[
V
 >> 4] +
amp
;

161 
vcou¡
[
x
] -
√söcsize
;

162 
vcou¡
[
x
] <= 0) {

163 
dcou¡
[
x
] ^= 1;

164 
vcou¡
[
x
] +
‰eq
;

167 
	}
}

169 
	$DoAYSQHQ
(
x
) {

170 
uöt32
 
V
;

171 
öt32
 
‰eq
 = ((
§eg
[
x
 << 1] | ((sreg[(x << 1) + 1] & 15) << 8)) + 1) << 4;

172 
öt32
 
amp
 = (
§eg
[0x8 + 
x
] & 15) << 6;

174 
amp
 +=ámp >> 1;

176 i‡(!(
§eg
[0x7] & (1 << 
x
))) {

177 
V
 = 
CAYBC
[
x
]; V < 
SOUNDTS
; V++) {

178 i‡(
dcou¡
[
x
])

179 
WaveHi
[
V
] +
amp
;

180 
vcou¡
[
x
]--;

181 i‡(
vcou¡
[
x
] <= 0) {

182 
dcou¡
[
x
] ^= 1;

183 
vcou¡
[
x
] = 
‰eq
;

187 
CAYBC
[
x
] = 
SOUNDTS
;

188 
	}
}

190 
	$AYSound
(
Cou¡
) {

191 
x
;

192 
	`DoAYSQ
(0);

193 
	`DoAYSQ
(1);

194 
	`DoAYSQ
(2);

195 
x
 = 0; x < 3; x++)

196 
CAYBC
[
x
] = 
Cou¡
;

197 
	}
}

199 
	$AYSoundHQ
() {

200 
	`DoAYSQHQ
(0);

201 
	`DoAYSQHQ
(1);

202 
	`DoAYSQHQ
(2);

203 
	}
}

205 
	$AYHiSync
(
öt32
 
ts
) {

206 
x
;

208 
x
 = 0; x < 3; x++)

209 
CAYBC
[
x
] = 
ts
;

210 
	}
}

212 
	$M≠≥r69_ESI
() {

213 
GameExpSound
.
RCh™ge
 = 
M≠≥r69_ESI
;

214 
GameExpSound
.
HiSync
 = 
AYHiSync
;

215 
	`mem£t
(
dcou¡
, 0, (dcount));

216 
	`mem£t
(
vcou¡
, 0, (vcount));

217 
	`mem£t
(
CAYBC
, 0, (CAYBC));

218 
	`AddExSèã
(&
SSèãRegs
, ~0, 0, 0);

219 
	}
}

223 
	$M69Powî
() {

224 
cmdªg
 = 
¢dcmd
 = 0;

225 
IRQCou¡
 = 0xFFFF;

226 
IRQa
 = 0;

227 
	`Sync
();

228 
	`SëRódH™dÀr
(0x6000, 0x7FFF, 
M69WRAMRód
);

229 
	`SëWrôeH™dÀr
(0x6000, 0x7FFF, 
M69WRAMWrôe
);

230 
	`SëRódH™dÀr
(0x8000, 0xFFFF, 
C¨tBR
);

231 
	`SëWrôeH™dÀr
(0x8000, 0x9FFF, 
M69Wrôe0
);

232 
	`SëWrôeH™dÀr
(0xA000, 0xBFFF, 
M69Wrôe1
);

233 
	`SëWrôeH™dÀr
(0xC000, 0xDFFF, 
M69SWrôe0
);

234 
	`SëWrôeH™dÀr
(0xE000, 0xFFFF, 
M69SWrôe1
);

235 
	`FCEU_ChótAddRAM
(
WRAMSIZE
 >> 10, 0x6000, 
WRAM
);

236 
	}
}

238 
	$M69Clo£
() {

239 i‡(
WRAM
)

240 
	`FCEU_g‰ì
(
WRAM
);

241 
WRAM
 = 
NULL
;

242 
	}
}

244 
	$M69IRQHook
(
a
) {

245 i‡(
IRQa
) {

246 
IRQCou¡
 -
a
;

247 i‡(
IRQCou¡
 <= 0) {

248 
	`X6502_IRQBegö
(
FCEU_IQEXT
); 
IRQa
 = 0; 
IRQCou¡
 = 0xFFFF;

251 
	}
}

253 
	$SèãRe°‹e
(
vîsi⁄
) {

254 
	`Sync
();

255 
	}
}

257 
	$M≠≥r69_Inô
(
C¨tInfo
 *
öfo
) {

258 
öfo
->
Powî
 = 
M69Powî
;

259 
öfo
->
Clo£
 = 
M69Clo£
;

260 
M≠IRQHook
 = 
M69IRQHook
;

261 if(
öfo
->
öes2
)

262 
WRAMSIZE
 = 
öfo
->
wøm_size
 + info->
b©ãry_wøm_size
;

264 
WRAMSIZE
 = 8192;

265 
WRAM
 = (
uöt8
*)
	`FCEU_gmÆloc
(
WRAMSIZE
);

266 
	`SëupC¨tPRGM≠pög
(0x10, 
WRAM
, 
WRAMSIZE
, 1);

267 
	`AddExSèã
(
WRAM
, 
WRAMSIZE
, 0, "WRAM");

268 i‡(
öfo
->
b©ãry
) {

269 
öfo
->
SaveGame
[0] = 
WRAM
;

270 
öfo
->
SaveGameLí
[0] = 
WRAMSIZE
;

272 
GameSèãRe°‹e
 = 
SèãRe°‹e
;

273 
	`M≠≥r69_ESI
();

274 
	`AddExSèã
(&
SèãRegs
, ~0, 0, 0);

275 
	}
}

277 
	$NSFAY_Inô
() {

278 
¢dcmd
 = 0;

279 
	`SëWrôeH™dÀr
(0xC000, 0xDFFF, 
M69SWrôe0
);

280 
	`SëWrôeH™dÀr
(0xE000, 0xFFFF, 
M69SWrôe1
);

281 
	`M≠≥r69_ESI
();

282 
	}
}

	@fceux-am/src/boards/71.cpp

21 
	~"m≠öc.h
"

23 
uöt8
 
	g¥eg
, 
	gmúr
;

25 
SFORMAT
 
	gSèãRegs
[] =

27 { &
¥eg
, 1, "PREG" },

28 { &
múr
, 1, "MIRR" },

32 
	$Sync
() {

33 
	`£çrg16
(0x8000, 
¥eg
);

34 
	`£çrg16
(0xC000, ~0);

35 
	`£tchr8
(0);

36 if(
múr
)

37 
	`£tmúr‹
(
múr
);

38 
	}
}

40 
	$DECLFW
(
M71Wrôe
) {

41 i‡((
A
 & 0xF000) == 0x9000)

42 
múr
 = 
MI_0
 + ((
V
 >> 4) & 1);

44 
¥eg
 = 
V
;

45 
	`Sync
();

46 
	}
}

48 
	$M71Powî
() {

49 
múr
 = 0;

50 
	`Sync
();

51 
	`SëRódH™dÀr
(0x8000, 0xFFFF, 
C¨tBR
);

52 
	`SëWrôeH™dÀr
(0x8000, 0xFFFF, 
M71Wrôe
);

53 
	}
}

55 
	$SèãRe°‹e
(
vîsi⁄
) {

56 
	`Sync
();

57 
	}
}

59 
	$M≠≥r71_Inô
(
C¨tInfo
 *
öfo
) {

60 
öfo
->
Powî
 = 
M71Powî
;

61 
GameSèãRe°‹e
 = 
SèãRe°‹e
;

63 
	`AddExSèã
(&
SèãRegs
, ~0, 0, 0);

64 
	}
}

	@fceux-am/src/boards/72.cpp

24 
	~"m≠öc.h
"

26 
uöt8
 
	g¥eg
, 
	g¸eg
;

28 
SFORMAT
 
	gSèãRegs
[] =

30 { &
¥eg
, 1, "PREG" },

31 { &
¸eg
, 1, "CREG" },

35 
	$Sync
() {

36 
	`£çrg16
(0x8000, 
¥eg
);

37 
	`£çrg16
(0xC000, ~0);

38 
	`£tchr8
(
¸eg
);

39 
	}
}

41 
	$DECLFW
(
M72Wrôe
) {

42 i‡(
V
 & 0x80)

43 
¥eg
 = 
V
 & 0xF;

44 i‡(
V
 & 0x40)

45 
¸eg
 = 
V
 & 0xF;

46 
	`Sync
();

47 
	}
}

49 
	$M72Powî
() {

50 
	`Sync
();

51 
	`SëRódH™dÀr
(0x8000, 0xFFFF, 
C¨tBR
);

52 
	`SëWrôeH™dÀr
(0x6000, 0xFFFF, 
M72Wrôe
);

53 
	}
}

55 
	$SèãRe°‹e
(
vîsi⁄
) {

56 
	`Sync
();

57 
	}
}

59 
	$M≠≥r72_Inô
(
C¨tInfo
 *
öfo
) {

60 
öfo
->
Powî
 = 
M72Powî
;

61 
GameSèãRe°‹e
 = 
SèãRe°‹e
;

63 
	`AddExSèã
(&
SèãRegs
, ~0, 0, 0);

64 
	}
}

	@fceux-am/src/boards/77.cpp

21 
	~"m≠öc.h
"

23 
uöt8
 
	gœtche
;

25 
uöt8
 *
	gCHRRAM
=
NULL
;

26 
uöt32
 
	gCHRRAMSIZE
;

28 
SFORMAT
 
	gSèãRegs
[] =

30 { &
œtche
, 1, "LATC" },

34 
	$Sync
() {

35 
	`£çrg32
(0x8000, 
œtche
 & 7);

36 
	`£tchr2
(0x0000, 
œtche
 >> 4);

37 
	`£tchr2r
(0x10, 0x0800, 2);

38 
	`£tchr4r
(0x10, 0x1000, 0);

39 
	}
}

41 
	$DECLFW
(
M77Wrôe
) {

42 
œtche
 = 
V
;

43 
	`Sync
();

44 
	}
}

46 
	$M77Powî
() {

47 
œtche
 = 0;

48 
	`Sync
();

49 
	`SëRódH™dÀr
(0x8000, 0xFFFF, 
C¨tBR
);

50 
	`SëWrôeH™dÀr
(0x8000, 0xFFFF, 
M77Wrôe
);

51 
	}
}

53 
	$M77Clo£
()

55 i‡(
CHRRAM
)

56 
	`FCEU_g‰ì
(
CHRRAM
);

57 
CHRRAM
 = 
NULL
;

58 
	}
}

60 
	$SèãRe°‹e
(
vîsi⁄
) {

61 
	`Sync
();

62 
	}
}

64 
	$M≠≥r77_Inô
(
C¨tInfo
 *
öfo
) {

65 
öfo
->
Powî
 = 
M77Powî
;

66 
öfo
->
Clo£
 = 
M77Clo£
;

67 
GameSèãRe°‹e
 = 
SèãRe°‹e
;

69 
CHRRAMSIZE
 = 6 * 1024;

70 
CHRRAM
 = (
uöt8
*)
	`FCEU_gmÆloc
(
CHRRAMSIZE
);

71 
	`SëupC¨tCHRM≠pög
(0x10, 
CHRRAM
, 
CHRRAMSIZE
, 1);

72 
	`AddExSèã
(
CHRRAM
, 
CHRRAMSIZE
, 0, "CRAM");

74 
	`AddExSèã
(&
SèãRegs
, ~0, 0, 0);

75 
	}
}

	@fceux-am/src/boards/79.cpp

22 
	~"m≠öc.h
"

24 
uöt8
 
	g¸eg
, 
	g¥eg
;

25 
SFORMAT
 
	gSèãRegs
[] =

27 { &
¸eg
, 1, "CREG" },

28 { &
¥eg
, 1, "PREG" },

32 
	$Sync
() {

33 
	`£çrg32
(0x8000, 
¥eg
);

34 
	`£tchr8
(
¸eg
);

35 
	}
}

37 
	$DECLFW
(
M79Wrôe
) {

38 i‡((
A
 < 0x8000) && ((A ^ 0x4100) == 0)) {

39 
¥eg
 = (
V
 >> 3) & 1;

41 
¸eg
 = 
V
 & 7;

42 
	`Sync
();

43 
	}
}

45 
	$M79Powî
() {

46 
¥eg
 = ~0;

47 
	`Sync
();

48 
	`SëWrôeH™dÀr
(0x4100, 0x5FFF, 
M79Wrôe
);

49 
	`SëWrôeH™dÀr
(0x8000, 0xFFFF, 
M79Wrôe
);

50 
	`SëRódH™dÀr
(0x8000, 0xFFFF, 
C¨tBR
);

51 
	}
}

53 
	$SèãRe°‹e
(
vîsi⁄
) {

54 
	`Sync
();

55 
	}
}

57 
	$M≠≥r79_Inô
(
C¨tInfo
 *
öfo
) {

58 
öfo
->
Powî
 = 
M79Powî
;

59 
	`AddExSèã
(&
SèãRegs
, ~0, 0, 0);

60 
GameSèãRe°‹e
 = 
SèãRe°‹e
;

61 
	}
}

	@fceux-am/src/boards/80.cpp

22 
	~"m≠öc.h
"

24 
uöt8
 
	g¥eg
[3], 
	g¸eg
[6], 
	gisExMúr
;

25 
uöt8
 
	gmúr
, 
	gcmd
, 
	gwøm_íabÀ
, 
	gwøm
[256];

26 
uöt8
 
	gmˇche
[8];

27 
uöt32
 
	gœ°µu
;

29 
SFORMAT
 
	gSèãRegs80
[] =

31 { 
¥eg
, 3, "PREG" },

32 { 
¸eg
, 6, "CREG" },

33 { 
wøm
, 256, "WRAM" },

34 { &
múr
, 1, "MIRR" },

35 { &
wøm_íabÀ
, 1, "WRME" },

39 
SFORMAT
 
	gSèãRegs95
[] =

41 { &
cmd
, 1, "CMDR" },

42 { 
¥eg
, 3, "PREG" },

43 { 
¸eg
, 6, "CREG" },

44 { 
mˇche
, 8, "MCCH" },

45 { &
œ°µu
, 4, "LPPU" },

49 
SFORMAT
 
	gSèãRegs207
[] =

51 { 
¥eg
, 3, "PREG" },

52 { 
¸eg
, 6, "CREG" },

53 { 
mˇche
, 8, "MCCH" },

54 { &
œ°µu
, 4, "LPPU" },

58 
	$Sync
() {

59 
	`£çrg8
(0x8000, 
¥eg
[0]);

60 
	`£çrg8
(0xA000, 
¥eg
[1]);

61 
	`£çrg8
(0xC000, 
¥eg
[2]);

62 
	`£çrg8
(0xE000, ~0);

63 
	`£tchr2
(0x0000, (
¸eg
[0] >> 1) & 0x3F);

64 
	`£tchr2
(0x0800, (
¸eg
[1] >> 1) & 0x3F);

65 
	`£tchr1
(0x1000, 
¸eg
[2]);

66 
	`£tchr1
(0x1400, 
¸eg
[3]);

67 
	`£tchr1
(0x1800, 
¸eg
[4]);

68 
	`£tchr1
(0x1C00, 
¸eg
[5]);

69 i‡(
isExMúr
) {

70 
	`£tmúr‹
(
MI_0
 + 
mˇche
[
œ°µu
]);

72 
	`£tmúr‹
(
múr
);

73 
	}
}

75 
	$DECLFW
(
M80RamWrôe
) {

76 if(
wøm_íabÀ
 == 0xA3)

77 
wøm
[
A
 & 0xFF] = 
V
;

78 
	}
}

80 
	$DECLFR
(
M80RamRód
) {

81 if(
wøm_íabÀ
 == 0xA3)

82  
wøm
[
A
 & 0xFF];

85 
	}
}

87 
	$DECLFW
(
M80Wrôe
) {

88 
A
) {

89 0x7EF0: 
¸eg
[0] = 
V
; 
mˇche
[0] = mˇche[1] = V >> 7; 
	`Sync
(); ;

90 0x7EF1: 
¸eg
[1] = 
V
; 
mˇche
[2] = mˇche[3] = V >> 7; 
	`Sync
(); ;

91 0x7EF2: 
¸eg
[2] = 
V
; 
mˇche
[4] = V >> 7; 
	`Sync
(); ;

92 0x7EF3: 
¸eg
[3] = 
V
; 
mˇche
[5] = V >> 7; 
	`Sync
(); ;

93 0x7EF4: 
¸eg
[4] = 
V
; 
mˇche
[6] = V >> 7; 
	`Sync
(); ;

94 0x7EF5: 
¸eg
[5] = 
V
; 
mˇche
[7] = V >> 7; 
	`Sync
(); ;

95 0x7EF6: 
múr
 = 
V
 & 1; 
	`Sync
(); ;

96 0x7EF8: 
wøm_íabÀ
 = 
V
; ;

98 0x7EFB: 
¥eg
[0] = 
V
; 
	`Sync
(); ;

100 0x7EFD: 
¥eg
[1] = 
V
; 
	`Sync
(); ;

102 0x7EFF: 
¥eg
[2] = 
V
; 
	`Sync
(); ;

104 
	}
}

106 
	$DECLFW
(
M95Wrôe
) {

107 
A
 & 0xF001) {

108 0x8000: 
cmd
 = 
V
; ;

110 
cmd
 & 0x07) {

111 0: 
¸eg
[0] = 
V
 & 0x1F; 
mˇche
[0] = mˇche[1] = (V >> 5Ë& 1; 
	`Sync
(); ;

112 1: 
¸eg
[1] = 
V
 & 0x1F; 
mˇche
[2] = mˇche[3] = (V >> 5Ë& 1; 
	`Sync
(); ;

113 2: 
¸eg
[2] = 
V
 & 0x1F; 
mˇche
[4] = (V >> 5Ë& 1; 
	`Sync
(); ;

114 3: 
¸eg
[3] = 
V
 & 0x1F; 
mˇche
[5] = (V >> 5Ë& 1; 
	`Sync
(); ;

115 4: 
¸eg
[4] = 
V
 & 0x1F; 
mˇche
[6] = (V >> 5Ë& 1; 
	`Sync
(); ;

116 5: 
¸eg
[5] = 
V
 & 0x1F; 
mˇche
[7] = (V >> 5Ë& 1; 
	`Sync
(); ;

117 6: 
¥eg
[0] = 
V
; 
	`Sync
(); ;

118 7: 
¥eg
[1] = 
V
; 
	`Sync
(); ;

120 
	`Sync
();

122 
	}
}

124 
	$MExMúrPPU
(
uöt32
 
A
) {

125 
öt8
 
œ°múr
 = -1, 
curmúr
;

126 i‡(
A
 < 0x2000) {

127 
œ°µu
 = 
A
 >> 10;

128 
curmúr
 = 
mˇche
[
œ°µu
];

129 i‡(
curmúr
 !
œ°múr
) {

130 
	`£tmúr‹
(
MI_0
 + 
curmúr
);

131 
œ°múr
 = 
curmúr
;

134 
	}
}

136 
	$M80Powî
() {

137 
wøm_íabÀ
 = 0xFF;

138 
	`Sync
();

139 
	`SëRódH™dÀr
(0x7F00, 0x7FFF, 
M80RamRód
);

140 
	`SëWrôeH™dÀr
(0x7F00, 0x7FFF, 
M80RamWrôe
);

141 
	`SëWrôeH™dÀr
(0x7EF0, 0x7EFF, 
M80Wrôe
);

142 
	`SëRódH™dÀr
(0x8000, 0xFFFF, 
C¨tBR
);

143 
	}
}

145 
	$M207Powî
() {

146 
mˇche
[0] = mcache[1] = mcache[2] = mcache[3] = 0;

147 
mˇche
[4] = mcache[5] = mcache[6] = mcache[7] = 0;

148 
	`Sync
();

149 
	`SëWrôeH™dÀr
(0x7EF0, 0x7EFF, 
M80Wrôe
);

150 
	`SëRódH™dÀr
(0x8000, 0xFFFF, 
C¨tBR
);

151 
	}
}

153 
	$M95Powî
() {

154 
¥eg
[2] = ~1;

155 
mˇche
[0] = mcache[1] = mcache[2] = mcache[3] = 0;

156 
mˇche
[4] = mcache[5] = mcache[6] = mcache[7] = 0;

157 
	`Sync
();

158 
	`SëWrôeH™dÀr
(0x8000, 0xFFFF, 
M95Wrôe
);

159 
	`SëRódH™dÀr
(0x8000, 0xFFFF, 
C¨tBR
);

160 
	}
}

162 
	$SèãRe°‹e
(
vîsi⁄
) {

163 
	`Sync
();

164 
	}
}

166 
	$M≠≥r80_Inô
(
C¨tInfo
 *
öfo
) {

167 
isExMúr
 = 0;

168 
öfo
->
Powî
 = 
M80Powî
;

169 
GameSèãRe°‹e
 = 
SèãRe°‹e
;

171 i‡(
öfo
->
b©ãry
) {

172 
öfo
->
SaveGame
[0] = 
wøm
;

173 
öfo
->
SaveGameLí
[0] = 256;

176 
	`AddExSèã
(&
SèãRegs80
, ~0, 0, 0);

177 
	}
}

179 
	$M≠≥r95_Inô
(
C¨tInfo
 *
öfo
) {

180 
isExMúr
 = 1;

181 
öfo
->
Powî
 = 
M95Powî
;

182 
PPU_hook
 = 
MExMúrPPU
;

183 
GameSèãRe°‹e
 = 
SèãRe°‹e
;

184 
	`AddExSèã
(&
SèãRegs95
, ~0, 0, 0);

185 
	}
}

187 
	$M≠≥r207_Inô
(
C¨tInfo
 *
öfo
) {

188 
isExMúr
 = 1;

189 
öfo
->
Powî
 = 
M207Powî
;

190 
PPU_hook
 = 
MExMúrPPU
;

191 
GameSèãRe°‹e
 = 
SèãRe°‹e
;

192 
	`AddExSèã
(&
SèãRegs207
, ~0, 0, 0);

193 
	}
}

	@fceux-am/src/boards/80013-B.cpp

21 
	~"m≠öc.h
"

23 
uöt8
 
	gbios_¥g
, 
	grom_¥g
, 
	grom_mode
, 
	gmúr‹
;

25 
SFORMAT
 
	gSèãRegs
[] =

27 { &
bios_¥g
, 1, "BREG" },

28 { &
rom_¥g
, 1, "RREG" },

29 { &
rom_mode
, 1, "RMODE" },

33 
	$Sync
() {

34 
	`£tchr8
(0);

35 if(
rom_mode
&2) {

36 
	`£çrg16r
(0,0x8000,(
bios_¥g
&0xF)|(
rom_¥g
&0x70));

38 
	`£çrg16r
(1,0x8000,
bios_¥g
&3);

40 
	`£çrg16r
(0,0xC000,
rom_¥g
&0x7F);

41 
	`£tmúr‹
(((
bios_¥g
>>4)&1)^1);

42 
	}
}

44 
	$DECLFW
(
BMC80013BWrôe
) {

45 
uöt8
 
ªg
 = (
A
>>13)&3;

46 if(
ªg
 == 0) {

47 
bios_¥g
 = 
V
;

49 
rom_¥g
 = 
V
;

50 
rom_mode
 = 
ªg
;

52 
	`Sync
();

53 
	}
}

55 
	$BMC80013BPowî
() {

56 
bios_¥g
=
rom_¥g
=
rom_mode
=
múr‹
=0;

57 
	`Sync
();

58 
	`SëRódH™dÀr
(0x8000, 0xFFFF, 
C¨tBR
);

59 
	`SëWrôeH™dÀr
(0x8000, 0xFFFF, 
BMC80013BWrôe
);

60 
	}
}

62 
	$BMC80013BRe£t
() {

63 
bios_¥g
=
rom_¥g
=
rom_mode
=
múr‹
=0;

64 
	`Sync
();

65 
	}
}

67 
	$SèãRe°‹e
(
vîsi⁄
) {

68 
	`Sync
();

69 
	}
}

71 
	$BMC80013B_Inô
(
C¨tInfo
 *
öfo
) {

72 
öfo
->
Re£t
 = 
BMC80013BRe£t
;

73 
öfo
->
Powî
 = 
BMC80013BPowî
;

74 
GameSèãRe°‹e
 = 
SèãRe°‹e
;

75 
	`AddExSèã
(&
SèãRegs
, ~0, 0, 0);

76 
	}
}

	@fceux-am/src/boards/8157.cpp

24 
	~"m≠öc.h
"

26 
uöt16
 
	gcmdªg
;

27 
uöt8
 
	gª£t
;

28 
SFORMAT
 
	gSèãRegs
[] =

30 { &
ª£t
, 1, "REST" },

31 { &
cmdªg
, 2, "CREG" },

35 
	$Sync
() {

36 
uöt32
 
ba£
 = ((
cmdªg
 & 0x060) | ((cmdreg & 0x100) >> 1)) >> 2;

37 
uöt32
 
b™k
 = (
cmdªg
 & 0x01C) >> 2;

38 
uöt32
 
lb™k
 = (
cmdªg
 & 0x200Ë? 7 : ((cmdªg & 0x80Ë? 
b™k
 : 0);

39 i‡(
PRG±r
[1]) {

40 
	`£çrg16r
(
ba£
 >> 3, 0x8000, 
b™k
);

41 
	`£çrg16r
(
ba£
 >> 3, 0xC000, 
lb™k
);

43 
	`£çrg16
(0x8000, 
ba£
 | 
b™k
);

44 
	`£çrg16
(0xC000, 
ba£
 | 
lb™k
);

46 
	`£tmúr‹
(((
cmdªg
 & 2) >> 1) ^ 1);

47 
	}
}

49 
	$DECLFR
(
UNL8157Ród
) {

50 i‡((
cmdªg
 & 0x100Ë&& (
PRGsize
[0] < (1024 * 1024))) {

51 
A
 = (A & 0xFFF0Ë+ 
ª£t
;

53  
	`C¨tBR
(
A
);

54 
	}
}

56 
	$DECLFW
(
UNL8157Wrôe
) {

57 
cmdªg
 = 
A
;

58 
	`Sync
();

59 
	}
}

61 
	$UNL8157Powî
() {

62 
	`£tchr8
(0);

63 
	`SëWrôeH™dÀr
(0x8000, 0xFFFF, 
UNL8157Wrôe
);

64 
	`SëRódH™dÀr
(0x8000, 0xFFFF, 
UNL8157Ród
);

65 
cmdªg
 = 
ª£t
 = 0;

66 
	`Sync
();

67 
	}
}

69 
	$UNL8157Re£t
() {

70 
cmdªg
 = 
ª£t
 = 0;

71 
ª£t
++;

72 
ª£t
 &= 0x1F;

73 
	`Sync
();

74 
	}
}

76 
	$UNL8157Re°‹e
(
vîsi⁄
) {

77 
	`Sync
();

78 
	}
}

80 
	$UNL8157_Inô
(
C¨tInfo
 *
öfo
) {

81 
öfo
->
Powî
 = 
UNL8157Powî
;

82 
öfo
->
Re£t
 = 
UNL8157Re£t
;

83 
GameSèãRe°‹e
 = 
UNL8157Re°‹e
;

84 
	`AddExSèã
(&
SèãRegs
, ~0, 0, 0);

85 
	}
}

	@fceux-am/src/boards/82.cpp

24 
	~"m≠öc.h
"

26 
uöt8
 
	gªgs
[9], 
	g˘æ
;

27 
uöt8
 *
	gWRAM
 = 
NULL
;

28 
uöt32
 
	gWRAMSIZE
;

30 
SFORMAT
 
	gSèãRegs
[] =

32 { 
ªgs
, 9, "REGS" },

33 { &
˘æ
, 1, "CTRL" },

37 
	$Sync
() {

38 
uöt32
 
sw≠
 = ((
˘æ
 & 2) << 11);

39 
	`£tchr2
(0x0000 ^ 
sw≠
, 
ªgs
[0] >> 1);

40 
	`£tchr2
(0x0800 ^ 
sw≠
, 
ªgs
[1] >> 1);

41 
	`£tchr1
(0x1000 ^ 
sw≠
, 
ªgs
[2]);

42 
	`£tchr1
(0x1400 ^ 
sw≠
, 
ªgs
[3]);

43 
	`£tchr1
(0x1800 ^ 
sw≠
, 
ªgs
[4]);

44 
	`£tchr1
(0x1c00 ^ 
sw≠
, 
ªgs
[5]);

45 
	`£çrg8r
(0x10, 0x6000, 0);

46 
	`£çrg8
(0x8000, 
ªgs
[6]);

47 
	`£çrg8
(0xA000, 
ªgs
[7]);

48 
	`£çrg8
(0xC000, 
ªgs
[8]);

49 
	`£çrg8
(0xE000, ~0);

50 
	`£tmúr‹
(
˘æ
 & 1);

51 
	}
}

53 
	$DECLFW
(
M82Wrôe
) {

54 i‡(
A
 <= 0x7ef5)

55 
ªgs
[
A
 & 7] = 
V
;

57 
A
) {

58 0x7ef6: 
˘æ
 = 
V
 & 3; ;

59 0x7eÁ: 
ªgs
[6] = 
V
 >> 2; ;

60 0x7efb: 
ªgs
[7] = 
V
 >> 2; ;

61 0x7efc: 
ªgs
[8] = 
V
 >> 2; ;

63 
	`Sync
();

64 
	}
}

66 
	$M82Powî
() {

67 
	`Sync
();

68 
	`SëRódH™dÀr
(0x6000, 0xffff, 
C¨tBR
);

69 
	`SëWrôeH™dÀr
(0x6000, 0x7fff, 
C¨tBW
);

70 
	`SëWrôeH™dÀr
(0x7ef0, 0x7efc, 
M82Wrôe
);

71 
	`FCEU_ChótAddRAM
(
WRAMSIZE
 >> 10, 0x6000, 
WRAM
);

72 
	}
}

74 
	$M82Clo£
() {

75 i‡(
WRAM
)

76 
	`FCEU_g‰ì
(
WRAM
);

77 
WRAM
 = 
NULL
;

78 
	}
}

80 
	$SèãRe°‹e
(
vîsi⁄
) {

81 
	`Sync
();

82 
	}
}

84 
	$M≠≥r82_Inô
(
C¨tInfo
 *
öfo
) {

85 
öfo
->
Powî
 = 
M82Powî
;

86 
öfo
->
Clo£
 = 
M82Clo£
;

88 
WRAMSIZE
 = 8192;

89 
WRAM
 = (
uöt8
*)
	`FCEU_gmÆloc
(
WRAMSIZE
);

90 
	`SëupC¨tPRGM≠pög
(0x10, 
WRAM
, 
WRAMSIZE
, 1);

91 
	`AddExSèã
(
WRAM
, 
WRAMSIZE
, 0, "WRAM");

92 i‡(
öfo
->
b©ãry
) {

93 
öfo
->
SaveGame
[0] = 
WRAM
;

94 
öfo
->
SaveGameLí
[0] = 
WRAMSIZE
;

96 
GameSèãRe°‹e
 = 
SèãRe°‹e
;

97 
	`AddExSèã
(&
SèãRegs
, ~0, 0, 0);

98 
	}
}

	@fceux-am/src/boards/8237.cpp

25 
	~"m≠öc.h
"

26 
	~"mmc3.h
"

28 
uöt8
 
	gcmdö
;

30 
uöt8
 
	gªg≥rm
[8][8] =

42 
uöt8
 
	gadΩîm
[8][8] =

54 
	$UNL8237CW
(
uöt32
 
A
, 
uöt8
 
V
) {

55 i‡(
EXPREGS
[0] & 0x40)

56 
	`£tchr1
(
A
, ((
EXPREGS
[1] & 0xcË<< 6Ë| (
V
 & 0x7F) | ((EXPREGS[1] & 0x20) << 2));

58 
	`£tchr1
(
A
, ((
EXPREGS
[1] & 0xcË<< 6Ë| 
V
);

59 
	}
}

61 
	$UNL8237PW
(
uöt32
 
A
, 
uöt8
 
V
) {

62 i‡(
EXPREGS
[0] & 0x40) {

63 
uöt8
 
sb™k
 = (
EXPREGS
[1] & 0x10);

64 i‡(
EXPREGS
[0] & 0x80) {

65 
uöt8
 
b™k
 = ((
EXPREGS
[1] & 3Ë<< 4Ë| (EXPREGS[0] & 0x7Ë| (
sb™k
 >> 1);

66 i‡(
EXPREGS
[0] & 0x20)

67 
	`£çrg32
(0x8000, 
b™k
 >> 1);

69 
	`£çrg16
(0x8000, 
b™k
);

70 
	`£çrg16
(0xC000, 
b™k
);

73 
	`£çrg8
(
A
, ((
EXPREGS
[1] & 3Ë<< 5Ë| (
V
 & 0x0FË| 
sb™k
);

75 i‡(
EXPREGS
[0] & 0x80) {

76 
uöt8
 
b™k
 = ((
EXPREGS
[1] & 3) << 4) | (EXPREGS[0] & 0xF);

77 i‡(
EXPREGS
[0] & 0x20)

78 
	`£çrg32
(0x8000, 
b™k
 >> 1);

80 
	`£çrg16
(0x8000, 
b™k
);

81 
	`£çrg16
(0xC000, 
b™k
);

84 
	`£çrg8
(
A
, ((
EXPREGS
[1] & 3Ë<< 5Ë| (
V
 & 0x1F));

86 
	}
}

88 
	$UNL8237ACW
(
uöt32
 
A
, 
uöt8
 
V
) {

89 i‡(
EXPREGS
[0] & 0x40)

90 
	`£tchr1
(
A
, ((
EXPREGS
[1] & 0xEË<< 7Ë| (
V
 & 0x7F) | ((EXPREGS[1] & 0x20) << 2));

92 
	`£tchr1
(
A
, ((
EXPREGS
[1] & 0xEË<< 7Ë| 
V
);

93 
	}
}

95 
	$UNL8237APW
(
uöt32
 
A
, 
uöt8
 
V
) {

96 i‡(
EXPREGS
[0] & 0x40) {

97 
uöt8
 
sb™k
 = (
EXPREGS
[1] & 0x10);

98 i‡(
EXPREGS
[0] & 0x80) {

99 
uöt8
 
b™k
 = ((
EXPREGS
[1] & 3Ë<< 4Ë| ((EXPREGS[1] & 8Ë<< 3Ë| (EXPREGS[0] & 0x7Ë| (
sb™k
 >> 1);

100 i‡(
EXPREGS
[0] & 0x20) {

102 
	`£çrg32
(0x8000, 
b™k
 >> 1);

105 
	`£çrg16
(0x8000, 
b™k
);

106 
	`£çrg16
(0xC000, 
b™k
);

110 
	`£çrg8
(
A
, ((
EXPREGS
[1] & 3Ë<< 5Ë| ((EXPREGS[1] & 8Ë<< 4Ë| (
V
 & 0x0FË| 
sb™k
);

113 i‡(
EXPREGS
[0] & 0x80) {

114 
uöt8
 
b™k
 = ((
EXPREGS
[1] & 3) << 4) | ((EXPREGS[1] & 8) << 3) | (EXPREGS[0] & 0xF);

115 i‡(
EXPREGS
[0] & 0x20) {

117 
	`£çrg32
(0x8000, 
b™k
 >> 1);

120 
	`£çrg16
(0x8000, 
b™k
);

121 
	`£çrg16
(0xC000, 
b™k
);

125 
	`£çrg8
(
A
, ((
EXPREGS
[1] & 3Ë<< 5Ë| ((EXPREGS[1] & 8Ë<< 4Ë| (
V
 & 0x1F));

128 
	}
}

129 
	$DECLFW
(
UNL8237Wrôe
) {

130 
uöt8
 
d©
 = 
V
;

131 
uöt8
 
adr
 = 
adΩîm
[
EXPREGS
[2]][((
A
 >> 12) & 6) | (A & 1)];

132 
uöt16
 
addr
 = (
adr
 & 1) | ((adr & 6) << 12) | 0x8000;

133 i‡(
adr
 < 4) {

134 i‡(!
adr
)

135 
d©
 = (d© & 0xC0Ë| (
ªg≥rm
[
EXPREGS
[2]][dat & 7]);

136 
	`MMC3_CMDWrôe
(
addr
, 
d©
);

138 
	`MMC3_IRQWrôe
(
addr
, 
d©
);

139 
	}
}

141 
	$DECLFW
(
UNL8237ExWrôe
) {

142 
A
) {

143 0x5000: 
EXPREGS
[0] = 
V
; 
	`FixMMC3PRG
(
MMC3_cmd
); ;

144 0x5001: 
EXPREGS
[1] = 
V
; 
	`FixMMC3PRG
(
MMC3_cmd
); 
	`FixMMC3CHR
(MMC3_cmd); ;

145 0x5007: 
EXPREGS
[2] = 
V
; ;

147 
	}
}

149 
	$UNL8237Powî
() {

150 
EXPREGS
[0] = EXPREGS[2] = 0;

151 
EXPREGS
[1] = 3;

152 
	`GíMMC3Powî
();

153 
	`SëWrôeH™dÀr
(0x8000, 0xFFFF, 
UNL8237Wrôe
);

154 
	`SëWrôeH™dÀr
(0x5000, 0x7FFF, 
UNL8237ExWrôe
);

155 
	}
}

157 
	$UNL8237_Inô
(
C¨tInfo
 *
öfo
) {

158 
	`GíMMC3_Inô
(
öfo
, 256, 256, 0, 0);

159 
cwøp
 = 
UNL8237CW
;

160 
pwøp
 = 
UNL8237PW
;

161 
öfo
->
Powî
 = 
UNL8237Powî
;

162 
	`AddExSèã
(
EXPREGS
, 3, 0, "EXPR");

163 
	`AddExSèã
(&
cmdö
, 1, 0, "CMDI");

164 
	}
}

166 
	$UNL8237A_Inô
(
C¨tInfo
 *
öfo
) {

167 
	`GíMMC3_Inô
(
öfo
, 256, 256, 0, 0);

168 
cwøp
 = 
UNL8237ACW
;

169 
pwøp
 = 
UNL8237APW
;

170 
öfo
->
Powî
 = 
UNL8237Powî
;

171 
	`AddExSèã
(
EXPREGS
, 3, 0, "EXPR");

172 
	`AddExSèã
(&
cmdö
, 1, 0, "CMDI");

173 
	}
}

	@fceux-am/src/boards/830118C.cpp

23 
	~"m≠öc.h
"

24 
	~"mmc3.h
"

26 
	$BMC830118CCW
(
uöt32
 
A
, 
uöt8
 
V
) {

27 
	`£tchr1
(
A
, (
V
 & 0x7FË| ((
EXPREGS
[0] & 0x0c) << 5));

28 
	}
}

30 
	$BMC830118CPW
(
uöt32
 
A
, 
uöt8
 
V
) {

31 i‡((
EXPREGS
[0] & 0x0C) == 0x0C) {

32 i‡(
A
 == 0x8000) {

33 
	`£çrg8
(
A
, (
V
 & 0x0FË| ((
EXPREGS
[0] & 0x0c) << 2));

34 
	`£çrg8
(0xC000, (
V
 & 0x0F) | 0x32);

35 } i‡(
A
 == 0xA000) {

36 
	`£çrg8
(
A
, (
V
 & 0x0FË| ((
EXPREGS
[0] & 0x0c) << 2));

37 
	`£çrg8
(0xE000, (
V
 & 0x0F) | 0x32);

40 
	`£çrg8
(
A
, (
V
 & 0x0FË| ((
EXPREGS
[0] & 0x0c) << 2));

42 
	}
}

44 
	$DECLFW
(
BMC830118CLoWrôe
) {

45 
EXPREGS
[0] = 
V
;

46 
	`FixMMC3PRG
(
MMC3_cmd
);

47 
	`FixMMC3CHR
(
MMC3_cmd
);

48 
	}
}

50 
	$BMC830118CRe£t
() {

51 
EXPREGS
[0] = 0;

52 
	`MMC3RegRe£t
();

53 
	}
}

55 
	$BMC830118CPowî
() {

56 
EXPREGS
[0] = 0;

57 
	`GíMMC3Powî
();

58 
	`SëWrôeH™dÀr
(0x6800, 0x68FF, 
BMC830118CLoWrôe
);

59 
	}
}

61 
	$BMC830118C_Inô
(
C¨tInfo
 *
öfo
) {

62 
	`GíMMC3_Inô
(
öfo
, 128, 128, 8, 0);

63 
pwøp
 = 
BMC830118CPW
;

64 
cwøp
 = 
BMC830118CCW
;

65 
öfo
->
Powî
 = 
BMC830118CPowî
;

66 
öfo
->
Re£t
 = 
BMC830118CRe£t
;

67 
	`AddExSèã
(
EXPREGS
, 1, 0, "EXPR");

68 
	}
}

	@fceux-am/src/boards/88.cpp

21 
	~"m≠öc.h
"

23 
uöt8
 
	gªg
[8];

24 
uöt8
 
	gmúr‹
, 
	gcmd
, 
	gis154
;

26 
SFORMAT
 
	gSèãRegs
[] =

28 { &
cmd
, 1, "CMD" },

29 { &
múr‹
, 1, "MIRR" },

30 { 
ªg
, 8, "REGS" },

34 
	$Sync
() {

35 
	`£tchr2
(0x0000, 
ªg
[0] >> 1);

36 
	`£tchr2
(0x0800, 
ªg
[1] >> 1);

37 
	`£tchr1
(0x1000, 
ªg
[2] | 0x40);

38 
	`£tchr1
(0x1400, 
ªg
[3] | 0x40);

39 
	`£tchr1
(0x1800, 
ªg
[4] | 0x40);

40 
	`£tchr1
(0x1C00, 
ªg
[5] | 0x40);

41 
	`£çrg8
(0x8000, 
ªg
[6]);

42 
	`£çrg8
(0xA000, 
ªg
[7]);

43 
	`£çrg8
(0xC000, ~1);

44 
	`£çrg8
(0xE000, ~0);

45 
	}
}

47 
	$MSync
() {

48 i‡(
is154
Ë
	`£tmúr‹
(
MI_0
 + (
múr‹
 & 1));

49 
	}
}

51 
	$DECLFW
(
M88Wrôe
) {

52 
A
 & 0x8001) {

53 0x8000: 
cmd
 = 
V
 & 7; 
múr‹
 = V >> 6; 
	`MSync
(); ;

54 0x8001: 
ªg
[
cmd
] = 
V
; 
	`Sync
(); ;

56 
	}
}

58 
	$M88Powî
() {

59 
ªg
[0] =Ñeg[1] =Ñeg[2] =Ñeg[3] =Ñeg[4] =Ñeg[5] =Ñeg[6] =Ñeg[7] = 0;

60 
	`Sync
();

61 
	`MSync
();

62 
	`SëRódH™dÀr
(0x8000, 0xFFFF, 
C¨tBR
);

63 
	`SëWrôeH™dÀr
(0x8000, 0xFFFF, 
M88Wrôe
);

64 
	}
}

66 
	$SèãRe°‹e
(
vîsi⁄
) {

67 
	`Sync
();

68 
	`MSync
();

69 
	}
}

71 
	$M≠≥r88_Inô
(
C¨tInfo
 *
öfo
) {

72 
is154
 = 0;

73 
öfo
->
Powî
 = 
M88Powî
;

74 
GameSèãRe°‹e
 = 
SèãRe°‹e
;

75 
	`AddExSèã
(&
SèãRegs
, ~0, 0, 0);

76 
	}
}

78 
	$M≠≥r154_Inô
(
C¨tInfo
 *
öfo
) {

79 
is154
 = 1;

80 
öfo
->
Powî
 = 
M88Powî
;

81 
GameSèãRe°‹e
 = 
SèãRe°‹e
;

82 
	`AddExSèã
(&
SèãRegs
, ~0, 0, 0);

83 
	}
}

	@fceux-am/src/boards/8in1.cpp

27 
	~"m≠öc.h
"

28 
	~"mmc3.h
"

30 
	$BMC8IN1CW
(
uöt32
 
A
, 
uöt8
 
V
) {

31 
	`£tchr1
(
A
, ((
EXPREGS
[0] & 0xCË<< 5Ë| (
V
 & 0x7F));

32 
	}
}

34 
	$BMC8IN1PW
(
uöt32
 
A
, 
uöt8
 
V
) {

35 if(
EXPREGS
[0] & 0x10) {

36 
	`£çrg8
(
A
, ((
EXPREGS
[0] & 0xCË<< 2Ë| (
V
 & 0xF));

38 
	`£çrg32
(0x8000, 
EXPREGS
[0] & 0xF);

40 
	}
}

42 
	$DECLFW
(
BMC8IN1Wrôe
) {

43 if(
A
 & 0x1000) {

44 
EXPREGS
[0] = 
V
;

45 
	`FixMMC3PRG
(
MMC3_cmd
);

46 
	`FixMMC3CHR
(
MMC3_cmd
);

48 if(
A
 < 0xC000)

49 
	`MMC3_CMDWrôe
(
A
, 
V
);

51 
	`MMC3_IRQWrôe
(
A
, 
V
);

53 
	}
}

55 
	$BMC8IN1Powî
() {

56 
EXPREGS
[0] = 0;

57 
	`GíMMC3Powî
();

58 
	`SëWrôeH™dÀr
(0x8000, 0xFFFF, 
BMC8IN1Wrôe
);

59 
	}
}

61 
	$BMC8IN1_Inô
(
C¨tInfo
 *
öfo
) {

62 
	`GíMMC3_Inô
(
öfo
, 128, 128, 0, 0);

63 
cwøp
 = 
BMC8IN1CW
;

64 
pwøp
 = 
BMC8IN1PW
;

65 
öfo
->
Powî
 = 
BMC8IN1Powî
;

66 
	`AddExSèã
(
EXPREGS
, 1, 0, "EXPR");

67 
	}
}

	@fceux-am/src/boards/90.cpp

22 
	~"m≠öc.h
"

29 
	gis209
;

30 
	gis211
;

32 
uöt8
 
	gIRQMode
;

33 
uöt8
 
	gIRQPª
;

34 
uöt8
 
	gIRQPªSize
;

35 
uöt8
 
	gIRQCou¡
;

36 
uöt8
 
	gIRQXOR
;

37 
uöt8
 
	gIRQa
;

39 
uöt8
 
	gmul
[2];

40 
uöt8
 
	gªgõ
;

42 
uöt8
 
	gtkcom
[4];

43 
uöt8
 
	g¥gb
[4];

44 
uöt8
 
	gchæow
[8];

45 
uöt8
 
	gchrhigh
[8];

47 
uöt8
 
	gchr
[2];

49 
uöt16
 
	g«mes
[4];

50 
uöt8
 
	gãkkî
;

52 
SFORMAT
 
	gTek_SèãRegs
[] = {

53 { &
IRQMode
, 1, "IRQM" },

54 { &
IRQPª
, 1, "IRQP" },

55 { &
IRQPªSize
, 1, "IRQR" },

56 { &
IRQCou¡
, 1, "IRQC" },

57 { &
IRQXOR
, 1, "IRQX" },

58 { &
IRQa
, 1, "IRQA" },

59 { 
mul
, 2, "MUL" },

60 { &
ªgõ
, 1, "REGI" },

61 { 
tkcom
, 4, "TKCO" },

62 { 
¥gb
, 4, "PRGB" },

63 { 
chr
, 2, "CLTC" },

64 { 
chæow
, 4, "CHRL" },

65 { 
chrhigh
, 8, "CHRH" },

66 { &
«mes
[0], 2 | 
FCEUSTATE_RLSB
, "NMS0" },

67 { &
«mes
[1], 2 | 
FCEUSTATE_RLSB
, "NMS1" },

68 { &
«mes
[2], 2 | 
FCEUSTATE_RLSB
, "NMS2" },

69 { &
«mes
[3], 2 | 
FCEUSTATE_RLSB
, "NMS3" },

70 { &
ãkkî
, 1, "TEKR" },

74 
	$múa
()

76 if((
tkcom
[0]&0x20&&
is209
)||
is211
)

78 
x
;

79 if(
tkcom
[0]&0x40)

81 
x
=0;x<4;x++)

82 
	`£äèmem
(
CHR±r
[0]+(((
«mes
[
x
])&
CHRmask1
[0])<<10),0,x);

86 
x
=0;x<4;x++)

88 if((
tkcom
[1]&0x80)==(
«mes
[
x
]&0x80))

89 
	`£äèmem
(
NTARAM
+((
«mes
[
x
]&0x1)<<10),1,x);

91 
	`£äèmem
(
CHR±r
[0]+(((
«mes
[
x
])&
CHRmask1
[0])<<10),0,x);

97 
tkcom
[1]&3)

99 0: 
	`£tmúr‹
(
MI_V
); ;

100 1: 
	`£tmúr‹
(
MI_H
); ;

101 2: 
	`£tmúr‹
(
MI_0
); ;

102 3: 
	`£tmúr‹
(
MI_1
); ;

105 
	}
}

107 
	$ãk¥om
()

109 
uöt32
 
b™kmode
=((
tkcom
[3]&6)<<5);

110 
tkcom
[0]&7)

112 00: if(
tkcom
[0]&0x80)

113 
	`£çrg8
(0x6000,(((
¥gb
[3]<<2)+3)&0x3F)|
b™kmode
);

114 
	`£çrg32
(0x8000,0x0F|((
tkcom
[3]&6)<<3));

116 01: if(
tkcom
[0]&0x80)

117 
	`£çrg8
(0x6000,(((
¥gb
[3]<<1)+1)&0x3F)|
b™kmode
);

118 
	`£çrg16
(0x8000,(
¥gb
[1]&0x1F)|((
tkcom
[3]&6)<<4));

119 
	`£çrg16
(0xC000,0x1F|((
tkcom
[3]&6)<<4));

122 02: if(
tkcom
[0]&0x80)

123 
	`£çrg8
(0x6000,(
¥gb
[3]&0x3F)|
b™kmode
);

124 
	`£çrg8
(0x8000,(
¥gb
[0]&0x3F)|
b™kmode
);

125 
	`£çrg8
(0xa000,(
¥gb
[1]&0x3F)|
b™kmode
);

126 
	`£çrg8
(0xc000,(
¥gb
[2]&0x3F)|
b™kmode
);

127 
	`£çrg8
(0xe000,0x3F|
b™kmode
);

129 04: if(
tkcom
[0]&0x80)

130 
	`£çrg8
(0x6000,(((
¥gb
[3]<<2)+3)&0x3F)|
b™kmode
);

131 
	`£çrg32
(0x8000,(
¥gb
[3]&0x0F)|((
tkcom
[3]&6)<<3));

133 05: if(
tkcom
[0]&0x80)

134 
	`£çrg8
(0x6000,(((
¥gb
[3]<<1)+1)&0x3F)|
b™kmode
);

135 
	`£çrg16
(0x8000,(
¥gb
[1]&0x1F)|((
tkcom
[3]&6)<<4));

136 
	`£çrg16
(0xC000,(
¥gb
[3]&0x1F)|((
tkcom
[3]&6)<<4));

139 06: if(
tkcom
[0]&0x80)

140 
	`£çrg8
(0x6000,(
¥gb
[3]&0x3F)|
b™kmode
);

141 
	`£çrg8
(0x8000,(
¥gb
[0]&0x3F)|
b™kmode
);

142 
	`£çrg8
(0xa000,(
¥gb
[1]&0x3F)|
b™kmode
);

143 
	`£çrg8
(0xc000,(
¥gb
[2]&0x3F)|
b™kmode
);

144 
	`£çrg8
(0xe000,(
¥gb
[3]&0x3F)|
b™kmode
);

147 
	}
}

149 
	$ãkvrom
()

151 
x
, 
b™k
=0, 
mask
=0xFFFF;

152 if(!(
tkcom
[3]&0x20))

154 
b™k
=(
tkcom
[3]&1)|((tkcom[3]&0x18)>>2);

155 
tkcom
[0]&0x18)

157 0x00: 
b™k
<<=5; 
mask
=0x1F; ;

158 0x08: 
b™k
<<=6; 
mask
=0x3F; ;

159 0x10: 
b™k
<<=7; 
mask
=0x7F; ;

160 0x18: 
b™k
<<=8; 
mask
=0xFF; ;

163 
tkcom
[0]&0x18)

166 
	`£tchr8
(((
chæow
[0]|(
chrhigh
[0]<<8))&
mask
)|
b™k
);

171 
	`£tchr4
(0x0000,((
chæow
[
chr
[0]]|(
chrhigh
[chr[0]]<<8))&
mask
)|
b™k
);

172 
	`£tchr4
(0x1000,((
chæow
[
chr
[1]]|(
chrhigh
[chr[1]]<<8))&
mask
)|
b™k
);

175 
x
=0;x<8;x+=2)

176 
	`£tchr2
(
x
<<10,((
chæow
[x]|(
chrhigh
[x]<<8))&
mask
)|
b™k
);

179 
x
=0;x<8;x++)

180 
	`£tchr1
(
x
<<10,((
chæow
[x]|(
chrhigh
[x]<<8))&
mask
)|
b™k
);

183 
	}
}

185 
	$DECLFW
(
M90TekWrôe
)

187 
A
&0x5C03)

189 0x5800: 
mul
[0]=
V
; ;

190 0x5801: 
mul
[1]=
V
; ;

191 0x5803: 
ªgõ
=
V
; ;

193 
	}
}

195 
	$DECLFR
(
M90TekRód
)

197 
A
&0x5C03)

199 0x5800:  (
mul
[0]*mul[1]);

200 0x5801: ((
mul
[0]*mul[1])>>8);

201 0x5803:  (
ªgõ
);

202 :  
ãkkî
;

205 
	}
}

207 
	$DECLFW
(
M90PRGWrôe
)

210 
¥gb
[
A
&3]=
V
;

211 
	`ãk¥om
();

212 
	}
}

214 
	$DECLFW
(
M90CHRlowWrôe
)

217 
chæow
[
A
&7]=
V
;

218 
	`ãkvrom
();

219 
	}
}

221 
	$DECLFW
(
M90CHRhiWrôe
)

224 
chrhigh
[
A
&7]=
V
;

225 
	`ãkvrom
();

226 
	}
}

228 
	$DECLFW
(
M90NTWrôe
)

231 if(
A
&4)

233 
«mes
[
A
&3]&=0x00FF;

234 
«mes
[
A
&3]|=
V
<<8;

238 
«mes
[
A
&3]&=0xFF00;

239 
«mes
[
A
&3]|=
V
;

241 
	`múa
();

242 
	}
}

244 
	$DECLFW
(
M90IRQWrôe
)

247 
A
&7)

250 
IRQa
=
V
&1;if(!(V&1)Ë
	`X6502_IRQEnd
(
FCEU_IQEXT
);;

252 
IRQa
=0;
	`X6502_IRQEnd
(
FCEU_IQEXT
);;

254 
IRQa
=1;;

255 01: 
IRQMode
=
V
;

271 
IRQPª
=
V
^
IRQXOR
;;

273 
IRQCou¡
=
V
^
IRQXOR
;;

275 
IRQXOR
=
V
;;

279 
IRQPªSize
=
V
;;

281 
	}
}

283 
	$DECLFW
(
M90ModeWrôe
)

286 
tkcom
[
A
&3]=
V
;

287 
	`ãk¥om
();

288 
	`ãkvrom
();

289 
	`múa
();

291 #ifde‡
DEBUG90


292 
A
&3)

294 00: 
	`FCEU_¥ötf
("Main Control Register:\n");

295 
	`FCEU_¥ötf
(" PGR B™kög mode: %d\n",
V
&7);

296 
	`FCEU_¥ötf
(" CHR B™kög mode: %d\n",(
V
>>3)&3);

297 
	`FCEU_¥ötf
(" 6000-7FFFáddªs£†m≠pög: %s\n",(
V
&0x80)?"Yes":"No");

298 
	`FCEU_¥ötf
(" NamëabÀ c⁄åﬁ: %s\n",(
V
&0x20)?"Enabled":"Disabled");

299 if(
V
&0x20)

300 
	`FCEU_¥ötf
(" NamëabÀ c™ be: %s\n",(
V
&0x40)?"ROM Only":"RAM or ROM");

302 01: 
	`FCEU_¥ötf
("Mirroring mode: ");

303 
V
&3)

305 0: 
	`FCEU_¥ötf
("Vertical\n");;

306 1: 
	`FCEU_¥ötf
("Horizontal\n");;

307 2: 
	`FCEU_¥ötf
("Nametable 0 only\n");;

308 3: 
	`FCEU_¥ötf
("Nametable 1 only\n");;

310 
	`FCEU_¥ötf
("Múr‹ög fœg: %s\n",(
V
&0x80)?"On":"Off");

312 02: if((((
tkcom
[0])>>5)&3)==1)

313 
	`FCEU_¥ötf
("NamëabÀ ROM/RAM sñe˘ mode: %d\n",
V
>>7);

316 
	`FCEU_¥ötf
("CHR B™kög mode: %s\n",(
V
&0x20)?"Entire CHR ROM":"256Kb Switching mode");

317 if(!(
V
&0x20)Ë
	`FCEU_¥ötf
("256K CHR bankÇumber: %02x\n",(V&1)|((V&0x18)>>2));

318 
	`FCEU_¥ötf
("512K PRG b™kÇumbî: %d\n",(
V
&6)>>1);

319 
	`FCEU_¥ötf
("CHR B™k múr‹ög: %s\n",(
V
&0x80)?"Swapped":"Normal operate");

322 
	}
}

324 
	$DECLFW
(
M90DummyWrôe
)

327 
	}
}

329 
	$CCL
()

331 if((
IRQMode
>>6) == 1)

333 
IRQCou¡
++;

334 if((
IRQCou¡
 =0Ë&& 
IRQa
)

336 
	`X6502_IRQBegö
(
FCEU_IQEXT
);

339 if((
IRQMode
>>6) == 2)

341 
IRQCou¡
--;

342 if((
IRQCou¡
 =0xFFË&& 
IRQa
)

344 
	`X6502_IRQBegö
(
FCEU_IQEXT
);

347 
	}
}

349 
	$ClockCou¡î
()

351 
uöt8
 
¥emask
;

353 if(
IRQMode
 & 0x4)

354 
¥emask
 = 0x7;

356 
¥emask
 = 0xFF;

357 if((
IRQMode
>>6) == 1)

359 
IRQPª
++;

360 if((
IRQPª
 & 
¥emask
Ë=0Ë
	`CCL
();

362 if((
IRQMode
>>6) == 2)

364 
IRQPª
--;

365 if((
IRQPª
 & 
¥emask
Ë=¥emaskË
	`CCL
();

367 
	}
}

369 
	$CPUWøp
(
a
)

371 
x
;

372 if((
IRQMode
&3)==0Ë
x
=0;x<
a
;x++Ë
	`ClockCou¡î
();

373 
	}
}

375 
	$SLWøp
()

377 
x
;

378 if((
IRQMode
&3)==1Ë
x
=0;x<8;x++Ë
	`ClockCou¡î
();

379 
	}
}

381 
uöt32
 
	gœ°ªad
;

382 
	$M90PPU
(
uöt32
 
A
)

384 if((
IRQMode
&3)==2)

386 if(
œ°ªad
!=
A
)

388 
	`ClockCou¡î
();

389 
	`ClockCou¡î
();

391 
œ°ªad
=
A
;

394 if(
is209
)

396 
uöt8
 
l
,
h
;

397 
h
=
A
>>8;

398 if(
h
<0x20&&((h&0x0F)==0xF))

400 
l
=
A
&0xF0;

401 if(
l
==0xD0)

403 
chr
[(
h
&0x10)>>4]=((h&0x10)>>2);

404 
	`ãkvrom
();

406 if(
l
==0xE0)

408 
chr
[(
h
&0x10)>>4]=((h&0x10)>>2)|2;

409 
	`ãkvrom
();

415 
chr
[0]=0;

416 
chr
[1]=4;

418 
	}
}

420 
	$togglõ
()

422 
ãkkî
+=0x40;

423 
ãkkî
&=0xC0;

424 
	`FCEU_¥ötf
("ãkkî=%02x\n",
ãkkî
);

425 
	`mem£t
(
tkcom
,0x00,(tkcom));

426 
	`mem£t
(
¥gb
,0xff,(prgb));

427 
	`ãk¥om
();

428 
	`ãkvrom
();

429 
	}
}

431 
	$M90Re°‹e
(
vîsi⁄
)

433 
	`ãk¥om
();

434 
	`ãkvrom
();

435 
	`múa
();

436 
	}
}

438 
	$M90Powî
()

440 
	`SëWrôeH™dÀr
(0x5000,0x5fff,
M90TekWrôe
);

441 
	`SëWrôeH™dÀr
(0x8000,0x8ff0,
M90PRGWrôe
);

442 
	`SëWrôeH™dÀr
(0x9000,0x9fff,
M90CHRlowWrôe
);

443 
	`SëWrôeH™dÀr
(0xA000,0xAfff,
M90CHRhiWrôe
);

444 
	`SëWrôeH™dÀr
(0xB000,0xBfff,
M90NTWrôe
);

445 
	`SëWrôeH™dÀr
(0xC000,0xCfff,
M90IRQWrôe
);

446 
	`SëWrôeH™dÀr
(0xD000,0xD5ff,
M90ModeWrôe
);

447 
	`SëWrôeH™dÀr
(0xE000,0xFfff,
M90DummyWrôe
);

450 
	`SëRódH™dÀr
(0x5000,0x5fff,
M90TekRód
);

451 
	`SëRódH™dÀr
(0x6000,0xffff,
C¨tBR
);

453 
mul
[0]=mul[1]=
ªgõ
=0xFF;

455 
	`mem£t
(
tkcom
,0x00,(tkcom));

456 
	`mem£t
(
¥gb
,0xff,(prgb));

457 
	`mem£t
(
chæow
,0xff,(chrlow));

458 
	`mem£t
(
chrhigh
,0xff,(chrhigh));

459 
	`mem£t
(
«mes
,0x00,(names));

461 if(
is211
)

462 
ãkkî
=0xC0;

464 
ãkkî
=0x00;

466 
	`ãk¥om
();

467 
	`ãkvrom
();

468 
	}
}

471 
	$M≠≥r90_Inô
(
C¨tInfo
 *
öfo
)

473 
is211
=0;

474 
is209
=0;

475 
öfo
->
Re£t
=
togglõ
;

476 
öfo
->
Powî
=
M90Powî
;

477 
PPU_hook
=
M90PPU
;

478 
M≠IRQHook
=
CPUWøp
;

479 
GameHBIRQHook2
=
SLWøp
;

480 
GameSèãRe°‹e
=
M90Re°‹e
;

481 
	`AddExSèã
(
Tek_SèãRegs
, ~0, 0, 0);

482 
	}
}

484 
	$M≠≥r209_Inô
(
C¨tInfo
 *
öfo
)

486 
is211
=0;

487 
is209
=1;

488 
öfo
->
Re£t
=
togglõ
;

489 
öfo
->
Powî
=
M90Powî
;

490 
PPU_hook
=
M90PPU
;

491 
M≠IRQHook
=
CPUWøp
;

492 
GameHBIRQHook2
=
SLWøp
;

493 
GameSèãRe°‹e
=
M90Re°‹e
;

494 
	`AddExSèã
(
Tek_SèãRegs
, ~0, 0, 0);

495 
	}
}

497 
	$M≠≥r211_Inô
(
C¨tInfo
 *
öfo
)

499 
is211
=1;

500 
öfo
->
Re£t
=
togglõ
;

501 
öfo
->
Powî
=
M90Powî
;

502 
PPU_hook
=
M90PPU
;

503 
M≠IRQHook
=
CPUWøp
;

504 
GameHBIRQHook2
=
SLWøp
;

505 
GameSèãRe°‹e
=
M90Re°‹e
;

506 
	`AddExSèã
(
Tek_SèãRegs
, ~0, 0, 0);

507 
	}
}

	@fceux-am/src/boards/91.cpp

21 
	~"m≠öc.h
"

23 
uöt8
 
	g¸egs
[4], 
	g¥egs
[2];

24 
uöt8
 
	gIRQCou¡
, 
	gIRQa
;

26 
SFORMAT
 
	gSèãRegs
[] =

28 { 
¸egs
, 4, "CREG" },

29 { 
¥egs
, 2, "PREG" },

30 { &
IRQa
, 1, "IRQA" },

31 { &
IRQCou¡
, 1, "IRQC" },

35 
	$Sync
() {

36 
	`£çrg8
(0x8000, 
¥egs
[0]);

37 
	`£çrg8
(0xa000, 
¥egs
[1]);

38 
	`£çrg8
(0xc000, ~1);

39 
	`£çrg8
(0xe000, ~0);

40 
	`£tchr2
(0x0000, 
¸egs
[0]);

41 
	`£tchr2
(0x0800, 
¸egs
[1]);

42 
	`£tchr2
(0x1000, 
¸egs
[2]);

43 
	`£tchr2
(0x1800, 
¸egs
[3]);

44 
	}
}

46 
	$DECLFW
(
M91Wrôe0
) {

47 
¸egs
[
A
 & 3] = 
V
;

48 
	`Sync
();

49 
	}
}

51 
	$DECLFW
(
M91Wrôe1
) {

52 
A
 & 3) {

54 1: 
¥egs
[
A
 & 1] = 
V
; 
	`Sync
(); ;

55 2: 
IRQa
 = 
IRQCou¡
 = 0; 
	`X6502_IRQEnd
(
FCEU_IQEXT
); ;

56 3: 
IRQa
 = 1; 
	`X6502_IRQEnd
(
FCEU_IQEXT
); ;

58 
	}
}

60 
	$M91Powî
() {

61 
	`Sync
();

62 
	`SëWrôeH™dÀr
(0x6000, 0x6fff, 
M91Wrôe0
);

63 
	`SëWrôeH™dÀr
(0x7000, 0x7fff, 
M91Wrôe1
);

64 
	`SëRódH™dÀr
(0x8000, 0xffff, 
C¨tBR
);

65 
	}
}

67 
	$M91IRQHook
() {

68 i‡(
IRQCou¡
 < 8 && 
IRQa
) {

69 
IRQCou¡
++;

70 i‡(
IRQCou¡
 >= 8) {

71 
	`X6502_IRQBegö
(
FCEU_IQEXT
);

74 
	}
}

76 
	$SèãRe°‹e
(
vîsi⁄
) {

77 
	`Sync
();

78 
	}
}

80 
	$M≠≥r91_Inô
(
C¨tInfo
 *
öfo
) {

81 
öfo
->
Powî
 = 
M91Powî
;

82 
GameHBIRQHook
 = 
M91IRQHook
;

83 
GameSèãRe°‹e
 = 
SèãRe°‹e
;

84 
	`AddExSèã
(&
SèãRegs
, ~0, 0, 0);

85 
	}
}

	@fceux-am/src/boards/96.cpp

23 
	~"m≠öc.h
"

25 
uöt8
 
	gªg
, 
	gµuœtch
;

27 
SFORMAT
 
	gSèãRegs
[] =

29 { &
ªg
, 1, "REG" },

30 { &
µuœtch
, 1, "PPUL" },

34 
	$Sync
() {

35 
	`£tmúr‹
(
MI_0
);

36 
	`£çrg32
(0x8000, 
ªg
 & 3);

37 
	`£tchr4
(0x0000, (
ªg
 & 4Ë| 
µuœtch
);

38 
	`£tchr4
(0x1000, (
ªg
 & 4) | 3);

39 
	}
}

41 
	$DECLFW
(
M96Wrôe
) {

42 
ªg
 = 
V
;

43 
	`Sync
();

44 
	}
}

46 
	$M96Hook
(
uöt32
 
A
) {

47 i‡((
A
 & 0x3000) == 0x2000) {

48 
µuœtch
 = (
A
 >> 8) & 3;

49 
	`Sync
();

51 
	}
}

53 
	$M96Powî
() {

54 
ªg
 = 
µuœtch
 = 0;

55 
	`Sync
();

56 
	`SëRódH™dÀr
(0x8000, 0xffff, 
C¨tBR
);

57 
	`SëWrôeH™dÀr
(0x8000, 0xffff, 
M96Wrôe
);

58 
	}
}

60 
	$SèãRe°‹e
(
vîsi⁄
) {

61 
	`Sync
();

62 
	}
}

64 
	$M≠≥r96_Inô
(
C¨tInfo
 *
öfo
) {

65 
öfo
->
Powî
 = 
M96Powî
;

66 
PPU_hook
 = 
M96Hook
;

67 
GameSèãRe°‹e
 = 
SèãRe°‹e
;

68 
	`AddExSèã
(&
SèãRegs
, ~0, 0, 0);

69 
	}
}

	@fceux-am/src/boards/99.cpp

21 
	~"m≠öc.h
"

23 
uöt8
 
	gœtch
;

24 
uöt8
 *
	gWRAM
 = 
NULL
;

25 
uöt32
 
	gWRAMSIZE
;

26 
wrôefunc
 
	gﬁd4016
;

28 
SFORMAT
 
	gSèãRegs
[] =

30 { &
œtch
, 1, "LATC" },

34 
	$Sync
() {

35 
	`£tchr8
((
œtch
 >> 2) & 1);

36 
	`£çrg8r
(0x10, 0x6000, 0);

37 
	`£çrg32
(0x8000, 0);

38 
	`£çrg8
(0x8000, 
œtch
 & 4);

39 
	}
}

41 
	$DECLFW
(
M99Wrôe
) {

42 
œtch
 = 
V
;

43 
	`Sync
();

44 
	`ﬁd4016
(
A
, 
V
);

45 
	}
}

47 
	$M99Powî
() {

48 
œtch
 = 0;

49 
	`Sync
();

50 
ﬁd4016
 = 
	`GëWrôeH™dÀr
(0x4016);

51 
	`SëWrôeH™dÀr
(0x4016, 0x4016, 
M99Wrôe
);

52 
	`SëRódH™dÀr
(0x6000, 0xFFFF, 
C¨tBR
);

53 
	`SëWrôeH™dÀr
(0x6000, 0x7FFF, 
C¨tBW
);

54 
	`FCEU_ChótAddRAM
(
WRAMSIZE
 >> 10, 0x6000, 
WRAM
);

55 
	}
}

57 
	$M99Clo£
()

59 i‡(
WRAM
)

60 
	`FCEU_g‰ì
(
WRAM
);

61 
WRAM
 = 
NULL
;

62 
	}
}

64 
	$SèãRe°‹e
(
vîsi⁄
) {

65 
	`Sync
();

66 
	}
}

68 
	$M≠≥r99_Inô
(
C¨tInfo
 *
öfo
) {

69 
öfo
->
Powî
 = 
M99Powî
;

70 
öfo
->
Clo£
 = 
M99Clo£
;

72 
WRAMSIZE
 = 8192;

73 
WRAM
 = (
uöt8
*)
	`FCEU_gmÆloc
(
WRAMSIZE
);

74 
	`SëupC¨tPRGM≠pög
(0x10, 
WRAM
, 
WRAMSIZE
, 1);

75 
	`AddExSèã
(
WRAM
, 
WRAMSIZE
, 0, "WRAM");

77 
GameSèãRe°‹e
 = 
SèãRe°‹e
;

78 
	`AddExSèã
(&
SèãRegs
, ~0, 0, 0);

79 
	}
}

	@fceux-am/src/boards/BMW8544.cpp

26 
	~"m≠öc.h
"

27 
	~"mmc3.h
"

29 
	$UNLBMW8544PW
(
uöt32
 
A
, 
uöt8
 
V
) {

30 if(
A
 == 0x8000)

31 
	`£çrg8
(
A
,
EXPREGS
[0] & 0x1F);

33 
	`£çrg8
(
A
,
V
);

34 
	}
}

36 
	$UNLBMW8544CW
(
uöt32
 
A
, 
uöt8
 
V
) {

37 if(
A
 == 0x0000)

38 
	`£tchr2
(0x0000,(
V
 >> 1Ë^ 
EXPREGS
[1]);

39 i‡(
A
 == 0x0800)

40 
	`£tchr2
(0x0800,(
V
 >> 1Ë| ((
EXPREGS
[2] & 0x40) << 1));

41 i‡(
A
 == 0x1000)

42 
	`£tchr4
(0x1000, 
EXPREGS
[2] & 0x3F);

44 
	}
}

46 
	$DECLFW
(
UNLBMW8544PrŸWrôe
) {

47 if(!(
A
 & 1)) {

48 
EXPREGS
[0] = 
V
;

49 
	`FixMMC3PRG
(
MMC3_cmd
);

51 
	}
}

53 
	$DECLFR
(
UNLBMW8544PrŸRód
) {

54 if(!
f˚uödbg
) {

55 if(!(
A
 & 1)) {

56 if((
EXPREGS
[0] & 0xE0) == 0xC0) {

57 
EXPREGS
[1] = 
ARód
[0x6a](0x6a);

59 
EXPREGS
[2] = 
ARód
[0xff](0xff);

61 
	`FixMMC3CHR
(
MMC3_cmd
 & 0x7F);

65 
	}
}

67 
	$UNLBMW8544Powî
() {

68 
	`GíMMC3Powî
();

69 
	`SëWrôeH™dÀr
(0x6000, 0x6FFF, 
UNLBMW8544PrŸWrôe
);

70 
	`SëRódH™dÀr
(0x6000, 0x6FFF, 
UNLBMW8544PrŸRód
);

71 
	}
}

73 
	$UNLBMW8544_Inô
(
C¨tInfo
 *
öfo
) {

74 
	`GíMMC3_Inô
(
öfo
, 128, 256, 0, 0);

75 
pwøp
 = 
UNLBMW8544PW
;

76 
cwøp
 = 
UNLBMW8544CW
;

77 
öfo
->
Powî
 = 
UNLBMW8544Powî
;

78 
	`AddExSèã
(
EXPREGS
, 3, 0, "EXPR");

79 
	}
}

	@fceux-am/src/boards/F-15.cpp

33 
	~"m≠öc.h
"

34 
	~"mmc3.h
"

36 
	$BMCF15PW
(
uöt32
 
A
, 
uöt8
 
V
) {

37 
uöt32
 
b™k
 = 
EXPREGS
[0] & 0xF;

38 
uöt32
 
mode
 = (
EXPREGS
[0] & 8) >> 3;

39 
uöt32
 
mask
 = ~(
mode
);

40 
	`£çrg16
(0x8000, (
b™k
 & 
mask
));

41 
	`£çrg16
(0xC000, (
b™k
 & 
mask
Ë| 
mode
);

42 
	}
}

44 
	$DECLFW
(
BMCF15Wrôe
) {

45 i‡(
A001B
 & 0x80) {

46 
EXPREGS
[0] = 
V
 & 0xF;

47 
	`FixMMC3PRG
(
MMC3_cmd
);

49 
	}
}

51 
	$BMCF15Powî
() {

52 
	`GíMMC3Powî
();

53 
	`SëWrôeH™dÀr
(0x6000, 0x7FFF, 
BMCF15Wrôe
);

54 
	`SëWrôeH™dÀr
(0x6000, 0x7FFF, 
BMCF15Wrôe
);

55 
	}
}

57 
	$BMCF15_Inô
(
C¨tInfo
 *
öfo
) {

58 
	`GíMMC3_Inô
(
öfo
, 256, 256, 0, 0);

59 
pwøp
 = 
BMCF15PW
;

60 
öfo
->
Powî
 = 
BMCF15Powî
;

61 
	`AddExSèã
(
EXPREGS
, 1, 0, "EXPR");

62 
	}
}

	@fceux-am/src/boards/a9746.cpp

21 
	~"m≠öc.h
"

22 
	~"mmc3.h
"

24 
	$DECLFW
(
UNLA9746Wrôe
) {

26 
A
 & 0xE003) {

27 0x8000: 
EXPREGS
[1] = 
V
; EXPREGS[0] = 0; ;

28 0x8002: 
EXPREGS
[0] = 
V
; EXPREGS[1] = 0; ;

31 
uöt8
 
bôs_ªv
 = ((
V
 & 0x20) >> 5) | ((V & 0x10) >> 3) | ((V & 0x08) >> 1) | ((V & 0x04) << 1);

32 
EXPREGS
[0]) {

33 0x26: 
	`£çrg8
(0x8000, 
bôs_ªv
); ;

34 0x25: 
	`£çrg8
(0xA000, 
bôs_ªv
); ;

35 0x24: 
	`£çrg8
(0xC000, 
bôs_ªv
); ;

36 0x23: 
	`£çrg8
(0xE000, 
bôs_ªv
); ;

38 
EXPREGS
[1]) {

40 0x08: 
EXPREGS
[2] = (
V
 << 4); ;

41 0x09: 
	`£tchr1
(0x0000, 
EXPREGS
[2] | (
V
 >> 1)); ;

42 0x0b: 
	`£tchr1
(0x0400, 
EXPREGS
[2] | (
V
 >> 1) | 1); ;

44 0x0e: 
EXPREGS
[2] = (
V
 << 4); ;

45 0x0d: 
	`£tchr1
(0x0800, 
EXPREGS
[2] | (
V
 >> 1)); ;

46 0x0f: 
	`£tchr1
(0x0c00, 
EXPREGS
[2] | (
V
 >> 1) | 1); ;

48 0x12: 
EXPREGS
[2] = (
V
 << 4); ;

49 0x11: 
	`£tchr1
(0x1000, 
EXPREGS
[2] | (
V
 >> 1)); ;

51 0x16: 
EXPREGS
[2] = (
V
 << 4); ;

52 0x15: 
	`£tchr1
(0x1400, 
EXPREGS
[2] | (
V
 >> 1)); ;

54 0x1a: 
EXPREGS
[2] = (
V
 << 4); ;

55 0x19: 
	`£tchr1
(0x1800, 
EXPREGS
[2] | (
V
 >> 1)); ;

57 0x1e: 
EXPREGS
[2] = (
V
 << 4); ;

58 0x1d: 
	`£tchr1
(0x1c00, 
EXPREGS
[2] | (
V
 >> 1)); ;

63 
	}
}

65 
	$UNLA9746Powî
() {

66 
	`GíMMC3Powî
();

67 
	`SëWrôeH™dÀr
(0x8000, 0xbfff, 
UNLA9746Wrôe
);

68 
	}
}

70 
	$UNLA9746_Inô
(
C¨tInfo
 *
öfo
) {

71 
	`GíMMC3_Inô
(
öfo
, 128, 256, 0, 0);

72 
öfo
->
Powî
 = 
UNLA9746Powî
;

73 
	`AddExSèã
(
EXPREGS
, 6, 0, "EXPR");

74 
	}
}

	@fceux-am/src/boards/ac-08.cpp

21 
	~"m≠öc.h
"

23 
uöt8
 
	gªg
, 
	gmúr
;

25 
SFORMAT
 
	gSèãRegs
[] =

27 { &
ªg
, 1, "REG" },

28 { &
múr
, 1, "MIRR" },

32 
	$Sync
() {

33 
	`£çrg8
(0x6000, 
ªg
);

34 
	`£çrg32r
(1, 0x8000, 0);

35 
	`£tchr8
(0);

36 
	`£tmúr‹
(
múr
);

37 
	}
}

39 
	$DECLFW
(
AC08Múr
) {

40 
múr
 = ((
V
 & 8) >> 3) ^ 1;

41 
	`Sync
();

42 
	}
}

44 
	$DECLFW
(
AC08Wrôe
) {

45 i‡(
A
 == 0x8001)

46 
ªg
 = (
V
 >> 1) & 0xf;

48 
ªg
 = 
V
 & 0xf;

49 
	`Sync
();

50 
	}
}

52 
	$AC08Powî
() {

53 
ªg
 = 0;

54 
	`Sync
();

55 
	`SëRódH™dÀr
(0x6000, 0xFFFF, 
C¨tBR
);

56 
	`SëWrôeH™dÀr
(0x4025, 0x4025, 
AC08Múr
);

57 
	`SëWrôeH™dÀr
(0x8000, 0xFFFF, 
AC08Wrôe
);

58 
	}
}

60 
	$SèãRe°‹e
(
vîsi⁄
) {

61 
	`Sync
();

62 
	}
}

64 
	$AC08_Inô
(
C¨tInfo
 *
öfo
) {

65 
öfo
->
Powî
 = 
AC08Powî
;

66 
GameSèãRe°‹e
 = 
SèãRe°‹e
;

67 
	`AddExSèã
(&
SèãRegs
, ~0, 0, 0);

68 
	}
}

	@fceux-am/src/boards/addrlatch.cpp

21 
	~"m≠öc.h
"

23 
uöt16
 
	gœtche
, 
	gœtcheöô
;

24 
uöt16
 
	gaddºeg0
, 
	gaddºeg1
;

25 
uöt8
 
	gdùswôch
;

26 (*
WSync
)();

27 
ªadfunc
 
de‰ód
;

28 
uöt8
 *
WRAM
 = 
NULL
;

29 
uöt32
 
WRAMSIZE
;

31 
	$DECLFW
(
L©chWrôe
) {

32 
œtche
 = 
A
;

33 
	`WSync
();

34 
	}
}

36 
	$L©chRe£t
() {

37 
œtche
 = 
œtcheöô
;

38 
	`WSync
();

39 
	}
}

41 
	$L©chPowî
() {

42 
œtche
 = 
œtcheöô
;

43 
	`WSync
();

44 i‡(
WRAM
) {

45 
	`SëRódH™dÀr
(0x6000, 0xFFFF, 
C¨tBR
);

46 
	`SëWrôeH™dÀr
(0x6000, 0x7FFF, 
C¨tBW
);

47 
	`FCEU_ChótAddRAM
(
WRAMSIZE
 >> 10, 0x6000, 
WRAM
);

49 
	`SëRódH™dÀr
(0x6000, 0xFFFF, 
de‰ód
);

50 
	`SëWrôeH™dÀr
(
addºeg0
, 
addºeg1
, 
L©chWrôe
);

51 
	}
}

53 
	$L©chClo£
() {

54 i‡(
WRAM
)

55 
	`FCEU_g‰ì
(
WRAM
);

56 
WRAM
 = 
NULL
;

57 
	}
}

59 
	$SèãRe°‹e
(
vîsi⁄
) {

60 
	`WSync
();

61 
	}
}

63 
	$L©ch_Inô
(
C¨tInfo
 *
öfo
, (*
¥oc
)(), 
ªadfunc
 
func
, 
uöt16
 
löô
, uöt16 
adr0
, uöt16 
adr1
, 
uöt8
 
wøm
) {

64 
œtcheöô
 = 
löô
;

65 
addºeg0
 = 
adr0
;

66 
addºeg1
 = 
adr1
;

67 
WSync
 = 
¥oc
;

68 i‡(
func
 !
NULL
)

69 
de‰ód
 = 
func
;

71 
de‰ód
 = 
C¨tBROB
;

72 
öfo
->
Powî
 = 
L©chPowî
;

73 
öfo
->
Re£t
 = 
L©chRe£t
;

74 
öfo
->
Clo£
 = 
L©chClo£
;

75 i‡(
wøm
) {

76 
WRAMSIZE
 = 8192;

77 
WRAM
 = (
uöt8
*)
	`FCEU_gmÆloc
(
WRAMSIZE
);

78 
	`SëupC¨tPRGM≠pög
(0x10, 
WRAM
, 
WRAMSIZE
, 1);

79 i‡(
öfo
->
b©ãry
) {

80 
öfo
->
SaveGame
[0] = 
WRAM
;

81 
öfo
->
SaveGameLí
[0] = 
WRAMSIZE
;

83 
	`AddExSèã
(
WRAM
, 
WRAMSIZE
, 0, "WRAM");

85 
GameSèãRe°‹e
 = 
SèãRe°‹e
;

86 
	`AddExSèã
(&
œtche
, 2, 0, "LATC");

87 
	}
}

91 
	$BMCD1038Sync
() {

92 i‡(
œtche
 & 0x80) {

93 
	`£çrg16
(0x8000, (
œtche
 & 0x70) >> 4);

94 
	`£çrg16
(0xC000, (
œtche
 & 0x70) >> 4);

96 
	`£çrg32
(0x8000, (
œtche
 & 0x60) >> 5);

97 
	`£tchr8
(
œtche
 & 7);

98 
	`£tmúr‹
(((
œtche
 & 8) >> 3) ^ 1);

99 
	}
}

101 
	$DECLFR
(
BMCD1038Ród
) {

102 i‡(
œtche
 & 0x100)

103  
dùswôch
;

105  
	`C¨tBR
(
A
);

106 
	}
}

108 
	$BMCD1038Re£t
() {

109 
dùswôch
++;

110 
dùswôch
 &= 3;

111 
	}
}

113 
	$BMCD1038_Inô
(
C¨tInfo
 *
öfo
) {

114 
	`L©ch_Inô
(
öfo
, 
BMCD1038Sync
, 
BMCD1038Ród
, 0x0000, 0x8000, 0xFFFF, 0);

115 
öfo
->
Re£t
 = 
BMCD1038Re£t
;

116 
	`AddExSèã
(&
dùswôch
, 1, 0, "DIPSW");

117 
	}
}

121 
	$UNL43272Sync
() {

122 i‡((
œtche
 & 0x81) == 0x81) {

123 
	`£çrg32
(0x8000, (
œtche
 & 0x38) >> 3);

125 
	`FCEU_¥ötf
("uƒecognized comm™d %04!\n", 
œtche
);

126 
	`£tchr8
(0);

127 
	`£tmúr‹
(0);

128 
	}
}

130 
	$DECLFR
(
UNL43272Ród
) {

131 i‡(
œtche
 & 0x400)

132  
	`C¨tBR
(
A
 & 0xFE);

134  
	`C¨tBR
(
A
);

135 
	}
}

137 
	$UNL43272Re£t
() {

138 
œtche
 = 0;

139 
	`UNL43272Sync
();

140 
	}
}

142 
	$UNL43272_Inô
(
C¨tInfo
 *
öfo
) {

143 
	`L©ch_Inô
(
öfo
, 
UNL43272Sync
, 
UNL43272Ród
, 0x0081, 0x8000, 0xFFFF, 0);

144 
öfo
->
Re£t
 = 
UNL43272Re£t
;

145 
	`AddExSèã
(&
dùswôch
, 1, 0, "DIPSW");

146 
	}
}

150 
	$BMCGK192Sync
() {

151 i‡(
œtche
 & 0x40) {

152 
	`£çrg16
(0x8000, 
œtche
 & 7);

153 
	`£çrg16
(0xC000, 
œtche
 & 7);

155 
	`£çrg32
(0x8000, (
œtche
 >> 1) & 3);

156 
	`£tchr8
((
œtche
 >> 3) & 7);

157 
	`£tmúr‹
(((
œtche
 & 0x80) >> 7) ^ 1);

158 
	}
}

160 
	$BMCGK192_Inô
(
C¨tInfo
 *
öfo
) {

161 
	`L©ch_Inô
(
öfo
, 
BMCGK192Sync
, 
NULL
, 0x0000, 0x8000, 0xFFFF, 0);

162 
	}
}

166 
	$M59Sync
() {

167 
	`£çrg32
(0x8000, (
œtche
 >> 4) & 7);

168 
	`£tchr8
(
œtche
 & 0x7);

169 
	`£tmúr‹
((
œtche
 >> 3) & 1);

170 
	}
}

172 
	$DECLFR
(
M59Ród
) {

173 i‡(
œtche
 & 0x100)

176  
	`C¨tBR
(
A
);

177 
	}
}

179 
	$M≠≥r59_Inô
(
C¨tInfo
 *
öfo
) {

180 
	`L©ch_Inô
(
öfo
, 
M59Sync
, 
M59Ród
, 0x0000, 0x8000, 0xFFFF, 0);

181 
	}
}

184 
	$M61Sync
() {

185 i‡(((
œtche
 & 0x10) << 1) ^ (latche & 0x20)) {

186 
	`£çrg16
(0x8000, ((
œtche
 & 0xF) << 1) | (((latche & 0x20) >> 4)));

187 
	`£çrg16
(0xC000, ((
œtche
 & 0xF) << 1) | (((latche & 0x20) >> 4)));

189 
	`£çrg32
(0x8000, 
œtche
 & 0xF);

190 
	`£tchr8
(0);

191 
	`£tmúr‹
(((
œtche
 >> 7) & 1) ^ 1);

192 
	}
}

194 
	$M≠≥r61_Inô
(
C¨tInfo
 *
öfo
) {

195 
	`L©ch_Inô
(
öfo
, 
M61Sync
, 
NULL
, 0x0000, 0x8000, 0xFFFF, 0);

196 
	}
}

204 
	$M92Sync
() {

205 
uöt8
 
ªg
 = 
œtche
 & 0xF0;

206 
	`£çrg16
(0x8000, 0);

207 i‡(
œtche
 >= 0x9000) {

208 
ªg
) {

209 0xD0: 
	`£çrg16
(0xc000, 
œtche
 & 15); ;

210 0xE0: 
	`£tchr8
(
œtche
 & 15); ;

213 
ªg
) {

214 0xB0: 
	`£çrg16
(0xc000, 
œtche
 & 15); ;

215 0x70: 
	`£tchr8
(
œtche
 & 15); ;

218 
	}
}

220 
	$M≠≥r92_Inô
(
C¨tInfo
 *
öfo
) {

221 
	`L©ch_Inô
(
öfo
, 
M92Sync
, 
NULL
, 0x80B0, 0x8000, 0xFFFF, 0);

222 
	}
}

226 
	$M200Sync
() {

227 
	`£çrg16
(0x8000, 
œtche
 & 7);

228 
	`£çrg16
(0xC000, 
œtche
 & 7);

229 
	`£tchr8
(
œtche
 & 7);

230 
	`£tmúr‹
((
œtche
 & 8) >> 3);

231 
	}
}

233 
	$M≠≥r200_Inô
(
C¨tInfo
 *
öfo
) {

234 
	`L©ch_Inô
(
öfo
, 
M200Sync
, 
NULL
, 0xFFFF, 0x8000, 0xFFFF, 0);

235 
	}
}

239 
	$M201Sync
() {

240 i‡(
œtche
 & 8) {

241 
	`£çrg32
(0x8000, 
œtche
 & 3);

242 
	`£tchr8
(
œtche
 & 3);

244 
	`£çrg32
(0x8000, 0);

245 
	`£tchr8
(0);

247 
	}
}

249 
	$M≠≥r201_Inô
(
C¨tInfo
 *
öfo
) {

250 
	`L©ch_Inô
(
öfo
, 
M201Sync
, 
NULL
, 0xFFFF, 0x8000, 0xFFFF, 0);

251 
	}
}

255 
	$M202Sync
() {

257 
öt32
 
múr‹
 = 
œtche
 & 1;

258 
öt32
 
b™k
 = (
œtche
 >> 1) & 0x7;

259 
öt32
 
£À˘
 = (
múr‹
 & (
b™k
 >> 2));

260 
	`£çrg16
(0x8000, 
£À˘
 ? (
b™k
 & 6) | 0 : bank);

261 
	`£çrg16
(0xc000, 
£À˘
 ? (
b™k
 & 6) | 1 : bank);

262 
	`£tmúr‹
(
múr‹
 ^ 1);

263 
	`£tchr8
(
b™k
);

264 
	}
}

266 
	$M≠≥r202_Inô
(
C¨tInfo
 *
öfo
) {

267 
	`L©ch_Inô
(
öfo
, 
M202Sync
, 
NULL
, 0x0000, 0x8000, 0xFFFF, 0);

268 
	}
}

272 
	$M204Sync
() {

273 
öt32
 
tmp2
 = 
œtche
 & 0x6;

274 
öt32
 
tmp1
 = 
tmp2
 + (—mp2 =0x6Ë? 0 : (
œtche
 & 1));

275 
	`£çrg16
(0x8000, 
tmp1
);

276 
	`£çrg16
(0xc000, 
tmp2
 + (—mp2 =0x6Ë? 1 : (
œtche
 & 1)));

277 
	`£tchr8
(
tmp1
);

278 
	`£tmúr‹
(((
œtche
 >> 4) & 1) ^ 1);

279 
	}
}

281 
	$M≠≥r204_Inô
(
C¨tInfo
 *
öfo
) {

282 
	`L©ch_Inô
(
öfo
, 
M204Sync
, 
NULL
, 0xFFFF, 0x8000, 0xFFFF, 0);

283 
	}
}

287 
	$DECLFR
(
M212Ród
) {

288 
uöt8
 
ªt
 = 
	`C¨tBROB
(
A
);

289 i‡((
A
 & 0xE010) == 0x6000)

290 
ªt
 |= 0x80;

291  
ªt
;

292 
	}
}

294 
	$M212Sync
() {

295 i‡(
œtche
 & 0x4000) {

296 
	`£çrg32
(0x8000, (
œtche
 >> 1) & 3);

298 
	`£çrg16
(0x8000, 
œtche
 & 7);

299 
	`£çrg16
(0xC000, 
œtche
 & 7);

301 
	`£tchr8
(
œtche
 & 7);

302 
	`£tmúr‹
(((
œtche
 >> 3) & 1) ^ 1);

303 
	}
}

305 
	$M≠≥r212_Inô
(
C¨tInfo
 *
öfo
) {

306 
	`L©ch_Inô
(
öfo
, 
M212Sync
, 
M212Ród
, 0x0000, 0x8000, 0xFFFF, 0);

307 
	}
}

311 
	$M213Sync
() {

312 if(
œtche
 & 0x40) {

313 
	`£çrg16
(0x8000, (
œtche
 & 7));

314 
	`£çrg16
(0xC000, (
œtche
 & 7));

316 
	`£çrg32
(0x8000, (
œtche
 >> 1) & 3);

318 
	`£tchr8
((
œtche
 >> 3) & 7);

319 
	`£tmúr‹
(((
œtche
 & 1)^((latche >> 6) & 1)) ^ 1);

320 
	}
}

322 
	$M≠≥r213_Inô
(
C¨tInfo
 *
öfo
) {

323 
	`L©ch_Inô
(
öfo
, 
M213Sync
, 
NULL
, 0x0000, 0x8000, 0xFFFF, 0);

324 
	}
}

328 
	$M214Sync
() {

329 
	`£çrg16
(0x8000, (
œtche
 >> 2) & 3);

330 
	`£çrg16
(0xC000, (
œtche
 >> 2) & 3);

331 
	`£tchr8
(
œtche
 & 3);

332 
	}
}

334 
	$M≠≥r214_Inô
(
C¨tInfo
 *
öfo
) {

335 
	`L©ch_Inô
(
öfo
, 
M214Sync
, 
NULL
, 0x0000, 0x8000, 0xFFFF, 0);

336 
	}
}

340 
	$M217Sync
() {

341 
	`£çrg32
(0x8000, (
œtche
 >> 2) & 3);

342 
	`£tchr8
(
œtche
 & 7);

343 
	}
}

345 
	$M≠≥r217_Inô
(
C¨tInfo
 *
öfo
) {

346 
	`L©ch_Inô
(
öfo
, 
M217Sync
, 
NULL
, 0x0000, 0x8000, 0xFFFF, 0);

347 
	}
}

351 
	$M227Sync
() {

352 
uöt32
 
S
 = 
œtche
 & 1;

353 
uöt32
 
p
 = ((
œtche
 >> 2) & 0x1F) + ((latche & 0x100) >> 3);

354 
uöt32
 
L
 = (
œtche
 >> 9) & 1;

362 i‡((
œtche
 & 0xF000) == 0xF000)

363 
	`SëupC¨tCHRM≠pög
(0, 
CHR±r
[0], 0x2000, 0);

365 
	`SëupC¨tCHRM≠pög
(0, 
CHR±r
[0], 0x2000, 1);

367 i‡((
œtche
 >> 7) & 1) {

368 i‡(
S
) {

369 
	`£çrg32
(0x8000, 
p
 >> 1);

371 
	`£çrg16
(0x8000, 
p
);

372 
	`£çrg16
(0xC000, 
p
);

375 i‡(
S
) {

376 i‡(
L
) {

377 
	`£çrg16
(0x8000, 
p
 & 0x3E);

378 
	`£çrg16
(0xC000, 
p
 | 7);

380 
	`£çrg16
(0x8000, 
p
 & 0x3E);

381 
	`£çrg16
(0xC000, 
p
 & 0x38);

384 i‡(
L
) {

385 
	`£çrg16
(0x8000, 
p
);

386 
	`£çrg16
(0xC000, 
p
 | 7);

388 
	`£çrg16
(0x8000, 
p
);

389 
	`£çrg16
(0xC000, 
p
 & 0x38);

394 
	`£tmúr‹
(((
œtche
 >> 1) & 1) ^ 1);

395 
	`£tchr8
(0);

396 
	`£çrg8r
(0x10, 0x6000, 0);

397 
	}
}

399 
	$M≠≥r227_Inô
(
C¨tInfo
 *
öfo
) {

400 
	`L©ch_Inô
(
öfo
, 
M227Sync
, 
NULL
, 0x0000, 0x8000, 0xFFFF, 1);

401 
	}
}

405 
	$M229Sync
() {

406 
	`£tchr8
(
œtche
);

407 i‡(!(
œtche
 & 0x1e))

408 
	`£çrg32
(0x8000, 0);

410 
	`£çrg16
(0x8000, 
œtche
 & 0x1F);

411 
	`£çrg16
(0xC000, 
œtche
 & 0x1F);

413 
	`£tmúr‹
(((
œtche
 >> 5) & 1) ^ 1);

414 
	}
}

416 
	$M≠≥r229_Inô
(
C¨tInfo
 *
öfo
) {

417 
	`L©ch_Inô
(
öfo
, 
M229Sync
, 
NULL
, 0x0000, 0x8000, 0xFFFF, 0);

418 
	}
}

422 
	$M231Sync
() {

423 
	`£tchr8
(0);

424 i‡(
œtche
 & 0x20)

425 
	`£çrg32
(0x8000, (
œtche
 >> 1) & 0x0F);

427 
	`£çrg16
(0x8000, 
œtche
 & 0x1E);

428 
	`£çrg16
(0xC000, 
œtche
 & 0x1E);

430 
	`£tmúr‹
(((
œtche
 >> 7) & 1) ^ 1);

431 
	}
}

433 
	$M≠≥r231_Inô
(
C¨tInfo
 *
öfo
) {

434 
	`L©ch_Inô
(
öfo
, 
M231Sync
, 
NULL
, 0x0000, 0x8000, 0xFFFF, 0);

435 
	}
}

439 
	$M242Sync
() {

440 
	`£tchr8
(0);

441 
	`£çrg8r
(0x10, 0x6000, 0);

442 
	`£çrg32
(0x8000, (
œtche
 >> 3) & 0xf);

443 
	`£tmúr‹
(((
œtche
 >> 1) & 1) ^ 1);

444 
	}
}

446 
	$M≠≥r242_Inô
(
C¨tInfo
 *
öfo
) {

447 
	`L©ch_Inô
(
öfo
, 
M242Sync
, 
NULL
, 0x0000, 0x8000, 0xFFFF, 1);

448 
	}
}

452 
	$BMC190ö1Sync
() {

453 
	`£çrg16
(0x8000, (
œtche
 >> 2) & 7);

454 
	`£çrg16
(0xC000, (
œtche
 >> 2) & 7);

455 
	`£tchr8
((
œtche
 >> 2) & 7);

456 
	`£tmúr‹
((
œtche
 & 1) ^ 1);

457 
	}
}

459 
	$BMC190ö1_Inô
(
C¨tInfo
 *
öfo
) {

460 
	`L©ch_Inô
(
öfo
, 
BMC190ö1Sync
, 
NULL
, 0x0000, 0x8000, 0xFFFF, 0);

461 
	}
}

465 
	$BMC810544CA1Sync
() {

466 
uöt32
 
b™k
 = 
œtche
 >> 7;

467 i‡(
œtche
 & 0x40)

468 
	`£çrg32
(0x8000, 
b™k
);

470 
	`£çrg16
(0x8000, (
b™k
 << 1Ë| ((
œtche
 >> 5) & 1));

471 
	`£çrg16
(0xC000, (
b™k
 << 1Ë| ((
œtche
 >> 5) & 1));

473 
	`£tchr8
(
œtche
 & 0x0f);

474 
	`£tmúr‹
(((
œtche
 >> 4) & 1) ^ 1);

475 
	}
}

477 
	$BMC810544CA1_Inô
(
C¨tInfo
 *
öfo
) {

478 
	`L©ch_Inô
(
öfo
, 
BMC810544CA1Sync
, 
NULL
, 0x0000, 0x8000, 0xFFFF, 0);

479 
	}
}

483 
	$BMCNTD03Sync
() {

488 
uöt32
 
¥g
 = ((
œtche
 >> 10) & 0x1e);

489 
uöt32
 
chr
 = ((
œtche
 & 0x0300) >> 5) | (latche & 7);

490 i‡(
œtche
 & 0x80) {

491 
	`£çrg16
(0x8000, 
¥g
 | ((
œtche
 >> 6) & 1));

492 
	`£çrg16
(0xC000, 
¥g
 | ((
œtche
 >> 6) & 1));

494 
	`£çrg32
(0x8000, 
¥g
 >> 1);

495 
	`£tchr8
(
chr
);

496 
	`£tmúr‹
(((
œtche
 >> 10) & 1) ^ 1);

497 
	}
}

499 
	$BMCNTD03_Inô
(
C¨tInfo
 *
öfo
) {

500 
	`L©ch_Inô
(
öfo
, 
BMCNTD03Sync
, 
NULL
, 0x0000, 0x8000, 0xFFFF, 0);

501 
	}
}

505 
	$BMCG146Sync
() {

506 
	`£tchr8
(0);

507 i‡(
œtche
 & 0x800) {

508 
	`£çrg16
(0x8000, (
œtche
 & 0x1F) | (latche & ((latche & 0x40) >> 6)));

509 
	`£çrg16
(0xC000, (
œtche
 & 0x18) | 7);

511 i‡(
œtche
 & 0x40) {

512 
	`£çrg16
(0x8000, 
œtche
 & 0x1F);

513 
	`£çrg16
(0xC000, 
œtche
 & 0x1F);

515 
	`£çrg32
(0x8000, (
œtche
 >> 1) & 0x0F);

518 
	`£tmúr‹
(((
œtche
 & 0x80) >> 7) ^ 1);

519 
	}
}

521 
	$BMCG146_Inô
(
C¨tInfo
 *
öfo
) {

522 
	`L©ch_Inô
(
öfo
, 
BMCG146Sync
, 
NULL
, 0x0000, 0x8000, 0xFFFF, 0);

523 
	}
}

	@fceux-am/src/boards/ax5705.cpp

23 
	~"m≠öc.h
"

25 
uöt8
 
	gIRQCou¡
;

26 
uöt8
 
	gIRQa
;

27 
uöt8
 
	g¥g_ªg
[2];

28 
uöt8
 
	gchr_ªg
[8];

29 
uöt8
 
	gmúr
;

31 
SFORMAT
 
	gSèãRegs
[] =

33 { &
IRQCou¡
, 1, "IRQC" },

34 { &
IRQa
, 1, "IRQA" },

35 { 
¥g_ªg
, 2, "PRG" },

36 { 
chr_ªg
, 8, "CHR" },

37 { &
múr
, 1, "MIRR" },

55 
	$Sync
() {

56 
	`£çrg8
(0x8000, 
¥g_ªg
[0]);

57 
	`£çrg8
(0xA000, 
¥g_ªg
[1]);

58 
	`£çrg8
(0xC000, ~1);

59 
	`£çrg8
(0xE000, ~0);

60 
i
;

61 
i
 = 0; i < 8; i++)

62 
	`£tchr1
(
i
 << 10, 
chr_ªg
[i]);

63 
	`£tmúr‹
(
múr
 ^ 1);

64 
	}
}

66 
	$DECLFW
(
UNLAX5705Wrôe
) {

75 
A
 & 0xF00F) {

76 0x8000: 
¥g_ªg
[0] = ((
V
 & 2) << 2) | ((V & 8) >> 2) | (V & 5); ;

77 0x8008: 
múr
 = 
V
 & 1; ;

78 0xA000: 
¥g_ªg
[1] = ((
V
 & 2) << 2) | ((V & 8) >> 2) | (V & 5); ;

79 0xA008: 
chr_ªg
[0] = (chr_ªg[0] & 0xF0Ë| (
V
 & 0x0F); ;

80 0xA009: 
chr_ªg
[0] = (chr_ªg[0] & 0x0FË| ((((
V
 & 4) >> 1) | ((V & 2) << 1) | (V & 0x09)) << 4); ;

81 0xA00A: 
chr_ªg
[1] = (chr_ªg[1] & 0xF0Ë| (
V
 & 0x0F); ;

82 0xA00B: 
chr_ªg
[1] = (chr_ªg[1] & 0x0FË| ((((
V
 & 4) >> 1) | ((V & 2) << 1) | (V & 0x09)) << 4); ;

83 0xC000: 
chr_ªg
[2] = (chr_ªg[2] & 0xF0Ë| (
V
 & 0x0F); ;

84 0xC001: 
chr_ªg
[2] = (chr_ªg[2] & 0x0FË| ((((
V
 & 4) >> 1) | ((V & 2) << 1) | (V & 0x09)) << 4); ;

85 0xC002: 
chr_ªg
[3] = (chr_ªg[3] & 0xF0Ë| (
V
 & 0x0F); ;

86 0xC003: 
chr_ªg
[3] = (chr_ªg[3] & 0x0FË| ((((
V
 & 4) >> 1) | ((V & 2) << 1) | (V & 0x09)) << 4); ;

87 0xC008: 
chr_ªg
[4] = (chr_ªg[4] & 0xF0Ë| (
V
 & 0x0F); ;

88 0xC009: 
chr_ªg
[4] = (chr_ªg[4] & 0x0FË| ((((
V
 & 4) >> 1) | ((V & 2) << 1) | (V & 0x09)) << 4); ;

89 0xC00A: 
chr_ªg
[5] = (chr_ªg[5] & 0xF0Ë| (
V
 & 0x0F); ;

90 0xC00B: 
chr_ªg
[5] = (chr_ªg[5] & 0x0FË| ((((
V
 & 4) >> 1) | ((V & 2) << 1) | (V & 0x09)) << 4); ;

91 0xE000: 
chr_ªg
[6] = (chr_ªg[6] & 0xF0Ë| (
V
 & 0x0F); ;

92 0xE001: 
chr_ªg
[6] = (chr_ªg[6] & 0x0FË| ((((
V
 & 4) >> 1) | ((V & 2) << 1) | (V & 0x09)) << 4); ;

93 0xE002: 
chr_ªg
[7] = (chr_ªg[7] & 0xF0Ë| (
V
 & 0x0F); ;

94 0xE003: 
chr_ªg
[7] = (chr_ªg[7] & 0x0FË| ((((
V
 & 4) >> 1) | ((V & 2) << 1) | (V & 0x09)) << 4); ;

98 
	`Sync
();

99 
	}
}

101 
	$UNLAX5705Powî
() {

102 
	`Sync
();

103 
	`SëRódH™dÀr
(0x8000, 0xFFFF, 
C¨tBR
);

104 
	`SëWrôeH™dÀr
(0x8000, 0xFFFF, 
UNLAX5705Wrôe
);

105 
	}
}

107 
	$SèãRe°‹e
(
vîsi⁄
) {

108 
	`Sync
();

109 
	}
}

111 
	$UNLAX5705_Inô
(
C¨tInfo
 *
öfo
) {

112 
öfo
->
Powî
 = 
UNLAX5705Powî
;

114 
GameSèãRe°‹e
 = 
SèãRe°‹e
;

115 
	`AddExSèã
(&
SèãRegs
, ~0, 0, 0);

116 
	}
}

	@fceux-am/src/boards/bandai.cpp

25 
	~"m≠öc.h
"

27 
uöt8
 
	gªg
[16], 
	gis153
, 
	gx24c02
;

28 
uöt8
 
	gIRQa
;

29 
öt16
 
	gIRQCou¡
, 
	gIRQL©ch
;

31 
uöt8
 *
	gWRAM
 = 
NULL
;

32 
uöt32
 
	gWRAMSIZE
;

34 
SFORMAT
 
	gSèãRegs
[] =

36 { 
ªg
, 16, "REGS" },

37 { &
IRQa
, 1, "IRQA" },

38 { &
IRQCou¡
, 2, "IRQC" },

39 { &
IRQL©ch
, 2, "IRQL" },

45 
	#X24C0X_STANDBY
 0

	)

46 
	#X24C0X_ADDRESS
 1

	)

47 
	#X24C0X_WORD
 2

	)

48 
	#X24C0X_READ
 3

	)

49 
	#X24C0X_WRITE
 4

	)

51 
uöt8
 
	gx24c0x_d©a
[256], 
	gx24c0x_°©e
;

52 
uöt8
 
	gx24c0x_addr
, 
	gx24c0x_w‹d
, 
	gx24c0x_œtch
, 
	gx24c0x_bôcou¡
;

53 
uöt8
 
	gx24c0x_sda
, 
	gx24c0x_s˛
, 
	gx24c0x_out
, 
	gx24c0x_€
;

55 
SFORMAT
 
	gx24c0xSèãRegs
[] =

57 { &
x24c0x_addr
, 1, "ADDR" },

58 { &
x24c0x_w‹d
, 1, "WORD" },

59 { &
x24c0x_œtch
, 1, "LATC" },

60 { &
x24c0x_bôcou¡
, 1, "BITC" },

61 { &
x24c0x_sda
, 1, "SDA" },

62 { &
x24c0x_s˛
, 1, "SCL" },

63 { &
x24c0x_out
, 1, "OUT" },

64 { &
x24c0x_€
, 1, "OE" },

65 { &
x24c0x_°©e
, 1, "STAT" },

69 
	$x24c0x_öô
() {

70 
x24c0x_addr
 = 
x24c0x_w‹d
 = 
x24c0x_œtch
 = 
x24c0x_bôcou¡
 = 
x24c0x_sda
 = 
x24c0x_s˛
 = 
x24c0x_€
 = 0;

71 
x24c0x_°©e
 = 
X24C0X_STANDBY
;

72 
	}
}

74 
	$x24c0x_wrôe
(
uöt8
 
d©a
) {

75 
uöt8
 
sda
 = (
d©a
 >> 6) & 1;

76 
uöt8
 
s˛
 = (
d©a
 >> 5) & 1;

77 
x24c0x_€
 = (
d©a
 >> 7);

79 if(
x24c0x_s˛
 && 
s˛
) {

80 if(
x24c0x_sda
 && !
sda
) {

81 
x24c0x_°©e
 = 
X24C0X_ADDRESS
;

82 
x24c0x_bôcou¡
 = 0;

83 
x24c0x_addr
 = 0;

84 } if(!
x24c0x_sda
 && 
sda
) {

85 
x24c0x_°©e
 = 
X24C0X_STANDBY
;

87 } if(!
x24c0x_s˛
 && 
s˛
) {

88 
x24c0x_°©e
) {

89 
X24C0X_ADDRESS
:

90 if(
x24c0x_bôcou¡
 < 7) {

91 
x24c0x_addr
 <<= 1;

92 
x24c0x_addr
 |
sda
;

94 if(!
x24c02
)

95 
x24c0x_w‹d
 = 
x24c0x_addr
;

96 if(
sda
) {

97 
x24c0x_°©e
 = 
X24C0X_READ
;

99 if(
x24c02
)

100 
x24c0x_°©e
 = 
X24C0X_WORD
;

102 
x24c0x_°©e
 = 
X24C0X_WRITE
;

105 
x24c0x_bôcou¡
++;

107 
X24C0X_WORD
:

108 if(
x24c0x_bôcou¡
 == 8) {

109 
x24c0x_w‹d
 = 0;

110 
x24c0x_out
 = 0;

112 
x24c0x_w‹d
 <<= 1;

113 
x24c0x_w‹d
 |
sda
;

114 if(
x24c0x_bôcou¡
 == 16) {

115 
x24c0x_bôcou¡
 = 7;

116 
x24c0x_°©e
 = 
X24C0X_WRITE
;

119 
x24c0x_bôcou¡
++;

121 
X24C0X_READ
:

122 i‡(
x24c0x_bôcou¡
 == 8) {

123 
x24c0x_out
 = 0;

124 
x24c0x_œtch
 = 
x24c0x_d©a
[
x24c0x_w‹d
];

125 
x24c0x_bôcou¡
 = 0;

127 
x24c0x_out
 = 
x24c0x_œtch
 >> 7;

128 
x24c0x_œtch
 <<= 1;

129 
x24c0x_bôcou¡
++;

130 if(
x24c0x_bôcou¡
 == 8) {

131 
x24c0x_w‹d
++;

132 
x24c0x_w‹d
 &= 0xff;

136 
X24C0X_WRITE
:

137 i‡(
x24c0x_bôcou¡
 == 8) {

138 
x24c0x_out
 = 0;

139 
x24c0x_œtch
 = 0;

140 
x24c0x_bôcou¡
 = 0;

142 
x24c0x_œtch
 <<= 1;

143 
x24c0x_œtch
 |
sda
;

144 
x24c0x_bôcou¡
++;

145 if(
x24c0x_bôcou¡
 == 8) {

146 
x24c0x_d©a
[
x24c0x_w‹d
] = 
x24c0x_œtch
;

147 
x24c0x_w‹d
++;

148 
x24c0x_w‹d
 &= 0xff;

155 
x24c0x_sda
 = 
sda
;

156 
x24c0x_s˛
 = 
s˛
;

157 
	}
}

159 
uöt8
 
	$x24c0x_ªad
() {

160  
x24c0x_out
 << 4;

161 
	}
}

165 
	$Sync
() {

166 i‡(
is153
) {

167 
ba£
 = (
ªg
[0] & 1) << 4;

168 
	`£tchr8
(0);

169 
	`£çrg16
(0x8000, (
ªg
[8] & 0x0FË| 
ba£
);

170 
	`£çrg16
(0xC000, 0x0F | 
ba£
);

172 
i
;

173 
i
 = 0; i < 8; i++Ë
	`£tchr1
(ò<< 10, 
ªg
[i]);

174 
	`£çrg16
(0x8000, 
ªg
[8]);

175 
	`£çrg16
(0xC000, ~0);

177 
ªg
[9] & 3) {

178 0: 
	`£tmúr‹
(
MI_V
); ;

179 1: 
	`£tmúr‹
(
MI_H
); ;

180 2: 
	`£tmúr‹
(
MI_0
); ;

181 3: 
	`£tmúr‹
(
MI_1
); ;

183 
	}
}

185 
	$DECLFW
(
B™daiWrôe
) {

186 
A
 &= 0x0F;

187 i‡(
A
 < 0x0A) {

188 
ªg
[
A
 & 0x0F] = 
V
;

189 
	`Sync
();

191 
A
) {

192 0x0A: 
	`X6502_IRQEnd
(
FCEU_IQEXT
); 
IRQa
 = 
V
 & 1; 
IRQCou¡
 = 
IRQL©ch
; ;

193 0x0B: 
IRQL©ch
 &0xFF00; IRQL©ch |
V
; ;

194 0x0C: 
IRQL©ch
 &0xFF; IRQL©ch |
V
 << 8; ;

195 0x0D: 
	`x24c0x_wrôe
(
V
); ;

197 
	}
}

199 
	$DECLFR
(
B™daiRód
) {

200  (
X
.
DB
 & 0xEFË| 
	`x24c0x_ªad
();

201 
	}
}

203 
	$B™daiIRQHook
(
a
) {

204 i‡(
IRQa
) {

205 
IRQCou¡
 -
a
;

206 i‡(
IRQCou¡
 < 0) {

207 
	`X6502_IRQBegö
(
FCEU_IQEXT
);

208 
IRQa
 = 0;

209 
IRQCou¡
 = -1;

212 
	}
}

214 
	$B™daiPowî
() {

215 
IRQa
 = 0;

216 
	`x24c0x_öô
();

217 
	`Sync
();

218 
	`SëRódH™dÀr
(0x6000, 0x7FFF, 
B™daiRód
);

219 
	`SëRódH™dÀr
(0x8000, 0xFFFF, 
C¨tBR
);

220 
	`SëWrôeH™dÀr
(0x6000, 0xFFFF, 
B™daiWrôe
);

221 
	}
}

223 
	$SèãRe°‹e
(
vîsi⁄
) {

224 
	`Sync
();

225 
	}
}

227 
	$M≠≥r16_Inô
(
C¨tInfo
 *
öfo
) {

228 
x24c02
 = 1;

229 
is153
 = 0;

230 
öfo
->
Powî
 = 
B™daiPowî
;

231 
M≠IRQHook
 = 
B™daiIRQHook
;

233 
öfo
->
b©ãry
 = 1;

234 
öfo
->
SaveGame
[0] = 
x24c0x_d©a
;

235 
öfo
->
SaveGameLí
[0] = 256;

236 
	`AddExSèã
(
x24c0x_d©a
, 256, 0, "DATA");

238 
GameSèãRe°‹e
 = 
SèãRe°‹e
;

239 
	`AddExSèã
(&
x24c0xSèãRegs
, ~0, 0, 0);

240 
	`AddExSèã
(&
SèãRegs
, ~0, 0, 0);

241 
	}
}

243 
	$M≠≥r159_Inô
(
C¨tInfo
 *
öfo
) {

244 
x24c02
 = 0;

245 
is153
 = 0;

246 
öfo
->
Powî
 = 
B™daiPowî
;

247 
M≠IRQHook
 = 
B™daiIRQHook
;

249 
öfo
->
b©ãry
 = 1;

250 
öfo
->
SaveGame
[0] = 
x24c0x_d©a
;

251 
öfo
->
SaveGameLí
[0] = 128;

252 
	`AddExSèã
(
x24c0x_d©a
, 128, 0, "DATA");

254 
GameSèãRe°‹e
 = 
SèãRe°‹e
;

255 
	`AddExSèã
(&
x24c0xSèãRegs
, ~0, 0, 0);

256 
	`AddExSèã
(&
SèãRegs
, ~0, 0, 0);

257 
	}
}

266 
	$M153Powî
() {

267 
	`Sync
();

268 
	`£çrg8r
(0x10, 0x6000, 0);

269 
	`SëRódH™dÀr
(0x6000, 0x7FFF, 
C¨tBR
);

270 
	`SëWrôeH™dÀr
(0x6000, 0x7FFF, 
C¨tBW
);

271 
	`SëRódH™dÀr
(0x8000, 0xFFFF, 
C¨tBR
);

272 
	`SëWrôeH™dÀr
(0x8000, 0xFFFF, 
B™daiWrôe
);

273 
	`FCEU_ChótAddRAM
(
WRAMSIZE
 >> 10, 0x6000, 
WRAM
);

274 
	}
}

277 
	$M153Clo£
() {

278 i‡(
WRAM
)

279 
	`FCEU_g‰ì
(
WRAM
);

280 
WRAM
 = 
NULL
;

281 
	}
}

283 
	$M≠≥r153_Inô
(
C¨tInfo
 *
öfo
) {

284 
is153
 = 1;

285 
öfo
->
Powî
 = 
M153Powî
;

286 
öfo
->
Clo£
 = 
M153Clo£
;

287 
M≠IRQHook
 = 
B™daiIRQHook
;

289 
WRAMSIZE
 = 8192;

290 
WRAM
 = (
uöt8
*)
	`FCEU_gmÆloc
(
WRAMSIZE
);

291 
	`SëupC¨tPRGM≠pög
(0x10, 
WRAM
, 
WRAMSIZE
, 1);

292 
	`AddExSèã
(
WRAM
, 
WRAMSIZE
, 0, "WRAM");

294 i‡(
öfo
->
b©ãry
) {

295 
öfo
->
SaveGame
[0] = 
WRAM
;

296 
öfo
->
SaveGameLí
[0] = 
WRAMSIZE
;

299 
GameSèãRe°‹e
 = 
SèãRe°‹e
;

300 
	`AddExSèã
(&
SèãRegs
, ~0, 0, 0);

301 
	}
}

305 
uöt8
 
	gB¨codeD©a
[256];

306 
	gB¨codeRódPos
;

307 
	gB¨codeCy˛eCou¡
;

308 
uöt32
 
	gB¨codeOut
;

310 
	$FCEUI_D©achSë
(c⁄° 
uöt8
 *
rcode
) {

311 
¥efix_∑rôy_ty≥
[10][6] = {

316 
d©a_À·_odd
[10][7] = {

321 
d©a_À·_eví
[10][7] = {

326 
d©a_right
[10][7] = {

331 
uöt8
 
code
[13 + 1];

332 
uöt32
 
tmp_p
 = 0;

333 
i
, 
j
;

334 
Àn
;

336 
i
 = 
Àn
 = 0; i < 13; i++) {

337 i‡(!
rcode
[
i
]) ;

338 i‡((
code
[
i
] = 
rcode
[i] - '0') > 9)

340 
Àn
++;

342 i‡(
Àn
 != 13 &&Üen != 12 &&Üen != 8 &&Üen != 7) (0);

344 
	#BS
(
x
Ë
B¨codeD©a
[
tmp_p
] = x;Åmp_p++

	)

346 
j
 = 0; j < 32; j++) {

347 
	`BS
(0x00);

351 
	`BS
(1); BS(0); BS(1);

353 i‡(
Àn
 == 13 ||Üen == 12) {

354 
uöt32
 
csum
;

356 
i
 = 0; i < 6; i++)

357 i‡(
¥efix_∑rôy_ty≥
[
code
[0]][
i
]) {

358 
j
 = 0; j < 7; j++) {

359 
	`BS
(
d©a_À·_eví
[
code
[
i
 + 1]][
j
]);

362 
j
 = 0; j < 7; j++) {

363 
	`BS
(
d©a_À·_odd
[
code
[
i
 + 1]][
j
]);

367 
	`BS
(0); BS(1); BS(0); BS(1); BS(0);

369 
i
 = 7; i < 12; i++)

370 
j
 = 0; j < 7; j++) {

371 
	`BS
(
d©a_right
[
code
[
i
]][
j
]);

373 
csum
 = 0;

374 
i
 = 0; i < 12; i++Ë
csum
 +
code
[i] * ((i & 1) ? 3 : 1);

375 
csum
 = (10 - (csum % 10)) % 10;

376 
j
 = 0; j < 7; j++) {

377 
	`BS
(
d©a_right
[
csum
][
j
]);

379 } i‡(
Àn
 == 8 ||Üen == 7) {

380 
uöt32
 
csum
 = 0;

382 
i
 = 0; i < 7; i++Ë
csum
 +(ò& 1Ë? 
code
[i] : (code[i] * 3);

384 
csum
 = (10 - (csum % 10)) % 10;

386 
i
 = 0; i < 4; i++)

387 
j
 = 0; j < 7; j++) {

388 
	`BS
(
d©a_À·_odd
[
code
[
i
]][
j
]);

393 
	`BS
(0); BS(1); BS(0); BS(1); BS(0);

395 
i
 = 4; i < 7; i++)

396 
j
 = 0; j < 7; j++) {

397 
	`BS
(
d©a_right
[
code
[
i
]][
j
]);

400 
j
 = 0; j < 7; j++) {

401 
	`BS
(
d©a_right
[
csum
][
j
]);

406 
	`BS
(1); BS(0); BS(1);

408 
j
 = 0; j < 32; j++) {

409 
	`BS
(0x00);

412 
	`BS
(0xFF);

414 #unde‡
BS


416 
B¨codeRódPos
 = 0;

417 
B¨codeOut
 = 0x8;

418 
B¨codeCy˛eCou¡
 = 0;

420 
	}
}

422 
	$B¨codeIRQHook
(
a
) {

423 
	`B™daiIRQHook
(
a
);

425 
B¨codeCy˛eCou¡
 +
a
;

427 i‡(
B¨codeCy˛eCou¡
 >= 1000) {

428 
B¨codeCy˛eCou¡
 -= 1000;

429 i‡(
B¨codeD©a
[
B¨codeRódPos
] == 0xFF) {

430 
B¨codeOut
 = 0;

432 
B¨codeOut
 = (
B¨codeD©a
[
B¨codeRódPos
] ^ 1) << 3;

433 
B¨codeRódPos
++;

436 
	}
}

438 
	$DECLFR
(
B¨codeRód
) {

439  
B¨codeOut
;

440 
	}
}

442 
	$M157Powî
() {

443 
IRQa
 = 0;

444 
B¨codeD©a
[0] = 0xFF;

445 
B¨codeRódPos
 = 0;

446 
B¨codeOut
 = 0;

447 
B¨codeCy˛eCou¡
 = 0;

449 
	`Sync
();

451 
	`SëWrôeH™dÀr
(0x6000, 0xFFFF, 
B™daiWrôe
);

452 
	`SëRódH™dÀr
(0x6000, 0x7FFF, 
B¨codeRód
);

453 
	`SëRódH™dÀr
(0x8000, 0xFFFF, 
C¨tBR
);

454 
	}
}

456 
	$M≠≥r157_Inô
(
C¨tInfo
 *
öfo
) {

457 
is153
 = 1;

458 
öfo
->
Powî
 = 
M157Powî
;

459 
M≠IRQHook
 = 
B¨codeIRQHook
;

461 
GameInfo
->
c•ecül
 = 
SIS_DATACH
;

463 
GameSèãRe°‹e
 = 
SèãRe°‹e
;

464 
	`AddExSèã
(&
SèãRegs
, ~0, 0, 0);

465 
	}
}

	@fceux-am/src/boards/bb.cpp

21 
	~"m≠öc.h
"

23 
uöt8
 
	gªg
, 
	gchr
;

25 
SFORMAT
 
	gSèãRegs
[] =

27 { &
ªg
, 1, "REG" },

28 { &
chr
, 1, "CHR" },

32 
	$Sync
() {

33 
	`£çrg8
(0x6000, 
ªg
 & 3);

34 
	`£çrg32
(0x8000, ~0);

35 
	`£tchr8
(
chr
 & 3);

36 
	}
}

38 
	$DECLFW
(
UNLBBWrôe
) {

39 i‡((
A
 & 0x9000) == 0x8000)

40 
ªg
 = 
chr
 = 
V
;

42 
chr
 = 
V
 & 1;

43 
	`Sync
();

44 
	}
}

46 
	$UNLBBPowî
() {

47 
chr
 = 0;

48 
ªg
 = ~0;

49 
	`Sync
();

50 
	`SëRódH™dÀr
(0x6000, 0x7FFF, 
C¨tBR
);

51 
	`SëRódH™dÀr
(0x8000, 0xFFFF, 
C¨tBR
);

52 
	`SëWrôeH™dÀr
(0x8000, 0xFFFF, 
UNLBBWrôe
);

53 
	}
}

55 
	$SèãRe°‹e
(
vîsi⁄
) {

56 
	`Sync
();

57 
	}
}

59 
	$UNLBB_Inô
(
C¨tInfo
 *
öfo
) {

60 
öfo
->
Powî
 = 
UNLBBPowî
;

61 
GameSèãRe°‹e
 = 
SèãRe°‹e
;

62 
	`AddExSèã
(&
SèãRegs
, ~0, 0, 0);

63 
	}
}

	@fceux-am/src/boards/bmc13in1jy110.cpp

23 
	~"m≠öc.h
"

25 
uöt8
 
	gb™k_mode
;

26 
uöt8
 
	gb™k_vÆue
;

27 
uöt8
 
	g¥gb
[4];

28 
SFORMAT
 
	gSèãRegs
[] =

30 { &
b™k_mode
, 1, "BNM" },

31 { &
b™k_vÆue
, 1, "BMV" },

32 { 
¥gb
, 4, "PRGB" },

36 
	$Sync
() {

38 
b™k_mode
 & 7) {

40 
	`£çrg32
(0x8000, 
b™k_vÆue
 & 7); ;

42 
	`£çrg16
(0x8000, ((8 + (
b™k_vÆue
 & 7)Ë>> 1Ë+ 
¥gb
[1]);

43 
	`£çrg16
(0xC000, (
b™k_vÆue
 & 7) >> 1);

45 
	`£çrg32
(0x8000, 8 + (
b™k_vÆue
 & 7)); ;

47 
	`£çrg16
(0x8000, ((8 + (
b™k_vÆue
 & 7)Ë>> 1Ë+ 
¥gb
[1]);

48 
	`£çrg16
(0xC000, ((8 + (
b™k_vÆue
 & 7)Ë>> 1Ë+ 
¥gb
[3]);

50 
	`£çrg8
(0x8000, 
¥gb
[0] >> 2);

51 
	`£çrg8
(0xa000, 
¥gb
[1]);

52 
	`£çrg8
(0xc000, 
¥gb
[2]);

53 
	`£çrg8
(0xe000, ~0);

56 
	`£çrg8
(0x8000, 
¥gb
[0]);

57 
	`£çrg8
(0xa000, 
¥gb
[1]);

58 
	`£çrg8
(0xc000, 
¥gb
[2]);

59 
	`£çrg8
(0xe000, 
¥gb
[3]);

62 
	}
}

64 
	$DECLFW
(
BMC13ö1JY110Wrôe
) {

66 
A
) {

70 0x8003: 
¥gb
[
A
 & 3] = 
V
; ;

71 0xD000: 
b™k_mode
 = 
V
; ;

72 0xD001: 
	`£tmúr‹
(
V
 & 3);

74 0xD003: 
b™k_vÆue
 = 
V
; ;

76 
	`Sync
();

77 
	}
}

79 
	$BMC13ö1JY110Powî
() {

80 
¥gb
[0] =Örgb[1] =Örgb[2] =Örgb[3] = 0;

81 
b™k_mode
 = 0;

82 
b™k_vÆue
 = 0;

83 
	`£çrg32
(0x8000, 0);

84 
	`£tchr8
(0);

85 
	`SëWrôeH™dÀr
(0x8000, 0xFFFF, 
BMC13ö1JY110Wrôe
);

86 
	`SëRódH™dÀr
(0x8000, 0xFFFF, 
C¨tBR
);

87 
	}
}

89 
	$SèãRe°‹e
(
vîsi⁄
) {

90 
	`Sync
();

91 
	}
}

93 
	$BMC13ö1JY110_Inô
(
C¨tInfo
 *
öfo
) {

94 
öfo
->
Powî
 = 
BMC13ö1JY110Powî
;

95 
	`AddExSèã
(&
SèãRegs
, ~0, 0, 0);

96 
GameSèãRe°‹e
 = 
SèãRe°‹e
;

97 
	}
}

	@fceux-am/src/boards/bmc42in1r.cpp

25 
	~"m≠öc.h
"

27 
uöt8
 
	gi§e£tba£d
 = 0;

28 
uöt8
 
	gœtche
[2], 
	gª£t
;

29 
SFORMAT
 
	gSèãRegs
[] =

31 { &
ª£t
, 1, "RST" },

32 { 
œtche
, 2, "LATC" },

36 
	$Sync
() {

37 
uöt8
 
b™k
;

38 i‡(
i§e£tba£d
)

39 
b™k
 = (
œtche
[0] & 0x1fË| (
ª£t
 << 5) | ((latche[1] & 1) << 6);

41 
b™k
 = (
œtche
[0] & 0x1f) | ((latche[0] & 0x80) >> 2) | ((latche[1] & 1) << 6);

42 i‡(!(
œtche
[0] & 0x20))

43 
	`£çrg32
(0x8000, 
b™k
 >> 1);

45 
	`£çrg16
(0x8000, 
b™k
);

46 
	`£çrg16
(0xC000, 
b™k
);

48 
	`£tmúr‹
((
œtche
[0] >> 6) & 1);

49 
	`£tchr8
(0);

50 
	}
}

52 
	$DECLFW
(
M226Wrôe
) {

53 
œtche
[
A
 & 1] = 
V
;

54 
	`Sync
();

55 
	}
}

57 
	$M226Powî
() {

58 
œtche
[0] =Ü©che[1] = 
ª£t
 = 0;

59 
	`Sync
();

60 
	`SëWrôeH™dÀr
(0x8000, 0xFFFF, 
M226Wrôe
);

61 
	`SëRódH™dÀr
(0x8000, 0xFFFF, 
C¨tBR
);

62 
	}
}

64 
	$SèãRe°‹e
(
vîsi⁄
) {

65 
	`Sync
();

66 
	}
}

68 
	$M≠≥r226_Inô
(
C¨tInfo
 *
öfo
) {

69 
i§e£tba£d
 = 0;

70 
öfo
->
Powî
 = 
M226Powî
;

71 
	`AddExSèã
(&
SèãRegs
, ~0, 0, 0);

72 
GameSèãRe°‹e
 = 
SèãRe°‹e
;

73 
	}
}

75 
	$M233Re£t
() {

76 
ª£t
 ^= 1;

77 
	`Sync
();

78 
	}
}

80 
	$M≠≥r233_Inô
(
C¨tInfo
 *
öfo
) {

81 
i§e£tba£d
 = 1;

82 
öfo
->
Powî
 = 
M226Powî
;

83 
öfo
->
Re£t
 = 
M233Re£t
;

84 
	`AddExSèã
(&
SèãRegs
, ~0, 0, 0);

85 
GameSèãRe°‹e
 = 
SèãRe°‹e
;

86 
	}
}

	@fceux-am/src/boards/bmc64in1nr.cpp

23 
	~"m≠öc.h
"

25 
uöt8
 
	gªgs
[4];

27 
SFORMAT
 
	gSèãRegs
[] =

29 { 
ªgs
, 4, "REGS" },

33 
	$Sync
() {

34 i‡(
ªgs
[0] & 0x80) {

35 i‡(
ªgs
[1] & 0x80)

36 
	`£çrg32
(0x8000, 
ªgs
[1] & 0x1F);

38 
b™k
 = ((
ªgs
[1] & 0x1f) << 1) | ((regs[1] >> 6) & 1);

39 
	`£çrg16
(0x8000, 
b™k
);

40 
	`£çrg16
(0xC000, 
b™k
);

43 
b™k
 = ((
ªgs
[1] & 0x1f) << 1) | ((regs[1] >> 6) & 1);

44 
	`£çrg16
(0xC000, 
b™k
);

46 i‡(
ªgs
[0] & 0x20)

47 
	`£tmúr‹
(
MI_H
);

49 
	`£tmúr‹
(
MI_V
);

50 
	`£tchr8
((
ªgs
[2] << 2) | ((regs[0] >> 1) & 3));

51 
	}
}

53 
	$DECLFW
(
BMC64ö1ƒWrôeLo
) {

54 
ªgs
[
A
 & 3] = 
V
;

55 
	`Sync
();

56 
	}
}

58 
	$DECLFW
(
BMC64ö1ƒWrôeHi
) {

59 
ªgs
[3] = 
V
;

60 
	`Sync
();

61 
	}
}

63 
	$BMC64ö1ƒPowî
() {

64 
ªgs
[0] = 0x80;

65 
ªgs
[1] = 0x43;

66 
ªgs
[2] =Ñegs[3] = 0;

67 
	`Sync
();

68 
	`SëWrôeH™dÀr
(0x5000, 0x5003, 
BMC64ö1ƒWrôeLo
);

69 
	`SëWrôeH™dÀr
(0x8000, 0xFFFF, 
BMC64ö1ƒWrôeHi
);

70 
	`SëRódH™dÀr
(0x8000, 0xFFFF, 
C¨tBR
);

71 
	}
}

73 
	$SèãRe°‹e
(
vîsi⁄
) {

74 
	`Sync
();

75 
	}
}

77 
	$BMC64ö1ƒ_Inô
(
C¨tInfo
 *
öfo
) {

78 
öfo
->
Powî
 = 
BMC64ö1ƒPowî
;

79 
	`AddExSèã
(&
SèãRegs
, ~0, 0, 0);

80 
GameSèãRe°‹e
 = 
SèãRe°‹e
;

81 
	}
}

	@fceux-am/src/boards/bmc70in1.cpp

21 
	~"m≠öc.h
"

23 
uöt8
 
	gis_œrge_b™ks
, 
	ghw_swôch
;

24 
uöt8
 
	gœrge_b™k
;

25 
uöt8
 
	g¥g_b™k
;

26 
uöt8
 
	gchr_b™k
;

27 
uöt8
 
	gb™k_mode
;

28 
uöt8
 
	gmúr‹ög
;

29 
SFORMAT
 
	gSèãRegs
[] =

31 { &
œrge_b™k
, 1, "LB" },

32 { &
hw_swôch
, 1, "DPSW" },

33 { &
¥g_b™k
, 1, "PRG" },

34 { &
chr_b™k
, 1, "CHR" },

35 { &
b™k_mode
, 1, "BM" },

36 { &
múr‹ög
, 1, "MIRR" },

40 
	$Sync
() {

41 
b™k_mode
) {

44 
	`£çrg16
(0x8000, 
œrge_b™k
 | 
¥g_b™k
);

45 
	`£çrg16
(0xC000, 
œrge_b™k
 | 7);

48 
	`£çrg32
(0x8000, (
œrge_b™k
 | 
¥g_b™k
) >> 1);

51 
	`£çrg16
(0x8000, 
œrge_b™k
 | 
¥g_b™k
);

52 
	`£çrg16
(0xC000, 
œrge_b™k
 | 
¥g_b™k
);

55 
	`£tmúr‹
(
múr‹ög
);

56 i‡(!
is_œrge_b™ks
)

57 
	`£tchr8
(
chr_b™k
);

58 
	}
}

60 
	$DECLFR
(
BMC70ö1Ród
) {

61 i‡(
b™k_mode
 == 0x10)

63  
	`C¨tBR
((
A
 & 0xFFF0Ë| 
hw_swôch
);

67  
	`C¨tBR
(
A
);

68 
	}
}

70 
	$DECLFW
(
BMC70ö1Wrôe
) {

71 i‡(
A
 & 0x4000) {

72 
b™k_mode
 = 
A
 & 0x30;

73 
¥g_b™k
 = 
A
 & 7;

75 
múr‹ög
 = ((
A
 & 0x20) >> 5) ^ 1;

76 i‡(
is_œrge_b™ks
)

77 
œrge_b™k
 = (
A
 & 3) << 3;

79 
chr_b™k
 = 
A
 & 7;

81 
	`Sync
();

82 
	}
}

84 
	$BMC70ö1Re£t
() {

85 
b™k_mode
 = 0;

86 
œrge_b™k
 = 0;

87 
	`Sync
();

88 
hw_swôch
++;

89 
hw_swôch
 &= 0xf;

90 
	}
}

92 
	$BMC70ö1Powî
() {

93 
	`£tchr8
(0);

94 
b™k_mode
 = 0;

95 
œrge_b™k
 = 0;

96 
	`Sync
();

97 
	`SëRódH™dÀr
(0x8000, 0xFFFF, 
BMC70ö1Ród
);

98 
	`SëWrôeH™dÀr
(0x8000, 0xffff, 
BMC70ö1Wrôe
);

99 
	}
}

101 
	$SèãRe°‹e
(
vîsi⁄
) {

102 
	`Sync
();

103 
	}
}

105 
	$BMC70ö1_Inô
(
C¨tInfo
 *
öfo
) {

106 
is_œrge_b™ks
 = 0;

107 
hw_swôch
 = 0xd;

108 
öfo
->
Powî
 = 
BMC70ö1Powî
;

109 
öfo
->
Re£t
 = 
BMC70ö1Re£t
;

110 
GameSèãRe°‹e
 = 
SèãRe°‹e
;

111 
	`AddExSèã
(&
SèãRegs
, ~0, 0, 0);

112 
	}
}

114 
	$BMC70ö1B_Inô
(
C¨tInfo
 *
öfo
) {

115 
is_œrge_b™ks
 = 1;

116 
hw_swôch
 = 0x6;

117 
öfo
->
Powî
 = 
BMC70ö1Powî
;

118 
öfo
->
Re£t
 = 
BMC70ö1Re£t
;

119 
GameSèãRe°‹e
 = 
SèãRe°‹e
;

120 
	`AddExSèã
(&
SèãRegs
, ~0, 0, 0);

121 
	}
}

	@fceux-am/src/boards/bonza.cpp

21 
	~"m≠öc.h
"

23 
	#CARD_EXTERNAL_INSERED
 0x80

	)

25 
uöt8
 
	g¥g_ªg
;

26 
uöt8
 
	gchr_ªg
;

27 
SFORMAT
 
	gSèãRegs
[] =

29 { &
¥g_ªg
, 1, "PREG" },

30 { &
chr_ªg
, 1, "CREG" },

87 
	$Sync
() {

88 
	`£çrg32
(0x8000, 
¥g_ªg
);

89 
	`£tchr8
(
chr_ªg
);

90 
	}
}

92 
	$SèãRe°‹e
(
vîsi⁄
) {

93 
	`Sync
();

94 
	}
}

96 
	$DECLFW
(
M216WrôeHi
) {

97 
¥g_ªg
 = 
A
 & 1;

98 
chr_ªg
 = (
A
 & 0x0E) >> 1;

99 
	`Sync
();

100 
	}
}

102 
	$DECLFW
(
M216Wrôe5000
) {

104 
	}
}

106 
	$DECLFR
(
M216Ród5000
) {

109 
	}
}

111 
	$Powî
() {

112 
¥g_ªg
 = 0;

113 
chr_ªg
 = 0;

114 
	`Sync
();

115 
	`SëRódH™dÀr
(0x8000, 0xFFFF, 
C¨tBR
);

116 
	`SëWrôeH™dÀr
(0x8000, 0xFFFF, 
M216WrôeHi
);

117 
	`SëWrôeH™dÀr
(0x5000, 0x5000, 
M216Wrôe5000
);

118 
	`SëRódH™dÀr
(0x5000, 0x5000, 
M216Ród5000
);

119 
	}
}

122 
	$M≠≥r216_Inô
(
C¨tInfo
 *
öfo
) {

123 
öfo
->
Powî
 = Power;

124 
GameSèãRe°‹e
 = 
SèãRe°‹e
;

125 
	`AddExSèã
(&
SèãRegs
, ~0, 0, 0);

126 
	}
}

	@fceux-am/src/boards/bs-5.cpp

21 
	~"m≠öc.h
"

23 
uöt8
 
	gªg_¥g
[4];

24 
uöt8
 
	gªg_chr
[4];

25 
uöt8
 
	gdù_swôch
;

27 
SFORMAT
 
	gSèãRegs
[] =

29 { 
ªg_¥g
, 4, "PREG" },

30 { 
ªg_chr
, 4, "CREG" },

34 
	$Sync
() {

35 
	`£çrg8
(0x8000, 
ªg_¥g
[0]);

36 
	`£çrg8
(0xa000, 
ªg_¥g
[1]);

37 
	`£çrg8
(0xc000, 
ªg_¥g
[2]);

38 
	`£çrg8
(0xe000, 
ªg_¥g
[3]);

39 
	`£tchr2
(0x0000, 
ªg_chr
[0]);

40 
	`£tchr2
(0x0800, 
ªg_chr
[1]);

41 
	`£tchr2
(0x1000, 
ªg_chr
[2]);

42 
	`£tchr2
(0x1800, 
ªg_chr
[3]);

43 
	`£tmúr‹
(
MI_V
);

44 
	}
}

46 
	$DECLFW
(
MBS5Wrôe
) {

47 
b™k_£l
 = (
A
 & 0xC00) >> 10;

48 
A
 & 0xF000) {

50 
ªg_chr
[
b™k_£l
] = 
A
 & 0x1F;

53 i‡(
A
 & (1 << (
dù_swôch
 + 4)))

54 
ªg_¥g
[
b™k_£l
] = 
A
 & 0x0F;

57 
	`Sync
();

58 
	}
}

60 
	$MBS5Re£t
() {

61 
dù_swôch
++;

62 
dù_swôch
 &= 3;

63 
ªg_¥g
[0] =Ñeg_prg[1] =Ñeg_prg[2] =Ñeg_prg[3] = ~0;

64 
	`Sync
();

65 
	}
}

67 
	$MBS5Powî
() {

68 
dù_swôch
 = 0;

69 
ªg_¥g
[0] =Ñeg_prg[1] =Ñeg_prg[2] =Ñeg_prg[3] = ~0;

70 
	`Sync
();

71 
	`SëRódH™dÀr
(0x8000, 0xFFFF, 
C¨tBR
);

72 
	`SëWrôeH™dÀr
(0x8000, 0xFFFF, 
MBS5Wrôe
);

73 
	}
}

75 
	$SèãRe°‹e
(
vîsi⁄
) {

76 
	`Sync
();

77 
	}
}

79 
	$BMCBS5_Inô
(
C¨tInfo
 *
öfo
) {

80 
öfo
->
Powî
 = 
MBS5Powî
;

81 
öfo
->
Re£t
 = 
MBS5Re£t
;

82 
GameSèãRe°‹e
 = 
SèãRe°‹e
;

83 
	`AddExSèã
(&
SèãRegs
, ~0, 0, 0);

84 
	}
}

	@fceux-am/src/boards/cheapocabra.cpp

32 
	~"m≠öc.h
"

33 
	~"../öes.h
"

35 
uöt8
 
	gªg
;

36 
uöt8
 *
	gCHRRAM
 = 
NULL
;

37 c⁄° 
uöt32
 
	gCHRRAMSIZE
 = 1024 * 32;

39 
boﬁ
 
	gÊash
 = 
Ál£
;

40 
uöt8
 
	gÊash_mode
;

41 
uöt8
 
	gÊash_£quí˚
;

42 
uöt8
 
	gÊash_id
;

43 
uöt8
 *
	gFLASHROM
 = 
NULL
;

44 c⁄° 
uöt32
 
	gFLASHROMSIZE
 = 1024 * 512;

47 
SFORMAT
 
	gSèãRegs
[] =

49 { &
ªg
, 1, "REG" },

53 
SFORMAT
 
	gFœshRegs
[] =

55 { &
Êash_mode
, 1, "FMOD" },

56 { &
Êash_£quí˚
, 1, "FSEQ" },

57 { &
Êash_id
, 1, "FMID" },

61 
	$Sync
() {

64 
¡
 = (
ªg
 & 0x20) ? 8192 : 0;

65 
chr
 = (
ªg
 & 0x10) ? 1 : 0;

66 
¥g
 = (
ªg
 & 0x0F);

68 
¡
 += (16 * 1024);

69 
n
=0;Ç<4; ++n)

71 
	`£äèmem
(
CHRRAM
 + 
¡
 + (1024 * 
n
),1,n);

73 
	`£tchr8r
(0x10, 
chr
);

75 
uöt32
 
¥g_chù
 = 
Êash
 ? 0x10 : 0;

76 
	`£çrg32r
(
¥g_chù
,0x8000,
¥g
);

77 
	}
}

79 
	$DECLFW
(
M111Wrôe
) {

80 i‡((
A
 >= 0x5000 && A <= 0x5FFF) || (A >= 0x7000 && A <= 0x7FFF))

82 
ªg
 = 
V
;

83 
	`Sync
();

85 
	}
}

87 
	$DECLFR
(
M111FœshID
)

93 
uöt32
 
aid
 = 
A
 & 0x1FF;

94 
aid
)

100 
	}
}

102 
	$M111FœshIDE¡î
()

104 i‡(
Êash_id
) ;

105 
Êash_id
 = 1;

106 
	`SëRódH™dÀr
(0x8000,0xFFFF,
M111FœshID
);

107 
	}
}

109 
	$M111FœshIDExô
()

111 i‡(!
Êash_id
) ;

112 
Êash_id
 = 0;

113 
	`SëRódH™dÀr
(0x8000,0xFFFF,
C¨tBR
);

114 
	}
}

116 
	$DECLFW
(
M111Fœsh
) {

117 i‡(
A
 < 0x8000 || A > 0xFFFF) ;

119 
uöt32
 
Êash_addr
 = ((
ªg
 & 0x0FË<< 15Ë| (
A
 & 0x7FFF);

120 
uöt32
 
comm™d_addr
 = 
Êash_addr
 & 0x7FFF;

124 
FLASH_MODE_READY
 = 0,

125 
FLASH_MODE_COMMAND
,

126 
FLASH_MODE_BYTE_WRITE
,

127 
FLASH_MODE_ERASE
,

130 
Êash_mode
)

133 
FLASH_MODE_READY
:

134 i‡(
comm™d_addr
 =0x5555 && 
V
 == 0xAA)

136 
Êash_mode
 = 
FLASH_MODE_COMMAND
;

137 
Êash_£quí˚
 = 0;

139 i‡(
V
 == 0xF0)

141 
	`M111FœshIDExô
();

144 
FLASH_MODE_COMMAND
:

145 i‡(
Êash_£quí˚
 == 0)

147 i‡(
comm™d_addr
 =0x2AAA && 
V
 == 0x55)

148 
Êash_£quí˚
 = 1;

150 
Êash_mode
 = 
FLASH_MODE_READY
;

152 i‡(
Êash_£quí˚
 == 1)

154 i‡(
comm™d_addr
 == 0x5555)

156 
Êash_£quí˚
 = 0;

157 
V
)

159 : 
Êash_mode
 = 
FLASH_MODE_READY
; ;

160 0xA0: 
Êash_mode
 = 
FLASH_MODE_BYTE_WRITE
; ;

161 0x80: 
Êash_mode
 = 
FLASH_MODE_ERASE
; ;

162 0x90: 
	`M111FœshIDE¡î
(); 
Êash_mode
 = 
FLASH_MODE_READY
; ;

163 0xF0: 
	`M111FœshIDExô
(); 
Êash_mode
 = 
FLASH_MODE_READY
; ;

167 
Êash_mode
 = 
FLASH_MODE_READY
;

170 
Êash_mode
 = 
FLASH_MODE_READY
;

172 
FLASH_MODE_BYTE_WRITE
:

173 
FLASHROM
[
Êash_addr
] &
V
;

174 
Êash_mode
 = 
FLASH_MODE_READY
;

176 
FLASH_MODE_ERASE
:

177 i‡(
Êash_£quí˚
 == 0)

179 i‡(
comm™d_addr
 =0x5555 && 
V
 == 0xAA)

180 
Êash_£quí˚
 = 1;

182 
Êash_mode
 = 
FLASH_MODE_READY
;

184 i‡(
Êash_£quí˚
 == 1)

186 i‡(
comm™d_addr
 =0x2AAA && 
V
 == 0x55)

187 
Êash_£quí˚
 = 2;

189 
Êash_mode
 = 
FLASH_MODE_READY
;

191 i‡(
Êash_£quí˚
 == 2)

193 i‡(
comm™d_addr
 =0x5555 && 
V
 == 0x10)

195 
	`mem£t
(
FLASHROM
, 0xFF, 
FLASHROMSIZE
);

197 i‡(
V
 == 0x30)

199 
uöt32
 
£˘‹
 = 
Êash_addr
 & 0x7F000;

200 
	`mem£t
(
FLASHROM
 + 
£˘‹
, 0xFF, 1024 * 4);

202 
Êash_mode
 = 
FLASH_MODE_READY
;

205 
Êash_mode
 = 
FLASH_MODE_READY
;

208 
	}
}

210 
	$M111Powî
() {

211 
ªg
 = 0xFF;

212 
	`Sync
();

213 
	`SëRódH™dÀr
(0x8000, 0xffff, 
C¨tBR
);

214 
	`SëWrôeH™dÀr
(0x5000, 0x5fff, 
M111Wrôe
);

215 
	`SëWrôeH™dÀr
(0x7000, 0x7fff, 
M111Wrôe
);

217 i‡(
Êash
)

219 
Êash_mode
 = 0;

220 
Êash_£quí˚
 = 0;

221 
Êash_id
 = 
Ál£
;

222 
	`SëWrôeH™dÀr
(0x8000, 0xFFFF, 
M111Fœsh
);

224 
	}
}

226 
	$M111Clo£
() {

227 i‡(
CHRRAM
)

228 
	`FCEU_g‰ì
(
CHRRAM
);

229 
CHRRAM
 = 
NULL
;

231 i‡(
FLASHROM
)

232 
	`FCEU_g‰ì
(
FLASHROM
);

233 
FLASHROM
 = 
NULL
;

234 
	}
}

236 
	$SèãRe°‹e
(
vîsi⁄
) {

237 
	`Sync
();

238 
	}
}

240 
	$M≠≥r111_Inô
(
C¨tInfo
 *
öfo
) {

241 
öfo
->
Powî
 = 
M111Powî
;

242 
öfo
->
Clo£
 = 
M111Clo£
;

244 
CHRRAM
 = (
uöt8
*)
	`FCEU_gmÆloc
(
CHRRAMSIZE
);

245 
	`SëupC¨tCHRM≠pög
(0x10, 
CHRRAM
, 
CHRRAMSIZE
, 1);

247 
GameSèãRe°‹e
 = 
SèãRe°‹e
;

248 
	`AddExSèã
(&
SèãRegs
, ~0, 0, 0);

249 
	`AddExSèã
(
CHRRAM
, 
CHRRAMSIZE
, 0, "CRAM");

251 
Êash
 = (
öfo
->
b©ãry
 != 0);

252 i‡(
Êash
)

254 
FLASHROM
 = (
uöt8
*)
	`FCEU_gmÆloc
(
FLASHROMSIZE
);

255 
öfo
->
SaveGame
[0] = 
FLASHROM
;

256 
öfo
->
SaveGameLí
[0] = 
FLASHROMSIZE
;

257 
	`AddExSèã
(
FLASHROM
, 
FLASHROMSIZE
, 0, "FROM");

258 
	`AddExSèã
(&
FœshRegs
, ~0, 0, 0);

261 c⁄° 
uöt32
 
PRGSIZE
 = 
ROM_size
 * 16 * 1024;

262 
uöt32
 
w
=0, 
r
=0; w<
FLASHROMSIZE
; ++w)

264 
FLASHROM
[
w
] = 
ROM
[
r
];

265 ++
r
;

266 i‡(
r
 >
PRGSIZE
)Ñ = 0;

268 
	`SëupC¨tPRGM≠pög
(0x10, 
FLASHROM
, 
FLASHROMSIZE
, 0);

270 
	}
}

	@fceux-am/src/boards/cityfighter.cpp

23 
	~"m≠öc.h
"

25 
öt32
 
	gIRQCou¡
;

26 
uöt8
 
	gIRQa
;

27 
uöt8
 
	g¥g_ªg
, 
	g¥g_mode
, 
	gmúr
;

28 
uöt8
 
	gchr_ªg
[8];

29 
wrôefunc
 
	gpcmwrôe
;

31 
SFORMAT
 
	gSèãRegs
[] =

33 { &
IRQCou¡
, 4, "IRQC" },

34 { &
IRQa
, 1, "IRQA" },

35 { &
¥g_ªg
, 1, "PREG" },

36 { &
¥g_mode
, 1, "PMOD" },

37 { &
múr
, 1, "MIRR" },

38 { 
chr_ªg
, 8, "CREG" },

42 
	$Sync
() {

43 
	`£çrg32
(0x8000, 
¥g_ªg
 >> 2);

44 i‡(!
¥g_mode
)

45 
	`£çrg8
(0xC000, 
¥g_ªg
);

46 
i
;

47 
i
 = 0; i < 8; i++)

48 
	`£tchr1
(
i
 << 10, 
chr_ªg
[i]);

49 
múr
) {

50 0: 
	`£tmúr‹
(
MI_V
); ;

51 1: 
	`£tmúr‹
(
MI_H
); ;

52 2: 
	`£tmúr‹
(
MI_0
); ;

53 3: 
	`£tmúr‹
(
MI_1
); ;

55 
	}
}

57 
	$DECLFW
(
UNLCITYFIGHTWrôe
) {

59 
A
 & 0xF00C) {

60 0x9000: 
¥g_ªg
 = 
V
 & 0xC; 
múr
 = V & 3; ;

64 i‡(
A
 & 0x800)

65 
	`pcmwrôe
(0x4011, (
V
 & 0xf) << 3);

67 
¥g_ªg
 = 
V
 & 0xC;

72 0xC00C: 
¥g_mode
 = 
V
 & 1; ;

73 0xD000: 
chr_ªg
[0] = (chr_ªg[0] & 0xF0Ë| (
V
 & 0x0F); ;

74 0xD004: 
chr_ªg
[0] = (chr_ªg[0] & 0x0FË| (
V
 << 4); ;

75 0xD008: 
chr_ªg
[1] = (chr_ªg[1] & 0xF0Ë| (
V
 & 0x0F); ;

76 0xD00C: 
chr_ªg
[1] = (chr_ªg[1] & 0x0FË| (
V
 << 4); ;

77 0xA000: 
chr_ªg
[2] = (chr_ªg[2] & 0xF0Ë| (
V
 & 0x0F); ;

78 0xA004: 
chr_ªg
[2] = (chr_ªg[2] & 0x0FË| (
V
 << 4); ;

79 0xA008: 
chr_ªg
[3] = (chr_ªg[3] & 0xF0Ë| (
V
 & 0x0F); ;

80 0xA00C: 
chr_ªg
[3] = (chr_ªg[3] & 0x0FË| (
V
 << 4); ;

81 0xB000: 
chr_ªg
[4] = (chr_ªg[4] & 0xF0Ë| (
V
 & 0x0F); ;

82 0xB004: 
chr_ªg
[4] = (chr_ªg[4] & 0x0FË| (
V
 << 4); ;

83 0xB008: 
chr_ªg
[5] = (chr_ªg[5] & 0xF0Ë| (
V
 & 0x0F); ;

84 0xB00C: 
chr_ªg
[5] = (chr_ªg[5] & 0x0FË| (
V
 << 4); ;

85 0xE000: 
chr_ªg
[6] = (chr_ªg[6] & 0xF0Ë| (
V
 & 0x0F); ;

86 0xE004: 
chr_ªg
[6] = (chr_ªg[6] & 0x0FË| (
V
 << 4); ;

87 0xE008: 
chr_ªg
[7] = (chr_ªg[7] & 0xF0Ë| (
V
 & 0x0F); ;

88 0xE00C: 
chr_ªg
[7] = (chr_ªg[7] & 0x0FË| (
V
 << 4); ;

89 0xF000: 
IRQCou¡
 = ((IRQCou¡ & 0x1E0Ë| ((
V
 & 0xF) << 1)); ;

90 0xF004: 
IRQCou¡
 = ((IRQCou¡ & 0x1EË| ((
V
 & 0xF) << 5)); ;

91 0xF008: 
IRQa
 = 
V
 & 2; 
	`X6502_IRQEnd
(
FCEU_IQEXT
); ;

95 
	`Sync
();

96 
	}
}

98 
	$UNLCITYFIGHTIRQ
(
a
) {

99 i‡(
IRQa
) {

100 
IRQCou¡
 -
a
;

101 i‡(
IRQCou¡
 <= 0) {

102 
	`X6502_IRQBegö
(
FCEU_IQEXT
);

105 
	}
}

107 
	$UNLCITYFIGHTPowî
() {

108 
¥g_ªg
 = 0;

109 
	`Sync
();

110 
pcmwrôe
 = 
	`GëWrôeH™dÀr
(0x4011);

111 
	`SëRódH™dÀr
(0x8000, 0xFFFF, 
C¨tBR
);

112 
	`SëWrôeH™dÀr
(0x8000, 0xFFFF, 
UNLCITYFIGHTWrôe
);

113 
	}
}

115 
	$SèãRe°‹e
(
vîsi⁄
) {

116 
	`Sync
();

117 
	}
}

119 
	$UNLCITYFIGHT_Inô
(
C¨tInfo
 *
öfo
) {

120 
öfo
->
Powî
 = 
UNLCITYFIGHTPowî
;

121 
M≠IRQHook
 = 
UNLCITYFIGHTIRQ
;

122 
GameSèãRe°‹e
 = 
SèãRe°‹e
;

123 
	`AddExSèã
(&
SèãRegs
, ~0, 0, 0);

124 
	}
}

	@fceux-am/src/boards/coolboy.cpp

77 
	~"m≠öc.h
"

78 
	~"mmc3.h
"

80 
	$COOLBOYCW
(
uöt32
 
A
, 
uöt8
 
V
) {

81 
uöt32
 
mask
 = 0xFF ^ (
EXPREGS
[0] & 0x80);

82 i‡(
EXPREGS
[3] & 0x10) {

83 i‡(
EXPREGS
[3] & 0x40) {

84 
cba£
 = (
MMC3_cmd
 & 0x80) << 5;

85 
cba£
 ^ 
A
) {

87 0x0C00: 
V
 &= 0x7F; ;

91 
	`£tchr1
(
A
,

92 (
V
 & 0x80 & 
mask
Ë| ((((
EXPREGS
[0] & 0x08) << 4) & ~mask))

93 | ((
EXPREGS
[2] & 0x0F) << 3)

94 | ((
A
 >> 10) & 7)

97 i‡(
EXPREGS
[3] & 0x40) {

98 
cba£
 = (
MMC3_cmd
 & 0x80) << 5;

99 
cba£
 ^ 
A
) {

100 0x0000: 
V
 = 
DRegBuf
[0]; ;

101 0x0800: 
V
 = 
DRegBuf
[1]; ;

103 0x0C00: 
V
 = 0; ;

108 
	`£tchr1
(
A
, (
V
 & 
mask
Ë| (((
EXPREGS
[0] & 0x08) << 4) & ~mask));

110 
	}
}

112 
	$COOLBOYPW
(
uöt32
 
A
, 
uöt8
 
V
) {

113 
uöt32
 
mask
 = ((0x3F | (
EXPREGS
[1] & 0x40) | ((EXPREGS[1] & 0x20) << 2)) ^ ((EXPREGS[0] & 0x40) >> 2)) ^ ((EXPREGS[1] & 0x80) >> 2);

114 
uöt32
 
ba£
 = ((
EXPREGS
[0] & 0x07) >> 0) | ((EXPREGS[1] & 0x10) >> 1) | ((EXPREGS[1] & 0x0C) << 2) | ((EXPREGS[0] & 0x30) << 2);

118 i‡((
EXPREGS
[3] & 0x40Ë&& (
V
 >0xFEË&& !((
MMC3_cmd
 & 0x40) != 0)) {

119 
A
 & 0xE000) {

122 
V
 = 0;

128 i‡(!(
EXPREGS
[3] & 0x10))

129 
	`£çrg8
(
A
, (((
ba£
 << 4Ë& ~
mask
)Ë| (
V
 & mask));

131 
mask
 &= 0xF0;

132 
uöt8
 
emask
;

133 i‡((((
EXPREGS
[1] & 2) != 0)))

134 
emask
 = (
EXPREGS
[3] & 0x0CË| ((
A
 & 0x4000) >> 13);

136 
emask
 = 
EXPREGS
[3] & 0x0E;

137 
	`£çrg8
(
A
, ((
ba£
 << 4Ë& ~
mask
)

138 | (
V
 & 
mask
)

139 | 
emask


140 | ((
A
 & 0x2000) >> 13));

142 
	}
}

144 
	$DECLFW
(
COOLBOYWrôe
) {

145 if(
A001B
 & 0x80)

146 
	`C¨tBW
(
A
,
V
);

149 i‡((
EXPREGS
[3] & 0x90) != 0x80) {

150 
EXPREGS
[
A
 & 3] = 
V
;

151 
	`FixMMC3PRG
(
MMC3_cmd
);

152 
	`FixMMC3CHR
(
MMC3_cmd
);

154 
	}
}

156 
	$COOLBOYRe£t
() {

157 
	`MMC3RegRe£t
();

158 
EXPREGS
[0] = EXPREGS[1] = EXPREGS[2] = EXPREGS[3] = 0;

159 
	`FixMMC3PRG
(
MMC3_cmd
);

160 
	`FixMMC3CHR
(
MMC3_cmd
);

161 
	}
}

163 
	$COOLBOYPowî
() {

164 
	`GíMMC3Powî
();

165 
EXPREGS
[0] = EXPREGS[1] = EXPREGS[2] = EXPREGS[3] = 0;

166 
	`FixMMC3PRG
(
MMC3_cmd
);

167 
	`FixMMC3CHR
(
MMC3_cmd
);

168 
	`SëWrôeH™dÀr
(0x5000, 0x5fff, 
C¨tBW
);

169 
	`SëWrôeH™dÀr
(0x6000, 0x6fff, 
COOLBOYWrôe
);

170 
	}
}

172 
	$MINDKIDSPowî
() {

173 
	`GíMMC3Powî
();

174 
EXPREGS
[0] = EXPREGS[1] = EXPREGS[2] = EXPREGS[3] = 0;

175 
	`FixMMC3PRG
(
MMC3_cmd
);

176 
	`FixMMC3CHR
(
MMC3_cmd
);

177 
	`SëWrôeH™dÀr
(0x5000, 0x5fff, 
COOLBOYWrôe
);

178 
	}
}

180 
	$COOLBOY_Inô
(
C¨tInfo
 *
öfo
) {

181 
	`GíMMC3_Inô
(
öfo
, 2048, 256, 8, 1);

182 
pwøp
 = 
COOLBOYPW
;

183 
cwøp
 = 
COOLBOYCW
;

184 
öfo
->
Powî
 = 
COOLBOYPowî
;

185 
öfo
->
Re£t
 = 
COOLBOYRe£t
;

186 
	`AddExSèã
(
EXPREGS
, 4, 0, "EXPR");

187 
	}
}

189 
	$MINDKIDS_Inô
(
C¨tInfo
 *
öfo
) {

190 
	`GíMMC3_Inô
(
öfo
, 2048, 256, 8, 1);

191 
pwøp
 = 
COOLBOYPW
;

192 
cwøp
 = 
COOLBOYCW
;

193 
öfo
->
Powî
 = 
MINDKIDSPowî
;

194 
öfo
->
Re£t
 = 
COOLBOYRe£t
;

195 
	`AddExSèã
(
EXPREGS
, 4, 0, "EXPR");

196 
	}
}

	@fceux-am/src/boards/dance2000.cpp

21 
	~"m≠öc.h
"

23 
uöt8
 
	g¥g
, 
	gmode
;

24 
uöt8
 *
	gWRAM
 = 
NULL
;

25 
uöt32
 
	gWRAMSIZE
;

26 
uöt32
 
	gœ°¡
 = 0;

28 
SFORMAT
 
	gSèãRegs
[] =

30 { &
¥g
, 1, "REGS" },

31 { &
mode
, 1, "MODE" },

32 { &
œ°¡
, 4, "LSNT" },

36 
	$Sync
() {

37 
	`£tmúr‹
((
mode
 ^ 1) & 1);

38 
	`£çrg8r
(0x10, 0x6000, 0);

39 
	`£tchr4
(0x0000, 
œ°¡
);

40 
	`£tchr4
(0x1000, 1);

41 i‡(
mode
 & 4)

42 
	`£çrg32
(0x8000, 
¥g
 & 7);

44 
	`£çrg16
(0x8000, 
¥g
 & 0x0f);

45 
	`£çrg16
(0xC000, 0);

47 
	}
}

49 
	$DECLFW
(
UNLD2000Wrôe
) {

50 
A
) {

51 0x5000: 
¥g
 = 
V
; 
	`Sync
(); ;

52 0x5200: 
mode
 = 
V
; i‡(modê& 4Ë
	`Sync
(); ;

54 
	}
}

56 
	$DECLFR
(
UNLD2000Ród
) {

57 i‡(
¥g
 & 0x40)

58  
X
.
DB
;

60  
	`C¨tBR
(
A
);

61 
	}
}

63 
	$UNLD2000Powî
() {

64 
¥g
 = 
mode
 = 0;

65 
	`Sync
();

66 
	`SëRódH™dÀr
(0x6000, 0x7FFF, 
C¨tBR
);

67 
	`SëWrôeH™dÀr
(0x6000, 0x7FFF, 
C¨tBW
);

68 
	`SëRódH™dÀr
(0x8000, 0xFFFF, 
UNLD2000Ród
);

69 
	`SëWrôeH™dÀr
(0x5000, 0x5FFF, 
UNLD2000Wrôe
);

70 
	`FCEU_ChótAddRAM
(
WRAMSIZE
 >> 10, 0x6000, 
WRAM
);

71 
	}
}

73 
	$UNL2000Hook
(
uöt32
 
A
) {

74 i‡(
mode
 & 2) {

75 i‡((
A
 & 0x3000) == 0x2000) {

76 
uöt32
 
cu∫t
 = 
A
 & 0x800;

77 i‡(
cu∫t
 !
œ°¡
) {

78 
	`£tchr4
(0x0000, 
cu∫t
 >> 11);

79 
œ°¡
 = 
cu∫t
;

83 
œ°¡
 = 0;

84 
	`£tchr4
(0x0000, 0);

86 
	}
}

88 
	$UNLD2000Clo£
() {

89 i‡(
WRAM
)

90 
	`FCEU_g‰ì
(
WRAM
);

91 
WRAM
 = 
NULL
;

92 
	}
}

94 
	$SèãRe°‹e
(
vîsi⁄
) {

95 
	`Sync
();

96 
	}
}

98 
	$UNLD2000_Inô
(
C¨tInfo
 *
öfo
) {

99 
öfo
->
Powî
 = 
UNLD2000Powî
;

100 
öfo
->
Clo£
 = 
UNLD2000Clo£
;

101 
PPU_hook
 = 
UNL2000Hook
;

102 
GameSèãRe°‹e
 = 
SèãRe°‹e
;

104 
WRAMSIZE
 = 8192;

105 
WRAM
 = (
uöt8
*)
	`FCEU_gmÆloc
(
WRAMSIZE
);

106 
	`SëupC¨tPRGM≠pög
(0x10, 
WRAM
, 
WRAMSIZE
, 1);

107 
	`AddExSèã
(
WRAM
, 
WRAMSIZE
, 0, "WRAM");

109 
	`AddExSèã
(&
SèãRegs
, ~0, 0, 0);

110 
	}
}

	@fceux-am/src/boards/datalatch.cpp

21 
	~"m≠öc.h
"

22 
	~"../öes.h
"

24 
uöt8
 
	gœtche
, 
	gœtcheöô
, 
	gbus_c⁄Êi˘
;

25 
uöt16
 
	gaddºeg0
, 
	gaddºeg1
;

26 
uöt8
 *
	gWRAM
 = 
NULL
;

27 
uöt32
 
	gWRAMSIZE
;

28 (*
WSync
)();

30 
	$DECLFW
(
L©chWrôe
) {

32 i‡(
bus_c⁄Êi˘
)

33 
œtche
 = 
V
 & 
	`C¨tBR
(
A
);

35 
œtche
 = 
V
;

36 
	`WSync
();

37 
	}
}

39 
	$L©chPowî
() {

40 
œtche
 = 
œtcheöô
;

41 
	`WSync
();

42 i‡(
WRAM
) {

43 
	`SëRódH™dÀr
(0x6000, 0xFFFF, 
C¨tBR
);

44 
	`SëWrôeH™dÀr
(0x6000, 0x7FFF, 
C¨tBW
);

45 
	`FCEU_ChótAddRAM
(
WRAMSIZE
 >> 10, 0x6000, 
WRAM
);

47 
	`SëRódH™dÀr
(0x8000, 0xFFFF, 
C¨tBR
);

49 
	`SëWrôeH™dÀr
(
addºeg0
, 
addºeg1
, 
L©chWrôe
);

50 
	}
}

52 
	$L©chClo£
() {

53 i‡(
WRAM
)

54 
	`FCEU_g‰ì
(
WRAM
);

55 
WRAM
 = 
NULL
;

56 
	}
}

58 
	$SèãRe°‹e
(
vîsi⁄
) {

59 
	`WSync
();

60 
	}
}

62 
	$L©ch_Inô
(
C¨tInfo
 *
öfo
, (*
¥oc
)(), 
uöt8
 
öô
, 
uöt16
 
adr0
, uöt16 
adr1
, uöt8 
wøm
, uöt8 
busc
) {

63 
bus_c⁄Êi˘
 = 
busc
;

64 
œtcheöô
 = 
öô
;

65 
addºeg0
 = 
adr0
;

66 
addºeg1
 = 
adr1
;

67 
WSync
 = 
¥oc
;

68 
öfo
->
Powî
 = 
L©chPowî
;

69 
öfo
->
Clo£
 = 
L©chClo£
;

70 
GameSèãRe°‹e
 = 
SèãRe°‹e
;

71 if(
öfo
->
öes2
)

72 if(
öfo
->
b©ãry_wøm_size
 + info->
wøm_size
 > 0)

73 
wøm
 = 1;

74 i‡(
wøm
)

76 if(
öfo
->
öes2
)

99 
WRAMSIZE
 = 8192;

100 
WRAM
 = (
uöt8
*)
	`FCEU_gmÆloc
(
WRAMSIZE
);

101 
	`SëupC¨tPRGM≠pög
(0x10, 
WRAM
, 
WRAMSIZE
, 1);

102 
	`SëRódH™dÀr
(0x6000, 0x7FFF, 
C¨tBR
);

103 
	`SëWrôeH™dÀr
(0x6000, 0x7FFF, 
C¨tBW
);

104 
	`£çrg8r
(0x10, 0x6000, 0);

105 if(
öfo
->
b©ãry_wøm_size
)

107 
öfo
->
SaveGame
[0] = 
WRAM
;

108 
öfo
->
SaveGameLí
[0] = 8192;

113 
WRAMSIZE
 = 8192;

114 
WRAM
 = (
uöt8
*)
	`FCEU_gmÆloc
(
WRAMSIZE
);

115 
	`SëupC¨tPRGM≠pög
(0x10, 
WRAM
, 
WRAMSIZE
, 1);

116 i‡(
öfo
->
b©ãry
) {

117 
öfo
->
SaveGame
[0] = 
WRAM
;

118 
öfo
->
SaveGameLí
[0] = 
WRAMSIZE
;

120 
	`AddExSèã
(
WRAM
, 
WRAMSIZE
, 0, "WRAM");

124 
	`AddExSèã
(&
œtche
, 1, 0, "LATC");

125 
	}
}

129 #ifde‡
DEBUG_MAPPER


130 
	$DECLFW
(
NROMWrôe
) {

131 
	`FCEU_¥ötf
("b†%04x %02x\n", 
A
, 
V
);

132 
	`C¨tBW
(
A
, 
V
);

133 
	}
}

136 
	$NROMPowî
() {

137 
	`£çrg8r
(0x10, 0x6000, 0);

138 
	`£çrg16
(0x8000, ~1);

139 
	`£çrg16
(0xC000, ~0);

140 
	`£tchr8
(0);

142 
	`SëRódH™dÀr
(0x6000, 0x7FFF, 
C¨tBR
);

143 
	`SëWrôeH™dÀr
(0x6000, 0x7FFF, 
C¨tBW
);

144 
	`SëRódH™dÀr
(0x8000, 0xFFFF, 
C¨tBR
);

146 
	`FCEU_ChótAddRAM
(
WRAMSIZE
 >> 10, 0x6000, 
WRAM
);

148 #ifde‡
DEBUG_MAPPER


149 
	`SëWrôeH™dÀr
(0x4020, 0xFFFF, 
NROMWrôe
);

151 
	}
}

153 
	$NROM_Inô
(
C¨tInfo
 *
öfo
) {

154 
öfo
->
Powî
 = 
NROMPowî
;

155 
öfo
->
Clo£
 = 
L©chClo£
;

157 
WRAMSIZE
 = 8192;

158 
WRAM
 = (
uöt8
*)
	`FCEU_gmÆloc
(
WRAMSIZE
);

159 
	`SëupC¨tPRGM≠pög
(0x10, 
WRAM
, 
WRAMSIZE
, 1);

160 i‡(
öfo
->
b©ãry
) {

161 
öfo
->
SaveGame
[0] = 
WRAM
;

162 
öfo
->
SaveGameLí
[0] = 
WRAMSIZE
;

164 
	`AddExSèã
(
WRAM
, 
WRAMSIZE
, 0, "WRAM");

165 
	}
}

169 
	$UNROMSync
() {

177 
	`£çrg16
(0x8000, 
œtche
);

178 
	`£çrg16
(0xc000, ~0);

179 
	`£tchr8
(0);

180 
	}
}

182 
	$UNROM_Inô
(
C¨tInfo
 *
öfo
) {

183 
	`L©ch_Inô
(
öfo
, 
UNROMSync
, 0, 0x8000, 0xFFFF, 0, 1);

184 
	}
}

188 
	$CNROMSync
() {

189 
	`£tchr8
(
œtche
);

190 
	`£çrg32
(0x8000, 0);

191 
	`£çrg8r
(0x10, 0x6000, 0);

192 
	}
}

194 
	$CNROM_Inô
(
C¨tInfo
 *
öfo
) {

195 
	`L©ch_Inô
(
öfo
, 
CNROMSync
, 0, 0x8000, 0xFFFF, 1, 1);

196 
	}
}

200 
	$ANROMSync
() {

201 
	`£çrg32
(0x8000, 
œtche
 & 0xF);

202 
	`£tmúr‹
(
MI_0
 + ((
œtche
 >> 4) & 1));

203 
	`£tchr8
(0);

204 
	}
}

206 
	$ANROM_Inô
(
C¨tInfo
 *
öfo
) {

207 
	`L©ch_Inô
(
öfo
, 
ANROMSync
, 0, 0x4020, 0xFFFF, 0, 0);

208 
	}
}

212 
	$M8Sync
() {

213 
	`£çrg16
(0x8000, 
œtche
 >> 3);

214 
	`£çrg16
(0xc000, 1);

215 
	`£tchr8
(
œtche
 & 3);

216 
	}
}

218 
	$M≠≥r8_Inô
(
C¨tInfo
 *
öfo
) {

219 
	`L©ch_Inô
(
öfo
, 
M8Sync
, 0, 0x8000, 0xFFFF, 0, 0);

220 
	}
}

224 
	$M11Sync
() {

225 
	`£çrg32
(0x8000, 
œtche
 & 0xF);

226 
	`£tchr8
(
œtche
 >> 4);

227 
	}
}

229 
	$M≠≥r11_Inô
(
C¨tInfo
 *
öfo
) {

230 
	`L©ch_Inô
(
öfo
, 
M11Sync
, 0, 0x8000, 0xFFFF, 0, 0);

231 
	}
}

233 
	$M≠≥r144_Inô
(
C¨tInfo
 *
öfo
) {

234 
	`L©ch_Inô
(
öfo
, 
M11Sync
, 0, 0x8001, 0xFFFF, 0, 0);

235 
	}
}

239 
	$CPROMSync
() {

240 
	`£tchr4
(0x0000, 0);

241 
	`£tchr4
(0x1000, 
œtche
 & 3);

242 
	`£çrg32
(0x8000, 0);

243 
	}
}

245 
	$CPROM_Inô
(
C¨tInfo
 *
öfo
) {

246 
	`L©ch_Inô
(
öfo
, 
CPROMSync
, 0, 0x8000, 0xFFFF, 0, 0);

247 
	}
}

251 
	$M29Sync
() {

252 
	`£çrg16
(0x8000, (
œtche
 & 0x1C) >> 2);

253 
	`£çrg16
(0xc000, ~0);

254 
	`£tchr8r
(0, 
œtche
 & 3);

255 
	`£çrg8r
(0x10, 0x6000, 0);

256 
	}
}

258 
	$M≠≥r29_Inô
(
C¨tInfo
 *
öfo
) {

259 
	`L©ch_Inô
(
öfo
, 
M29Sync
, 0, 0x8000, 0xFFFF, 1, 0);

260 
	}
}

265 
	$M38Sync
() {

266 
	`£çrg32
(0x8000, 
œtche
 & 3);

267 
	`£tchr8
(
œtche
 >> 2);

268 
	}
}

270 
	$M≠≥r38_Inô
(
C¨tInfo
 *
öfo
) {

271 
	`L©ch_Inô
(
öfo
, 
M38Sync
, 0, 0x7000, 0x7FFF, 0, 0);

272 
	}
}

276 
	$MHROMSync
() {

277 
	`£çrg32
(0x8000, 
œtche
 >> 4);

278 
	`£tchr8
(
œtche
 & 0xF);

279 
	}
}

281 
	$MHROM_Inô
(
C¨tInfo
 *
öfo
) {

282 
	`L©ch_Inô
(
öfo
, 
MHROMSync
, 0, 0x8000, 0xFFFF, 0, 0);

283 
	}
}

287 
	$M70Sync
() {

288 
	`£çrg16
(0x8000, 
œtche
 >> 4);

289 
	`£çrg16
(0xc000, ~0);

290 
	`£tchr8
(
œtche
 & 0xf);

291 
	}
}

293 
	$M≠≥r70_Inô
(
C¨tInfo
 *
öfo
) {

294 
	`L©ch_Inô
(
öfo
, 
M70Sync
, 0, 0x8000, 0xFFFF, 0, 0);

295 
	}
}

299 
	$M78Sync
() {

300 
	`£çrg16
(0x8000, (
œtche
 & 7));

301 
	`£çrg16
(0xc000, ~0);

302 
	`£tchr8
(
œtche
 >> 4);

303 
	`£tmúr‹
(
MI_0
 + ((
œtche
 >> 3) & 1));

304 
	}
}

306 
	$M≠≥r78_Inô
(
C¨tInfo
 *
öfo
) {

307 
	`L©ch_Inô
(
öfo
, 
M78Sync
, 0, 0x8000, 0xFFFF, 0, 0);

308 
	}
}

312 
	$M86Sync
() {

313 
	`£çrg32
(0x8000, (
œtche
 >> 4) & 3);

314 
	`£tchr8
((
œtche
 & 3) | ((latche >> 4) & 4));

315 
	}
}

317 
	$M≠≥r86_Inô
(
C¨tInfo
 *
öfo
) {

318 
	`L©ch_Inô
(
öfo
, 
M86Sync
, ~0, 0x6000, 0x6FFF, 0, 0);

319 
	}
}

323 
	$M87Sync
() {

324 
	`£çrg32
(0x8000, 0);

325 
	`£tchr8
(((
œtche
 >> 1) & 1) | ((latche << 1) & 2));

326 
	}
}

328 
	$M≠≥r87_Inô
(
C¨tInfo
 *
öfo
) {

329 
	`L©ch_Inô
(
öfo
, 
M87Sync
, ~0, 0x6000, 0xFFFF, 0, 0);

330 
	}
}

334 
	$M89Sync
() {

335 
	`£çrg16
(0x8000, (
œtche
 >> 4) & 7);

336 
	`£çrg16
(0xc000, ~0);

337 
	`£tchr8
((
œtche
 & 7) | ((latche >> 4) & 8));

338 
	`£tmúr‹
(
MI_0
 + ((
œtche
 >> 3) & 1));

339 
	}
}

341 
	$M≠≥r89_Inô
(
C¨tInfo
 *
öfo
) {

342 
	`L©ch_Inô
(
öfo
, 
M89Sync
, 0, 0x8000, 0xFFFF, 0, 0);

343 
	}
}

347 
	$SSUNROMSync
() {

348 
	`£çrg16
(0x8000, 
œtche
 >> 4);

349 
	`£çrg16
(0xc000, ~0);

350 
	`£tchr8
(0);

351 
	}
}

353 
	$SUNSOFT_UNROM_Inô
(
C¨tInfo
 *
öfo
) {

354 
	`L©ch_Inô
(
öfo
, 
SSUNROMSync
, 0, 0x8000, 0xFFFF, 0, 0);

355 
	}
}

359 
	$M94Sync
() {

360 
	`£çrg16
(0x8000, 
œtche
 >> 2);

361 
	`£çrg16
(0xc000, ~0);

362 
	`£tchr8
(0);

363 
	}
}

365 
	$M≠≥r94_Inô
(
C¨tInfo
 *
öfo
) {

366 
	`L©ch_Inô
(
öfo
, 
M94Sync
, 0, 0x8000, 0xFFFF, 0, 0);

367 
	}
}

371 
	$M97Sync
() {

372 
	`£tchr8
(0);

373 
	`£çrg16
(0x8000, ~0);

374 
	`£çrg16
(0xc000, 
œtche
 & 15);

375 
œtche
 >> 6) {

377 1: 
	`£tmúr‹
(
MI_H
); ;

378 2: 
	`£tmúr‹
(
MI_V
); ;

381 
	`£tchr8
(((
œtche
 >> 1) & 1) | ((latche << 1) & 2));

382 
	}
}

384 
	$M≠≥r97_Inô
(
C¨tInfo
 *
öfo
) {

385 
	`L©ch_Inô
(
öfo
, 
M97Sync
, ~0, 0x8000, 0xFFFF, 0, 0);

386 
	}
}

390 
	$M101Sync
() {

391 
	`£çrg32
(0x8000, 0);

392 
	`£tchr8
(
œtche
);

393 
	}
}

395 
	$M≠≥r101_Inô
(
C¨tInfo
 *
öfo
) {

396 
	`L©ch_Inô
(
öfo
, 
M101Sync
, ~0, 0x6000, 0x7FFF, 0, 0);

397 
	}
}

401 
	$M107Sync
() {

402 
	`£çrg32
(0x8000, (
œtche
 >> 1) & 3);

403 
	`£tchr8
(
œtche
 & 7);

404 
	}
}

406 
	$M≠≥r107_Inô
(
C¨tInfo
 *
öfo
) {

407 
	`L©ch_Inô
(
öfo
, 
M107Sync
, ~0, 0x8000, 0xFFFF, 0, 0);

408 
	}
}

412 
	$M113Sync
() {

413 
	`£çrg32
(0x8000, (
œtche
 >> 3) & 7);

414 
	`£tchr8
(((
œtche
 >> 3) & 8) | (latche & 7));

416 
	}
}

418 
	$M≠≥r113_Inô
(
C¨tInfo
 *
öfo
) {

419 
	`L©ch_Inô
(
öfo
, 
M113Sync
, 0, 0x4100, 0x7FFF, 0, 0);

420 
	}
}

424 
	$M≠≥r140_Inô
(
C¨tInfo
 *
öfo
) {

425 
	`L©ch_Inô
(
öfo
, 
MHROMSync
, 0, 0x6000, 0x7FFF, 0, 0);

426 
	}
}

430 
	$M152Sync
() {

431 
	`£çrg16
(0x8000, (
œtche
 >> 4) & 7);

432 
	`£çrg16
(0xc000, ~0);

433 
	`£tchr8
(
œtche
 & 0xf);

434 
	`£tmúr‹
(
MI_0
 + ((
œtche
 >> 7) & 1));

435 
	}
}

437 
	$M≠≥r152_Inô
(
C¨tInfo
 *
öfo
) {

438 
	`L©ch_Inô
(
öfo
, 
M152Sync
, 0, 0x8000, 0xFFFF, 0, 0);

439 
	}
}

443 
	$M180Sync
() {

444 
	`£çrg16
(0x8000, 0);

445 
	`£çrg16
(0xc000, 
œtche
);

446 
	`£tchr8
(0);

447 
	}
}

449 
	$M≠≥r180_Inô
(
C¨tInfo
 *
öfo
) {

450 
	`L©ch_Inô
(
öfo
, 
M180Sync
, 0, 0x8000, 0xFFFF, 0, 0);

451 
	}
}

455 
	$M184Sync
() {

456 
	`£tchr4
(0x0000, 
œtche
);

457 
	`£tchr4
(0x1000, 
œtche
 >> 4);

458 
	`£çrg32
(0x8000, 0);

459 
	}
}

461 
	$M≠≥r184_Inô
(
C¨tInfo
 *
öfo
) {

462 
	`L©ch_Inô
(
öfo
, 
M184Sync
, 0, 0x6000, 0x7FFF, 0, 0);

463 
	}
}

467 
	$M203Sync
() {

468 
	`£çrg16
(0x8000, (
œtche
 >> 2) & 3);

469 
	`£çrg16
(0xC000, (
œtche
 >> 2) & 3);

470 
	`£tchr8
(
œtche
 & 3);

471 
	}
}

473 
	$M≠≥r203_Inô
(
C¨tInfo
 *
öfo
) {

474 
	`L©ch_Inô
(
öfo
, 
M203Sync
, 0, 0x8000, 0xFFFF, 0, 0);

475 
	}
}

479 
	$M240Sync
() {

480 
	`£çrg8r
(0x10, 0x6000, 0);

481 
	`£çrg32
(0x8000, 
œtche
 >> 4);

482 
	`£tchr8
(
œtche
 & 0xF);

483 
	}
}

485 
	$M≠≥r240_Inô
(
C¨tInfo
 *
öfo
) {

486 
	`L©ch_Inô
(
öfo
, 
M240Sync
, 0, 0x4020, 0x5FFF, 1, 0);

487 
	}
}

493 
	$M241Sync
() {

494 
	`£tchr8
(0);

495 
	`£çrg8r
(0x10, 0x6000, 0);

496 i‡(
œtche
 & 0x80)

497 
	`£çrg32
(0x8000, 
œtche
 | 8);

499 
	`£çrg32
(0x8000, 
œtche
);

500 
	}
}

502 
	$M≠≥r241_Inô
(
C¨tInfo
 *
öfo
) {

503 
	`L©ch_Inô
(
öfo
, 
M241Sync
, 0, 0x8000, 0xFFFF, 1, 0);

504 
	}
}

513 
	$BMCA65ASSync
() {

514 i‡(
œtche
 & 0x40)

515 
	`£çrg32
(0x8000, (
œtche
 >> 1) & 0x0F);

517 
	`£çrg16
(0x8000, ((
œtche
 & 0x30) >> 1) | (latche & 7));

518 
	`£çrg16
(0xC000, ((
œtche
 & 0x30) >> 1) | 7);

520 
	`£tchr8
(0);

521 i‡(
œtche
 & 0x80)

522 
	`£tmúr‹
(
MI_0
 + (((
œtche
 >> 5) & 1)));

524 
	`£tmúr‹
(((
œtche
 >> 3) & 1) ^ 1);

525 
	}
}

527 
	$BMCA65AS_Inô
(
C¨tInfo
 *
öfo
) {

528 
	`L©ch_Inô
(
öfo
, 
BMCA65ASSync
, 0, 0x8000, 0xFFFF, 0, 0);

529 
	}
}

534 
	$BMC11160Sync
() {

535 
uöt32
 
b™k
 = (
œtche
 >> 4) & 7;

536 
	`£çrg32
(0x8000, 
b™k
);

537 
	`£tchr8
((
b™k
 << 2Ë| (
œtche
 & 3));

538 
	`£tmúr‹
((
œtche
 >> 7) & 1);

539 
	}
}

541 
	$BMC11160_Inô
(
C¨tInfo
 *
öfo
) {

542 
	`L©ch_Inô
(
öfo
, 
BMC11160Sync
, 0, 0x8000, 0xFFFF, 0, 0);

543 
	}
}

	@fceux-am/src/boards/dream.cpp

21 
	~"m≠öc.h
"

23 
uöt8
 
	gœtche
;

25 
	$Sync
() {

26 
	`£çrg16
(0x8000, 
œtche
);

27 
	`£çrg16
(0xC000, 8);

28 
	}
}

30 
	$DECLFW
(
DREAMWrôe
) {

31 
œtche
 = 
V
 & 7;

32 
	`Sync
();

33 
	}
}

35 
	$DREAMPowî
() {

36 
œtche
 = 0;

37 
	`Sync
();

38 
	`£tchr8
(0);

39 
	`SëRódH™dÀr
(0x8000, 0xFFFF, 
C¨tBR
);

40 
	`SëWrôeH™dÀr
(0x5020, 0x5020, 
DREAMWrôe
);

41 
	}
}

43 
	$Re°‹e
(
vîsi⁄
) {

44 
	`Sync
();

45 
	}
}

47 
	$DªamTech01_Inô
(
C¨tInfo
 *
öfo
) {

48 
GameSèãRe°‹e
 = 
Re°‹e
;

49 
öfo
->
Powî
 = 
DREAMPowî
;

50 
	`AddExSèã
(&
œtche
, 1, 0, "LATC");

51 
	}
}

	@fceux-am/src/boards/edu2000.cpp

22 
	~"m≠öc.h
"

24 
uöt8
 *
	gWRAM
 = 
NULL
;

25 
uöt8
 
	gªg
;

27 
SFORMAT
 
	gSèãRegs
[] =

29 { &
ªg
, 1, "REG" },

33 
	$Sync
() {

34 
	`£tchr8
(0);

35 
	`£çrg8r
(0x10, 0x6000, (
ªg
 & 0xC0) >> 6);

36 
	`£çrg32
(0x8000, 
ªg
 & 0x1F);

38 
	}
}

40 
	$DECLFW
(
UNLEDU2000HiWrôe
) {

42 
ªg
 = 
V
;

43 
	`Sync
();

44 
	}
}

46 
	$UNLEDU2000Powî
() {

47 
	`£tmúr‹
(
MI_0
);

48 
	`SëRódH™dÀr
(0x6000, 0xFFFF, 
C¨tBR
);

49 
	`SëWrôeH™dÀr
(0x6000, 0xFFFF, 
C¨tBW
);

50 
	`SëWrôeH™dÀr
(0x8000, 0xFFFF, 
UNLEDU2000HiWrôe
);

51 
	`FCEU_ChótAddRAM
(32, 0x6000, 
WRAM
);

52 
ªg
 = 0;

53 
	`Sync
();

54 
	}
}

56 
	$UNLEDU2000Clo£
() {

57 i‡(
WRAM
)

58 
	`FCEU_g‰ì
(
WRAM
);

59 
WRAM
 = 
NULL
;

60 
	}
}

62 
	$UNLEDU2000Re°‹e
(
vîsi⁄
) {

63 
	`Sync
();

64 
	}
}

66 
	$UNLEDU2000_Inô
(
C¨tInfo
 *
öfo
) {

67 
öfo
->
Powî
 = 
UNLEDU2000Powî
;

68 
öfo
->
Clo£
 = 
UNLEDU2000Clo£
;

69 
GameSèãRe°‹e
 = 
UNLEDU2000Re°‹e
;

70 
WRAM
 = (
uöt8
*)
	`FCEU_gmÆloc
(32768);

71 
	`SëupC¨tPRGM≠pög
(0x10, 
WRAM
, 32768, 1);

72 i‡(
öfo
->
b©ãry
) {

73 
öfo
->
SaveGame
[0] = 
WRAM
;

74 
öfo
->
SaveGameLí
[0] = 32768;

76 
	`AddExSèã
(
WRAM
, 32768, 0, "WRAM");

77 
	`AddExSèã
(
SèãRegs
, ~0, 0, 0);

78 
	}
}

	@fceux-am/src/boards/eh8813a.cpp

21 
	~"m≠öc.h
"

23 
uöt16
 
	gaddæ©ch
;

24 
uöt8
 
	gd©Æ©ch
, 
	ghw_mode
;

26 
SFORMAT
 
	gSèãRegs
[] =

28 { &
addæ©ch
, 2, "ADRL" },

29 { &
d©Æ©ch
, 1, "DATL" },

30 { &
hw_mode
, 1, "HWMO" },

34 
	$Sync
() {

35 
uöt8
 
¥g
 = (
addæ©ch
 & 7);

36 
	`£tchr8
(
d©Æ©ch
);

37 if(
addæ©ch
 & 0x80) {

38 
	`£çrg16
(0x8000,
¥g
);

39 
	`£çrg16
(0xC000,
¥g
);

41 
	`£çrg32
(0x8000,
¥g
 >> 1);

43 
	`£tmúr‹
(
MI_V
);

44 
	}
}

46 
	$DECLFW
(
EH8813AWrôe
) {

47 if((
addæ©ch
 & 0x100) == 0) {

48 
addæ©ch
 = 
A
 & 0x1FF;

49 
d©Æ©ch
 = 
V
 & 0xF;

51 
	`Sync
();

52 
	}
}

54 
	$DECLFR
(
EH8813ARód
) {

55 i‡(
addæ©ch
 & 0x40)

56 
A
(A & 0xFFF0Ë+ 
hw_mode
;

57  
	`C¨tBR
(
A
);

58 
	}
}

60 
	$EH8813APowî
() {

61 
addæ©ch
 = 
d©Æ©ch
 = 
hw_mode
 = 0;

62 
	`Sync
();

63 
	`SëRódH™dÀr
(0x8000, 0xFFFF, 
EH8813ARód
);

64 
	`SëWrôeH™dÀr
(0x8000, 0xFFFF, 
EH8813AWrôe
);

65 
	}
}

67 
	$EH8813ARe£t
() {

68 
addæ©ch
 = 
d©Æ©ch
 = 0;

69 
hw_mode
 = (hw_mode + 1) & 0xF;

70 
	`FCEU_¥ötf
("H¨dw¨êSwôch i†%01X\n", 
hw_mode
);

71 
	`Sync
();

72 
	}
}

74 
	$SèãRe°‹e
(
vîsi⁄
) {

75 
	`Sync
();

76 
	}
}

78 
	$UNLEH8813A_Inô
(
C¨tInfo
 *
öfo
) {

79 
öfo
->
Re£t
 = 
EH8813ARe£t
;

80 
öfo
->
Powî
 = 
EH8813APowî
;

81 
GameSèãRe°‹e
 = 
SèãRe°‹e
;

82 
	`AddExSèã
(&
SèãRegs
, ~0, 0, 0);

83 
	}
}

	@fceux-am/src/boards/emu2413.c

49 
	~<klib.h
>

50 
	~<m©h.h
>

51 
	~"emu2413.h
"

53 c⁄° 
	gdeÁu…_ö°
[15][8] = {

73 
	#PG_BITS
 9

	)

74 
	#PG_WIDTH
 (1 << 
PG_BITS
)

	)

77 
	#DP_BITS
 18

	)

78 
	#DP_WIDTH
 (1 << 
DP_BITS
)

	)

79 
	#DP_BASE_BITS
 (
DP_BITS
 - 
PG_BITS
)

	)

82 
	#DB_BITS
 8

	)

83 
	#DB_STEP
 (48.0 / (1 << 
DB_BITS
))

	)

84 
	#DB_MUTE
 (1 << 
DB_BITS
)

	)

87 
	#EG_STEP
 0.375

	)

88 
	#EG_BITS
 7

	)

89 
	#EG_MUTE
 (1 << 
EG_BITS
)

	)

92 
	#TL_STEP
 0.75

	)

93 
	#TL_BITS
 6

	)

94 
	#TL_MUTE
 (1 << 
TL_BITS
)

	)

97 
	#SL_STEP
 3.0

	)

98 
	#SL_BITS
 4

	)

99 
	#SL_MUTE
 (1 << 
SL_BITS
)

	)

101 
	#EG2DB
(
d
Ë((dË* (
öt32
)(
EG_STEP
 / 
DB_STEP
))

	)

102 
	#TL2EG
(
d
Ë((dË* (
öt32
)(
TL_STEP
 / 
EG_STEP
))

	)

103 
	#SL2EG
(
d
Ë((dË* (
öt32
)(
SL_STEP
 / 
EG_STEP
))

	)

105 
	#DB_POS
(
x
Ë(
uöt32
)((xË/ 
DB_STEP
)

	)

106 
	#DB_NEG
(
x
Ë(
uöt32
)(
DB_MUTE
 + DB_MUTE + (xË/ 
DB_STEP
)

	)

109 
	#DB2LIN_AMP_BITS
 11

	)

110 
	#SLOT_AMP_BITS
 (
DB2LIN_AMP_BITS
)

	)

113 
	#EG_DP_BITS
 22

	)

114 
	#EG_DP_WIDTH
 (1 << 
EG_DP_BITS
)

	)

117 
	#PM_PG_BITS
 8

	)

118 
	#PM_PG_WIDTH
 (1 << 
PM_PG_BITS
)

	)

119 
	#PM_DP_BITS
 16

	)

120 
	#PM_DP_WIDTH
 (1 << 
PM_DP_BITS
)

	)

121 
	#AM_PG_BITS
 8

	)

122 
	#AM_PG_WIDTH
 (1 << 
AM_PG_BITS
)

	)

123 
	#AM_DP_BITS
 16

	)

124 
	#AM_DP_WIDTH
 (1 << 
AM_DP_BITS
)

	)

127 
	#PM_AMP_BITS
 8

	)

128 
	#PM_AMP
 (1 << 
PM_AMP_BITS
)

	)

131 
	#PM_SPEED
 6.4

	)

132 
	#PM_DEPTH
 13.75

	)

135 
	#AM_SPEED
 3.7

	)

137 
	#AM_DEPTH
 2.4

	)

140 
	#HIGHBITS
(
c
, 
b
Ë((cË>> (b))

	)

143 
	#LOWBITS
(
c
, 
b
Ë((cË& ((1 << (b)Ë- 1))

	)

146 
	#EXPAND_BITS
(
x
, 
s
, 
d
Ë((xË<< ((dË- (s)))

	)

149 
	#EXPAND_BITS_X
(
x
, 
s
, 
d
Ë(((xË<< ((dË- (s))Ë| ((1 << ((dË- (s))Ë- 1))

	)

152 
	#øã_adju°
(
x
Ë(
øã
 =49716 ? x : (
uöt32
)(()(xË* 
˛k
 / 72 /Ñ©ê+ 0.5)Ë

	)

154 
	#MOD
(
o
, 
x
Ë(&(o)->
¶Ÿ
[(xË<< 1])

	)

155 
	#CAR
(
o
, 
x
Ë(&(o)->
¶Ÿ
[((xË<< 1Ë| 1])

	)

157 
	#BIT
(
s
, 
b
Ë(((sË>> (b)Ë& 1)

	)

160 
uöt32
 
	g˛k
 = 844451141;

162 
uöt32
 
	gøã
 = 3354932;

165 
uöt16
 
	gfuŒsöèbÀ
[
PG_WIDTH
];

166 
uöt16
 
	ghÆfsöèbÀ
[
PG_WIDTH
];

168 
uöt16
 *
	gwavef‹m
[2] = { 
fuŒsöèbÀ
, 
hÆfsöèbÀ
 };

171 
öt32
 
	gpmèbÀ
[
PM_PG_WIDTH
];

172 
öt32
 
	gamèbÀ
[
AM_PG_WIDTH
];

175 
uöt32
 
	gpm_dpha£
;

176 
uöt32
 
	gam_dpha£
;

179 
öt16
 
	gDB2LIN_TABLE
[(
DB_MUTE
 + DB_MUTE) * 2];

182 
uöt16
 
	gAR_ADJUST_TABLE
[1 << 
EG_BITS
];

186 { 
	mSETTLE
, 
	mATTACK
, 
	mDECAY
, 
	mSUSHOLD
, 
	mSUSTINE
, 
	mRELEASE
, 
	mFINISH
 };

189 
uöt32
 
	gdpha£ARTabÀ
[16][16];

191 
uöt32
 
	gdpha£DRTabÀ
[16][16];

194 
uöt32
 
	gélTabÀ
[16][8][1 << 
TL_BITS
][4];

195 
öt32
 
	grksTabÀ
[2][8][2];

198 
uöt32
 
	gdpha£TabÀ
[512][8][16];

205 
INLINE
 
öt32
 
	$Mö
(
öt32
 
i
, i¡32 
j
) {

206 i‡(
i
 < 
j
)

207  
i
;

209  
j
;

210 
	}
}

213 
	$makeAdju°TabÀ
() {

214 
	`as£π
(0);

220 
	}
}

224 
	$makeDB2LöTabÀ
() {

225 
öt32
 
i
;

227 
i
 = 0; i < 
DB_MUTE
 + DB_MUTE; i++) {

228 
	`as£π
(0);

230 i‡(
i
 >
DB_MUTE
Ë
DB2LIN_TABLE
[i] = 0;

231 
DB2LIN_TABLE
[
i
 + 
DB_MUTE
 + DB_MUTE] = (
öt16
)(-DB2LIN_TABLE[i]);

233 
	}
}

236 
	$makeSöTabÀ
() {

237 
öt32
 
i
;

239 
i
 = 0; i < 
PG_WIDTH
 / 4; i++) {

240 
	`as£π
(0);

244 
i
 = 0; i < 
PG_WIDTH
 / 4; i++) {

245 
fuŒsöèbÀ
[
PG_WIDTH
 / 2 - 1 - 
i
] = fullsintable[i];

248 
i
 = 0; i < 
PG_WIDTH
 / 2; i++) {

249 
fuŒsöèbÀ
[
PG_WIDTH
 / 2 + 
i
] = (
uöt32
)(
DB_MUTE
 + DB_MUTE + fullsintable[i]);

252 
i
 = 0; i < 
PG_WIDTH
 / 2; i++)

253 
hÆfsöèbÀ
[
i
] = 
fuŒsöèbÀ
[i];

254 
i
 = 
PG_WIDTH
 / 2; i < PG_WIDTH; i++)

255 
hÆfsöèbÀ
[
i
] = 
fuŒsöèbÀ
[0];

256 
	}
}

259 
	$makePmTabÀ
() {

260 
	`as£π
(0);

265 
	}
}

268 
	$makeAmTabÀ
() {

269 
	`as£π
(0);

274 
	}
}

278 
	$makeDpha£TabÀ
() {

279 
uöt32
 
‚um
, 
block
, 
ML
;

280 
uöt32
 
m…abÀ
[16] =

283 
‚um
 = 0; fnum < 512; fnum++)

284 
block
 = 0; block < 8; block++)

285 
ML
 = 0; ML < 16; ML++)

286 
dpha£TabÀ
[
‚um
][
block
][
ML
] = 
	`øã_adju°
(((‚um * 
m…abÀ
[ML]Ë<< blockË>> (20 - 
DP_BITS
));

287 
	}
}

290 
	$makeTŒTabÀ
() {

291 
	#dB2
(
x
Ë((xË* 2)

	)

293 
k…abÀ
[16] = {

294 
	`dB2
(0.000), dB2(9.000), dB2(12.000), dB2(13.875), dB2(15.000), dB2(16.125), dB2(16.875), dB2(17.625),

295 
	`dB2
(18.000), dB2(18.750), dB2(19.125), dB2(19.500), dB2(19.875), dB2(20.250), dB2(20.625), dB2(21.000)

298 
öt32
 
tmp
;

299 
öt32
 
‚um
, 
block
, 
TL
, 
KL
;

301 
‚um
 = 0; fnum < 16; fnum++)

302 
block
 = 0; block < 8; block++)

303 
TL
 = 0; TL < 64; TL++)

304 
KL
 = 0; KL < 4; KL++) {

305 i‡(
KL
 == 0) {

306 
élTabÀ
[
‚um
][
block
][
TL
][
KL
] = 
	`TL2EG
(TL);

308 
tmp
 = (
öt32
)(
k…abÀ
[
‚um
] - 
	`dB2
(3.000Ë* (7 - 
block
));

309 i‡(
tmp
 <= 0)

310 
élTabÀ
[
‚um
][
block
][
TL
][
KL
] = 
	`TL2EG
(TL);

312 
élTabÀ
[
‚um
][
block
][
TL
][
KL
] = (
uöt32
)((
tmp
 >> (3 - KL)Ë/ 
EG_STEP
Ë+ 
	`TL2EG
(TL);

315 
	}
}

319 
	$makeDpha£ARTabÀ
() {

320 
öt32
 
AR
, 
Rks
, 
RM
, 
RL
;

321 
AR
 = 0; AR < 16; AR++)

322 
Rks
 = 0; Rks < 16; Rks++) {

323 
RM
 = 
AR
 + (
Rks
 >> 2);

324 
RL
 = 
Rks
 & 3;

325 i‡(
RM
 > 15)

326 
RM
 = 15;

327 
AR
) {

329 
dpha£ARTabÀ
[
AR
][
Rks
] = 0;

332 
dpha£ARTabÀ
[
AR
][
Rks
] = 0;

335 
dpha£ARTabÀ
[
AR
][
Rks
] = 
	`øã_adju°
(3 * (
RL
 + 4Ë<< (
RM
 + 1));

339 
	}
}

344 
	$makeDpha£DRTabÀ
() {

345 
öt32
 
DR
, 
Rks
, 
RM
, 
RL
;

347 
DR
 = 0; DR < 16; DR++)

348 
Rks
 = 0; Rks < 16; Rks++) {

349 
RM
 = 
DR
 + (
Rks
 >> 2);

350 
RL
 = 
Rks
 & 3;

351 i‡(
RM
 > 15)

352 
RM
 = 15;

353 
DR
) {

355 
dpha£DRTabÀ
[
DR
][
Rks
] = 0;

358 
dpha£DRTabÀ
[
DR
][
Rks
] = 
	`øã_adju°
((
RL
 + 4Ë<< (
RM
 - 1));

362 
	}
}

365 
	$makeRksTabÀ
() {

366 
öt32
 
‚um8
, 
block
, 
KR
;

368 
‚um8
 = 0; fnum8 < 2; fnum8++)

369 
block
 = 0; block < 8; block++)

370 
KR
 = 0; KR < 2; KR++) {

371 i‡(
KR
 != 0)

372 
rksTabÀ
[
‚um8
][
block
][
KR
] = (block << 1) + fnum8;

374 
rksTabÀ
[
‚um8
][
block
][
KR
] = block >> 1;

376 
	}
}

384 
INLINE
 
uöt32
 
	$ˇlc_eg_dpha£
(
OPLL_SLOT
 * 
¶Ÿ
) {

385 
¶Ÿ
->
eg_mode
) {

386 
ATTACK
:

387  
dpha£ARTabÀ
[
¶Ÿ
->
∑tch
.
AR
][¶Ÿ->
rks
];

389 
DECAY
:

390  
dpha£DRTabÀ
[
¶Ÿ
->
∑tch
.
DR
][¶Ÿ->
rks
];

392 
SUSHOLD
:

395 
SUSTINE
:

396  
dpha£DRTabÀ
[
¶Ÿ
->
∑tch
.
RR
][¶Ÿ->
rks
];

398 
RELEASE
:

399 i‡(
¶Ÿ
->
su°öe
)

400  
dpha£DRTabÀ
[5][
¶Ÿ
->
rks
];

401 i‡(
¶Ÿ
->
∑tch
.
EG
)

402  
dpha£DRTabÀ
[
¶Ÿ
->
∑tch
.
RR
][¶Ÿ->
rks
];

404  
dpha£DRTabÀ
[7][
¶Ÿ
->
rks
];

406 
FINISH
:

412 
	}
}

420 
	#UPDATE_PG
(
S
Ë(S)->
dpha£
 = 
dpha£TabÀ
[(S)->
‚um
][(S)->
block
][(S)->
∑tch
.
ML
]

	)

421 
	#UPDATE_TLL
(
S
) \

422 (((
S
)->
ty≥
 == 0) ? \

423 ((
S
)->
él
 = 
élTabÀ
[((S)->
‚um
Ë>> 5][(S)->
block
][(S)->
∑tch
.
TL
][(S)->∑tch.
KL
]) : \

424 ((
S
)->
él
 = 
élTabÀ
[((S)->
‚um
Ë>> 5][(S)->
block
][(S)->
vﬁume
][(S)->
∑tch
.
KL
]))

	)

425 
	#UPDATE_RKS
(
S
Ë(S)->
rks
 = 
rksTabÀ
[((S)->
‚um
Ë>> 8][(S)->
block
][(S)->
∑tch
.
KR
]

	)

426 
	#UPDATE_WF
(
S
Ë(S)->
sötbl
 = 
wavef‹m
[(S)->
∑tch
.
WF
]

	)

427 
	#UPDATE_EG
(
S
Ë(S)->
eg_dpha£
 = 
	`ˇlc_eg_dpha£
(S)

	)

428 
	#UPDATE_ALL
(
S
) \

429 
	`UPDATE_PG
(
S
); \

430 
	`UPDATE_TLL
(
S
); \

431 
	`UPDATE_RKS
(
S
); \

432 
	`UPDATE_WF
(
S
); \

433 
	`UPDATE_EG
(
S
Ë

	)

437 
INLINE
 
	$¶ŸOn
(
OPLL_SLOT
 * 
¶Ÿ
) {

438 
¶Ÿ
->
eg_mode
 = 
ATTACK
;

439 
¶Ÿ
->
eg_pha£
 = 0;

440 
¶Ÿ
->
pha£
 = 0;

441 
	}
}

444 
INLINE
 
	$¶ŸOn2
(
OPLL_SLOT
 * 
¶Ÿ
) {

445 
¶Ÿ
->
eg_mode
 = 
ATTACK
;

446 
¶Ÿ
->
eg_pha£
 = 0;

447 
	}
}

450 
INLINE
 
	$¶ŸOff
(
OPLL_SLOT
 * 
¶Ÿ
) {

451 i‡(
¶Ÿ
->
eg_mode
 =
ATTACK
)

452 
¶Ÿ
->
eg_pha£
 = 
	`EXPAND_BITS
(
AR_ADJUST_TABLE
[
	`HIGHBITS
(¶Ÿ->eg_pha£, 
EG_DP_BITS
 - 
EG_BITS
)], EG_BITS, EG_DP_BITS);

453 
¶Ÿ
->
eg_mode
 = 
RELEASE
;

454 
	}
}

457 
INLINE
 
	$keyOn
(
OPLL
 * 
›Œ
, 
öt32
 
i
) {

458 i‡(!
›Œ
->
¶Ÿ_⁄_Êag
[
i
 * 2])

459 
	`¶ŸOn
(
	`MOD
(
›Œ
, 
i
));

460 i‡(!
›Œ
->
¶Ÿ_⁄_Êag
[
i
 * 2 + 1])

461 
	`¶ŸOn
(
	`CAR
(
›Œ
, 
i
));

462 
›Œ
->
key_°©us
[
i
] = 1;

463 
	}
}

466 
INLINE
 
	$keyOff
(
OPLL
 * 
›Œ
, 
öt32
 
i
) {

467 i‡(
›Œ
->
¶Ÿ_⁄_Êag
[
i
 * 2 + 1])

468 
	`¶ŸOff
(
	`CAR
(
›Œ
, 
i
));

469 
›Œ
->
key_°©us
[
i
] = 0;

470 
	}
}

473 
INLINE
 
	$£tSu°öe
(
OPLL
 * 
›Œ
, 
öt32
 
c
, i¡32 
su°öe
) {

474 
	`CAR
(
›Œ
, 
c
)->
su°öe
 = sustine;

475 i‡(
	`MOD
(
›Œ
, 
c
)->
ty≥
)

476 
	`MOD
(
›Œ
, 
c
)->
su°öe
 = sustine;

477 
	}
}

480 
INLINE
 
	$£tVﬁume
(
OPLL
 * 
›Œ
, 
öt32
 
c
, i¡32 
vﬁume
) {

481 
	`CAR
(
›Œ
, 
c
)->
vﬁume
 = volume;

482 
	}
}

484 
INLINE
 
	$£tSlŸVﬁume
(
OPLL_SLOT
 * 
¶Ÿ
, 
öt32
 
vﬁume
) {

485 
¶Ÿ
->
vﬁume
 = volume;

486 
	}
}

489 
INLINE
 
	$£tFnumbî
(
OPLL
 * 
›Œ
, 
öt32
 
c
, i¡32 
‚um
) {

490 
	`CAR
(
›Œ
, 
c
)->
‚um
 = fnum;

491 
	`MOD
(
›Œ
, 
c
)->
‚um
 = fnum;

492 
	}
}

495 
INLINE
 
	$£tBlock
(
OPLL
 * 
›Œ
, 
öt32
 
c
, i¡32 
block
) {

496 
	`CAR
(
›Œ
, 
c
)->
block
 = block;

497 
	`MOD
(
›Œ
, 
c
)->
block
 = block;

498 
	}
}

500 
INLINE
 
	$upd©e_key_°©us
(
OPLL
 * 
›Œ
Ë{ 
ch
;

502 
ch
 = 0; ch < 6; ch++)

503 
›Œ
->
¶Ÿ_⁄_Êag
[
ch
 * 2] = o∂l->¶Ÿ_⁄_Êag[ch * 2 + 1] = (›Œ->
HiFªq
[ch]) & 0x10;

504 
	}
}

512 
	$OPLL_SLOT_ª£t
(
OPLL_SLOT
 * 
¶Ÿ
, 
ty≥
) {

513 
¶Ÿ
->
ty≥
 =Åype;

514 
¶Ÿ
->
sötbl
 = 
wavef‹m
[0];

515 
¶Ÿ
->
pha£
 = 0;

516 
¶Ÿ
->
dpha£
 = 0;

517 
¶Ÿ
->
ouçut
[0] = 0;

518 
¶Ÿ
->
ouçut
[1] = 0;

519 
¶Ÿ
->
„edback
 = 0;

520 
¶Ÿ
->
eg_mode
 = 
SETTLE
;

521 
¶Ÿ
->
eg_pha£
 = 
EG_DP_WIDTH
;

522 
¶Ÿ
->
eg_dpha£
 = 0;

523 
¶Ÿ
->
rks
 = 0;

524 
¶Ÿ
->
él
 = 0;

525 
¶Ÿ
->
su°öe
 = 0;

526 
¶Ÿ
->
‚um
 = 0;

527 
¶Ÿ
->
block
 = 0;

528 
¶Ÿ
->
vﬁume
 = 0;

529 
¶Ÿ
->
pgout
 = 0;

530 
¶Ÿ
->
egout
 = 0;

531 
	}
}

533 
	$öã∫Æ_ª‰esh
() {

534 
	`as£π
(0);

540 
pm_dpha£
 = 0;

541 
am_dpha£
 = 0;

542 
	}
}

544 
	$makëabÀs
(
uöt32
 
c
, uöt32 
r
) {

545 i‡(
c
 !
˛k
) {

546 
˛k
 = 
c
;

547 
	`makePmTabÀ
();

548 
	`makeAmTabÀ
();

549 
	`makeDB2LöTabÀ
();

550 
	`makeAdju°TabÀ
();

551 
	`makeTŒTabÀ
();

552 
	`makeRksTabÀ
();

553 
	`makeSöTabÀ
();

557 i‡(
r
 !
øã
) {

558 
øã
 = 
r
;

559 
	`öã∫Æ_ª‰esh
();

561 
	}
}

563 
OPLL
 *
	$OPLL_√w
(
uöt32
 
˛k
, uöt32 
øã
) {

564 
OPLL
 *
›Œ
;

566 
	`makëabÀs
(
˛k
, 
øã
);

568 
›Œ
 = (
OPLL
*)
	`mÆloc
((OPLL));

569 i‡(
›Œ
 =
NULL
)

570  
NULL
;

571 
	`mem£t
(
›Œ
, 0, (
OPLL
));

573 
›Œ
->
mask
 = 0;

575 
	`OPLL_ª£t
(
›Œ
);

577  
›Œ
;

578 
	}
}

581 
	$OPLL_dñëe
(
OPLL
 * 
›Œ
) {

582 
	`‰ì
(
›Œ
);

583 
	}
}

586 
	$OPLL_ª£t
(
OPLL
 * 
›Œ
) {

587 
öt32
 
i
;

589 i‡(!
›Œ
)

592 
›Œ
->
adr
 = 0;

593 
›Œ
->
out
 = 0;

595 
›Œ
->
pm_pha£
 = 0;

596 
›Œ
->
am_pha£
 = 0;

598 
›Œ
->
mask
 = 0;

600 
i
 = 0; i < 12; i++)

601 
	`OPLL_SLOT_ª£t
(&
›Œ
->
¶Ÿ
[
i
], i % 2);

603 
i
 = 0; i < 6; i++) {

604 
›Œ
->
key_°©us
[
i
] = 0;

608 
i
 = 0; i < 0x40; i++)

609 
	`OPLL_wrôeReg
(
›Œ
, 
i
, 0);

611 
›Œ
->
ªÆ°ï
 = (
uöt32
)((1 << 31Ë/ 
øã
);

612 
›Œ
->
›Œ°ï
 = (
uöt32
)((1 << 31Ë/ (
˛k
 / 72));

613 
›Œ
->
›Œtime
 = 0;

614 
	}
}

617 
	$OPLL_f‹˚Re‰esh
(
OPLL
 * 
›Œ
) {

618 
öt32
 
i
;

620 i‡(
›Œ
 =
NULL
)

623 
i
 = 0; i < 12; i++) {

624 
	`UPDATE_PG
(&
›Œ
->
¶Ÿ
[
i
]);

625 
	`UPDATE_RKS
(&
›Œ
->
¶Ÿ
[
i
]);

626 
	`UPDATE_TLL
(&
›Œ
->
¶Ÿ
[
i
]);

627 
	`UPDATE_WF
(&
›Œ
->
¶Ÿ
[
i
]);

628 
	`UPDATE_EG
(&
›Œ
->
¶Ÿ
[
i
]);

630 
	}
}

632 
	$OPLL_£t_øã
(
OPLL
 * 
›Œ
, 
uöt32
 
r
) {

633 i‡(
›Œ
->
quÆôy
)

634 
øã
 = 49716;

636 
øã
 = 
r
;

637 
	`öã∫Æ_ª‰esh
();

638 
øã
 = 
r
;

639 
	}
}

641 
	$OPLL_£t_quÆôy
(
OPLL
 * 
›Œ
, 
uöt32
 
q
) {

642 
›Œ
->
quÆôy
 = 
q
;

643 
	`OPLL_£t_øã
(
›Œ
, 
øã
);

644 
	}
}

652 #i‡(
SLOT_AMP_BITS
 - 
PG_BITS
) > 0

653 
	#wave2_2pi
(
e
Ë(”Ë>> (
SLOT_AMP_BITS
 - 
PG_BITS
))

	)

655 
	#wave2_2pi
(
e
Ë(”Ë<< (
PG_BITS
 - 
SLOT_AMP_BITS
))

	)

659 #i‡(
SLOT_AMP_BITS
 - 
PG_BITS
 - 1) == 0

660 
	#wave2_4pi
(
e
Ë”)

	)

661 #ñi‡(
SLOT_AMP_BITS
 - 
PG_BITS
 - 1) > 0

662 
	#wave2_4pi
(
e
Ë(”Ë>> (
SLOT_AMP_BITS
 - 
PG_BITS
 - 1))

	)

664 
	#wave2_4pi
(
e
Ë(”Ë<< (1 + 
PG_BITS
 - 
SLOT_AMP_BITS
))

	)

668 #i‡(
SLOT_AMP_BITS
 - 
PG_BITS
 - 2) == 0

669 
	#wave2_8pi
(
e
Ë”)

	)

670 #ñi‡(
SLOT_AMP_BITS
 - 
PG_BITS
 - 2) > 0

671 
	#wave2_8pi
(
e
Ë(”Ë>> (
SLOT_AMP_BITS
 - 
PG_BITS
 - 2))

	)

673 
	#wave2_8pi
(
e
Ë(”Ë<< (2 + 
PG_BITS
 - 
SLOT_AMP_BITS
))

	)

679 
	$upd©e_ampm
(
OPLL
 * 
›Œ
) {

680 
›Œ
->
pm_pha£
 = (›Œ->pm_pha£ + 
pm_dpha£
Ë& (
PM_DP_WIDTH
 - 1);

681 
›Œ
->
am_pha£
 = (›Œ->am_pha£ + 
am_dpha£
Ë& (
AM_DP_WIDTH
 - 1);

682 
›Œ
->
lfo_am
 = 
amèbÀ
[
	`HIGHBITS
(›Œ->
am_pha£
, 
AM_DP_BITS
 - 
AM_PG_BITS
)];

683 
›Œ
->
lfo_pm
 = 
pmèbÀ
[
	`HIGHBITS
(›Œ->
pm_pha£
, 
PM_DP_BITS
 - 
PM_PG_BITS
)];

684 
	}
}

687 
INLINE
 
	$ˇlc_pha£
(
OPLL_SLOT
 * 
¶Ÿ
, 
öt32
 
lfo
) {

688 i‡(
¶Ÿ
->
∑tch
.
PM
)

689 
¶Ÿ
->
pha£
 +(¶Ÿ->
dpha£
 * 
lfo
Ë>> 
PM_AMP_BITS
;

691 
¶Ÿ
->
pha£
 +¶Ÿ->
dpha£
;

693 
¶Ÿ
->
pha£
 &(
DP_WIDTH
 - 1);

695 
¶Ÿ
->
pgout
 = 
	`HIGHBITS
(¶Ÿ->
pha£
, 
DP_BASE_BITS
);

696 
	}
}

699 
	$ˇlc_ívñ›e
(
OPLL_SLOT
 * 
¶Ÿ
, 
öt32
 
lfo
) {

700 
	#S2E
(
x
Ë(
	`SL2EG
((
öt32
)(x / 
SL_STEP
)Ë<< (
EG_DP_BITS
 - 
EG_BITS
))

	)

702 
uöt32
 
SL
[16] = {

703 
	`S2E
(0.0), S2E(3.0), S2E(6.0), S2E(9.0), S2E(12.0), S2E(15.0), S2E(18.0), S2E(21.0),

704 
	`S2E
(24.0), S2E(27.0), S2E(30.0), S2E(33.0), S2E(36.0), S2E(39.0), S2E(42.0), S2E(48.0)

707 
uöt32
 
egout
;

709 
¶Ÿ
->
eg_mode
) {

710 
ATTACK
:

711 
egout
 = 
AR_ADJUST_TABLE
[
	`HIGHBITS
(
¶Ÿ
->
eg_pha£
, 
EG_DP_BITS
 - 
EG_BITS
)];

712 
¶Ÿ
->
eg_pha£
 +¶Ÿ->
eg_dpha£
;

713 i‡((
EG_DP_WIDTH
 & 
¶Ÿ
->
eg_pha£
Ë|| (¶Ÿ->
∑tch
.
AR
 == 15)) {

714 
egout
 = 0;

715 
¶Ÿ
->
eg_pha£
 = 0;

716 
¶Ÿ
->
eg_mode
 = 
DECAY
;

717 
	`UPDATE_EG
(
¶Ÿ
);

721 
DECAY
:

722 
egout
 = 
	`HIGHBITS
(
¶Ÿ
->
eg_pha£
, 
EG_DP_BITS
 - 
EG_BITS
);

723 
¶Ÿ
->
eg_pha£
 +¶Ÿ->
eg_dpha£
;

724 i‡(
¶Ÿ
->
eg_pha£
 >
SL
[¶Ÿ->
∑tch
.SL]) {

725 i‡(
¶Ÿ
->
∑tch
.
EG
) {

726 
¶Ÿ
->
eg_pha£
 = 
SL
[¶Ÿ->
∑tch
.SL];

727 
¶Ÿ
->
eg_mode
 = 
SUSHOLD
;

728 
	`UPDATE_EG
(
¶Ÿ
);

730 
¶Ÿ
->
eg_pha£
 = 
SL
[¶Ÿ->
∑tch
.SL];

731 
¶Ÿ
->
eg_mode
 = 
SUSTINE
;

732 
	`UPDATE_EG
(
¶Ÿ
);

737 
SUSHOLD
:

738 
egout
 = 
	`HIGHBITS
(
¶Ÿ
->
eg_pha£
, 
EG_DP_BITS
 - 
EG_BITS
);

739 i‡(
¶Ÿ
->
∑tch
.
EG
 == 0) {

740 
¶Ÿ
->
eg_mode
 = 
SUSTINE
;

741 
	`UPDATE_EG
(
¶Ÿ
);

745 
SUSTINE
:

746 
RELEASE
:

747 
egout
 = 
	`HIGHBITS
(
¶Ÿ
->
eg_pha£
, 
EG_DP_BITS
 - 
EG_BITS
);

748 
¶Ÿ
->
eg_pha£
 +¶Ÿ->
eg_dpha£
;

749 i‡(
egout
 >(1 << 
EG_BITS
)) {

750 
¶Ÿ
->
eg_mode
 = 
FINISH
;

751 
egout
 = (1 << 
EG_BITS
) - 1;

755 
FINISH
:

756 
egout
 = (1 << 
EG_BITS
) - 1;

760 
egout
 = (1 << 
EG_BITS
) - 1;

764 i‡(
¶Ÿ
->
∑tch
.
AM
)

765 
egout
 = 
	`EG2DB
”gouà+ 
¶Ÿ
->
él
Ë+ 
lfo
;

767 
egout
 = 
	`EG2DB
”gouà+ 
¶Ÿ
->
él
);

769 i‡(
egout
 >
DB_MUTE
)

770 
egout
 = 
DB_MUTE
 - 1;

772 
¶Ÿ
->
egout
 =Égout;

773 
	}
}

776 
INLINE
 
öt32
 
	$ˇlc_¶Ÿ_ˇr
(
OPLL_SLOT
 * 
¶Ÿ
, 
öt32
 
fm
) {

777 
¶Ÿ
->
ouçut
[1] = slot->output[0];

779 i‡(
¶Ÿ
->
egout
 >(
DB_MUTE
 - 1)) {

780 
¶Ÿ
->
ouçut
[0] = 0;

782 
¶Ÿ
->
ouçut
[0] = 
DB2LIN_TABLE
[¶Ÿ->
sötbl
[(¶Ÿ->
pgout
 + 
	`wave2_8pi
(
fm
)Ë& (
PG_WIDTH
 - 1)] + slŸ->
egout
];

785  (
¶Ÿ
->
ouçut
[1] + slot->output[0]) >> 1;

786 
	}
}

789 
INLINE
 
öt32
 
	$ˇlc_¶Ÿ_mod
(
OPLL_SLOT
 * 
¶Ÿ
) {

790 
öt32
 
fm
;

792 
¶Ÿ
->
ouçut
[1] = slot->output[0];

794 i‡(
¶Ÿ
->
egout
 >(
DB_MUTE
 - 1)) {

795 
¶Ÿ
->
ouçut
[0] = 0;

796 } i‡(
¶Ÿ
->
∑tch
.
FB
 != 0) {

797 
fm
 = 
	`wave2_4pi
(
¶Ÿ
->
„edback
Ë>> (7 - slŸ->
∑tch
.
FB
);

798 
¶Ÿ
->
ouçut
[0] = 
DB2LIN_TABLE
[¶Ÿ->
sötbl
[(¶Ÿ->
pgout
 + 
fm
Ë& (
PG_WIDTH
 - 1)] + slŸ->
egout
];

800 
¶Ÿ
->
ouçut
[0] = 
DB2LIN_TABLE
[¶Ÿ->
sötbl
[¶Ÿ->
pgout
] + slŸ->
egout
];

803 
¶Ÿ
->
„edback
 = (¶Ÿ->
ouçut
[1] + slot->output[0]) >> 1;

805  
¶Ÿ
->
„edback
;

806 
	}
}

808 
INLINE
 
öt16
 
	$ˇlc
(
OPLL
 * 
›Œ
) {

809 
öt32
 
ö°
 = 0, 
out
 = 0;

810 
öt32
 
i
;

812 
	`upd©e_ampm
(
›Œ
);

814 
i
 = 0; i < 12; i++) {

815 
	`ˇlc_pha£
(&
›Œ
->
¶Ÿ
[
i
], o∂l->
lfo_pm
);

816 
	`ˇlc_ívñ›e
(&
›Œ
->
¶Ÿ
[
i
], o∂l->
lfo_am
);

819 
i
 = 0; i < 6; i++)

820 i‡(!(
›Œ
->
mask
 & 
	`OPLL_MASK_CH
(
i
)Ë&& (
	`CAR
(›Œ, i)->
eg_mode
 !
FINISH
))

821 
ö°
 +
	`ˇlc_¶Ÿ_ˇr
(
	`CAR
(
›Œ
, 
i
), 
	`ˇlc_¶Ÿ_mod
(
	`MOD
(opll, i)));

823 
out
 = 
ö°
;

824  (
öt16
)
out
;

825 
	}
}

827 
	$OPLL_fûlbuf
(
OPLL
* 
›Œ
, 
öt32
 *
buf
, i¡32 
Àn
, 
shi·
) {

828 
Àn
 > 0) {

829 *
buf
 +(
	`ˇlc
(
›Œ
Ë+ 32768Ë<< 
shi·
;

830 
buf
++;

831 
Àn
--;

833 
	}
}

835 
uöt32
 
	$OPLL_£tMask
(
OPLL
 * 
›Œ
, 
uöt32
 
mask
) {

836 
uöt32
 
ªt
;

838 i‡(
›Œ
) {

839 
ªt
 = 
›Œ
->
mask
;

840 
›Œ
->
mask
 = mask;

841  
ªt
;

844 
	}
}

846 
uöt32
 
	$OPLL_toggÀMask
(
OPLL
 * 
›Œ
, 
uöt32
 
mask
) {

847 
uöt32
 
ªt
;

849 i‡(
›Œ
) {

850 
ªt
 = 
›Œ
->
mask
;

851 
›Œ
->
mask
 ^= mask;

852  
ªt
;

855 
	}
}

863 
	$£tIn°rumít
(
OPLL
 * 
›Œ
, 
uöt32
 
i
, uöt32 
ö°
) {

864 c⁄° 
uöt8
 *
§c
;

865 
OPLL_PATCH
 *
modp
, *
ˇΩ
;

867 
›Œ
->
∑tch_numbî
[
i
] = 
ö°
;

869 i‡(
ö°
)

870 
§c
 = 
deÁu…_ö°
[
ö°
 - 1];

872 
§c
 = 
›Œ
->
Cu°In°
;

874 
modp
 = &
	`MOD
(
›Œ
, 
i
)->
∑tch
;

875 
ˇΩ
 = &
	`CAR
(
›Œ
, 
i
)->
∑tch
;

877 
modp
->
AM
 = (
§c
[0] >> 7) & 1;

878 
modp
->
PM
 = (
§c
[0] >> 6) & 1;

879 
modp
->
EG
 = (
§c
[0] >> 5) & 1;

880 
modp
->
KR
 = (
§c
[0] >> 4) & 1;

881 
modp
->
ML
 = (
§c
[0] & 0xF);

883 
ˇΩ
->
AM
 = (
§c
[1] >> 7) & 1;

884 
ˇΩ
->
PM
 = (
§c
[1] >> 6) & 1;

885 
ˇΩ
->
EG
 = (
§c
[1] >> 5) & 1;

886 
ˇΩ
->
KR
 = (
§c
[1] >> 4) & 1;

887 
ˇΩ
->
ML
 = (
§c
[1] & 0xF);

889 
modp
->
KL
 = (
§c
[2] >> 6) & 3;

890 
modp
->
TL
 = (
§c
[2] & 0x3F);

892 
ˇΩ
->
KL
 = (
§c
[3] >> 6) & 3;

893 
ˇΩ
->
WF
 = (
§c
[3] >> 4) & 1;

895 
modp
->
WF
 = (
§c
[3] >> 3) & 1;

897 
modp
->
FB
 = (
§c
[3]) & 7;

899 
modp
->
AR
 = (
§c
[4] >> 4) & 0xF;

900 
modp
->
DR
 = (
§c
[4] & 0xF);

902 
ˇΩ
->
AR
 = (
§c
[5] >> 4) & 0xF;

903 
ˇΩ
->
DR
 = (
§c
[5] & 0xF);

905 
modp
->
SL
 = (
§c
[6] >> 4) & 0xF;

906 
modp
->
RR
 = (
§c
[6] & 0xF);

908 
ˇΩ
->
SL
 = (
§c
[7] >> 4) & 0xF;

909 
ˇΩ
->
RR
 = (
§c
[7] & 0xF);

910 
	}
}

913 
	$OPLL_wrôeReg
(
OPLL
 * 
›Œ
, 
uöt32
 
ªg
, uöt32 
d©a
) {

914 
öt32
 
i
, 
v
, 
ch
;

916 
d©a
 = data & 0xff;

917 
ªg
 =Ñeg & 0x3f;

919 
ªg
) {

921 
›Œ
->
Cu°In°
[0] = 
d©a
;

922 
i
 = 0; i < 6; i++) {

923 i‡(
›Œ
->
∑tch_numbî
[
i
] == 0) {

924 
	`£tIn°rumít
(
›Œ
, 
i
, 0);

925 
	`UPDATE_PG
(
	`MOD
(
›Œ
, 
i
));

926 
	`UPDATE_RKS
(
	`MOD
(
›Œ
, 
i
));

927 
	`UPDATE_EG
(
	`MOD
(
›Œ
, 
i
));

933 
›Œ
->
Cu°In°
[1] = 
d©a
;

934 
i
 = 0; i < 6; i++) {

935 i‡(
›Œ
->
∑tch_numbî
[
i
] == 0) {

936 
	`£tIn°rumít
(
›Œ
, 
i
, 0);

937 
	`UPDATE_PG
(
	`CAR
(
›Œ
, 
i
));

938 
	`UPDATE_RKS
(
	`CAR
(
›Œ
, 
i
));

939 
	`UPDATE_EG
(
	`CAR
(
›Œ
, 
i
));

945 
›Œ
->
Cu°In°
[2] = 
d©a
;

946 
i
 = 0; i < 6; i++) {

947 i‡(
›Œ
->
∑tch_numbî
[
i
] == 0) {

948 
	`£tIn°rumít
(
›Œ
, 
i
, 0);

949 
	`UPDATE_TLL
(
	`MOD
(
›Œ
, 
i
));

955 
›Œ
->
Cu°In°
[3] = 
d©a
;

956 
i
 = 0; i < 6; i++) {

957 i‡(
›Œ
->
∑tch_numbî
[
i
] == 0) {

958 
	`£tIn°rumít
(
›Œ
, 
i
, 0);

959 
	`UPDATE_WF
(
	`MOD
(
›Œ
, 
i
));

960 
	`UPDATE_WF
(
	`CAR
(
›Œ
, 
i
));

966 
›Œ
->
Cu°In°
[4] = 
d©a
;

967 
i
 = 0; i < 6; i++) {

968 i‡(
›Œ
->
∑tch_numbî
[
i
] == 0) {

969 
	`£tIn°rumít
(
›Œ
, 
i
, 0);

970 
	`UPDATE_EG
(
	`MOD
(
›Œ
, 
i
));

976 
›Œ
->
Cu°In°
[5] = 
d©a
;

977 
i
 = 0; i < 6; i++) {

978 i‡(
›Œ
->
∑tch_numbî
[
i
] == 0) {

979 
	`£tIn°rumít
(
›Œ
, 
i
, 0);

980 
	`UPDATE_EG
(
	`CAR
(
›Œ
, 
i
));

986 
›Œ
->
Cu°In°
[6] = 
d©a
;

987 
i
 = 0; i < 6; i++) {

988 i‡(
›Œ
->
∑tch_numbî
[
i
] == 0) {

989 
	`£tIn°rumít
(
›Œ
, 
i
, 0);

990 
	`UPDATE_EG
(
	`MOD
(
›Œ
, 
i
));

996 
›Œ
->
Cu°In°
[7] = 
d©a
;

997 
i
 = 0; i < 6; i++) {

998 i‡(
›Œ
->
∑tch_numbî
[
i
] == 0) {

999 
	`£tIn°rumít
(
›Œ
, 
i
, 0);

1000 
	`UPDATE_EG
(
	`CAR
(
›Œ
, 
i
));

1011 
ch
 = 
ªg
 - 0x10;

1012 
›Œ
->
LowFªq
[
ch
] = 
d©a
;

1013 
	`£tFnumbî
(
›Œ
, 
ch
, 
d©a
 + ((›Œ->
HiFªq
[ch] & 1) << 8));

1014 
	`UPDATE_ALL
(
	`MOD
(
›Œ
, 
ch
));

1015 
	`UPDATE_ALL
(
	`CAR
(
›Œ
, 
ch
));

1024 
ch
 = 
ªg
 - 0x20;

1025 
›Œ
->
HiFªq
[
ch
] = 
d©a
;

1027 
	`£tFnumbî
(
›Œ
, 
ch
, ((
d©a
 & 1Ë<< 8Ë+ o∂l->
LowFªq
[ch]);

1028 
	`£tBlock
(
›Œ
, 
ch
, (
d©a
 >> 1) & 7);

1029 
	`£tSu°öe
(
›Œ
, 
ch
, (
d©a
 >> 5) & 1);

1030 i‡(
d©a
 & 0x10)

1031 
	`keyOn
(
›Œ
, 
ch
);

1033 
	`keyOff
(
›Œ
, 
ch
);

1034 
	`UPDATE_ALL
(
	`MOD
(
›Œ
, 
ch
));

1035 
	`UPDATE_ALL
(
	`CAR
(
›Œ
, 
ch
));

1036 
	`upd©e_key_°©us
(
›Œ
);

1045 
›Œ
->
In°Vﬁ
[
ªg
 - 0x30] = 
d©a
;

1046 
i
 = (
d©a
 >> 4) & 15;

1047 
v
 = 
d©a
 & 15;

1048 
	`£tIn°rumít
(
›Œ
, 
ªg
 - 0x30, 
i
);

1049 
	`£tVﬁume
(
›Œ
, 
ªg
 - 0x30, 
v
 << 2);

1050 
	`UPDATE_ALL
(
	`MOD
(
›Œ
, 
ªg
 - 0x30));

1051 
	`UPDATE_ALL
(
	`CAR
(
›Œ
, 
ªg
 - 0x30));

1057 
	}
}

1059 
	$OPLL_wrôeIO
(
OPLL
 * 
›Œ
, 
uöt32
 
adr
, uöt32 
vÆ
) {

1060 i‡(
adr
 & 1)

1061 
	`OPLL_wrôeReg
(
›Œ
, o∂l->
adr
, 
vÆ
);

1063 
›Œ
->
adr
 = 
vÆ
;

1064 
	}
}

	@fceux-am/src/boards/emu2413.h

1 #i‚de‡
_EMU2413_H_


2 
	#_EMU2413_H_


	)

4 
	~"../ty≥s.h
"

6 #i‚de‡
INLINE


7 #i‡
deföed
(
__GNUC__
)

8 
	#INLINE
 
__ölöe__


	)

9 #ñi‡
deföed
(
_MWERKS_
)

10 
	#INLINE
 
ölöe


	)

12 
	#INLINE


	)

16 #ifde‡
__˝lu•lus


20 
	#PI
 3.14159265358979323846

	)

22 íum { 
OPLL_VRC7_TONE
=0 };

26 
uöt32
 
TL
, 
FB
, 
EG
, 
ML
, 
AR
, 
DR
, 
SL
, 
RR
, 
KR
, 
KL
, 
AM
, 
PM
, 
WF
;

27 } 
	tOPLL_PATCH
;

31 
OPLL_PATCH
 
∑tch
;

33 
öt32
 
ty≥
;

36 
öt32
 
„edback
;

37 
öt32
 
ouçut
[2];

40 
uöt16
 *
sötbl
;

41 
uöt32
 
pha£
;

42 
uöt32
 
dpha£
;

43 
uöt32
 
pgout
;

46 
öt32
 
‚um
;

47 
öt32
 
block
;

48 
öt32
 
vﬁume
;

49 
öt32
 
su°öe
;

50 
uöt32
 
él
;

51 
uöt32
 
rks
;

52 
öt32
 
eg_mode
;

53 
uöt32
 
eg_pha£
;

54 
uöt32
 
eg_dpha£
;

55 
uöt32
 
egout
;

56 } 
	tOPLL_SLOT
;

59 
	#OPLL_MASK_CH
(
x
Ë(1 << (x))

	)

63 
uöt32
 
adr
;

64 
öt32
 
out
;

66 
uöt32
 
ªÆ°ï
;

67 
uöt32
 
›Œtime
;

68 
uöt32
 
›Œ°ï
;

69 
öt32
 
¥ev
, 
√xt
;

72 
uöt8
 
LowFªq
[6];

73 
uöt8
 
HiFªq
[6];

74 
uöt8
 
In°Vﬁ
[6];

76 
uöt8
 
Cu°In°
[8];

78 
öt32
 
¶Ÿ_⁄_Êag
[6 * 2];

81 
uöt32
 
pm_pha£
;

82 
öt32
 
lfo_pm
;

85 
öt32
 
am_pha£
;

86 
öt32
 
lfo_am
;

88 
uöt32
 
quÆôy
;

91 
öt32
 
∑tch_numbî
[6];

92 
öt32
 
key_°©us
[6];

95 
OPLL_SLOT
 
¶Ÿ
[6 * 2];

97 
uöt32
 
mask
;

98 } 
	tOPLL
;

101 
OPLL
 *
OPLL_√w
(
uöt32
 
˛k
, uöt32 
øã
);

102 
OPLL_dñëe
(
OPLL
 *);

105 
OPLL_ª£t
(
OPLL
 *);

106 
OPLL_£t_øã
(
OPLL
 *
›Œ
, 
uöt32
 
r
);

107 
OPLL_£t_quÆôy
(
OPLL
 *
›Œ
, 
uöt32
 
q
);

110 
OPLL_wrôeIO
(
OPLL
 *, 
uöt32
 
ªg
, uöt32 
vÆ
);

111 
OPLL_wrôeReg
(
OPLL
 *, 
uöt32
 
ªg
, uöt32 
vÆ
);

114 
OPLL_f‹˚Re‰esh
(
OPLL
 *);

117 
uöt32
 
OPLL_£tMask
(
OPLL
 *, uöt32 
mask
);

118 
uöt32
 
OPLL_toggÀMask
(
OPLL
 *, uöt32 
mask
);

121 
OPLL_fûlbuf
(
OPLL
* 
›Œ
, 
öt32
 *
buf
, i¡32 
Àn
, 
shi·
);

123 #ifde‡
__˝lu•lus


	@fceux-am/src/boards/et-100.cpp

41 
	~"m≠öc.h
"

42 
	~"mmc3.h
"

44 
uöt8
 *
	gCHRRAM
;

45 
uöt32
 
	gCHRRAMSize
;

47 
	$BMC1024CA1PW
(
uöt32
 
A
, 
uöt8
 
V
) {

48 i‡((
EXPREGS
[0]>>3)&1)

49 
	`£çrg8
(
A
, (
V
&0x1FË| ((
EXPREGS
[0] & 7) << 4));

51 
	`£çrg8
(
A
, (
V
&0x0FË| ((
EXPREGS
[0] & 7) << 4));

52 
	}
}

54 
	$BMC1024CA1CW
(
uöt32
 
A
, 
uöt8
 
V
) {

55 i‡((
EXPREGS
[0]>>4)&1)

56 
	`£tchr1r
(0x10, 
A
, 
V
);

57 i‡(((
EXPREGS
[0]>>5)&1) && ((EXPREGS[0]>>3)&1))

58 
	`£tchr1
(
A
, 
V
 | ((
EXPREGS
[0] & 7) << 7));

60 
	`£tchr1
(
A
, (
V
&0x7FË| ((
EXPREGS
[0] & 7) << 7));

61 
	}
}

63 
	$DECLFW
(
BMC1024CA1Wrôe
) {

64 i‡(((
A001B
 & 0xC0Ë=0x80Ë&& !(
EXPREGS
[0] & 7))

66 
EXPREGS
[0] = 
A
 & 0x3F;

67 
	`FixMMC3PRG
(
MMC3_cmd
);

68 
	`FixMMC3CHR
(
MMC3_cmd
);

70 
	`C¨tBW
(
A
, 
V
);

72 
	}
}

74 
	$BMC1024CA1Re£t
() {

75 
EXPREGS
[0] = 0;

76 
	`MMC3RegRe£t
();

77 
	}
}

79 
	$BMC1024CA1Powî
() {

80 
EXPREGS
[0] = 0;

81 
	`GíMMC3Powî
();

82 
	`SëWrôeH™dÀr
(0x6000, 0x7FFF, 
BMC1024CA1Wrôe
);

83 
	}
}

85 
	$BMC1024CA1Clo£
() {

86 i‡(
CHRRAM
)

87 
	`FCEU_g‰ì
(
CHRRAM
);

88 
CHRRAM
 = 
NULL
;

89 
	}
}

91 
	$BMC1024CA1_Inô
(
C¨tInfo
 *
öfo
) {

92 
	`GíMMC3_Inô
(
öfo
, 256, 256, 8, 0);

93 
CHRRAMSize
 = 8192;

94 
CHRRAM
 = (
uöt8
*)
	`FCEU_gmÆloc
(
CHRRAMSize
);

95 
	`SëupC¨tCHRM≠pög
(0x10, 
CHRRAM
, 
CHRRAMSize
, 1);

96 
	`AddExSèã
(
CHRRAM
, 
CHRRAMSize
, 0, "CHRR");

97 
pwøp
 = 
BMC1024CA1PW
;

98 
cwøp
 = 
BMC1024CA1CW
;

99 
öfo
->
Powî
 = 
BMC1024CA1Powî
;

100 
öfo
->
Re£t
 = 
BMC1024CA1Re£t
;

101 
öfo
->
Clo£
 = 
BMC1024CA1Clo£
;

102 
	`AddExSèã
(
EXPREGS
, 1, 0, "EXPR");

103 
	}
}

	@fceux-am/src/boards/et-4320.cpp

41 
	~"m≠öc.h
"

42 
	~"mmc3.h
"

44 
uöt8
 *
	gCHRRAM
;

45 
uöt32
 
	gCHRRAMSize
;

46 
uöt8
 
	gPPUCHRBus
;

47 
uöt8
 
	gTKSMIR
[8];

49 
	$BMC810131C_PW
(
uöt32
 
A
, 
uöt8
 
V
) {

50 i‡((
EXPREGS
[0] >> 3) & 1)

51 
	`£çrg8
(
A
, (
V
 & 0x1FË| ((
EXPREGS
[0] & 7) << 4));

53 
	`£çrg8
(
A
, (
V
 & 0x0FË| ((
EXPREGS
[0] & 7) << 4));

54 
	}
}

56 
	$BMC810131C_CW
(
uöt32
 
A
, 
uöt8
 
V
) {

57 i‡((
EXPREGS
[0] >> 4) & 1)

58 
	`£tchr1r
(0x10, 
A
, 
V
);

59 i‡(((
EXPREGS
[0] >> 5) & 1) && ((EXPREGS[0] >> 3) & 1))

60 
	`£tchr1
(
A
, 
V
 | ((
EXPREGS
[0] & 7) << 7));

62 
	`£tchr1
(
A
, (
V
 & 0x7FË| ((
EXPREGS
[0] & 7) << 7));

64 
TKSMIR
[
A
 >> 10] = 
V
 >> 7;

65 i‡(((
EXPREGS
[0] >> 3Ë& 1Ë&& (
PPUCHRBus
 =(
A
 >> 10)))

66 
	`£tmúr‹
(
MI_0
 + (
V
 >> 7));

67 
	}
}

69 
	$DECLFW
(
BMC810131C_Wrôe
) {

70 i‡(((
A001B
 & 0xC0Ë=0x80Ë&& !(
EXPREGS
[0] & 7))

72 
EXPREGS
[0] = 
A
 & 0x3F;

73 
	`FixMMC3PRG
(
MMC3_cmd
);

74 
	`FixMMC3CHR
(
MMC3_cmd
);

77 
	`C¨tBW
(
A
, 
V
);

79 
	}
}

81 
	$BMC810131C_Re£t
() {

82 
EXPREGS
[0] = 0;

83 
	`MMC3RegRe£t
();

84 
	}
}

86 
	$BMC810131C_Powî
() {

87 
EXPREGS
[0] = 0;

88 
	`GíMMC3Powî
();

89 
	`SëWrôeH™dÀr
(0x6000, 0x7FFF, 
BMC810131C_Wrôe
);

90 
	}
}

92 
	$BMC810131C_Clo£
() {

93 i‡(
CHRRAM
)

94 
	`FCEU_g‰ì
(
CHRRAM
);

95 
CHRRAM
 = 
NULL
;

96 
	}
}

98 
	$TKSPPU
(
uöt32
 
A
) {

99 
A
 &= 0x1FFF;

100 
A
 >>= 10;

101 
PPUCHRBus
 = 
A
;

102 i‡((
EXPREGS
[0] >> 3) & 1)

103 
	`£tmúr‹
(
MI_0
 + 
TKSMIR
[
A
]);

104 
	}
}

106 
	$BMC810131C_Inô
(
C¨tInfo
 *
öfo
) {

107 
	`GíMMC3_Inô
(
öfo
, 256, 256, 8, 0);

108 
CHRRAMSize
 = 8192;

109 
CHRRAM
 = (
uöt8
*)
	`FCEU_gmÆloc
(
CHRRAMSize
);

110 
	`SëupC¨tCHRM≠pög
(0x10, 
CHRRAM
, 
CHRRAMSize
, 1);

111 
	`AddExSèã
(
CHRRAM
, 
CHRRAMSize
, 0, "CHRR");

112 
pwøp
 = 
BMC810131C_PW
;

113 
cwøp
 = 
BMC810131C_CW
;

114 
PPU_hook
 = 
TKSPPU
;

115 
öfo
->
Powî
 = 
BMC810131C_Powî
;

116 
öfo
->
Re£t
 = 
BMC810131C_Re£t
;

117 
öfo
->
Clo£
 = 
BMC810131C_Clo£
;

118 
	`AddExSèã
(
EXPREGS
, 1, 0, "EXPR");

119 
	}
}

	@fceux-am/src/boards/famicombox.cpp

21 
	~"m≠öc.h
"

23 
uöt8
 
	gªgs
[8];

24 
uöt8
 *
	gWRAM
 = 
NULL
;

25 
uöt32
 
	gWRAMSIZE
;

27 
SFORMAT
 
	gSèãRegs
[] =

29 { 
ªgs
, 8, "REGS" },

33 
	$Sync
() {

34 
	`£çrg2r
(0x10, 0x0800, 0);

35 
	`£çrg2r
(0x10, 0x1000, 1);

36 
	`£çrg2r
(0x10, 0x1800, 2);

37 
	`£çrg8r
(0x10, 0x6000, 1);

38 
	`£çrg16
(0x8000, 0);

39 
	`£çrg16
(0xC000, ~0);

40 
	`£tchr8
(0);

41 
	}
}

48 
	$DECLFW
(
SSSNROMWrôe
) {

51 
	}
}

53 
	$DECLFR
(
SSSNROMRód
) {

55 
A
 & 7) {

56 0:  
ªgs
[0] = 0xff;

67 
	}
}

69 
	$SSSNROMPowî
() {

70 
ªgs
[0] =Ñegs[1] =Ñegs[2] =Ñegs[3] =Ñegs[4] =Ñegs[5] =Ñegs[6] = 0;

71 
ªgs
[7] = 0xff;

72 
	`Sync
();

73 
	`FCEU_Mem‹yR™d
(
WRAM
, 
WRAMSIZE
, 
åue
);

75 
	`SëRódH™dÀr
(0x0800, 0x1FFF, 
C¨tBR
);

76 
	`SëWrôeH™dÀr
(0x0800, 0x1FFF, 
C¨tBW
);

77 
	`SëRódH™dÀr
(0x5000, 0x5FFF, 
SSSNROMRód
);

78 
	`SëWrôeH™dÀr
(0x5000, 0x5FFF, 
SSSNROMWrôe
);

79 
	`SëRódH™dÀr
(0x6000, 0x7FFF, 
C¨tBR
);

80 
	`SëWrôeH™dÀr
(0x6000, 0x7FFF, 
C¨tBW
);

81 
	`SëRódH™dÀr
(0x8000, 0xFFFF, 
C¨tBR
);

82 
	`FCEU_ChótAddRAM
(
WRAMSIZE
 >> 10, 0x6000, 
WRAM
);

83 
	}
}

85 
	$SSSNROMRe£t
() {

86 
ªgs
[1] =Ñegs[2] =Ñegs[3] =Ñegs[4] =Ñegs[5] =Ñegs[6] = 0;

87 
	}
}

89 
	$SSSNROMClo£
() {

90 i‡(
WRAM
)

91 
	`FCEU_g‰ì
(
WRAM
);

92 
WRAM
 = 
NULL
;

93 
	}
}

95 
	$SSSNROMIRQHook
() {

97 
	}
}

99 
	$SèãRe°‹e
(
vîsi⁄
) {

100 
	`Sync
();

101 
	}
}

103 
	$SSSNROM_Inô
(
C¨tInfo
 *
öfo
) {

104 
öfo
->
Re£t
 = 
SSSNROMRe£t
;

105 
öfo
->
Powî
 = 
SSSNROMPowî
;

106 
öfo
->
Clo£
 = 
SSSNROMClo£
;

107 
GameHBIRQHook
 = 
SSSNROMIRQHook
;

108 
GameSèãRe°‹e
 = 
SèãRe°‹e
;

110 
WRAMSIZE
 = 16384;

111 
WRAM
 = (
uöt8
*)
	`FCEU_gmÆloc
(
WRAMSIZE
);

112 
	`SëupC¨tPRGM≠pög
(0x10, 
WRAM
, 
WRAMSIZE
, 1);

113 
	`AddExSèã
(
WRAM
, 
WRAMSIZE
, 0, "WRAM");

114 
	`AddExSèã
(&
SèãRegs
, ~0, 0, 0);

115 
	}
}

	@fceux-am/src/boards/ffe.cpp

24 
	~"m≠öc.h
"

26 
uöt8
 
	g¥eg
[4], 
	g¸eg
[8], 
	gœtch
, 
	gf„mode
;

27 
uöt8
 
	gIRQa
, 
	gmúr
;

28 
öt32
 
	gIRQCou¡
, 
	gIRQL©ch
;

29 
uöt8
 *
	gWRAM
 = 
NULL
;

30 
uöt32
 
	gWRAMSIZE
;

32 
SFORMAT
 
	gSèãRegs
[] =

34 { 
¥eg
, 4, "PREG" },

35 { 
¸eg
, 8, "CREG" },

36 { &
múr
, 1, "MIRR" },

37 { &
IRQa
, 1, "IRQA" },

38 { &
IRQCou¡
, 4, "IRQC" },

39 { &
IRQL©ch
, 4, "IRQL" },

43 
	$Sync
() {

44 
	`£çrg8r
(0x10, 0x6000, 0);

45 i‡(
f„mode
) {

46 
i
;

47 
i
 = 0; i < 8; i++Ë
	`£tchr1
(ò<< 10, 
¸eg
[i]);

48 
	`£çrg8
(0x8000, 
¥eg
[0]);

49 
	`£çrg8
(0xA000, 
¥eg
[1]);

50 
	`£çrg8
(0xC000, 
¥eg
[2]);

51 
	`£çrg8
(0xE000, 
¥eg
[3]);

53 
	`£tchr8
(
œtch
 & 3);

54 
	`£çrg16
(0x8000, (
œtch
 >> 2) & 0x3F);

55 
	`£çrg16
(0xc000, 0x7);

57 
múr
) {

58 0: 
	`£tmúr‹
(
MI_0
); ;

59 1: 
	`£tmúr‹
(
MI_1
); ;

60 2: 
	`£tmúr‹
(
MI_V
); ;

61 3: 
	`£tmúr‹
(
MI_H
); ;

63 
	}
}

65 
	$DECLFW
(
FFEWrôeMúr
) {

66 
múr
 = ((
A
 << 1Ë& 2Ë| ((
V
 >> 4) & 1);

67 
	`Sync
();

68 
	}
}

70 
	$DECLFW
(
FFEWrôeIRQ
) {

71 
A
) {

72 0x4501: 
IRQa
 = 0; 
	`X6502_IRQEnd
(
FCEU_IQEXT
); ;

73 0x4502: 
IRQCou¡
 &0xFF00; IRQCou¡ |
V
; 
	`X6502_IRQEnd
(
FCEU_IQEXT
); ;

74 0x4503: 
IRQCou¡
 &0x00FF; IRQCou¡ |
V
 << 8; 
IRQa
 = 1; 
	`X6502_IRQEnd
(
FCEU_IQEXT
); ;

76 
	}
}

78 
	$DECLFW
(
FFEWrôePrg
) {

79 
¥eg
[
A
 & 3] = 
V
;

80 
	`Sync
();

81 
	}
}

83 
	$DECLFW
(
FFEWrôeChr
) {

84 
¸eg
[
A
 & 7] = 
V
;

85 
	`Sync
();

86 
	}
}

88 
	$DECLFW
(
FFEWrôeL©ch
) {

89 
œtch
 = 
V
;

90 
	`Sync
();

91 
	}
}

93 
	$FFEPowî
() {

94 
¥eg
[3] = ~0;

95 
	`Sync
();

96 
	`SëRódH™dÀr
(0x8000, 0xFFFF, 
C¨tBR
);

97 
	`SëWrôeH™dÀr
(0x42FE, 0x42FF, 
FFEWrôeMúr
);

98 
	`SëWrôeH™dÀr
(0x4500, 0x4503, 
FFEWrôeIRQ
);

99 
	`SëWrôeH™dÀr
(0x4504, 0x4507, 
FFEWrôePrg
);

100 
	`SëWrôeH™dÀr
(0x4510, 0x4517, 
FFEWrôeChr
);

101 
	`SëWrôeH™dÀr
(0x4510, 0x4517, 
FFEWrôeChr
);

102 
	`SëWrôeH™dÀr
(0x6000, 0x7FFF, 
C¨tBW
);

103 
	`SëRódH™dÀr
(0x6000, 0x7FFF, 
C¨tBR
);

104 
	`SëWrôeH™dÀr
(0x8000, 0xFFFF, 
FFEWrôeL©ch
);

105 
	`FCEU_ChótAddRAM
(
WRAMSIZE
 >> 10, 0x6000, 
WRAM
);

106 
	}
}

108 
	$FFEIRQHook
(
a
) {

109 i‡(
IRQa
) {

110 
IRQCou¡
 +
a
;

111 i‡(
IRQCou¡
 >= 0x10000) {

112 
	`X6502_IRQBegö
(
FCEU_IQEXT
);

113 
IRQa
 = 0;

114 
IRQCou¡
 = 0;

117 
	}
}

119 
	$FFEClo£
()

121 i‡(
WRAM
)

122 
	`FCEU_g‰ì
(
WRAM
);

123 
WRAM
 = 
NULL
;

124 
	}
}

126 
	$SèãRe°‹e
(
vîsi⁄
) {

127 
	`Sync
();

128 
	}
}

130 
	$M≠≥r6_Inô
(
C¨tInfo
 *
öfo
) {

131 
f„mode
 = 0;

132 
múr
 = ((
öfo
->
múr‹
 & 1) ^ 1) | 2;

134 
öfo
->
Powî
 = 
FFEPowî
;

135 
öfo
->
Clo£
 = 
FFEClo£
;

136 
M≠IRQHook
 = 
FFEIRQHook
;

137 
GameSèãRe°‹e
 = 
SèãRe°‹e
;

139 
WRAMSIZE
 = 8192;

140 
WRAM
 = (
uöt8
*)
	`FCEU_gmÆloc
(
WRAMSIZE
);

141 
	`SëupC¨tPRGM≠pög
(0x10, 
WRAM
, 
WRAMSIZE
, 1);

142 
	`AddExSèã
(
WRAM
, 
WRAMSIZE
, 0, "WRAM");

143 i‡(
öfo
->
b©ãry
) {

144 
öfo
->
SaveGame
[0] = 
WRAM
;

145 
öfo
->
SaveGameLí
[0] = 
WRAMSIZE
;

148 
	`AddExSèã
(&
SèãRegs
, ~0, 0, 0);

149 
	}
}

151 
	$M≠≥r17_Inô
(
C¨tInfo
 *
öfo
) {

152 
f„mode
 = 1;

153 
	`M≠≥r6_Inô
(
öfo
);

154 
	}
}

	@fceux-am/src/boards/fk23c.cpp

21 
	~"m≠öc.h
"

22 
	~"mmc3.h
"

23 
	~"../öes.h
"

25 
boﬁ
 
	gis_BMCFK23CA
;

26 
uöt8
 
	guƒomchr
;

27 
uöt32
 
	gdùswôch
;

28 
uöt8
 *
	gCHRRAM
=
NULL
;

29 
uöt32
 
	gCHRRAMSize
;

31 
	$BMCFK23CCW
(
uöt32
 
A
, 
uöt8
 
V
)

33 if(
EXPREGS
[0]&0x40)

34 
	`£tchr8
(
EXPREGS
[2]|
uƒomchr
);

35 if(
EXPREGS
[0]&0x20) {

36 
	`£tchr1r
(0x10, 
A
, 
V
);

38 
uöt16
 
ba£
=(
EXPREGS
[2]&0x7F)<<3;

39 if(
EXPREGS
[3]&2) {

40 
cba£
=(
MMC3_cmd
&0x80)<<5;

41 
	`£tchr1
(
A
,
V
|
ba£
);

42 
	`£tchr1
(0x0000^
cba£
,
DRegBuf
[0]|
ba£
);

43 
	`£tchr1
(0x0400^
cba£
,
EXPREGS
[6]|
ba£
);

44 
	`£tchr1
(0x0800^
cba£
,
DRegBuf
[1]|
ba£
);

45 
	`£tchr1
(0x0c00^
cba£
,
EXPREGS
[7]|
ba£
);

47 
	`£tchr1
(
A
,
V
|
ba£
);

49 
	}
}

54 
	g¥g_b⁄us
;

55 
	g¥g_mask
;

83 
	$BMCFK23CPW
(
uöt32
 
A
, 
uöt8
 
V
)

87 if((
EXPREGS
[0]&7)==4)

88 
	`£çrg32
(0x8000,
EXPREGS
[1]>>1);

89 i‡((
EXPREGS
[0]&7)==3) {

90 
	`£çrg16
(0x8000,
EXPREGS
[1]);

91 
	`£çrg16
(0xC000,
EXPREGS
[1]);

93 if(
EXPREGS
[0]&3) {

94 
uöt32
 
blocksize
 = (6)-(
EXPREGS
[0]&3);

95 
uöt32
 
mask
 = (1<<
blocksize
)-1;

96 
V
 &
mask
;

98 
V
 |(
EXPREGS
[1]<<1);

100 
	`£çrg8
(
A
,
V
);

102 
	`£çrg8
(
A
,
V
 & 
¥g_mask
);

106 if(
EXPREGS
[3]&2) {

107 
	`£çrg8
(0xC000,
EXPREGS
[4]);

108 
	`£çrg8
(0xE000,
EXPREGS
[5]);

111 
	`£çrg8r
(0x10,0x6000,
A001B
&3);

112 
	}
}

115 
	$DECLFW
(
BMCFK23CHiWrôe
)

119 if((
EXPREGS
[0]&0x60)==0x40) {

121 if(
EXPREGS
[0]&0x30)

122 
uƒomchr
=0;

124 
uƒomchr
=
V
&3;

125 
	`FixMMC3CHR
(
MMC3_cmd
);

128 if((
A
==0x8001)&&(
EXPREGS
[3]&2)&&(
MMC3_cmd
&8)) {

130 
EXPREGS
[4|(
MMC3_cmd
&3)]=
V
;

131 
	`FixMMC3PRG
(
MMC3_cmd
);

132 
	`FixMMC3CHR
(
MMC3_cmd
);

134 if(
A
<0xC000) {

135 if(
UNIFchºama
) {

137 if((
A
==0x8000)&&(
V
==0x46))

138 
V
=0x47;

139 if((
A
==0x8000)&&(
V
==0x47))

140 
V
=0x46;

143 
	`MMC3_CMDWrôe
(
A
,
V
);

144 
	`FixMMC3PRG
(
MMC3_cmd
);

146 
	`MMC3_IRQWrôe
(
A
,
V
);

150 
	}
}

153 
	$DECLFW
(
BMCFK23CWrôe
)

155 if(
A
&(1<<(
dùswôch
+4))) {

157 
EXPREGS
[
A
&3]=
V
;

175 
	`FixMMC3PRG
(
MMC3_cmd
);

176 
	`FixMMC3CHR
(
MMC3_cmd
);

180 if(
is_BMCFK23CA
) {

181 if(
EXPREGS
[3]&2)

183 
EXPREGS
[0] &= ~7;

188 
	}
}

190 
	$BMCFK23CRe£t
()

195 
dùswôch
++;

196 
dùswôch
&=7;

197 
	`¥ötf
("BMCFK23C dùswôch sëÅÿ%d\n",
dùswôch
);

199 
EXPREGS
[0]=EXPREGS[1]=EXPREGS[2]=EXPREGS[3]=0;

200 
EXPREGS
[4]=EXPREGS[5]=EXPREGS[6]=EXPREGS[7]=0xFF;

202 
	`MMC3RegRe£t
();

203 
	`FixMMC3PRG
(
MMC3_cmd
);

204 
	`FixMMC3CHR
(
MMC3_cmd
);

205 
	}
}

207 
	$BMCFK23CPowî
()

209 
	`GíMMC3Powî
();

210 
dùswôch
 = 0;

211 
EXPREGS
[0]=EXPREGS[1]=EXPREGS[2]=EXPREGS[3]=0;

212 
EXPREGS
[4]=EXPREGS[5]=EXPREGS[6]=EXPREGS[7]=0xFF;

214 
	`FixMMC3PRG
(
MMC3_cmd
);

215 
	`FixMMC3CHR
(
MMC3_cmd
);

216 
	`SëWrôeH™dÀr
(0x5000,0x5fff,
BMCFK23CWrôe
);

217 
	`SëWrôeH™dÀr
(0x8000,0xFFFF,
BMCFK23CHiWrôe
);

218 
	}
}

220 
	$BMCFK23CAPowî
()

222 
	`GíMMC3Powî
();

223 
dùswôch
 = 0;

224 
EXPREGS
[0]=EXPREGS[1]=EXPREGS[2]=EXPREGS[3]=0;

225 
EXPREGS
[4]=EXPREGS[5]=EXPREGS[6]=EXPREGS[7]=0xFF;

227 
	`FixMMC3PRG
(
MMC3_cmd
);

228 
	`FixMMC3CHR
(
MMC3_cmd
);

229 
	`SëWrôeH™dÀr
(0x5000,0x5fff,
BMCFK23CWrôe
);

230 
	`SëWrôeH™dÀr
(0x8000,0xFFFF,
BMCFK23CHiWrôe
);

231 
	}
}

233 
	$BMCFK23CAClo£
()

235 if(
CHRRAM
)

236 
	`FCEU_g‰ì
(
CHRRAM
);

237 
CHRRAM
=
NULL
;

238 
	}
}

240 
	$BMCFK23C_Inô
(
C¨tInfo
 *
öfo
)

242 
is_BMCFK23CA
 = 
Ál£
;

244 
	`GíMMC3_Inô
(
öfo
, 512, 256, 8, 0);

245 
cwøp
=
BMCFK23CCW
;

246 
pwøp
=
BMCFK23CPW
;

247 
öfo
->
Powî
=
BMCFK23CPowî
;

248 
öfo
->
Re£t
=
BMCFK23CRe£t
;

249 
	`AddExSèã
(
EXPREGS
, 8, 0, "EXPR");

250 
	`AddExSèã
(&
uƒomchr
, 1, 0, "UCHR");

251 
	`AddExSèã
(&
dùswôch
, 1, 0, "DPSW");

253 
¥g_b⁄us
 = 1;

255 
	`as£π
(0);

259 
¥g_mask
 = 0x7F>>(
¥g_b⁄us
);

260 
	}
}

262 
	$BMCFK23CA_Inô
(
C¨tInfo
 *
öfo
)

264 
is_BMCFK23CA
 = 
åue
;

266 
	`GíMMC3_Inô
(
öfo
, 512, 256, 8, 0);

267 
cwøp
=
BMCFK23CCW
;

268 
pwøp
=
BMCFK23CPW
;

269 
öfo
->
Powî
=
BMCFK23CAPowî
;

270 
öfo
->
Re£t
=
BMCFK23CRe£t
;

271 
öfo
->
Clo£
=
BMCFK23CAClo£
;

273 
CHRRAMSize
=8192;

274 
CHRRAM
=(
uöt8
*)
	`FCEU_gmÆloc
(
CHRRAMSize
);

275 
	`SëupC¨tCHRM≠pög
(0x10, 
CHRRAM
, 
CHRRAMSize
, 1);

276 
	`AddExSèã
(
CHRRAM
, 
CHRRAMSize
, 0, "CRAM");

278 
	`AddExSèã
(
EXPREGS
, 8, 0, "EXPR");

279 
	`AddExSèã
(&
uƒomchr
, 1, 0, "UCHR");

280 
	`AddExSèã
(&
dùswôch
, 1, 0, "DPSW");

282 
¥g_b⁄us
 = 1;

283 
	`as£π
(0);

286 
¥g_mask
 = 0x7F>>(
¥g_b⁄us
);

287 
	}
}

	@fceux-am/src/boards/ghostbusters63in1.cpp

22 
	~"m≠öc.h
"

24 
uöt8
 
	gªg
[2], 
	gb™k
;

25 
uöt8
 
	gb™ks
[4] = { 0, 0, 1, 2 };

26 
uöt8
 *
	gCHRROM
 = 
NULL
;

27 
uöt32
 
	gCHRROMSIZE
;

29 
SFORMAT
 
	gSèãRegs
[] =

31 { 
ªg
, 2, "REGS" },

32 { &
b™k
, 1, "BANK" },

36 
	$Sync
() {

37 i‡(
ªg
[0] & 0x20) {

38 
	`£çrg16r
(
b™ks
[
b™k
], 0x8000, 
ªg
[0] & 0x1F);

39 
	`£çrg16r
(
b™ks
[
b™k
], 0xC000, 
ªg
[0] & 0x1F);

41 
	`£çrg32r
(
b™ks
[
b™k
], 0x8000, (
ªg
[0] >> 1) & 0x0F);

42 i‡(
ªg
[1] & 2)

43 
	`£tchr8r
(0x10, 0);

45 
	`£tchr8
(0);

46 
	`£tmúr‹
((
ªg
[0] & 0x40) >> 6);

47 
	}
}

49 
	$DECLFW
(
BMCGho°bu°îs63ö1Wrôe
) {

50 
ªg
[
A
 & 1] = 
V
;

51 
b™k
 = ((
ªg
[0] & 0x80) >> 7) | ((reg[1] & 1) << 1);

53 
	`Sync
();

54 
	}
}

56 
	$DECLFR
(
BMCGho°bu°îs63ö1Ród
) {

57 i‡(
b™k
 == 1)

58  
X
.
DB
;

60  
	`C¨tBR
(
A
);

61 
	}
}

63 
	$BMCGho°bu°îs63ö1Powî
() {

64 
ªg
[0] =Ñeg[1] = 0;

65 
	`Sync
();

66 
	`SëRódH™dÀr
(0x8000, 0xFFFF, 
BMCGho°bu°îs63ö1Ród
);

67 
	`SëWrôeH™dÀr
(0x8000, 0xFFFF, 
BMCGho°bu°îs63ö1Wrôe
);

68 
	}
}

70 
	$BMCGho°bu°îs63ö1Re£t
() {

71 
ªg
[0] =Ñeg[1] = 0;

72 
	}
}

74 
	$SèãRe°‹e
(
vîsi⁄
) {

75 
	`Sync
();

76 
	}
}

78 
	$BMCGho°bu°îs63ö1Clo£
() {

79 i‡(
CHRROM
)

80 
	`FCEU_g‰ì
(
CHRROM
);

81 
CHRROM
 = 
NULL
;

82 
	}
}

84 
	$BMCGho°bu°îs63ö1_Inô
(
C¨tInfo
 *
öfo
) {

85 
öfo
->
Re£t
 = 
BMCGho°bu°îs63ö1Re£t
;

86 
öfo
->
Powî
 = 
BMCGho°bu°îs63ö1Powî
;

87 
öfo
->
Clo£
 = 
BMCGho°bu°îs63ö1Clo£
;

89 
CHRROMSIZE
 = 8192;

90 
CHRROM
 = (
uöt8
*)
	`FCEU_gmÆloc
(
CHRROMSIZE
);

91 
	`SëupC¨tPRGM≠pög
(0x10, 
CHRROM
, 
CHRROMSIZE
, 0);

92 
	`AddExSèã
(
CHRROM
, 
CHRROMSIZE
, 0, "CROM");

94 
GameSèãRe°‹e
 = 
SèãRe°‹e
;

95 
	`AddExSèã
(&
SèãRegs
, ~0, 0, 0);

96 
	}
}

	@fceux-am/src/boards/gs-2004.cpp

21 
	~"m≠öc.h
"

23 
uöt8
 
	gªg
, 
	gmúr
;

24 
SFORMAT
 
	gSèãRegs
[] =

26 { &
ªg
, 1, "REGS" },

27 { &
múr
, 1, "MIRR" },

31 
	$Sync
() {

32 
	`£çrg8r
(1, 0x6000, 0);

33 
	`£çrg32
(0x8000, 
ªg
);

34 
	`£tchr8
(0);

35 
	}
}

37 
	$DECLFW
(
BMCGS2004Wrôe
) {

38 
ªg
 = 
V
;

39 
	`Sync
();

40 
	}
}

42 
	$BMCGS2004Powî
() {

43 
ªg
 = ~0;

44 
	`Sync
();

45 
	`SëRódH™dÀr
(0x6000, 0x7FFF, 
C¨tBR
);

46 
	`SëRódH™dÀr
(0x8000, 0xFFFF, 
C¨tBR
);

47 
	`SëWrôeH™dÀr
(0x8000, 0xFFFF, 
BMCGS2004Wrôe
);

48 
	}
}

50 
	$BMCGS2004Re£t
() {

51 
ªg
 = ~0;

52 
	}
}

54 
	$SèãRe°‹e
(
vîsi⁄
) {

55 
	`Sync
();

56 
	}
}

58 
	$BMCGS2004_Inô
(
C¨tInfo
 *
öfo
) {

59 
öfo
->
Re£t
 = 
BMCGS2004Re£t
;

60 
öfo
->
Powî
 = 
BMCGS2004Powî
;

61 
GameSèãRe°‹e
 = 
SèãRe°‹e
;

62 
	`AddExSèã
(&
SèãRegs
, ~0, 0, 0);

63 
	}
}

	@fceux-am/src/boards/gs-2013.cpp

21 
	~"m≠öc.h
"

23 
uöt8
 
	gªg
, 
	gmúr
;

24 
SFORMAT
 
	gSèãRegs
[] =

26 { &
ªg
, 1, "REGS" },

27 { &
múr
, 1, "MIRR" },

31 
	$Sync
() {

32 
	`£çrg8r
(0, 0x6000, ~0);

33 
	`£çrg32r
((
ªg
 & 8) >> 3, 0x8000,Ñeg);

34 
	`£tchr8
(0);

35 
	}
}

37 
	$DECLFW
(
BMCGS2013Wrôe
) {

38 
ªg
 = 
V
;

39 
	`Sync
();

40 
	}
}

42 
	$BMCGS2013Powî
() {

43 
ªg
 = ~0;

44 
	`Sync
();

45 
	`SëRódH™dÀr
(0x6000, 0x7FFF, 
C¨tBR
);

46 
	`SëRódH™dÀr
(0x8000, 0xFFFF, 
C¨tBR
);

47 
	`SëWrôeH™dÀr
(0x8000, 0xFFFF, 
BMCGS2013Wrôe
);

48 
	}
}

50 
	$BMCGS2013Re£t
() {

51 
ªg
 = ~0;

52 
	}
}

54 
	$SèãRe°‹e
(
vîsi⁄
) {

55 
	`Sync
();

56 
	}
}

58 
	$BMCGS2013_Inô
(
C¨tInfo
 *
öfo
) {

59 
öfo
->
Re£t
 = 
BMCGS2013Re£t
;

60 
öfo
->
Powî
 = 
BMCGS2013Powî
;

61 
GameSèãRe°‹e
 = 
SèãRe°‹e
;

62 
	`AddExSèã
(&
SèãRegs
, ~0, 0, 0);

63 
	}
}

	@fceux-am/src/boards/h2288.cpp

21 
	~"m≠öc.h
"

22 
	~"mmc3.h
"

24 
uöt8
 
m114_≥rm
[8];

26 
	$H2288PW
(
uöt32
 
A
, 
uöt8
 
V
) {

27 i‡(
EXPREGS
[0] & 0x40) {

28 
uöt8
 
b™k
 = (
EXPREGS
[0] & 5) | ((EXPREGS[0] & 8) >> 2) | ((EXPREGS[0] & 0x20) >> 2);

29 i‡(
EXPREGS
[0] & 2)

30 
	`£çrg32
(0x8000, 
b™k
 >> 1);

32 
	`£çrg16
(0x8000, 
b™k
);

33 
	`£çrg16
(0xC000, 
b™k
);

36 
	`£çrg8
(
A
, 
V
 & 0x3F);

37 
	}
}

39 
	$DECLFW
(
H2288WrôeHi
) {

40 
A
 & 0x8001) {

41 0x8000: 
	`MMC3_CMDWrôe
(0x8000, (
V
 & 0xC0Ë| (
m114_≥rm
[V & 7])); ;

42 0x8001: 
	`MMC3_CMDWrôe
(0x8001, 
V
); ;

44 
	}
}

46 
	$DECLFW
(
H2288WrôeLo
) {

47 i‡(
A
 & 0x800) {

48 i‡(
A
 & 1)

49 
EXPREGS
[1] = 
V
;

51 
EXPREGS
[0] = 
V
;

52 
	`FixMMC3PRG
(
MMC3_cmd
);

54 
	}
}

56 
	$H2288Powî
() {

57 
EXPREGS
[0] = EXPREGS[1] = 0;

58 
	`GíMMC3Powî
();

60 
	`SëRódH™dÀr
(0x8000, 0xFFFF, 
C¨tBR
);

61 
	`SëWrôeH™dÀr
(0x5000, 0x5FFF, 
H2288WrôeLo
);

62 
	`SëWrôeH™dÀr
(0x8000, 0x9FFF, 
H2288WrôeHi
);

63 
	}
}

65 
	$UNLH2288_Inô
(
C¨tInfo
 *
öfo
) {

66 
	`GíMMC3_Inô
(
öfo
, 256, 256, 0, 0);

67 
pwøp
 = 
H2288PW
;

68 
öfo
->
Powî
 = 
H2288Powî
;

69 
	`AddExSèã
(
EXPREGS
, 2, 0, "EXPR");

70 
	}
}

	@fceux-am/src/boards/hp10xx_hp20xx.cpp

27 
	~"m≠öc.h
"

28 
	~"mmc3.h
"

29 
	~"../öes.h
"

31 
uöt8
 
	guƒomchr
, 
	glock
;

32 
uöt32
 
	gdùswôch
;

34 
	$BMCHPxxCW
(
uöt32
 
A
, 
uöt8
 
V
)

36 if(
EXPREGS
[0]&4) {

37 
EXPREGS
[0]&3) {

40 
	`£tchr8
(
EXPREGS
[2]&0x3F);

44 
	`£tchr8
((
EXPREGS
[2]&0x3E)|(
uƒomchr
&1));

48 
	`£tchr8
((
EXPREGS
[2]&0x3C)|(
uƒomchr
&3));

53 
ba£
, 
mask
;

54 if(
EXPREGS
[0]&1) {

55 
ba£
=
EXPREGS
[2]&0x30;

56 
mask
=0x7F;

58 
ba£
=
EXPREGS
[2]&0x20;

59 
mask
=0xFF;

62 
	`£tchr1
(
A
,(
V
&
mask
)|(
ba£
<<3));

64 
	}
}

67 
	$BMCHPxxPW
(
uöt32
 
A
, 
uöt8
 
V
)

69 if(
EXPREGS
[0]&4) {

70 if((
EXPREGS
[0]&0xF)==4) {

72 
	`£çrg16
(0x8000,
EXPREGS
[1]&0x1F);

73 
	`£çrg16
(0xC000,
EXPREGS
[1]&0x1F);

76 
	`£çrg32
(0x8000,(
EXPREGS
[1]&0x1F)>>1);

79 
ba£
, 
mask
;

80 if(
EXPREGS
[0]&2) {

81 
ba£
=
EXPREGS
[1]&0x18;

82 
mask
=0x0F;

84 
ba£
=
EXPREGS
[1]&0x10;

85 
mask
=0x1F;

88 
	`£çrg8
(
A
,(
V
&
mask
)|(
ba£
<<1));

89 
	`£çrg8r
(0x10,0x6000,
A001B
&3);

91 
	}
}

94 
	$BMCHPxxMW
(
uöt8
 
V
) {

95 if(
EXPREGS
[0]&4) {

97 
	`£tmúr‹
(((
uƒomchr
>>2)&1)^1);

100 
A000B
 = 
V
;

101 
	`£tmúr‹
((
A000B
 & 1) ^ 1);

103 
	}
}

106 
	$DECLFW
(
BMCHPxxHiWrôe
)

109 if(
EXPREGS
[0]&4) {

111 
uƒomchr
=
V
;

112 
	`FixMMC3CHR
(
MMC3_cmd
);

115 if(
A
<0xC000) {

116 
	`MMC3_CMDWrôe
(
A
,
V
);

117 
	`FixMMC3PRG
(
MMC3_cmd
);

118 
	`FixMMC3CHR
(
MMC3_cmd
);

120 
	`MMC3_IRQWrôe
(
A
,
V
);

123 
	}
}

126 
	$DECLFW
(
BMCHPxxWrôe
)

128 if(!
lock
) {

130 
EXPREGS
[
A
&3]=
V
;

131 
lock
=
V
&0x80;

132 
	`FixMMC3PRG
(
MMC3_cmd
);

133 
	`FixMMC3CHR
(
MMC3_cmd
);

135 
	}
}

137 
	$DECLFR
(
BMCHPxxRód
) {

138  
dùswôch
;

139 
	}
}

141 
	$BMCHPxxRe£t
()

143 
dùswôch
++;

144 
dùswôch
&=0xF;

145 
lock
=0;

147 
EXPREGS
[0]=EXPREGS[1]=EXPREGS[2]=EXPREGS[3]=0;

148 
	`MMC3RegRe£t
();

149 
	`FixMMC3PRG
(
MMC3_cmd
);

150 
	`FixMMC3CHR
(
MMC3_cmd
);

151 
	}
}

153 
	$BMCHPxxPowî
()

155 
	`GíMMC3Powî
();

156 
dùswôch
=
lock
=0;

157 
EXPREGS
[0]=EXPREGS[1]=EXPREGS[2]=EXPREGS[3]=0;

158 
	`FixMMC3PRG
(
MMC3_cmd
);

159 
	`FixMMC3CHR
(
MMC3_cmd
);

160 
	`SëRódH™dÀr
(0x5000,0x5fff,
BMCHPxxRód
);

161 
	`SëWrôeH™dÀr
(0x5000,0x5fff,
BMCHPxxWrôe
);

162 
	`SëWrôeH™dÀr
(0x8000,0xffff,
BMCHPxxHiWrôe
);

163 
	}
}

165 
	$BMCHPxx_Inô
(
C¨tInfo
 *
öfo
)

167 
	`GíMMC3_Inô
(
öfo
, 256, 256, 8, 0);

168 
cwøp
=
BMCHPxxCW
;

169 
pwøp
=
BMCHPxxPW
;

170 
mwøp
=
BMCHPxxMW
;

171 
öfo
->
Powî
=
BMCHPxxPowî
;

172 
öfo
->
Re£t
=
BMCHPxxRe£t
;

173 
	`AddExSèã
(
EXPREGS
, 8, 0, "EXPR");

174 
	`AddExSèã
(&
uƒomchr
, 1, 0, "UCHR");

175 
	`AddExSèã
(&
dùswôch
, 1, 0, "DPSW");

176 
	`AddExSèã
(&
lock
, 1, 0, "LOCK");

177 
	}
}

	@fceux-am/src/boards/hp898f.cpp

21 
	~"m≠öc.h
"

23 
uöt8
 
	gªgs
[2];

25 
SFORMAT
 
	gSèãRegs
[] =

27 { 
ªgs
, 2, "REGS" },

31 
	$Sync
() {

32 
uöt8
 
chr
 = (
ªgs
[0] >> 4) & 7;

33 
uöt8
 
¥g
 = (
ªgs
[1] >> 3) & 7;

34 
uöt8
 
dec
 = (
ªgs
[1] >> 4) & 4;

35 
	`£tchr8
(
chr
 & (~(((
ªgs
[0] & 1) << 2) | (regs[0] & 2))));

36 
	`£çrg16
(0x8000,
¥g
 & (~
dec
));

37 
	`£çrg16
(0xC000,
¥g
 | 
dec
);

38 
	`£tmúr‹
(
ªgs
[1] >> 7);

39 
	}
}

41 
	$DECLFW
(
HP898FWrôe
) {

42 if((
A
 & 0x6000) == 0x6000) {

43 
ªgs
[(
A
 & 4Ë>> 2] = 
V
;

44 
	`Sync
();

46 
	}
}

48 
	$HP898FPowî
() {

49 
ªgs
[0] =Ñegs[1] = 0;

50 
	`Sync
();

51 
	`SëRódH™dÀr
(0x8000, 0xFFFF, 
C¨tBR
);

52 
	`SëWrôeH™dÀr
(0x6000, 0xFFFF, 
HP898FWrôe
);

53 
	}
}

55 
	$HP898FRe£t
() {

56 
ªgs
[0] =Ñegs[1] = 0;

57 
	`Sync
();

58 
	}
}

60 
	$SèãRe°‹e
(
vîsi⁄
) {

61 
	`Sync
();

62 
	}
}

64 
	$BMCHP898F_Inô
(
C¨tInfo
 *
öfo
) {

65 
öfo
->
Re£t
 = 
HP898FRe£t
;

66 
öfo
->
Powî
 = 
HP898FPowî
;

67 
GameSèãRe°‹e
 = 
SèãRe°‹e
;

68 
	`AddExSèã
(&
SèãRegs
, ~0, 0, 0);

69 
	}
}

	@fceux-am/src/boards/inlnsf.cpp

21 
	~"m≠öc.h
"

23 
uöt8
 
	gªgs
[8];

25 
SFORMAT
 
	gSèãRegs
[] =

27 { 
ªgs
, 8, "REGS" },

31 
	$Sync
() {

32 
i
=0; i < 8; ++i)

34 
	`£çrg4
(0x8000 + (0x1000 * 
i
), 
ªgs
[i]);

36 
	}
}

38 
	$DECLFW
(
M31Wrôe
) {

39 i‡(
A
 >= 0x5000 && A <= 0x5FFF)

41 
ªgs
[
A
&7] = 
V
;

42 
	`Sync
();

44 
	}
}

46 
	$M31Powî
() {

47 
	`£tchr8
(0);

48 
ªgs
[7] = 0xFF;

49 
	`Sync
();

50 
	`SëRódH™dÀr
(0x8000, 0xffff, 
C¨tBR
);

51 
	`SëWrôeH™dÀr
(0x5000, 0x5fff, 
M31Wrôe
);

52 
	}
}

54 
	$SèãRe°‹e
(
vîsi⁄
) {

55 
	`Sync
();

56 
	}
}

58 
	$M≠≥r31_Inô
(
C¨tInfo
 *
öfo
) {

59 
öfo
->
Powî
 = 
M31Powî
;

60 
GameSèãRe°‹e
 = 
SèãRe°‹e
;

61 
	`AddExSèã
(&
SèãRegs
, ~0, 0, 0);

62 
	}
}

	@fceux-am/src/boards/karaoke.cpp

21 
	~"m≠öc.h
"

23 
uöt32
 
ROM_size
;

24 
uöt8
 
	gœtche
;

26 
	$Sync
() {

27 i‡(
œtche
) {

28 i‡(
œtche
 & 0x10)

29 
	`£çrg16
(0x8000, (
œtche
 & 7));

31 
	`£çrg16
(0x8000, (
œtche
 & 7) | 8);

33 
	`£çrg16
(0x8000, 7 + (
ROM_size
 >> 4));

34 
	}
}

36 
	$DECLFW
(
M188Wrôe
) {

37 
œtche
 = 
V
;

38 
	`Sync
();

39 
	}
}

41 
	$DECLFR
(
ExtDev
) {

43 
	}
}

45 
	$Powî
() {

46 
œtche
 = 0;

47 
	`Sync
();

48 
	`£tchr8
(0);

49 
	`£çrg16
(0xc000, 0x7);

50 
	`SëRódH™dÀr
(0x6000, 0x7FFF, 
ExtDev
);

51 
	`SëRódH™dÀr
(0x8000, 0xFFFF, 
C¨tBR
);

52 
	`SëWrôeH™dÀr
(0x8000, 0xFFFF, 
M188Wrôe
);

53 
	}
}

55 
	$SèãRe°‹e
(
vîsi⁄
) {

56 
	`Sync
();

57 
	}
}

59 
	$M≠≥r188_Inô
(
C¨tInfo
 *
öfo
) {

60 
öfo
->
Powî
 = Power;

61 
GameSèãRe°‹e
 = 
SèãRe°‹e
;

62 
	`AddExSèã
(&
œtche
, 1, 0, "LATC");

63 
	}
}

	@fceux-am/src/boards/kof97.cpp

21 
	~"m≠öc.h
"

22 
	~"mmc3.h
"

24 
	$DECLFW
(
UNLKOF97CMDWrôe
) {

25 
V
 = (V & 0xD8) | ((V & 0x20) >> 4) | ((V & 4) << 3) | ((V & 2) >> 1) | ((V & 1) << 2);

26 i‡(
A
 == 0x9000) A = 0x8001;

27 
	`MMC3_CMDWrôe
(
A
, 
V
);

28 
	}
}

30 
	$DECLFW
(
UNLKOF97IRQWrôe
) {

31 
V
 = (V & 0xD8) | ((V & 0x20) >> 4) | ((V & 4) << 3) | ((V & 2) >> 1) | ((V & 1) << 2);

32 i‡(
A
 == 0xD000) A = 0xC001;

33 i‡(
A
 == 0xF000) A = 0xE001;

34 
	`MMC3_IRQWrôe
(
A
, 
V
);

35 
	}
}

37 
	$UNLKOF97Powî
() {

38 
	`GíMMC3Powî
();

39 
	`SëWrôeH™dÀr
(0x8000, 0xA000, 
UNLKOF97CMDWrôe
);

40 
	`SëWrôeH™dÀr
(0xC000, 0xF000, 
UNLKOF97IRQWrôe
);

41 
	}
}

43 
	$UNLKOF97_Inô
(
C¨tInfo
 *
öfo
) {

44 
	`GíMMC3_Inô
(
öfo
, 128, 256, 0, 0);

45 
öfo
->
Powî
 = 
UNLKOF97Powî
;

46 
	}
}

	@fceux-am/src/boards/ks7010.cpp

21 
	~"m≠öc.h
"

23 
uöt8
 
	g¥eg
[4], 
	g¸eg
, 
	gmúr
;

25 
SFORMAT
 
	gSèãRegs
[] =

27 { 
¥eg
, 4, "PREG" },

28 { &
¸eg
, 1, "CREG" },

29 { &
múr
, 1, "MIRR" },

33 
	$Sync
() {

34 
	`£çrg8
(0x6000, 
¥eg
[0]);

35 
	`£çrg8
(0x8000, 0xa);

36 
	`£çrg8
(0xa000, 0xb);

37 
	`£çrg8
(0xc000, 0x6);

38 
	`£çrg8
(0xe000, 0x7);

39 
	`£tchr8
(0x0c);

40 
	`£tmúr‹
(
múr
);

41 
	}
}

43 
	$DECLFW
(
UNLKS7010Wrôe
) {

44 
A
) {

45 0x4025: 
múr
 = (((
V
 >> 3Ë& 1Ë^ 1); 
	`Sync
(); ;

47 
	`FCEU_¥ötf
("b†%04x %02x\n",
A
,
V
);

50 
	}
}

52 
	$UNLKS7010Re£t
() {

53 
¥eg
[0]++;

54 if(
¥eg
[0] == 0x10) {

55 
¥eg
[0] = 0;

56 
¥eg
[1]++;

57 if(
¥eg
[1] == 0x10) {

58 
¥eg
[1] = 0;

59 
¥eg
[2]++;

62 
	`FCEU_¥ötf
("¥eg %02x %02x %02x\n",
¥eg
[0],Öreg[1],Öreg[2]);

63 
	`Sync
();

64 
	}
}

66 
	$UNLKS7010Powî
() {

67 
¥eg
[0] =Öreg[1] =Öreg[2] = 0;

68 
	`Sync
();

69 
	`SëRódH™dÀr
(0x6000, 0x7fff, 
C¨tBR
);

70 
	`SëWrôeH™dÀr
(0x6000, 0x7fff, 
C¨tBW
);

71 
	`SëRódH™dÀr
(0x8000, 0xffff, 
C¨tBR
);

72 
	`SëWrôeH™dÀr
(0x4020, 0xffff, 
UNLKS7010Wrôe
);

73 
	}
}

75 
	$SèãRe°‹e
(
vîsi⁄
) {

76 
	`Sync
();

77 
	}
}

79 
	$UNLKS7010_Inô
(
C¨tInfo
 *
öfo
) {

80 
öfo
->
Powî
 = 
UNLKS7010Powî
;

81 
öfo
->
Re£t
 = 
UNLKS7010Re£t
;

83 
GameSèãRe°‹e
 = 
SèãRe°‹e
;

84 
	`AddExSèã
(&
SèãRegs
, ~0, 0, 0);

85 
	}
}

	@fceux-am/src/boards/ks7012.cpp

21 
	~"m≠öc.h
"

23 
uöt8
 
	gªg
;

24 
uöt8
 *
	gWRAM
 = 
NULL
;

25 
uöt32
 
	gWRAMSIZE
;

27 
SFORMAT
 
	gSèãRegs
[] =

29 { &
ªg
, 1, "REGS" },

33 
	$Sync
() {

34 
	`£çrg8r
(0x10, 0x6000, 0);

35 
	`£çrg32
(0x8000, 
ªg
 & 1);

36 
	`£tchr8
(0);

37 
	}
}

39 
	$DECLFW
(
UNLKS7012Wrôe
) {

41 
A
) {

42 0xE0A0: 
ªg
 = 0; 
	`Sync
(); ;

43 0xEE36: 
ªg
 = 1; 
	`Sync
(); ;

45 
	}
}

47 
	$UNLKS7012Powî
() {

48 
ªg
 = ~0;

49 
	`Sync
();

50 
	`SëRódH™dÀr
(0x6000, 0x7FFF, 
C¨tBR
);

51 
	`SëWrôeH™dÀr
(0x6000, 0x7FFF, 
C¨tBW
);

52 
	`SëRódH™dÀr
(0x8000, 0xFFFF, 
C¨tBR
);

53 
	`SëWrôeH™dÀr
(0x8000, 0xFFFF, 
UNLKS7012Wrôe
);

54 
	`FCEU_ChótAddRAM
(
WRAMSIZE
 >> 10, 0x6000, 
WRAM
);

55 
	}
}

57 
	$UNLKS7012Re£t
() {

58 
ªg
 = ~0;

59 
	`Sync
();

60 
	}
}

62 
	$SèãRe°‹e
(
vîsi⁄
) {

63 
	`Sync
();

64 
	}
}

66 
	$UNLKS7012Clo£
() {

67 i‡(
WRAM
)

68 
	`FCEU_g‰ì
(
WRAM
);

69 
WRAM
 = 
NULL
;

70 
	}
}

72 
	$UNLKS7012_Inô
(
C¨tInfo
 *
öfo
) {

73 
öfo
->
Powî
 = 
UNLKS7012Powî
;

74 
öfo
->
Re£t
 = 
UNLKS7012Re£t
;

75 
öfo
->
Clo£
 = 
UNLKS7012Clo£
;

77 
WRAMSIZE
 = 8192;

78 
WRAM
 = (
uöt8
*)
	`FCEU_gmÆloc
(
WRAMSIZE
);

79 
	`SëupC¨tPRGM≠pög
(0x10, 
WRAM
, 
WRAMSIZE
, 1);

80 
	`AddExSèã
(
WRAM
, 
WRAMSIZE
, 0, "WRAM");

82 
GameSèãRe°‹e
 = 
SèãRe°‹e
;

83 
	`AddExSèã
(&
SèãRegs
, ~0, 0, 0);

84 
	}
}

	@fceux-am/src/boards/ks7013.cpp

25 
	~"m≠öc.h
"

27 
uöt8
 
	gªg
, 
	gmúr
;

29 
SFORMAT
 
	gSèãRegs
[] =

31 { &
ªg
, 1, "REGS" },

32 { &
múr
, 1, "MIRR" },

36 
	$Sync
() {

37 
	`£çrg16
(0x8000, 
ªg
);

38 
	`£çrg16
(0xc000, ~0);

39 
	`£tmúr‹
(
múr
);

40 
	`£tchr8
(0);

41 
	}
}

43 
	$DECLFW
(
UNLKS7013BLoWrôe
) {

44 
ªg
 = 
V
;

45 
	`Sync
();

46 
	}
}

48 
	$DECLFW
(
UNLKS7013BHiWrôe
) {

49 
múr
 = (
V
 & 1) ^ 1;

50 
	`Sync
();

51 
	}
}

53 
	$UNLKS7013BPowî
() {

54 
ªg
 = 0;

55 
múr
 = 0;

56 
	`Sync
();

57 
	`SëWrôeH™dÀr
(0x6000, 0x7FFF, 
UNLKS7013BLoWrôe
);

58 
	`SëRódH™dÀr
(0x8000, 0xFFFF, 
C¨tBR
);

59 
	`SëWrôeH™dÀr
(0x8000, 0xFFFF, 
UNLKS7013BHiWrôe
);

60 
	}
}

62 
	$UNLKS7013BRe£t
() {

63 
ªg
 = 0;

64 
	`Sync
();

65 
	}
}

67 
	$SèãRe°‹e
(
vîsi⁄
) {

68 
	`Sync
();

69 
	}
}

71 
	$UNLKS7013B_Inô
(
C¨tInfo
 *
öfo
) {

72 
öfo
->
Powî
 = 
UNLKS7013BPowî
;

73 
öfo
->
Re£t
 = 
UNLKS7013BRe£t
;

75 
GameSèãRe°‹e
 = 
SèãRe°‹e
;

76 
	`AddExSèã
(&
SèãRegs
, ~0, 0, 0);

77 
	}
}

	@fceux-am/src/boards/ks7016.cpp

27 
	~"m≠öc.h
"

29 
uöt8
 
	g¥eg
;

31 
SFORMAT
 
	gSèãRegs
[] =

33 { &
¥eg
, 1, "PREG" },

37 
	$Sync
() {

38 
	`£çrg8
(0x6000, 
¥eg
);

39 
	`£çrg8
(0x8000, 0xC);

40 
	`£çrg8
(0xA000, 0xD);

41 
	`£çrg8
(0xC000, 0xE);

42 
	`£çrg8
(0xE000, 0xF);

43 
	`£tchr8
(0);

44 
	}
}

46 
	$DECLFW
(
UNLKS7016Wrôe
) {

47 
u16
 
mask
 = (
A
 & 0x30);

48 
A
 & 0xD943) {

50 if(
mask
 == 0x30) {

51 
¥eg
 = 8 | 3;

53 
¥eg
 = (
A
 >> 2) & 0xF;

55 
	`Sync
();

59 if(
mask
 == 0x30) {

60 
¥eg
 = 8 | ((
A
 >> 2) & 3);

62 
¥eg
 = 8 | 3;

64 
	`Sync
();

68 
	}
}

70 
	$UNLKS7016Powî
() {

71 
¥eg
 = 8;

72 
	`Sync
();

73 
	`SëRódH™dÀr
(0x6000, 0xffff, 
C¨tBR
);

74 
	`SëWrôeH™dÀr
(0x8000, 0xffff, 
UNLKS7016Wrôe
);

75 
	}
}

77 
	$SèãRe°‹e
(
vîsi⁄
) {

78 
	`Sync
();

79 
	}
}

81 
	$UNLKS7016_Inô
(
C¨tInfo
 *
öfo
) {

82 
öfo
->
Powî
 = 
UNLKS7016Powî
;

83 
GameSèãRe°‹e
 = 
SèãRe°‹e
;

84 
	`AddExSèã
(&
SèãRegs
, ~0, 0, 0);

85 
	}
}

	@fceux-am/src/boards/ks7017.cpp

24 
	~"m≠öc.h
"

26 
uöt8
 
	gªg
, 
	gmúr
;

27 
öt32
 
	gIRQa
, 
	gIRQCou¡
, 
	gIRQL©ch
;

28 
uöt8
 *
	gWRAM
 = 
NULL
;

29 
uöt32
 
	gWRAMSIZE
;

31 
SFORMAT
 
	gSèãRegs
[] =

33 { &
múr
, 1, "MIRR" },

34 { &
ªg
, 1, "REGS" },

35 { &
IRQa
, 4, "IRQA" },

36 { &
IRQCou¡
, 4, "IRQC" },

37 { &
IRQL©ch
, 4, "IRQL" },

41 
	$Sync
() {

42 
	`£çrg16
(0x8000, 
ªg
);

43 
	`£çrg16
(0xC000, 2);

44 
	`£tmúr‹
(
múr
);

45 
	}
}

47 
	$DECLFW
(
UNLKS7017Wrôe
) {

49 i‡((
A
 & 0xFF00) == 0x4A00) {

50 
ªg
 = ((
A
 >> 2) & 3) | ((A >> 4) & 4);

51 } i‡((
A
 & 0xFF00) == 0x5100) {

52 
	`Sync
();

53 } i‡(
A
 == 0x4020) {

54 
	`X6502_IRQEnd
(
FCEU_IQEXT
);

55 
IRQCou¡
 &= 0xFF00;

56 
IRQCou¡
 |
V
;

57 } i‡(
A
 == 0x4021) {

58 
	`X6502_IRQEnd
(
FCEU_IQEXT
);

59 
IRQCou¡
 &= 0xFF;

60 
IRQCou¡
 |
V
 << 8;

61 
IRQa
 = 1;

62 } i‡(
A
 == 0x4025) {

63 
múr
 = ((
V
 & 8) >> 3) ^ 1;

65 
	}
}

66 
	$DECLFR
(
FDSRód4030
) {

67 
	`X6502_IRQEnd
(
FCEU_IQEXT
);

68  
X
.
IRQlow
 & 
FCEU_IQEXT
 ? 1 : 0;

69 
	}
}

71 
	$UNL7017IRQ
(
a
) {

72 i‡(
IRQa
) {

73 
IRQCou¡
 -
a
;

74 i‡(
IRQCou¡
 <= 0) {

75 
IRQa
 = 0;

76 
	`X6502_IRQBegö
(
FCEU_IQEXT
);

79 
	}
}

81 
	$UNLKS7017Powî
() {

82 
	`Sync
();

83 
	`£tchr8
(0);

84 
	`£çrg8r
(0x10, 0x6000, 0);

85 
	`SëRódH™dÀr
(0x6000, 0x7FFF, 
C¨tBR
);

86 
	`SëWrôeH™dÀr
(0x6000, 0x7FFF, 
C¨tBW
);

87 
	`SëRódH™dÀr
(0x8000, 0xFFFF, 
C¨tBR
);

88 
	`SëRódH™dÀr
(0x4030, 0x4030, 
FDSRód4030
);

89 
	`SëWrôeH™dÀr
(0x4020, 0x5FFF, 
UNLKS7017Wrôe
);

90 
	`FCEU_ChótAddRAM
(
WRAMSIZE
 >> 10, 0x6000, 
WRAM
);

91 
	}
}

93 
	$UNLKS7017Clo£
() {

94 i‡(
WRAM
)

95 
	`FCEU_g‰ì
(
WRAM
);

96 
WRAM
 = 
NULL
;

97 
	}
}

99 
	$SèãRe°‹e
(
vîsi⁄
) {

100 
	`Sync
();

101 
	}
}

103 
	$UNLKS7017_Inô
(
C¨tInfo
 *
öfo
) {

104 
öfo
->
Powî
 = 
UNLKS7017Powî
;

105 
öfo
->
Clo£
 = 
UNLKS7017Clo£
;

106 
M≠IRQHook
 = 
UNL7017IRQ
;

108 
WRAMSIZE
 = 8192;

109 
WRAM
 = (
uöt8
*)
	`FCEU_gmÆloc
(
WRAMSIZE
);

110 
	`SëupC¨tPRGM≠pög
(0x10, 
WRAM
, 
WRAMSIZE
, 1);

111 
	`AddExSèã
(
WRAM
, 
WRAMSIZE
, 0, "WRAM");

113 
GameSèãRe°‹e
 = 
SèãRe°‹e
;

114 
	`AddExSèã
(&
SèãRegs
, ~0, 0, 0);

115 
	}
}

	@fceux-am/src/boards/ks7030.cpp

28 
	~"m≠öc.h
"

30 
uöt8
 
	gªg0
, 
	gªg1
;

31 
uöt8
 *
	gWRAM
 = 
NULL
;

32 
uöt32
 
	gWRAMSIZE
;

34 
SFORMAT
 
	gSèãRegs
[] =

36 { &
ªg0
, 1, "REG0" },

37 { &
ªg1
, 1, "REG1" },

41 
	$Sync
() {

42 
	`£tchr8
(0);

43 
	`£çrg32
(0x8000, ~0);

44 
	`£çrg4
(0xb800, 
ªg0
);

45 
	`£çrg4
(0xc800, 8 + 
ªg1
);

46 
	}
}

52 
	$DECLFW
(
UNLKS7030RamWrôe0
) {

53 i‡((
A
 >= 0x6000) && A <= 0x6BFF) {

54 
WRAM
[
A
 - 0x6000] = 
V
;

55 } i‡((
A
 >= 0x6C00) && A <= 0x6FFF) {

56 
	`C¨tBW
(0xC800 + (
A
 - 0x6C00), 
V
);

57 } i‡((
A
 >= 0x7000) && A <= 0x7FFF) {

58 
	`C¨tBW
(0xB800 + (
A
 - 0x7000), 
V
);

60 
	}
}

62 
	$DECLFR
(
UNLKS7030RamRód0
) {

63 i‡((
A
 >= 0x6000) && A <= 0x6BFF) {

64  
WRAM
[
A
 - 0x6000];

65 } i‡((
A
 >= 0x6C00) && A <= 0x6FFF) {

66  
	`C¨tBR
(0xC800 + (
A
 - 0x6C00));

67 } i‡((
A
 >= 0x7000) && A <= 0x7FFF) {

68  
	`C¨tBR
(0xB800 + (
A
 - 0x7000));

71 
	}
}

77 
	$DECLFW
(
UNLKS7030RamWrôe1
) {

78 i‡((
A
 >= 0xB800) && A <= 0xBFFF) {

79 
WRAM
[0x0C00 + (
A
 - 0xB800)] = 
V
;

80 } i‡((
A
 >= 0xC000) && A <= 0xCBFF) {

81 
	`C¨tBW
(0xCC00 + (
A
 - 0xC000), 
V
);

82 } i‡((
A
 >= 0xCC00) && A <= 0xD7FF) {

83 
WRAM
[0x1400 + (
A
 - 0xCC00)] = 
V
;

85 
	}
}

87 
	$DECLFR
(
UNLKS7030RamRód1
) {

88 i‡((
A
 >= 0xB800) && A <= 0xBFFF) {

89  
WRAM
[0x0C00 + (
A
 - 0xB800)];

90 } i‡((
A
 >= 0xC000) && A <= 0xCBFF) {

91  
	`C¨tBR
(0xCC00 + (
A
 - 0xC000));

92 } i‡((
A
 >= 0xCC00) && A <= 0xD7FF) {

93  
WRAM
[0x1400 + (
A
 - 0xCC00)];

96 
	}
}

98 
	$DECLFW
(
UNLKS7030Wrôe0
) {

99 
ªg0
 = 
A
 & 7;

100 
	`Sync
();

101 
	}
}

103 
	$DECLFW
(
UNLKS7030Wrôe1
) {

104 
ªg1
 = 
A
 & 15;

105 
	`Sync
();

106 
	}
}

108 
	$UNLKS7030Powî
() {

109 
ªg0
 = 
ªg1
 = ~0;

110 
	`Sync
();

111 
	`SëRódH™dÀr
(0x6000, 0x7FFF, 
UNLKS7030RamRód0
);

112 
	`SëWrôeH™dÀr
(0x6000, 0x7FFF, 
UNLKS7030RamWrôe0
);

113 
	`SëRódH™dÀr
(0x8000, 0xFFFF, 
C¨tBR
);

114 
	`SëWrôeH™dÀr
(0x8000, 0x8FFF, 
UNLKS7030Wrôe0
);

115 
	`SëWrôeH™dÀr
(0x9000, 0x9FFF, 
UNLKS7030Wrôe1
);

116 
	`SëRódH™dÀr
(0xB800, 0xD7FF, 
UNLKS7030RamRód1
);

117 
	`SëWrôeH™dÀr
(0xB800, 0xD7FF, 
UNLKS7030RamWrôe1
);

118 
	}
}

120 
	$UNLKS7030Clo£
() {

121 i‡(
WRAM
)

122 
	`FCEU_g‰ì
(
WRAM
);

123 
WRAM
 = 
NULL
;

124 
	}
}

126 
	$SèãRe°‹e
(
vîsi⁄
) {

127 
	`Sync
();

128 
	}
}

130 
	$UNLKS7030_Inô
(
C¨tInfo
 *
öfo
) {

131 
öfo
->
Powî
 = 
UNLKS7030Powî
;

132 
öfo
->
Clo£
 = 
UNLKS7030Clo£
;

133 
GameSèãRe°‹e
 = 
SèãRe°‹e
;

135 
WRAMSIZE
 = 8192;

136 
WRAM
 = (
uöt8
*)
	`FCEU_gmÆloc
(
WRAMSIZE
);

137 
	`AddExSèã
(
WRAM
, 
WRAMSIZE
, 0, "WRAM");

139 
	`AddExSèã
(&
SèãRegs
, ~0, 0, 0);

140 
	}
}

	@fceux-am/src/boards/ks7031.cpp

24 
	~"m≠öc.h
"

26 
uöt8
 
	gªg
[4];

28 
SFORMAT
 
	gSèãRegs
[] =

30 { 
ªg
, 4, "REGS" },

34 
	$Sync
() {

35 
	`£çrg2
(0x6000, 
ªg
[0]);

36 
	`£çrg2
(0x6800, 
ªg
[1]);

37 
	`£çrg2
(0x7000, 
ªg
[2]);

38 
	`£çrg2
(0x7800, 
ªg
[3]);

40 
	`£çrg2
(0x8000, 15);

41 
	`£çrg2
(0x8800, 14);

42 
	`£çrg2
(0x9000, 13);

43 
	`£çrg2
(0x9800, 12);

44 
	`£çrg2
(0xa000, 11);

45 
	`£çrg2
(0xa800, 10);

46 
	`£çrg2
(0xb000, 9);

47 
	`£çrg2
(0xb800, 8);

49 
	`£çrg2
(0xc000, 7);

50 
	`£çrg2
(0xc800, 6);

51 
	`£çrg2
(0xd000, 5);

52 
	`£çrg2
(0xd800, 4);

53 
	`£çrg2
(0xe000, 3);

54 
	`£çrg2
(0xe800, 2);

55 
	`£çrg2
(0xf000, 1);

56 
	`£çrg2
(0xf800, 0);

58 
	`£tchr8
(0);

59 
	}
}

61 
	$DECLFW
(
UNLKS7031Wrôe
) {

62 
ªg
[(
A
 >> 11Ë& 3] = 
V
;

63 
	`Sync
();

64 
	}
}

66 
	$UNLKS7031Powî
() {

67 
	`Sync
();

68 
	`SëRódH™dÀr
(0x6000, 0xFFFF, 
C¨tBR
);

69 
	`SëWrôeH™dÀr
(0x8000, 0xffff, 
UNLKS7031Wrôe
);

70 
	}
}

72 
	$SèãRe°‹e
(
vîsi⁄
) {

73 
	`Sync
();

74 
	}
}

76 
	$UNLKS7031_Inô
(
C¨tInfo
 *
öfo
) {

77 
öfo
->
Powî
 = 
UNLKS7031Powî
;

78 
GameSèãRe°‹e
 = 
SèãRe°‹e
;

79 
	`AddExSèã
(&
SèãRegs
, ~0, 0, 0);

80 
	}
}

	@fceux-am/src/boards/ks7032.cpp

21 
	~"m≠öc.h
"

23 
uöt8
 
	gªg
[8], 
	gcmd
, 
	gIRQa
 = 0, 
	gisúqu£d
 = 0;

24 
öt32
 
	gIRQCou¡
;

26 
SFORMAT
 
	gSèãRegs
[] =

28 { &
cmd
, 1, "CMD" },

29 { 
ªg
, 8, "REGS" },

30 { &
IRQa
, 1, "IRQA" },

31 { &
IRQCou¡
, 4, "IRQC" },

35 
	$Sync
() {

36 
	`£çrg8
(0x6000, 
ªg
[4]);

37 
	`£çrg8
(0x8000, 
ªg
[1]);

38 
	`£çrg8
(0xA000, 
ªg
[2]);

39 
	`£çrg8
(0xC000, 
ªg
[3]);

40 
	`£çrg8
(0xE000, ~0);

41 
	`£tchr8
(0);

42 
	}
}

44 
	$DECLFW
(
UNLKS7032Wrôe
) {

46 
A
 & 0xF000) {

48 0x8000: 
	`X6502_IRQEnd
(
FCEU_IQEXT
); 
IRQCou¡
 = (IRQCou¡ & 0x000FË| (
V
 & 0x0F); 
isúqu£d
 = 1; ;

49 0x9000: 
	`X6502_IRQEnd
(
FCEU_IQEXT
); 
IRQCou¡
 = (IRQCou¡ & 0x00F0Ë| ((
V
 & 0x0FË<< 4); 
isúqu£d
 = 1; ;

50 0xA000: 
	`X6502_IRQEnd
(
FCEU_IQEXT
); 
IRQCou¡
 = (IRQCou¡ & 0x0F00Ë| ((
V
 & 0x0FË<< 8); 
isúqu£d
 = 1; ;

51 0xB000: 
	`X6502_IRQEnd
(
FCEU_IQEXT
); 
IRQCou¡
 = (IRQCou¡ & 0xF000Ë| (
V
 << 12); 
isúqu£d
 = 1; ;

52 0xC000: i‡(
isúqu£d
) {

53 
	`X6502_IRQEnd
(
FCEU_IQEXT
); 
IRQa
 = 1;

56 0xE000: 
cmd
 = 
V
 & 7; ;

57 0xF000: 
ªg
[
cmd
] = 
V
; 
	`Sync
(); ;

59 
	}
}

61 
	$UNLSMB2JIRQHook
(
a
) {

62 i‡(
IRQa
) {

63 
IRQCou¡
 +
a
;

64 i‡(
IRQCou¡
 >= 0xFFFF) {

65 
IRQa
 = 0;

66 
IRQCou¡
 = 0;

67 
	`X6502_IRQBegö
(
FCEU_IQEXT
);

70 
	}
}

72 
	$UNLKS7032Powî
() {

73 
	`Sync
();

74 
	`SëRódH™dÀr
(0x6000, 0x7FFF, 
C¨tBR
);

75 
	`SëRódH™dÀr
(0x8000, 0xFFFF, 
C¨tBR
);

76 
	`SëWrôeH™dÀr
(0x4020, 0xFFFF, 
UNLKS7032Wrôe
);

77 
	}
}

79 
	$SèãRe°‹e
(
vîsi⁄
) {

80 
	`Sync
();

81 
	}
}

83 
	$UNLKS7032_Inô
(
C¨tInfo
 *
öfo
) {

84 
öfo
->
Powî
 = 
UNLKS7032Powî
;

85 
M≠IRQHook
 = 
UNLSMB2JIRQHook
;

86 
GameSèãRe°‹e
 = 
SèãRe°‹e
;

87 
	`AddExSèã
(&
SèãRegs
, ~0, 0, 0);

88 
	}
}

	@fceux-am/src/boards/ks7037.cpp

24 
	~"m≠öc.h
"

26 
uöt8
 
	gªg
[8], 
	gcmd
;

27 
uöt8
 *
	gWRAM
 = 
NULL
;

28 
uöt32
 
	gWRAMSIZE
;

30 (*
WSync
)();

32 
SFORMAT
 
SèãRegs
[] =

34 { &
cmd
, 1, "CMD" },

35 { 
ªg
, 8, "REGS" },

37 
	}
};

39 
	$SyncKS7037
() {

40 
	`£çrg4r
(0x10, 0x6000, 0);

41 
	`£çrg4
(0x7000, 15);

42 
	`£çrg8
(0x8000, 
ªg
[6]);

43 
	`£çrg4
(0xA000, ~3);

44 
	`£çrg4r
(0x10, 0xB000, 1);

45 
	`£çrg8
(0xC000, 
ªg
[7]);

46 
	`£çrg8
(0xE000, ~0);

47 
	`£tchr8
(0);

48 
	`£tmúr‹w
(
ªg
[2] & 1,Ñeg[4] & 1,Ñeg[3] & 1,Ñeg[5] & 1);

49 
	}
}

51 
	$SyncLH10
() {

52 
	`£çrg8
(0x6000, ~1);

53 
	`£çrg8
(0x8000, 
ªg
[6]);

54 
	`£çrg8
(0xA000, 
ªg
[7]);

55 
	`£çrg8r
(0x10, 0xC000, 0);

56 
	`£çrg8
(0xE000, ~0);

57 
	`£tchr8
(0);

58 
	`£tmúr‹
(0);

59 
	}
}

61 
	$DECLFW
(
UNLKS7037Wrôe
) {

62 
A
 & 0xE001) {

63 0x8000: 
cmd
 = 
V
 & 7; ;

64 0x8001: 
ªg
[
cmd
] = 
V
; 
	`WSync
(); ;

66 
	}
}

68 
	$UNLKS7037Powî
() {

69 
ªg
[0] =Ñeg[1] =Ñeg[2] =Ñeg[3] =Ñeg[4] =Ñeg[5] =Ñeg[6] =Ñeg[7] = 0;

70 
	`WSync
();

71 
	`SëRódH™dÀr
(0x6000, 0xFFFF, 
C¨tBR
);

72 
	`SëWrôeH™dÀr
(0x6000, 0x7FFF, 
C¨tBW
);

73 
	`SëWrôeH™dÀr
(0x8000, 0x9FFF, 
UNLKS7037Wrôe
);

74 
	`SëWrôeH™dÀr
(0xA000, 0xBFFF, 
C¨tBW
);

75 
	`SëWrôeH™dÀr
(0xC000, 0xFFFF, 
UNLKS7037Wrôe
);

76 
	}
}

78 
	$LH10Powî
() {

79 
ªg
[0] =Ñeg[1] =Ñeg[2] =Ñeg[3] =Ñeg[4] =Ñeg[5] =Ñeg[6] =Ñeg[7] = 0;

80 
	`WSync
();

81 
	`SëRódH™dÀr
(0x6000, 0xFFFF, 
C¨tBR
);

82 
	`SëWrôeH™dÀr
(0x8000, 0xBFFF, 
UNLKS7037Wrôe
);

83 
	`SëWrôeH™dÀr
(0xC000, 0xDFFF, 
C¨tBW
);

84 
	`SëWrôeH™dÀr
(0xE000, 0xFFFF, 
UNLKS7037Wrôe
);

85 
	`FCEU_ChótAddRAM
(
WRAMSIZE
 >> 10, 0x6000, 
WRAM
);

86 
	}
}

88 
	$Clo£
() {

89 i‡(
WRAM
)

90 
	`FCEU_g‰ì
(
WRAM
);

91 
WRAM
 = 
NULL
;

92 
	}
}

94 
	$SèãRe°‹e
(
vîsi⁄
) {

95 
	`WSync
();

96 
	}
}

98 
	$UNLKS7037_Inô
(
C¨tInfo
 *
öfo
) {

99 
öfo
->
Powî
 = 
UNLKS7037Powî
;

100 
öfo
->
Clo£
 = Close;

102 
WSync
 = 
SyncKS7037
;

104 
WRAMSIZE
 = 8192;

105 
WRAM
 = (
uöt8
*)
	`FCEU_gmÆloc
(
WRAMSIZE
);

106 
	`SëupC¨tPRGM≠pög
(0x10, 
WRAM
, 
WRAMSIZE
, 1);

107 
	`AddExSèã
(
WRAM
, 
WRAMSIZE
, 0, "WRAM");

109 
GameSèãRe°‹e
 = 
SèãRe°‹e
;

110 
	`AddExSèã
(&
SèãRegs
, ~0, 0, 0);

111 
	}
}

113 
	$LH10_Inô
(
C¨tInfo
 *
öfo
) {

114 
öfo
->
Powî
 = 
LH10Powî
;

115 
öfo
->
Clo£
 = Close;

117 
WSync
 = 
SyncLH10
;

119 
WRAMSIZE
 = 8192;

120 
WRAM
 = (
uöt8
*)
	`FCEU_gmÆloc
(
WRAMSIZE
);

121 
	`SëupC¨tPRGM≠pög
(0x10, 
WRAM
, 
WRAMSIZE
, 1);

122 
	`AddExSèã
(
WRAM
, 
WRAMSIZE
, 0, "WRAM");

124 
GameSèãRe°‹e
 = 
SèãRe°‹e
;

125 
	`AddExSèã
(&
SèãRegs
, ~0, 0, 0);

126 
	}
}

	@fceux-am/src/boards/ks7057.cpp

24 
	~"m≠öc.h
"

26 
uöt8
 
	gªg
[8], 
	gmúr‹
;

27 
SFORMAT
 
	gSèãRegs
[] =

29 { 
ªg
, 8, "PRG" },

30 { &
múr‹
, 1, "MIRR" },

34 
	$Sync
() {

35 
	`£çrg2
(0x6000, 
ªg
[4]);

36 
	`£çrg2
(0x6800, 
ªg
[5]);

37 
	`£çrg2
(0x7000, 
ªg
[6]);

38 
	`£çrg2
(0x7800, 
ªg
[7]);

39 
	`£çrg2
(0x8000, 
ªg
[0]);

40 
	`£çrg2
(0x8800, 
ªg
[1]);

41 
	`£çrg2
(0x9000, 
ªg
[2]);

42 
	`£çrg2
(0x9800, 
ªg
[3]);

43 
	`£çrg8
(0xA000, 0xd);

44 
	`£çrg16
(0xC000, 7);

45 
	`£tchr8
(0);

46 
	`£tmúr‹
(
múr‹
);

47 
	}
}

49 
	$DECLFW
(
UNLKS7057Wrôe
) {

50 
A
 & 0xF003) {

58 0x9003: 
múr‹
 = 
V
 & 1; 
	`Sync
(); ;

59 0xB000: 
ªg
[0] = (ªg[0] & 0xF0Ë| (
V
 & 0x0F); 
	`Sync
(); ;

60 0xB001: 
ªg
[0] = (ªg[0] & 0x0FË| (
V
 << 4); 
	`Sync
(); ;

61 0xB002: 
ªg
[1] = (ªg[1] & 0xF0Ë| (
V
 & 0x0F); 
	`Sync
(); ;

62 0xB003: 
ªg
[1] = (ªg[1] & 0x0FË| (
V
 << 4); 
	`Sync
(); ;

63 0xC000: 
ªg
[2] = (ªg[2] & 0xF0Ë| (
V
 & 0x0F); 
	`Sync
(); ;

64 0xC001: 
ªg
[2] = (ªg[2] & 0x0FË| (
V
 << 4); 
	`Sync
(); ;

65 0xC002: 
ªg
[3] = (ªg[3] & 0xF0Ë| (
V
 & 0x0F); 
	`Sync
(); ;

66 0xC003: 
ªg
[3] = (ªg[3] & 0x0FË| (
V
 << 4); 
	`Sync
(); ;

67 0xD000: 
ªg
[4] = (ªg[4] & 0xF0Ë| (
V
 & 0x0F); 
	`Sync
(); ;

68 0xD001: 
ªg
[4] = (ªg[4] & 0x0FË| (
V
 << 4); 
	`Sync
(); ;

69 0xD002: 
ªg
[5] = (ªg[5] & 0xF0Ë| (
V
 & 0x0F); 
	`Sync
(); ;

70 0xD003: 
ªg
[5] = (ªg[5] & 0x0FË| (
V
 << 4); 
	`Sync
(); ;

71 0xE000: 
ªg
[6] = (ªg[6] & 0xF0Ë| (
V
 & 0x0F); 
	`Sync
(); ;

72 0xE001: 
ªg
[6] = (ªg[6] & 0x0FË| (
V
 << 4); 
	`Sync
(); ;

73 0xE002: 
ªg
[7] = (ªg[7] & 0xF0Ë| (
V
 & 0x0F); 
	`Sync
(); ;

74 0xE003: 
ªg
[7] = (ªg[7] & 0x0FË| (
V
 << 4); 
	`Sync
(); ;

76 
	}
}

78 
	$UNLKS7057Powî
() {

79 
	`Sync
();

80 
	`SëRódH™dÀr
(0x6000, 0xFFFF, 
C¨tBR
);

81 
	`SëWrôeH™dÀr
(0x8000, 0xFFFF, 
UNLKS7057Wrôe
);

82 
	}
}

84 
	$UNLKS7057Re£t
() {

85 
	`Sync
();

86 
	}
}

88 
	$UNLKS7057_Inô
(
C¨tInfo
 *
öfo
) {

89 
öfo
->
Powî
 = 
UNLKS7057Powî
;

90 
öfo
->
Re£t
 = 
UNLKS7057Re£t
;

91 
	`AddExSèã
(&
SèãRegs
, ~0, 0, 0);

92 
	}
}

	@fceux-am/src/boards/le05.cpp

24 
	~"m≠öc.h
"

26 
uöt8
 
	gchr
;

27 
SFORMAT
 
	gSèãRegs
[] =

29 { &
chr
, 1, "CHR" },

33 
	$Sync
() {

34 
	`£çrg2r
(0, 0xE000, 0);

35 
	`£çrg2r
(0, 0xE800, 0);

36 
	`£çrg2r
(0, 0xF000, 0);

37 
	`£çrg2r
(0, 0xF800, 0);

39 
	`£çrg8r
(1, 0x6000, 3);

40 
	`£çrg8r
(1, 0x8000, 0);

41 
	`£çrg8r
(1, 0xA000, 1);

42 
	`£çrg8r
(1, 0xC000, 2);

44 
	`£tchr8
(
chr
 & 1);

45 
	`£tmúr‹
(
MI_V
);

46 
	}
}

48 
	$DECLFW
(
LE05Wrôe
) {

49 
chr
 = 
V
;

50 
	`Sync
();

51 
	}
}

53 
	$LE05Powî
() {

54 
	`Sync
();

55 
	`SëRódH™dÀr
(0x6000, 0xFFFF, 
C¨tBR
);

56 
	`SëWrôeH™dÀr
(0x8000, 0xFFFF, 
LE05Wrôe
);

57 
	}
}

59 
	$LE05_Inô
(
C¨tInfo
 *
öfo
) {

60 
öfo
->
Powî
 = 
LE05Powî
;

61 
	`AddExSèã
(&
SèãRegs
, ~0, 0, 0);

62 
	}
}

	@fceux-am/src/boards/lh32.cpp

24 
	~"m≠öc.h
"

26 
uöt8
 
	gªg
;

27 
uöt8
 *
	gWRAM
 = 
NULL
;

28 
uöt32
 
	gWRAMSIZE
;

30 
SFORMAT
 
	gSèãRegs
[] =

32 { &
ªg
, 1, "REG" },

36 
	$Sync
() {

37 
	`£çrg8
(0x6000, 
ªg
);

38 
	`£çrg8
(0x8000, ~3);

39 
	`£çrg8
(0xa000, ~2);

40 
	`£çrg8r
(0x10, 0xc000, 0);

41 
	`£çrg8
(0xe000, ~0);

42 
	`£tchr8
(0);

43 
	}
}

45 
	$DECLFW
(
LH32Wrôe
) {

46 
ªg
 = 
V
;

47 
	`Sync
();

48 
	}
}

50 
	$LH32Powî
() {

51 
	`Sync
();

52 
	`SëRódH™dÀr
(0x6000, 0xFFFF, 
C¨tBR
);

53 
	`SëWrôeH™dÀr
(0xC000, 0xDFFF, 
C¨tBW
);

54 
	`SëWrôeH™dÀr
(0x6000, 0x6000, 
LH32Wrôe
);

55 
	`FCEU_ChótAddRAM
(
WRAMSIZE
 >> 10, 0x6000, 
WRAM
);

56 
	}
}

58 
	$LH32Clo£
() {

59 i‡(
WRAM
)

60 
	`FCEU_g‰ì
(
WRAM
);

61 
WRAM
 = 
NULL
;

62 
	}
}

64 
	$SèãRe°‹e
(
vîsi⁄
) {

65 
	`Sync
();

66 
	}
}

68 
	$LH32_Inô
(
C¨tInfo
 *
öfo
) {

69 
öfo
->
Powî
 = 
LH32Powî
;

70 
öfo
->
Clo£
 = 
LH32Clo£
;

72 
WRAMSIZE
 = 8192;

73 
WRAM
 = (
uöt8
*)
	`FCEU_gmÆloc
(
WRAMSIZE
);

74 
	`SëupC¨tPRGM≠pög
(0x10, 
WRAM
, 
WRAMSIZE
, 1);

75 
	`AddExSèã
(
WRAM
, 
WRAMSIZE
, 0, "WRAM");

77 
GameSèãRe°‹e
 = 
SèãRe°‹e
;

78 
	`AddExSèã
(&
SèãRegs
, ~0, 0, 0);

79 
	}
}

	@fceux-am/src/boards/lh53.cpp

24 
	~"m≠öc.h
"

26 
uöt8
 
	gªg
, 
	gIRQa
;

27 
öt32
 
	gIRQCou¡
;

28 
uöt8
 *
	gWRAM
 = 
NULL
;

29 
uöt32
 
	gWRAMSIZE
;

31 
SFORMAT
 
	gSèãRegs
[] =

33 { &
ªg
, 1, "REG" },

34 { &
IRQa
, 1, "IRQA" },

35 { &
IRQCou¡
, 4, "IRQC" },

39 
	$Sync
() {

40 
	`£tchr8
(0);

41 
	`£çrg8
(0x6000, 
ªg
);

42 
	`£çrg8
(0x8000, 0xc);

43 
	`£çrg4
(0xa000, (0xd << 1));

44 
	`£çrg2
(0xb000, (0xd << 2) + 2);

45 
	`£çrg2r
(0x10, 0xb800, 4);

46 
	`£çrg2r
(0x10, 0xc000, 5);

47 
	`£çrg2r
(0x10, 0xc800, 6);

48 
	`£çrg2r
(0x10, 0xd000, 7);

49 
	`£çrg2
(0xd800, (0xe << 2) + 3);

50 
	`£çrg8
(0xe000, 0xf);

51 
	}
}

53 
	$DECLFW
(
LH53RamWrôe
) {

54 
WRAM
[(
A
 - 0xB800Ë& 0x1FFF] = 
V
;

55 
	}
}

57 
	$DECLFW
(
LH53Wrôe
) {

58 
ªg
 = 
V
;

59 
	`Sync
();

60 
	}
}

62 
	$DECLFW
(
LH53IRQaWrôe
) {

63 
IRQa
 = 
V
 & 2;

64 
IRQCou¡
 = 0;

65 i‡(!
IRQa
)

66 
	`X6502_IRQEnd
(
FCEU_IQEXT
);

67 
	}
}

69 
	$LH53IRQ
(
a
) {

70 i‡(
IRQa
) {

71 
IRQCou¡
 +
a
;

72 i‡(
IRQCou¡
 > 7560)

73 
	`X6502_IRQBegö
(
FCEU_IQEXT
);

75 
	}
}

77 
	$LH53Powî
() {

78 
	`Sync
();

79 
	`SëRódH™dÀr
(0x6000, 0xFFFF, 
C¨tBR
);

80 
	`SëWrôeH™dÀr
(0xB800, 0xD7FF, 
LH53RamWrôe
);

81 
	`SëWrôeH™dÀr
(0xE000, 0xEFFF, 
LH53IRQaWrôe
);

82 
	`SëWrôeH™dÀr
(0xF000, 0xFFFF, 
LH53Wrôe
);

83 
	`FCEU_ChótAddRAM
(
WRAMSIZE
 >> 10, 0x6000, 
WRAM
);

84 
	}
}

86 
	$LH53Clo£
() {

87 i‡(
WRAM
)

88 
	`FCEU_g‰ì
(
WRAM
);

89 
WRAM
 = 
NULL
;

90 
	}
}

92 
	$SèãRe°‹e
(
vîsi⁄
) {

93 
	`Sync
();

94 
	}
}

96 
	$LH53_Inô
(
C¨tInfo
 *
öfo
) {

97 
öfo
->
Powî
 = 
LH53Powî
;

98 
öfo
->
Clo£
 = 
LH53Clo£
;

99 
M≠IRQHook
 = 
LH53IRQ
;

100 
GameSèãRe°‹e
 = 
SèãRe°‹e
;

102 
WRAMSIZE
 = 8192;

103 
WRAM
 = (
uöt8
*)
	`FCEU_gmÆloc
(
WRAMSIZE
);

104 
	`SëupC¨tPRGM≠pög
(0x10, 
WRAM
, 
WRAMSIZE
, 1);

105 
	`AddExSèã
(
WRAM
, 
WRAMSIZE
, 0, "WRAM");

107 
	`AddExSèã
(&
SèãRegs
, ~0, 0, 0);

108 
	}
}

	@fceux-am/src/boards/malee.cpp

21 
	~"m≠öc.h
"

23 
uöt8
 
	gWRAM
[2048];

25 
	$MALEEPowî
() {

26 
	`£çrg2r
(0x10, 0x7000, 0);

27 
	`SëRódH™dÀr
(0x8000, 0xFFFF, 
C¨tBR
);

28 
	`SëRódH™dÀr
(0x6000, 0x67FF, 
C¨tBR
);

29 
	`SëRódH™dÀr
(0x7000, 0x77FF, 
C¨tBR
);

30 
	`SëWrôeH™dÀr
(0x7000, 0x77FF, 
C¨tBW
);

31 
	`£çrg2r
(1, 0x6000, 0);

32 
	`£çrg32
(0x8000, 0);

33 
	`£tchr8
(0);

34 
	}
}

36 
	$MALEE_Inô
(
C¨tInfo
 *
öfo
) {

37 
öfo
->
Powî
 = 
MALEEPowî
;

38 
	`FCEU_Mem‹yR™d
(
WRAM
,(WRAM),
åue
);

39 
	`SëupC¨tPRGM≠pög
(0x10, 
WRAM
, 2048, 1);

40 
	`AddExSèã
(
WRAM
, 2048, 0, "WRAM");

41 
	}
}

	@fceux-am/src/boards/mapinc.h

1 #i‚de‡
__MAPINC_H__


2 
	#__MAPINC_H__


	)

4 
	~"../ty≥s.h
"

5 
	~"../utûs/mem‹y.h
"

6 
	~"../x6502.h
"

7 
	~"../f˚u.h
"

8 
	~"../µu.h
"

9 
	~"../sound.h
"

10 
	~"../°©e.h
"

11 
	~"../ˇπ.h
"

12 
	~"../unif.h
"

14 
FCEU_ChótAddRAM
(
s
, 
uöt32
 
A
, 
uöt8
 *
p
);

	@fceux-am/src/boards/mihunche.cpp

21 
	~"m≠öc.h
"

23 
uöt16
 
	gœtche
;

25 
SFORMAT
 
	gSèãRegs
[] =

27 { &
œtche
, 2, "LATC" },

31 
	$Sync
() {

32 
	`£çrg32
(0x8000, 0);

33 if(
CHRsize
[0] == 8192) {

34 
	`£tchr4
(0x0000, 
œtche
 & 1);

35 
	`£tchr4
(0x1000, 
œtche
 & 1);

37 
	`£tchr8
(
œtche
 & 1);

39 
	`£tmúr‹
(
MI_0
 + (
œtche
 & 1));

40 
	}
}

42 
	$DECLFW
(
UNLCC21Wrôe1
) {

43 
œtche
 = 
A
;

44 
	`Sync
();

45 
	}
}

47 
	$DECLFW
(
UNLCC21Wrôe2
) {

48 
œtche
 = 
V
;

49 
	`Sync
();

50 
	}
}

52 
	$UNLCC21Powî
() {

53 
œtche
 = 0;

54 
	`Sync
();

55 
	`SëRódH™dÀr
(0x8000, 0xFFFF, 
C¨tBR
);

56 
	`SëWrôeH™dÀr
(0x8001, 0xFFFF, 
UNLCC21Wrôe1
);

57 
	`SëWrôeH™dÀr
(0x8000, 0x8000, 
UNLCC21Wrôe2
);

58 
	}
}

60 
	$SèãRe°‹e
(
vîsi⁄
) {

61 
	`Sync
();

62 
	}
}

64 
	$UNLCC21_Inô
(
C¨tInfo
 *
öfo
) {

65 
öfo
->
Powî
 = 
UNLCC21Powî
;

66 
GameSèãRe°‹e
 = 
SèãRe°‹e
;

67 
	`AddExSèã
(&
SèãRegs
, ~0, 0, 0);

68 
	}
}

	@fceux-am/src/boards/mmc1.cpp

22 
	~"m≠öc.h
"

24 
GíMMC1Powî
();

25 
GíMMC1Inô
(
C¨tInfo
 *
öfo
, 
¥g
, 
chr
, 
wøm
, 
bøm
);

27 
uöt8
 
	gDRegs
[4];

28 
uöt8
 
	gBuf„r
, 
	gBuf„rShi·
;

30 
uöt32
 
	gWRAMSIZE
;

31 
uöt32
 
	gNONBRAMSIZE
;

33 (*
MMC1CHRHook4
)(
uöt32
 
A
, 
uöt8
 
V
);

34 (*
MMC1PRGHook16
)(
uöt32
 
A
, 
uöt8
 
V
);

36 
uöt8
 *
WRAM
 = 
NULL
;

37 
uöt8
 *
CHRRAM
 = 
NULL
;

38 
is155
, 
is171
;

40 
	$DECLFW
(
MBWRAM
) {

41 i‡(!(
DRegs
[3] & 0x10Ë|| 
is155
)

42 
Page
[
A
 >> 11][A] = 
V
;

43 
	}
}

45 
	$DECLFR
(
MAWRAM
) {

46 i‡((
DRegs
[3] & 0x10Ë&& !
is155
)

47  
X
.
DB
;

48 (
Page
[
A
 >> 11][A]);

49 
	}
}

51 
	$MMC1CHR
() {

52 i‡(
WRAMSIZE
 > 0x2000) {

53 i‡(
WRAMSIZE
 > 0x4000)

54 
	`£çrg8r
(0x10, 0x6000, (
DRegs
[1] >> 2) & 3);

56 
	`£çrg8r
(0x10, 0x6000, (
DRegs
[1] >> 3) & 1);

59 i‡(
MMC1CHRHook4
) {

60 i‡(
DRegs
[0] & 0x10) {

61 
	`MMC1CHRHook4
(0x0000, 
DRegs
[1]);

62 
	`MMC1CHRHook4
(0x1000, 
DRegs
[2]);

64 
	`MMC1CHRHook4
(0x0000, (
DRegs
[1] & 0xFE));

65 
	`MMC1CHRHook4
(0x1000, 
DRegs
[1] | 1);

68 i‡(
DRegs
[0] & 0x10) {

69 
	`£tchr4
(0x0000, 
DRegs
[1]);

70 
	`£tchr4
(0x1000, 
DRegs
[2]);

72 
	`£tchr8
(
DRegs
[1] >> 1);

74 
	}
}

76 
	$MMC1PRG
() {

77 
uöt8
 
offs_16b™ks
 = 
DRegs
[1] & 0x10;

78 
uöt8
 
¥g_ªg
 = 
DRegs
[3] & 0xF;

79 i‡(
MMC1PRGHook16
) {

80 
DRegs
[0] & 0xC) {

82 
	`MMC1PRGHook16
(0x8000, (
¥g_ªg
 + 
offs_16b™ks
));

83 
	`MMC1PRGHook16
(0xC000, 0xF + 
offs_16b™ks
);

86 
	`MMC1PRGHook16
(0xC000, (
¥g_ªg
 + 
offs_16b™ks
));

87 
	`MMC1PRGHook16
(0x8000, 
offs_16b™ks
);

91 
	`MMC1PRGHook16
(0x8000, ((
¥g_ªg
 & ~1Ë+ 
offs_16b™ks
));

92 
	`MMC1PRGHook16
(0xc000, ((
¥g_ªg
 & ~1Ë+ 
offs_16b™ks
 + 1));

96 
DRegs
[0] & 0xC) {

98 
	`£çrg16
(0x8000, (
¥g_ªg
 + 
offs_16b™ks
));

99 
	`£çrg16
(0xC000, 0xF + 
offs_16b™ks
);

102 
	`£çrg16
(0xC000, (
¥g_ªg
 + 
offs_16b™ks
));

103 
	`£çrg16
(0x8000, 
offs_16b™ks
);

107 
	`£çrg16
(0x8000, ((
¥g_ªg
 & ~1Ë+ 
offs_16b™ks
));

108 
	`£çrg16
(0xc000, ((
¥g_ªg
 & ~1Ë+ 
offs_16b™ks
 + 1));

112 
	}
}

114 
	$MMC1MIRROR
() {

115 i‡(!
is171
)

116 
DRegs
[0] & 3) {

117 2: 
	`£tmúr‹
(
MI_V
); ;

118 3: 
	`£tmúr‹
(
MI_H
); ;

119 0: 
	`£tmúr‹
(
MI_0
); ;

120 1: 
	`£tmúr‹
(
MI_1
); ;

122 
	}
}

124 
uöt64
 
	gÃe£t
;

125 
	$DECLFW
(
MMC1_wrôe
) {

126 
n
 = (
A
 >> 13) - 4;

134 i‡((
time°ampba£
 + 
time°amp
Ë< (
Ãe£t
 + 2))

137 i‡(
V
 & 0x80) {

138 
DRegs
[0] |= 0xC;

139 
Buf„rShi·
 = 
Buf„r
 = 0;

140 
	`MMC1PRG
();

141 
Ãe£t
 = 
time°ampba£
 + 
time°amp
;

145 
Buf„r
 |(
V
 & 1Ë<< (
Buf„rShi·
++);

147 i‡(
Buf„rShi·
 == 5) {

148 
DRegs
[
n
] = 
Buf„r
;

149 
Buf„rShi·
 = 
Buf„r
 = 0;

150 
n
) {

151 0: 
	`MMC1MIRROR
(); 
	`MMC1CHR
(); 
	`MMC1PRG
(); ;

152 1: 
	`MMC1CHR
(); 
	`MMC1PRG
(); ;

153 2: 
	`MMC1CHR
(); ;

154 3: 
	`MMC1PRG
(); ;

157 
	}
}

159 
	$MMC1_Re°‹e
(
vîsi⁄
) {

160 
	`MMC1MIRROR
();

161 
	`MMC1CHR
();

162 
	`MMC1PRG
();

163 
Ãe£t
 = 0;

164 
	}
}

166 
	$MMC1CMRe£t
() {

167 
i
;

169 
i
 = 0; i < 4; i++)

170 
DRegs
[
i
] = 0;

171 
Buf„r
 = 
Buf„rShi·
 = 0;

172 
DRegs
[0] = 0x1F;

174 
DRegs
[1] = 0;

175 
DRegs
[2] = 0;

176 
DRegs
[3] = 0;

178 
	`MMC1MIRROR
();

179 
	`MMC1CHR
();

180 
	`MMC1PRG
();

181 
	}
}

183 
	$Dëe˘MMC1WRAMSize
(
C¨tInfo
 *
öfo
, *
bs
) {

184 
ws
 = 8;

185 
öfo
->
CRC32
) {

194 *
bs
 = 8;

195 
ws
 = 16;

200 *
bs
 = 32;

201 
ws
 = 32;

204 if(
öfo
->
öes2
) {

205 
ws
 = (
öfo
->
wøm_size
 + info->
b©ãry_wøm_size
) / 1024;

206 *
bs
 = 
öfo
->
b©ãry_wøm_size
 / 1024;

208 i‡(
ws
 > 0 && ws < 8) ws = 8;

209 i‡(
ws
 > 32) ws = 32;

210 i‡(*
bs
 > 
ws
) *bs = ws;

213 i‡(
ws
 > 8)

214 
	`FCEU_¥ötf
(" >8KBÉxternal WRAMÖresent. Use NES 2.0 if you hackÅhe ROM image.\n");

215  
ws
;

216 
	}
}

218 
uöt32
 
	gNWCIRQCou¡
;

219 
uöt8
 
	gNWCRec
;

220 
	#NWCDIP
 0xE

	)

222 
	$NWCIRQHook
(
a
) {

223 i‡(!(
NWCRec
 & 0x10)) {

224 
NWCIRQCou¡
 +
a
;

225 i‡((
NWCIRQCou¡
 | (
NWCDIP
 << 25)) >= 0x3e000000) {

226 
NWCIRQCou¡
 = 0;

227 
	`X6502_IRQBegö
(
FCEU_IQEXT
);

230 
	}
}

232 
	$NWCCHRHook
(
uöt32
 
A
, 
uöt8
 
V
) {

233 i‡((
V
 & 0x10)) {

234 
NWCIRQCou¡
 = 0;

235 
	`X6502_IRQEnd
(
FCEU_IQEXT
);

238 
NWCRec
 = 
V
;

239 i‡(
V
 & 0x08)

240 
	`MMC1PRG
();

242 
	`£çrg32
(0x8000, (
V
 >> 1) & 3);

243 
	}
}

245 
	$NWCPRGHook
(
uöt32
 
A
, 
uöt8
 
V
) {

246 i‡(
NWCRec
 & 0x8)

247 
	`£çrg16
(
A
, 8 | (
V
 & 0x7));

249 
	`£çrg32
(0x8000, (
NWCRec
 >> 1) & 3);

250 
	}
}

252 
	$NWCPowî
() {

253 
	`GíMMC1Powî
();

254 
	`£tchr8r
(0, 0);

255 
	}
}

257 
	$M≠≥r105_Inô
(
C¨tInfo
 *
öfo
) {

258 
	`GíMMC1Inô
(
öfo
, 256, 256, 8, 0);

259 
MMC1CHRHook4
 = 
NWCCHRHook
;

260 
MMC1PRGHook16
 = 
NWCPRGHook
;

261 
M≠IRQHook
 = 
NWCIRQHook
;

262 
öfo
->
Powî
 = 
NWCPowî
;

263 
	}
}

265 
	$GíMMC1Powî
() {

266 
Ãe£t
 = 0;

267 
	`SëWrôeH™dÀr
(0x8000, 0xFFFF, 
MMC1_wrôe
);

268 
	`SëRódH™dÀr
(0x8000, 0xFFFF, 
C¨tBR
);

270 i‡(
WRAMSIZE
) {

271 
	`FCEU_ChótAddRAM
(8, 0x6000, 
WRAM
);

274 i‡(
NONBRAMSIZE
)

275 
	`FCEU_Mem‹yR™d
(
WRAM
, 
NONBRAMSIZE
, 
åue
);

277 
	`SëRódH™dÀr
(0x6000, 0x7FFF, 
MAWRAM
);

278 
	`SëWrôeH™dÀr
(0x6000, 0x7FFF, 
MBWRAM
);

279 
	`£çrg8r
(0x10, 0x6000, 0);

282 
	`MMC1CMRe£t
();

283 
	}
}

285 
	$GíMMC1Clo£
() {

286 i‡(
CHRRAM
)

287 
	`FCEU_g‰ì
(
CHRRAM
);

288 i‡(
WRAM
)

289 
	`FCEU_g‰ì
(
WRAM
);

290 
CHRRAM
 = 
WRAM
 = 
NULL
;

291 
	}
}

293 
	$GíMMC1Inô
(
C¨tInfo
 *
öfo
, 
¥g
, 
chr
, 
wøm
, 
bøm
) {

294 
is155
 = 0;

296 
öfo
->
Clo£
 = 
GíMMC1Clo£
;

297 
MMC1PRGHook16
 = 
MMC1CHRHook4
 = 0;

298 
WRAMSIZE
 = 
wøm
 * 1024;

299 
NONBRAMSIZE
 = (
wøm
 - 
bøm
) * 1024;

300 
PRGmask16
[0] &(
¥g
 >> 14) - 1;

301 
CHRmask4
[0] &(
chr
 >> 12) - 1;

302 
CHRmask8
[0] &(
chr
 >> 13) - 1;

304 i‡(
WRAMSIZE
) {

305 
WRAM
 = (
uöt8
*)
	`FCEU_gmÆloc
(
WRAMSIZE
);

306 
	`SëupC¨tPRGM≠pög
(0x10, 
WRAM
, 
WRAMSIZE
, 1);

307 
	`AddExSèã
(
WRAM
, 
WRAMSIZE
, 0, "WRAM");

308 i‡(
bøm
) {

309 
öfo
->
SaveGame
[0] = 
WRAM
 + 
NONBRAMSIZE
;

310 
öfo
->
SaveGameLí
[0] = 
bøm
 * 1024;

313 i‡(!
chr
) {

314 
CHRRAM
 = (
uöt8
*)
	`FCEU_gmÆloc
(8192);

315 
	`SëupC¨tCHRM≠pög
(0, 
CHRRAM
, 8192, 1);

316 
	`AddExSèã
(
CHRRAM
, 8192, 0, "CHRR");

318 
	`AddExSèã
(
DRegs
, 4, 0, "DREG");

320 
öfo
->
Powî
 = 
GíMMC1Powî
;

321 
GameSèãRe°‹e
 = 
MMC1_Re°‹e
;

322 
	`AddExSèã
(&
Ãe£t
, 8, 1, "LRST");

323 
	`AddExSèã
(&
Buf„r
, 1, 1, "BFFR");

324 
	`AddExSèã
(&
Buf„rShi·
, 1, 1, "BFRS");

325 
	}
}

327 
	$M≠≥r1_Inô
(
C¨tInfo
 *
öfo
) {

328 
bs
 = 
öfo
->
b©ãry
 ? 8 : 0;

329 
ws
 = 
	`Dëe˘MMC1WRAMSize
(
öfo
, &
bs
);

330 
	`GíMMC1Inô
(
öfo
, 512, 256, 
ws
, 
bs
);

331 
	}
}

334 
	$M≠≥r155_Inô
(
C¨tInfo
 *
öfo
) {

335 
	`GíMMC1Inô
(
öfo
, 512, 256, 8, info->
b©ãry
 ? 8 : 0);

336 
is155
 = 1;

337 
	}
}

341 
	$M≠≥r171_Inô
(
C¨tInfo
 *
öfo
) {

342 
	`GíMMC1Inô
(
öfo
, 32, 32, 0, 0);

343 
is171
 = 1;

344 
	}
}

346 
	$SAROM_Inô
(
C¨tInfo
 *
öfo
) {

347 
	`GíMMC1Inô
(
öfo
, 128, 64, 8, info->
b©ãry
 ? 8 : 0);

348 
	}
}

350 
	$SBROM_Inô
(
C¨tInfo
 *
öfo
) {

351 
	`GíMMC1Inô
(
öfo
, 128, 64, 0, 0);

352 
	}
}

354 
	$SCROM_Inô
(
C¨tInfo
 *
öfo
) {

355 
	`GíMMC1Inô
(
öfo
, 128, 128, 0, 0);

356 
	}
}

358 
	$SEROM_Inô
(
C¨tInfo
 *
öfo
) {

359 
	`GíMMC1Inô
(
öfo
, 32, 64, 0, 0);

360 
	}
}

362 
	$SGROM_Inô
(
C¨tInfo
 *
öfo
) {

363 
	`GíMMC1Inô
(
öfo
, 256, 0, 0, 0);

364 
	}
}

366 
	$SKROM_Inô
(
C¨tInfo
 *
öfo
) {

367 
	`GíMMC1Inô
(
öfo
, 256, 64, 8, info->
b©ãry
 ? 8 : 0);

368 
	}
}

370 
	$SLROM_Inô
(
C¨tInfo
 *
öfo
) {

371 
	`GíMMC1Inô
(
öfo
, 256, 128, 0, 0);

372 
	}
}

374 
	$SL1ROM_Inô
(
C¨tInfo
 *
öfo
) {

375 
	`GíMMC1Inô
(
öfo
, 128, 128, 0, 0);

376 
	}
}

382 
	$SL2ROM_Inô
(
C¨tInfo
 *
öfo
) {

383 
	`GíMMC1Inô
(
öfo
, 256, 256, 0, 0);

384 
	}
}

386 
	$SFROM_Inô
(
C¨tInfo
 *
öfo
) {

387 
	`GíMMC1Inô
(
öfo
, 256, 256, 0, 0);

388 
	}
}

390 
	$SHROM_Inô
(
C¨tInfo
 *
öfo
) {

391 
	`GíMMC1Inô
(
öfo
, 256, 256, 0, 0);

392 
	}
}

398 
	$SNROM_Inô
(
C¨tInfo
 *
öfo
) {

399 
	`GíMMC1Inô
(
öfo
, 256, 0, 8, info->
b©ãry
 ? 8 : 0);

400 
	}
}

402 
	$SOROM_Inô
(
C¨tInfo
 *
öfo
) {

403 
	`GíMMC1Inô
(
öfo
, 256, 0, 16, info->
b©ãry
 ? 8 : 0);

404 
	}
}

	@fceux-am/src/boards/mmc2and4.cpp

23 
	~"m≠öc.h
"

25 
uöt8
 
	gis10
;

26 
uöt8
 
	g¸eg
[4], 
	gœtch0
, 
	gœtch1
, 
	g¥eg
, 
	gmúr
;

27 
uöt8
 *
	gWRAM
 = 
NULL
;

28 
uöt32
 
	gWRAMSIZE
;

30 
SFORMAT
 
	gSèãRegs
[] =

32 { 
¸eg
, 4, "CREG" },

33 { &
¥eg
, 1, "PREG" },

34 { &
múr
, 1, "MIRR" },

35 { &
œtch0
, 1, "LAT0" },

36 { &
œtch1
, 1, "LAT1" },

40 
	$Sync
() {

41 i‡(
is10
) {

42 
	`£çrg8r
(0x10, 0x6000, 0);

43 
	`£çrg16
(0x8000, 
¥eg
);

44 
	`£çrg16
(0xC000, ~0);

46 
	`£çrg8
(0x8000, 
¥eg
);

47 
	`£çrg8
(0xA000, ~2);

48 
	`£çrg8
(0xC000, ~1);

49 
	`£çrg8
(0xE000, ~0);

51 
	`£tchr4
(0x0000, 
¸eg
[
œtch0
]);

52 
	`£tchr4
(0x1000, 
¸eg
[
œtch1
 + 2]);

53 
	`£tmúr‹
(
múr
);

54 
	}
}

56 
	$DECLFW
(
MMC2™d4Wrôe
) {

57 
A
 & 0xF000) {

58 0xA000: 
¥eg
 = 
V
; 
	`Sync
(); ;

59 0xB000: 
¸eg
[0] = 
V
; 
	`Sync
(); ;

60 0xC000: 
¸eg
[1] = 
V
; 
	`Sync
(); ;

61 0xD000: 
¸eg
[2] = 
V
; 
	`Sync
(); ;

62 0xE000: 
¸eg
[3] = 
V
; 
	`Sync
(); ;

63 0xF000: 
múr
 = (
V
 & 1Ë^ 1; 
	`Sync
(); ;

65 
	}
}

67 
	$MMC2™d4PPUHook
(
uöt32
 
A
) {

68 
uöt8
 
l
, 
h
 = 
A
 >> 8;

69 i‡(
h
 >= 0x20 || ((h & 0xF) != 0xF))

71 
l
 = 
A
 & 0xF0;

72 i‡(
h
 < 0x10) {

73 i‡(
l
 == 0xD0) {

74 
œtch0
 = 0;

75 
	`£tchr4
(0x0000, 
¸eg
[0]);

76 } i‡(
l
 == 0xE0) {

77 
œtch0
 = 1;

78 
	`£tchr4
(0x0000, 
¸eg
[1]);

81 i‡(
l
 == 0xD0) {

82 
œtch1
 = 0;

83 
	`£tchr4
(0x1000, 
¸eg
[2]);

84 } i‡(
l
 == 0xE0) {

85 
œtch1
 = 1;

86 
	`£tchr4
(0x1000, 
¸eg
[3]);

89 
	}
}

91 
	$MMC2™d4Powî
() {

92 
¥eg
 = 0;

93 
œtch0
 = 
œtch1
 = 1;

94 
	`Sync
();

95 i‡(
is10
) {

96 
	`SëRódH™dÀr
(0x6000, 0x7FFF, 
C¨tBR
);

97 
	`SëWrôeH™dÀr
(0x6000, 0x7FFF, 
C¨tBW
);

98 
	`FCEU_ChótAddRAM
(
WRAMSIZE
 >> 10, 0x6000, 
WRAM
);

100 
	`SëRódH™dÀr
(0x8000, 0xFFFF, 
C¨tBR
);

101 
	`SëWrôeH™dÀr
(0xA000, 0xFFFF, 
MMC2™d4Wrôe
);

102 
	}
}

104 
	$SèãRe°‹e
(
vîsi⁄
) {

105 
	`Sync
();

106 
	}
}

108 
	$MMC2™d4Clo£
()

110 i‡(
WRAM
)

111 
	`FCEU_g‰ì
(
WRAM
);

112 
WRAM
 = 
NULL
;

113 
	}
}

115 
	$M≠≥r9_Inô
(
C¨tInfo
 *
öfo
) {

116 
is10
 = 0;

117 
öfo
->
Powî
 = 
MMC2™d4Powî
;

118 
PPU_hook
 = 
MMC2™d4PPUHook
;

119 
GameSèãRe°‹e
 = 
SèãRe°‹e
;

120 
	`AddExSèã
(&
SèãRegs
, ~0, 0, 0);

121 
	}
}

123 
	$M≠≥r10_Inô
(
C¨tInfo
 *
öfo
) {

124 
is10
 = 1;

125 
öfo
->
Powî
 = 
MMC2™d4Powî
;

126 
öfo
->
Clo£
 = 
MMC2™d4Clo£
;

127 
PPU_hook
 = 
MMC2™d4PPUHook
;

128 
WRAMSIZE
 = 8192;

129 
WRAM
 = (
uöt8
*)
	`FCEU_gmÆloc
(
WRAMSIZE
);

130 
	`SëupC¨tPRGM≠pög
(0x10, 
WRAM
, 
WRAMSIZE
, 1);

131 
	`AddExSèã
(
WRAM
, 
WRAMSIZE
, 0, "WRAM");

132 i‡(
öfo
->
b©ãry
) {

133 
öfo
->
SaveGame
[0] = 
WRAM
;

134 
öfo
->
SaveGameLí
[0] = 
WRAMSIZE
;

136 
GameSèãRe°‹e
 = 
SèãRe°‹e
;

137 
	`AddExSèã
(&
SèãRegs
, ~0, 0, 0);

138 
	}
}

	@fceux-am/src/boards/mmc3.cpp

27 
	~"m≠öc.h
"

28 
	~"mmc3.h
"

30 
uöt8
 
	gMMC3_cmd
;

31 
uöt8
 
	gkt_exåa
;

32 
uöt8
 *
	gWRAM
;

33 
uöt32
 
	gWRAMSIZE
;

34 
uöt8
 *
	gCHRRAM
;

35 
uöt32
 
	gCHRRAMSIZE
;

36 
uöt8
 
	gDRegBuf
[8];

37 
uöt8
 
	gEXPREGS
[8];

38 
uöt8
 
	gA000B
, 
	gA001B
;

39 
uöt8
 
	gmmc3›ts
 = 0;

41 #unde‡
IRQCou¡


42 #unde‡
IRQL©ch


43 #unde‡
IRQa


44 
uöt8
 
	gIRQCou¡
, 
	gIRQL©ch
, 
	gIRQa
;

45 
uöt8
 
	gIRQRñﬂd
;

47 
SFORMAT
 
	gMMC3_SèãRegs
[] =

49 { 
DRegBuf
, 8, "REGS" },

50 { &
MMC3_cmd
, 1, "CMD" },

51 { &
A000B
, 1, "A000" },

52 { &
A001B
, 1, "A001" },

53 { &
IRQRñﬂd
, 1, "IRQR" },

54 { &
IRQCou¡
, 1, "IRQC" },

55 { &
IRQL©ch
, 1, "IRQL" },

56 { &
IRQa
, 1, "IRQA" },

60 
	gisRevB
 = 1;

62 (*
pwøp
)(
uöt32
 
A
, 
uöt8
 
V
);

63 (*
cwøp
)(
uöt32
 
A
, 
uöt8
 
V
);

64 (*
mwøp
)(
uöt8
 
V
);

66 
	`GíMMC3Powî
();

67 
	`FixMMC3PRG
(
V
);

68 
	`FixMMC3CHR
(
V
);

70 
	`GíMMC3_Inô
(
C¨tInfo
 *
öfo
, 
¥g
, 
chr
, 
wøm
, 
b©ãry
);

76 
	$FixMMC3PRG
(
V
) {

77 i‡(
V
 & 0x40) {

78 
	`pwøp
(0xC000, 
DRegBuf
[6]);

79 
	`pwøp
(0x8000, ~1);

81 
	`pwøp
(0x8000, 
DRegBuf
[6]);

82 
	`pwøp
(0xC000, ~1);

84 
	`pwøp
(0xA000, 
DRegBuf
[7]);

85 
	`pwøp
(0xE000, ~0);

86 
	}
}

88 
	$FixMMC3CHR
(
V
) {

89 
cba£
 = (
V
 & 0x80) << 5;

91 
	`cwøp
((
cba£
 ^ 0x000), 
DRegBuf
[0] & (~1));

92 
	`cwøp
((
cba£
 ^ 0x400), 
DRegBuf
[0] | 1);

93 
	`cwøp
((
cba£
 ^ 0x800), 
DRegBuf
[1] & (~1));

94 
	`cwøp
((
cba£
 ^ 0xC00), 
DRegBuf
[1] | 1);

96 
	`cwøp
(
cba£
 ^ 0x1000, 
DRegBuf
[2]);

97 
	`cwøp
(
cba£
 ^ 0x1400, 
DRegBuf
[3]);

98 
	`cwøp
(
cba£
 ^ 0x1800, 
DRegBuf
[4]);

99 
	`cwøp
(
cba£
 ^ 0x1c00, 
DRegBuf
[5]);

101 i‡(
mwøp
Ë
	`mwøp
(
A000B
);

102 
	}
}

104 
	$MMC3RegRe£t
() {

105 
IRQCou¡
 = 
IRQL©ch
 = 
IRQa
 = 
MMC3_cmd
 = 0;

107 
DRegBuf
[0] = 0;

108 
DRegBuf
[1] = 2;

109 
DRegBuf
[2] = 4;

110 
DRegBuf
[3] = 5;

111 
DRegBuf
[4] = 6;

112 
DRegBuf
[5] = 7;

113 
DRegBuf
[6] = 0;

114 
DRegBuf
[7] = 1;

117 
kt_exåa
 = 0;

119 
	`FixMMC3PRG
(0);

120 
	`FixMMC3CHR
(0);

121 
	}
}

123 
	$DECLFW
(
MMC3_CMDWrôe
) {

125 
A
 & 0xE001) {

127 i‡((
V
 & 0x40Ë!(
MMC3_cmd
 & 0x40))

128 
	`FixMMC3PRG
(
V
);

129 i‡((
V
 & 0x80Ë!(
MMC3_cmd
 & 0x80))

130 
	`FixMMC3CHR
(
V
);

131 
MMC3_cmd
 = 
V
;

135 
cba£
 = (
MMC3_cmd
 & 0x80) << 5;

136 
DRegBuf
[
MMC3_cmd
 & 0x7] = 
V
;

137 
MMC3_cmd
 & 0x07) {

139 
	`cwøp
((
cba£
 ^ 0x000), 
V
 & (~1));

140 
	`cwøp
((
cba£
 ^ 0x400), 
V
 | 1);

143 
	`cwøp
((
cba£
 ^ 0x800), 
V
 & (~1));

144 
	`cwøp
((
cba£
 ^ 0xC00), 
V
 | 1);

147 
	`cwøp
(
cba£
 ^ 0x1000, 
V
);

150 
	`cwøp
(
cba£
 ^ 0x1400, 
V
);

153 
	`cwøp
(
cba£
 ^ 0x1800, 
V
);

156 
	`cwøp
(
cba£
 ^ 0x1C00, 
V
);

159 i‡(
MMC3_cmd
 & 0x40)

160 
	`pwøp
(0xC000, 
V
);

162 
	`pwøp
(0x8000, 
V
);

165 
	`pwøp
(0xA000, 
V
);

171 i‡(
mwøp
Ë
	`mwøp
(
V
);

174 
A001B
 = 
V
;

177 
	}
}

179 
	$DECLFW
(
MMC3_IRQWrôe
) {

181 
A
 & 0xE001) {

182 0xC000: 
IRQL©ch
 = 
V
; ;

183 0xC001: 
IRQRñﬂd
 = 1; ;

184 0xE000: 
	`X6502_IRQEnd
(
FCEU_IQEXT
); 
IRQa
 = 0; ;

185 0xE001: 
IRQa
 = 1; ;

187 
	}
}

190 
	$DECLFW
(
KT008HackWrôe
) {

192 
A
 & 3) {

194 i‡(
V
 == 0x27)

195 
kt_exåa
 = 0;

197 
kt_exåa
 = 
V
;

198 
	`FixMMC3PRG
(
MMC3_cmd
);

205 
	}
}

207 
	$ClockMMC3Cou¡î
() {

208 
cou¡
 = 
IRQCou¡
;

209 i‡(!
cou¡
 || 
IRQRñﬂd
) {

210 
IRQCou¡
 = 
IRQL©ch
;

211 
IRQRñﬂd
 = 0;

213 
IRQCou¡
--;

214 i‡((
cou¡
 | 
isRevB
Ë&& !
IRQCou¡
) {

215 i‡(
IRQa
) {

216 
	`X6502_IRQBegö
(
FCEU_IQEXT
);

219 
	}
}

221 
	$MMC3_hb
() {

222 
	`ClockMMC3Cou¡î
();

223 
	}
}

225 
	$MMC3_hb_KickMa°îHack
() {

226 i‡(
sˇ∆öe
 =238Ë
	`ClockMMC3Cou¡î
();

227 
	`ClockMMC3Cou¡î
();

228 
	}
}

230 
	$MMC3_hb_PALSèrW¨sHack
() {

231 i‡(
sˇ∆öe
 =240Ë
	`ClockMMC3Cou¡î
();

232 
	`ClockMMC3Cou¡î
();

233 
	}
}

235 
	$GíMMC3Re°‹e
(
vîsi⁄
) {

236 
	`FixMMC3PRG
(
MMC3_cmd
);

237 
	`FixMMC3CHR
(
MMC3_cmd
);

238 
	}
}

240 
	$GENCWRAP
(
uöt32
 
A
, 
uöt8
 
V
) {

241 
	`£tchr1
(
A
, 
V
);

242 
	}
}

244 
	$GENPWRAP
(
uöt32
 
A
, 
uöt8
 
V
) {

247 
	`£çrg8
(
A
, (
V
 & 0x7FË| ((
kt_exåa
 & 4) << 4));

249 
	}
}

251 
	$GENMWRAP
(
uöt8
 
V
) {

252 
A000B
 = 
V
;

253 
	`£tmúr‹
((
V
 & 1) ^ 1);

254 
	}
}

256 
	$GENNOMWRAP
(
uöt8
 
V
) {

257 
A000B
 = 
V
;

258 
	}
}

260 
	$DECLFW
(
MBWRAMMMC6
) {

261 
WRAM
[
A
 & 0x3ff] = 
V
;

262 
	}
}

264 
	$DECLFR
(
MAWRAMMMC6
) {

265 (
WRAM
[
A
 & 0x3ff]);

266 
	}
}

268 
	$GíMMC3Powî
() {

269 i‡(
UNIFchºama
Ë
	`£tchr8
(0);

271 
	`SëWrôeH™dÀr
(0x8000, 0xBFFF, 
MMC3_CMDWrôe
);

272 
	`SëWrôeH™dÀr
(0xC000, 0xFFFF, 
MMC3_IRQWrôe
);

273 
	`SëRódH™dÀr
(0x8000, 0xFFFF, 
C¨tBR
);

276 
	`SëWrôeH™dÀr
(0x5000,0x5FFF, 
KT008HackWrôe
);

278 
A001B
 = 
A000B
 = 0;

279 
	`£tmúr‹
(1);

280 i‡(
mmc3›ts
 & 1) {

281 i‡(
WRAMSIZE
 == 1024) {

282 
	`FCEU_ChótAddRAM
(1, 0x7000, 
WRAM
);

283 
	`SëRódH™dÀr
(0x7000, 0x7FFF, 
MAWRAMMMC6
);

284 
	`SëWrôeH™dÀr
(0x7000, 0x7FFF, 
MBWRAMMMC6
);

286 
	`FCEU_ChótAddRAM
(
WRAMSIZE
 >> 10, 0x6000, 
WRAM
);

287 
	`SëWrôeH™dÀr
(0x6000, 0x6000 + ((
WRAMSIZE
 - 1Ë& 0x1fff), 
C¨tBW
);

288 
	`SëRódH™dÀr
(0x6000, 0x6000 + ((
WRAMSIZE
 - 1Ë& 0x1fff), 
C¨tBR
);

289 
	`£çrg8r
(0x10, 0x6000, 0);

291 i‡(!(
mmc3›ts
 & 2))

292 
	`FCEU_Mem‹yR™d
(
WRAM
, 
WRAMSIZE
, 
åue
);

294 
	`MMC3RegRe£t
();

295 i‡(
CHRRAM
)

296 
	`FCEU_Mem‹yR™d
(
CHRRAM
, 
CHRRAMSIZE
, 
åue
);

297 
	}
}

299 
	$GíMMC3Clo£
() {

300 i‡(
CHRRAM
)

301 
	`FCEU_g‰ì
(
CHRRAM
);

302 i‡(
WRAM
)

303 
	`FCEU_g‰ì
(
WRAM
);

304 
CHRRAM
 = 
WRAM
 = 
NULL
;

305 
	}
}

307 
	$GíMMC3_Inô
(
C¨tInfo
 *
öfo
, 
¥g
, 
chr
, 
wøm
, 
b©ãry
) {

308 
pwøp
 = 
GENPWRAP
;

309 
cwøp
 = 
GENCWRAP
;

310 
mwøp
 = 
GENMWRAP
;

312 
WRAMSIZE
 = 
wøm
 << 10;

314 
PRGmask8
[0] &(
¥g
 >> 13) - 1;

315 
CHRmask1
[0] &(
chr
 >> 10) - 1;

316 
CHRmask2
[0] &(
chr
 >> 11) - 1;

318 i‡(
wøm
) {

319 
mmc3›ts
 |= 1;

320 
WRAM
 = (
uöt8
*)
	`FCEU_gmÆloc
(
WRAMSIZE
);

321 
	`SëupC¨tPRGM≠pög
(0x10, 
WRAM
, 
WRAMSIZE
, 1);

322 
	`AddExSèã
(
WRAM
, 
WRAMSIZE
, 0, "WRAM");

325 i‡(
b©ãry
) {

326 
mmc3›ts
 |= 2;

327 
öfo
->
SaveGame
[0] = 
WRAM
;

328 
öfo
->
SaveGameLí
[0] = 
WRAMSIZE
;

332 
	`AddExSèã
(&
kt_exåa
, 1, 0, "KTEX");

333 
	`AddExSèã
(
MMC3_SèãRegs
, ~0, 0, 0);

335 
öfo
->
Powî
 = 
GíMMC3Powî
;

336 
öfo
->
Re£t
 = 
MMC3RegRe£t
;

337 
öfo
->
Clo£
 = 
GíMMC3Clo£
;

339 i‡(
öfo
->
CRC32
 == 0x5104833e)

340 
GameHBIRQHook
 = 
MMC3_hb_KickMa°îHack
;

341 i‡(
öfo
->
CRC32
 == 0x5a6860f1 || info->CRC32 == 0xae280e20)

342 
GameHBIRQHook
 = 
MMC3_hb_KickMa°îHack
;

343 i‡(
öfo
->
CRC32
 == 0xfcd772eb)

344 
GameHBIRQHook
 = 
MMC3_hb_PALSèrW¨sHack
;

346 
GameHBIRQHook
 = 
MMC3_hb
;

347 
GameSèãRe°‹e
 = 
GíMMC3Re°‹e
;

348 
	}
}

356 
	ghackm4
 = 0;

358 
	$M4Powî
() {

359 
	`GíMMC3Powî
();

360 
A000B
 = (
hackm4
 ^ 1) & 1;

361 
	`£tmúr‹
(
hackm4
);

362 
	}
}

364 
	$M≠≥r4_Inô
(
C¨tInfo
 *
öfo
) {

365 
ws
 = 8;

367 i‡((
öfo
->
CRC32
 == 0x93991433 || info->CRC32 == 0xaf65aa84)) {

368 
	`FCEU_¥ötf
("Low-G-Man canÇot workÇormally inÅhe iNES format.\nThis game has beenÑecognized by its CRC32 value,ándÅheáppropriate changes will be made so it willÑun.\nIf you wishÅo hackÅhis game, you should useÅhe UNIF format for your hack.\n\n");

369 
ws
 = 0;

371 
	`GíMMC3_Inô
(
öfo
, 512, 256, 
ws
, info->
b©ãry
);

372 
öfo
->
Powî
 = 
M4Powî
;

373 
hackm4
 = 
öfo
->
múr‹
;

374 
	}
}

378 
	$M12CW
(
uöt32
 
A
, 
uöt8
 
V
) {

379 
	`£tchr1
(
A
, (
EXPREGS
[(A & 0x1000Ë>> 12] << 8Ë+ 
V
);

380 
	}
}

382 
	$DECLFW
(
M12Wrôe
) {

383 
EXPREGS
[0] = 
V
 & 0x01;

384 
EXPREGS
[1] = (
V
 & 0x10) >> 4;

385 
	}
}

387 
	$DECLFR
(
M12Ród
) {

388  
EXPREGS
[2];

389 
	}
}

391 
	$M12Powî
() {

392 
EXPREGS
[0] = EXPREGS[1] = 0;

393 
EXPREGS
[2] = 1;

394 
	`GíMMC3Powî
();

395 
	`SëWrôeH™dÀr
(0x4100, 0x5FFF, 
M12Wrôe
);

396 
	`SëRódH™dÀr
(0x4100, 0x5FFF, 
M12Ród
);

397 
	}
}

399 
	$M12Re£t
() {

400 
EXPREGS
[0] = EXPREGS[1] = 0;

401 
EXPREGS
[2] ^= 1;

402 
	`MMC3RegRe£t
();

403 
	}
}

405 
	$M≠≥r12_Inô
(
C¨tInfo
 *
öfo
) {

406 
	`GíMMC3_Inô
(
öfo
, 512, 256, 8, info->
b©ãry
);

407 
cwøp
 = 
M12CW
;

408 
isRevB
 = 0;

410 
öfo
->
Powî
 = 
M12Powî
;

411 
öfo
->
Re£t
 = 
M12Re£t
;

412 
	`AddExSèã
(
EXPREGS
, 2, 0, "EXPR");

413 
	}
}

417 
	$M37PW
(
uöt32
 
A
, 
uöt8
 
V
) {

418 i‡(
EXPREGS
[0] != 2)

419 
V
 &= 0x7;

421 
V
 &= 0xF;

422 
V
 |
EXPREGS
[0] << 3;

423 
	`£çrg8
(
A
, 
V
);

424 
	}
}

426 
	$M37CW
(
uöt32
 
A
, 
uöt8
 
V
) {

427 
uöt32
 
NV
 = 
V
;

428 
NV
 &= 0x7F;

429 
NV
 |
EXPREGS
[0] << 6;

430 
	`£tchr1
(
A
, 
NV
);

431 
	}
}

433 
	$DECLFW
(
M37Wrôe
) {

434 
EXPREGS
[0] = (
V
 & 6) >> 1;

435 
	`FixMMC3PRG
(
MMC3_cmd
);

436 
	`FixMMC3CHR
(
MMC3_cmd
);

437 
	}
}

439 
	$M37Re£t
() {

440 
EXPREGS
[0] = 0;

441 
	`MMC3RegRe£t
();

442 
	}
}

444 
	$M37Powî
() {

445 
EXPREGS
[0] = 0;

446 
	`GíMMC3Powî
();

447 
	`SëWrôeH™dÀr
(0x6000, 0x7FFF, 
M37Wrôe
);

448 
	}
}

450 
	$M≠≥r37_Inô
(
C¨tInfo
 *
öfo
) {

451 
	`GíMMC3_Inô
(
öfo
, 512, 256, 8, info->
b©ãry
);

452 
pwøp
 = 
M37PW
;

453 
cwøp
 = 
M37CW
;

454 
öfo
->
Powî
 = 
M37Powî
;

455 
öfo
->
Re£t
 = 
M37Re£t
;

456 
	`AddExSèã
(
EXPREGS
, 1, 0, "EXPR");

457 
	}
}

461 
	$M44PW
(
uöt32
 
A
, 
uöt8
 
V
) {

462 
uöt32
 
NV
 = 
V
;

463 i‡(
EXPREGS
[0] >6Ë
NV
 &= 0x1F;

464 
NV
 &= 0x0F;

465 
NV
 |
EXPREGS
[0] << 4;

466 
	`£çrg8
(
A
, 
NV
);

467 
	}
}

469 
	$M44CW
(
uöt32
 
A
, 
uöt8
 
V
) {

470 
uöt32
 
NV
 = 
V
;

471 i‡(
EXPREGS
[0] < 6Ë
NV
 &= 0x7F;

472 
NV
 |
EXPREGS
[0] << 7;

473 
	`£tchr1
(
A
, 
NV
);

474 
	}
}

476 
	$DECLFW
(
M44Wrôe
) {

477 i‡(
A
 & 1) {

478 
EXPREGS
[0] = 
V
 & 7;

479 
	`FixMMC3PRG
(
MMC3_cmd
);

480 
	`FixMMC3CHR
(
MMC3_cmd
);

482 
	`MMC3_CMDWrôe
(
A
, 
V
);

483 
	}
}

485 
	$M44Powî
() {

486 
EXPREGS
[0] = 0;

487 
	`GíMMC3Powî
();

488 
	`SëWrôeH™dÀr
(0xA000, 0xBFFF, 
M44Wrôe
);

489 
	}
}

491 
	$M≠≥r44_Inô
(
C¨tInfo
 *
öfo
) {

492 
	`GíMMC3_Inô
(
öfo
, 512, 256, 8, info->
b©ãry
);

493 
cwøp
 = 
M44CW
;

494 
pwøp
 = 
M44PW
;

495 
öfo
->
Powî
 = 
M44Powî
;

496 
	`AddExSèã
(
EXPREGS
, 1, 0, "EXPR");

497 
	}
}

501 
	$M45CW
(
uöt32
 
A
, 
uöt8
 
V
) {

502 i‡(!
UNIFchºama
) {

503 
uöt32
 
NV
 = 
V
;

504 i‡(
EXPREGS
[2] & 8)

505 
NV
 &(1 << ((
EXPREGS
[2] & 7) + 1)) - 1;

507 i‡(
EXPREGS
[2])

508 
NV
 &= 0;

509 
NV
 |
EXPREGS
[0] | ((EXPREGS[2] & 0xF0) << 4);

510 
	`£tchr1
(
A
, 
NV
);

513 
	`£tchr1
(
A
, 
V
);

514 
	}
}

516 
	$M45PW
(
uöt32
 
A
, 
uöt8
 
V
) {

517 
uöt32
 
MV
 = 
V
 & ((
EXPREGS
[3] & 0x3F) ^ 0x3F);

518 
MV
 |
EXPREGS
[1];

519 if(
UNIFchºama
)

520 
MV
 |((
EXPREGS
[2] & 0x40) << 2);

521 
	`£çrg8
(
A
, 
MV
);

523 
	}
}

525 
	$DECLFW
(
M45Wrôe
) {

526 i‡(
EXPREGS
[3] & 0x40) {

527 
WRAM
[
A
 - 0x6000] = 
V
;

530 
EXPREGS
[EXPREGS[4]] = 
V
;

531 
EXPREGS
[4] = (EXPREGS[4] + 1) & 3;

532 
	`FixMMC3PRG
(
MMC3_cmd
);

533 
	`FixMMC3CHR
(
MMC3_cmd
);

534 
	}
}

536 
	$DECLFR
(
M45Ród
) {

537 
uöt32
 
addr
 = 1 << (
EXPREGS
[5] + 4);

538 i‡(
A
 & (
addr
 | (addr - 1)))

539  
X
.
DB
 | 1;

541  
X
.
DB
;

542 
	}
}

544 
	$M45Re£t
() {

545 
EXPREGS
[0] = EXPREGS[1] = EXPREGS[2] = EXPREGS[3] = EXPREGS[4] = 0;

546 
EXPREGS
[5]++;

547 
EXPREGS
[5] &= 7;

548 
	`MMC3RegRe£t
();

549 
	}
}

551 
	$M45Powî
() {

552 
	`GíMMC3Powî
();

553 
EXPREGS
[0] = EXPREGS[1] = EXPREGS[2] = EXPREGS[3] = EXPREGS[4] = EXPREGS[5] = 0;

554 
	`SëWrôeH™dÀr
(0x5000, 0x7FFF, 
M45Wrôe
);

555 
	`SëRódH™dÀr
(0x5000, 0x5FFF, 
M45Ród
);

556 
	}
}

558 
	$M≠≥r45_Inô
(
C¨tInfo
 *
öfo
) {

559 
	`GíMMC3_Inô
(
öfo
, 512, 256, 8, info->
b©ãry
);

560 
cwøp
 = 
M45CW
;

561 
pwøp
 = 
M45PW
;

562 
öfo
->
Re£t
 = 
M45Re£t
;

563 
öfo
->
Powî
 = 
M45Powî
;

564 
	`AddExSèã
(
EXPREGS
, 5, 0, "EXPR");

565 
	}
}

569 
	$M47PW
(
uöt32
 
A
, 
uöt8
 
V
) {

570 
V
 &= 0xF;

571 
V
 |
EXPREGS
[0] << 4;

572 
	`£çrg8
(
A
, 
V
);

573 
	}
}

575 
	$M47CW
(
uöt32
 
A
, 
uöt8
 
V
) {

576 
uöt32
 
NV
 = 
V
;

577 
NV
 &= 0x7F;

578 
NV
 |
EXPREGS
[0] << 7;

579 
	`£tchr1
(
A
, 
NV
);

580 
	}
}

582 
	$DECLFW
(
M47Wrôe
) {

583 
EXPREGS
[0] = 
V
 & 1;

584 
	`FixMMC3PRG
(
MMC3_cmd
);

585 
	`FixMMC3CHR
(
MMC3_cmd
);

586 
	}
}

588 
	$M47Powî
() {

589 
EXPREGS
[0] = 0;

590 
	`GíMMC3Powî
();

591 
	`SëWrôeH™dÀr
(0x6000, 0x7FFF, 
M47Wrôe
);

593 
	}
}

595 
	$M≠≥r47_Inô
(
C¨tInfo
 *
öfo
) {

596 
	`GíMMC3_Inô
(
öfo
, 512, 256, 8, 0);

597 
pwøp
 = 
M47PW
;

598 
cwøp
 = 
M47CW
;

599 
öfo
->
Powî
 = 
M47Powî
;

600 
	`AddExSèã
(
EXPREGS
, 1, 0, "EXPR");

601 
	}
}

605 
	$M49PW
(
uöt32
 
A
, 
uöt8
 
V
) {

606 i‡(
EXPREGS
[0] & 1) {

607 
V
 &= 0xF;

608 
V
 |(
EXPREGS
[0] & 0xC0) >> 2;

609 
	`£çrg8
(
A
, 
V
);

611 
	`£çrg32
(0x8000, (
EXPREGS
[0] >> 4) & 3);

612 
	}
}

614 
	$M49CW
(
uöt32
 
A
, 
uöt8
 
V
) {

615 
uöt32
 
NV
 = 
V
;

616 
NV
 &= 0x7F;

617 
NV
 |(
EXPREGS
[0] & 0xC0) << 1;

618 
	`£tchr1
(
A
, 
NV
);

619 
	}
}

621 
	$DECLFW
(
M49Wrôe
) {

622 i‡(
A001B
 & 0x80) {

623 
EXPREGS
[0] = 
V
;

624 
	`FixMMC3PRG
(
MMC3_cmd
);

625 
	`FixMMC3CHR
(
MMC3_cmd
);

627 
	}
}

629 
	$M49Re£t
() {

630 
EXPREGS
[0] = 0;

631 
	`MMC3RegRe£t
();

632 
	}
}

634 
	$M49Powî
() {

635 
	`M49Re£t
();

636 
	`GíMMC3Powî
();

637 
	`SëWrôeH™dÀr
(0x6000, 0x7FFF, 
M49Wrôe
);

638 
	`SëRódH™dÀr
(0x6000, 0x7FFF, 0);

639 
	}
}

641 
	$M≠≥r49_Inô
(
C¨tInfo
 *
öfo
) {

642 
	`GíMMC3_Inô
(
öfo
, 512, 256, 0, 0);

643 
cwøp
 = 
M49CW
;

644 
pwøp
 = 
M49PW
;

645 
öfo
->
Re£t
 = 
M49Re£t
;

646 
öfo
->
Powî
 = 
M49Powî
;

647 
	`AddExSèã
(
EXPREGS
, 1, 0, "EXPR");

648 
	}
}

651 
	$M52PW
(
uöt32
 
A
, 
uöt8
 
V
) {

652 
uöt32
 
mask
 = 0x1F ^ ((
EXPREGS
[0] & 8) << 1);

653 
uöt32
 
b™k
 = ((
EXPREGS
[0] & 6) | ((EXPREGS[0] >> 3) & EXPREGS[0] & 1)) << 4;

654 
	`£çrg8
(
A
, 
b™k
 | (
V
 & 
mask
));

655 
	}
}

657 
	$M52CW
(
uöt32
 
A
, 
uöt8
 
V
) {

658 
uöt32
 
mask
 = 0xFF ^ ((
EXPREGS
[0] & 0x40) << 1);

660 
uöt32
 
b™k
 = (((
EXPREGS
[0] >> 4) & 2) | (EXPREGS[0] & 4) | ((EXPREGS[0] >> 6) & (EXPREGS[0] >> 4) & 1)) << 7;

661 
	`£tchr1
(
A
, 
b™k
 | (
V
 & 
mask
));

662 
	}
}

664 
	$DECLFW
(
M52Wrôe
) {

665 i‡(
EXPREGS
[1]) {

666 
WRAM
[
A
 - 0x6000] = 
V
;

669 
EXPREGS
[1] = 
V
 & 0x80;

670 
EXPREGS
[0] = 
V
;

671 
	`FixMMC3PRG
(
MMC3_cmd
);

672 
	`FixMMC3CHR
(
MMC3_cmd
);

673 
	}
}

675 
	$M52Re£t
() {

676 
EXPREGS
[0] = EXPREGS[1] = 0;

677 
	`MMC3RegRe£t
();

678 
	}
}

680 
	$M52Powî
() {

681 
	`M52Re£t
();

682 
	`GíMMC3Powî
();

683 
	`SëWrôeH™dÀr
(0x6000, 0x7FFF, 
M52Wrôe
);

684 
	}
}

686 
	$M≠≥r52_Inô
(
C¨tInfo
 *
öfo
) {

687 
	`GíMMC3_Inô
(
öfo
, 256, 256, 8, info->
b©ãry
);

688 
cwøp
 = 
M52CW
;

689 
pwøp
 = 
M52PW
;

690 
öfo
->
Re£t
 = 
M52Re£t
;

691 
öfo
->
Powî
 = 
M52Powî
;

692 
	`AddExSèã
(
EXPREGS
, 2, 0, "EXPR");

693 
	}
}

697 
	$M76CW
(
uöt32
 
A
, 
uöt8
 
V
) {

698 i‡(
A
 >= 0x1000)

699 
	`£tchr2
((
A
 & 0xC00Ë<< 1, 
V
);

700 
	}
}

702 
	$M≠≥r76_Inô
(
C¨tInfo
 *
öfo
) {

703 
	`GíMMC3_Inô
(
öfo
, 128, 128, 0, 0);

704 
cwøp
 = 
M76CW
;

705 
	}
}

709 
	$M74CW
(
uöt32
 
A
, 
uöt8
 
V
) {

710 i‡((
V
 == 8) || (V == 9))

711 
	`£tchr1r
(0x10, 
A
, 
V
);

713 
	`£tchr1r
(0, 
A
, 
V
);

714 
	}
}

716 
	$M≠≥r74_Inô
(
C¨tInfo
 *
öfo
) {

717 
	`GíMMC3_Inô
(
öfo
, 512, 256, 8, info->
b©ãry
);

718 
cwøp
 = 
M74CW
;

719 
CHRRAMSIZE
 = 2048;

720 
CHRRAM
 = (
uöt8
*)
	`FCEU_gmÆloc
(
CHRRAMSIZE
);

721 
	`SëupC¨tCHRM≠pög
(0x10, 
CHRRAM
, 
CHRRAMSIZE
, 1);

722 
	`AddExSèã
(
CHRRAM
, 
CHRRAMSIZE
, 0, "CHRR");

723 
	}
}

727 
uöt8
 
	gcmdö
;

728 
uöt8
 
	gm114_≥rm
[8] = { 0, 3, 1, 5, 6, 7, 2, 4 };

730 
	$M114PWRAP
(
uöt32
 
A
, 
uöt8
 
V
) {

731 i‡(
EXPREGS
[0] & 0x80) {

733 
	`£çrg16
(0x8000, 
EXPREGS
[0] & 0xF);

734 
	`£çrg16
(0xC000, 
EXPREGS
[0] & 0xF);

737 
	`£çrg8
(
A
, 
V
 & 0x3F);

739 
	}
}

741 
	$DECLFW
(
M114Wrôe
) {

742 
A
 & 0xE001) {

743 0x8001: 
	`MMC3_CMDWrôe
(0xA000, 
V
); ;

744 0xA000: 
	`MMC3_CMDWrôe
(0x8000, (
V
 & 0xC0Ë| (
m114_≥rm
[V & 7])); 
cmdö
 = 1; ;

745 0xC000: i‡(!
cmdö
Ë; 
	`MMC3_CMDWrôe
(0x8001, 
V
); cmdin = 0; ;

746 0xA001: 
IRQL©ch
 = 
V
; ;

747 0xC001: 
IRQRñﬂd
 = 1; ;

748 0xE000: 
	`X6502_IRQEnd
(
FCEU_IQEXT
); 
IRQa
 = 0; ;

749 0xE001: 
IRQa
 = 1; ;

751 
	}
}

753 
	$DECLFW
(
M114ExWrôe
) {

754 i‡(
A
 <= 0x7FFF) {

755 
EXPREGS
[0] = 
V
;

756 
	`FixMMC3PRG
(
MMC3_cmd
);

758 
	}
}

760 
	$M114Powî
() {

761 
	`GíMMC3Powî
();

762 
	`SëWrôeH™dÀr
(0x8000, 0xFFFF, 
M114Wrôe
);

763 
	`SëWrôeH™dÀr
(0x5000, 0x7FFF, 
M114ExWrôe
);

764 
	}
}

766 
	$M114Re£t
() {

767 
EXPREGS
[0] = 0;

768 
	`MMC3RegRe£t
();

769 
	}
}

771 
	$M≠≥r114_Inô
(
C¨tInfo
 *
öfo
) {

772 
isRevB
 = 0;

773 
	`GíMMC3_Inô
(
öfo
, 256, 256, 0, 0);

774 
pwøp
 = 
M114PWRAP
;

775 
öfo
->
Powî
 = 
M114Powî
;

776 
öfo
->
Re£t
 = 
M114Re£t
;

777 
	`AddExSèã
(
EXPREGS
, 1, 0, "EXPR");

778 
	`AddExSèã
(&
cmdö
, 1, 0, "CMDI");

779 
	}
}

783 
	$M115PW
(
uöt32
 
A
, 
uöt8
 
V
) {

784 i‡(
EXPREGS
[0] & 0x80) {

785 i‡(
EXPREGS
[0] & 0x20)

786 
	`£çrg32
(0x8000, (
EXPREGS
[0] & 0x0F) >> 1);

788 
	`£çrg16
(0x8000, (
EXPREGS
[0] & 0x0F));

789 
	`£çrg16
(0xC000, (
EXPREGS
[0] & 0x0F));

792 
	`£çrg8
(
A
, 
V
);

793 
	}
}

795 
	$M115CW
(
uöt32
 
A
, 
uöt8
 
V
) {

796 
	`£tchr1
(
A
, (
uöt32
)
V
 | ((
EXPREGS
[1] & 1) << 8));

797 
	}
}

799 
	$DECLFW
(
M115Wrôe
) {

800 i‡(
A
 == 0x5080)

801 
EXPREGS
[2] = 
V
;

802 i‡(
A
 == 0x6000)

803 
EXPREGS
[0] = 
V
;

804 i‡(
A
 == 0x6001)

805 
EXPREGS
[1] = 
V
;

806 
	`FixMMC3PRG
(
MMC3_cmd
);

807 
	}
}

809 
	$DECLFR
(
M115Ród
) {

810  
EXPREGS
[2];

811 
	}
}

813 
	$M115Powî
() {

814 
	`GíMMC3Powî
();

815 
	`SëWrôeH™dÀr
(0x4100, 0x7FFF, 
M115Wrôe
);

816 
	`SëRódH™dÀr
(0x5000, 0x5FFF, 
M115Ród
);

817 
	}
}

819 
	$M≠≥r115_Inô
(
C¨tInfo
 *
öfo
) {

820 
	`GíMMC3_Inô
(
öfo
, 128, 512, 0, 0);

821 
cwøp
 = 
M115CW
;

822 
pwøp
 = 
M115PW
;

823 
öfo
->
Powî
 = 
M115Powî
;

824 
	`AddExSèã
(
EXPREGS
, 3, 0, "EXPR");

825 
	}
}

829 
uöt8
 
	gPPUCHRBus
;

830 
uöt8
 
	gTKSMIR
[8];

832 
	$TKSPPU
(
uöt32
 
A
) {

833 
A
 &= 0x1FFF;

834 
A
 >>= 10;

835 
PPUCHRBus
 = 
A
;

836 
	`£tmúr‹
(
MI_0
 + 
TKSMIR
[
A
]);

837 
	}
}

839 
	$TKSWRAP
(
uöt32
 
A
, 
uöt8
 
V
) {

840 
TKSMIR
[
A
 >> 10] = 
V
 >> 7;

841 
	`£tchr1
(
A
, 
V
 & 0x7F);

842 i‡(
PPUCHRBus
 =(
A
 >> 10))

843 
	`£tmúr‹
(
MI_0
 + (
V
 >> 7));

844 
	}
}

848 
	$TQWRAP
(
uöt32
 
A
, 
uöt8
 
V
) {

849 
	`£tchr1r
((
V
 & 0x40Ë>> 2, 
A
, V & 0x3F);

850 
	}
}

852 
	$M≠≥r119_Inô
(
C¨tInfo
 *
öfo
) {

853 
	`GíMMC3_Inô
(
öfo
, 512, 64, 0, 0);

854 
cwøp
 = 
TQWRAP
;

855 
CHRRAMSIZE
 = 8192;

856 
CHRRAM
 = (
uöt8
*)
	`FCEU_gmÆloc
(
CHRRAMSIZE
);

857 
	`SëupC¨tCHRM≠pög
(0x10, 
CHRRAM
, 
CHRRAMSIZE
, 1);

858 
	`AddExSèã
(
CHRRAM
, 
CHRRAMSIZE
, 0, "CHRR");

859 
	}
}

863 
	$M134PW
(
uöt32
 
A
, 
uöt8
 
V
) {

864 
	`£çrg8
(
A
, (
V
 & 0x1FË| ((
EXPREGS
[0] & 2) << 4));

865 
	}
}

867 
	$M134CW
(
uöt32
 
A
, 
uöt8
 
V
) {

868 
	`£tchr1
(
A
, (
V
 & 0xFFË| ((
EXPREGS
[0] & 0x20) << 3));

869 
	}
}

871 
	$DECLFW
(
M134Wrôe
) {

872 
EXPREGS
[0] = 
V
;

873 
	`FixMMC3CHR
(
MMC3_cmd
);

874 
	`FixMMC3PRG
(
MMC3_cmd
);

875 
	}
}

877 
	$M134Powî
() {

878 
EXPREGS
[0] = 0;

879 
	`GíMMC3Powî
();

880 
	`SëWrôeH™dÀr
(0x6001, 0x6001, 
M134Wrôe
);

881 
	}
}

883 
	$M134Re£t
() {

884 
EXPREGS
[0] = 0;

885 
	`MMC3RegRe£t
();

886 
	}
}

888 
	$M≠≥r134_Inô
(
C¨tInfo
 *
öfo
) {

889 
	`GíMMC3_Inô
(
öfo
, 256, 256, 0, 0);

890 
pwøp
 = 
M134PW
;

891 
cwøp
 = 
M134CW
;

892 
öfo
->
Powî
 = 
M134Powî
;

893 
öfo
->
Re£t
 = 
M134Re£t
;

894 
	`AddExSèã
(
EXPREGS
, 4, 0, "EXPR");

895 
	}
}

899 
	$M165CW
(
uöt32
 
A
, 
uöt8
 
V
) {

900 i‡(
V
 == 0)

901 
	`£tchr4r
(0x10, 
A
, 0);

903 
	`£tchr4
(
A
, 
V
 >> 2);

904 
	}
}

906 
	$M165PPUFD
() {

907 i‡(
EXPREGS
[0] == 0xFD) {

908 
	`M165CW
(0x0000, 
DRegBuf
[0]);

909 
	`M165CW
(0x1000, 
DRegBuf
[2]);

911 
	}
}

913 
	$M165PPUFE
() {

914 i‡(
EXPREGS
[0] == 0xFE) {

915 
	`M165CW
(0x0000, 
DRegBuf
[1]);

916 
	`M165CW
(0x1000, 
DRegBuf
[4]);

918 
	}
}

920 
	$M165CWM
(
uöt32
 
A
, 
uöt8
 
V
) {

921 i‡(((
MMC3_cmd
 & 0x7) == 0) || ((MMC3_cmd & 0x7) == 2))

922 
	`M165PPUFD
();

923 i‡(((
MMC3_cmd
 & 0x7) == 1) || ((MMC3_cmd & 0x7) == 4))

924 
	`M165PPUFE
();

925 
	}
}

927 
	$M165PPU
(
uöt32
 
A
) {

928 i‡((
A
 & 0x1FF0) == 0x1FD0) {

929 
EXPREGS
[0] = 0xFD;

930 
	`M165PPUFD
();

931 } i‡((
A
 & 0x1FF0) == 0x1FE0) {

932 
EXPREGS
[0] = 0xFE;

933 
	`M165PPUFE
();

935 
	}
}

937 
	$M165Powî
() {

938 
EXPREGS
[0] = 0xFD;

939 
	`GíMMC3Powî
();

940 
	}
}

942 
	$M≠≥r165_Inô
(
C¨tInfo
 *
öfo
) {

943 
	`GíMMC3_Inô
(
öfo
, 512, 128, 8, info->
b©ãry
);

944 
cwøp
 = 
M165CWM
;

945 
PPU_hook
 = 
M165PPU
;

946 
öfo
->
Powî
 = 
M165Powî
;

947 
CHRRAMSIZE
 = 4096;

948 
CHRRAM
 = (
uöt8
*)
	`FCEU_gmÆloc
(
CHRRAMSIZE
);

949 
	`SëupC¨tCHRM≠pög
(0x10, 
CHRRAM
, 
CHRRAMSIZE
, 1);

950 
	`AddExSèã
(
CHRRAM
, 
CHRRAMSIZE
, 0, "CHRR");

951 
	`AddExSèã
(
EXPREGS
, 4, 0, "EXPR");

952 
	}
}

956 
	$M191CW
(
uöt32
 
A
, 
uöt8
 
V
) {

957 
	`£tchr1r
((
V
 & 0x80Ë>> 3, 
A
, V);

958 
	}
}

960 
	$M≠≥r191_Inô
(
C¨tInfo
 *
öfo
) {

961 
	`GíMMC3_Inô
(
öfo
, 256, 256, 8, info->
b©ãry
);

962 
cwøp
 = 
M191CW
;

963 
CHRRAMSIZE
 = 2048;

964 
CHRRAM
 = (
uöt8
*)
	`FCEU_gmÆloc
(
CHRRAMSIZE
);

965 
	`SëupC¨tCHRM≠pög
(0x10, 
CHRRAM
, 
CHRRAMSIZE
, 1);

966 
	`AddExSèã
(
CHRRAM
, 
CHRRAMSIZE
, 0, "CHRR");

967 
	}
}

971 
	$M192CW
(
uöt32
 
A
, 
uöt8
 
V
) {

974 i‡((
V
 == 8) || (V == 9) || (V == 0xA) || (V == 0xB))

975 
	`£tchr1r
(0x10, 
A
, 
V
);

977 
	`£tchr1r
(0, 
A
, 
V
);

978 
	}
}

980 
	$M≠≥r192_Inô
(
C¨tInfo
 *
öfo
) {

981 
	`GíMMC3_Inô
(
öfo
, 512, 256, 8, info->
b©ãry
);

982 
cwøp
 = 
M192CW
;

983 
CHRRAMSIZE
 = 4096;

984 
CHRRAM
 = (
uöt8
*)
	`FCEU_gmÆloc
(
CHRRAMSIZE
);

985 
	`SëupC¨tCHRM≠pög
(0x10, 
CHRRAM
, 
CHRRAMSIZE
, 1);

986 
	`AddExSèã
(
CHRRAM
, 
CHRRAMSIZE
, 0, "CHRR");

987 
	}
}

991 
	$M194CW
(
uöt32
 
A
, 
uöt8
 
V
) {

992 i‡(
V
 <= 1)

993 
	`£tchr1r
(0x10, 
A
, 
V
);

995 
	`£tchr1r
(0, 
A
, 
V
);

996 
	}
}

998 
	$M≠≥r194_Inô
(
C¨tInfo
 *
öfo
) {

999 
	`GíMMC3_Inô
(
öfo
, 512, 256, 8, info->
b©ãry
);

1000 
cwøp
 = 
M194CW
;

1001 
CHRRAMSIZE
 = 2048;

1002 
CHRRAM
 = (
uöt8
*)
	`FCEU_gmÆloc
(
CHRRAMSIZE
);

1003 
	`SëupC¨tCHRM≠pög
(0x10, 
CHRRAM
, 
CHRRAMSIZE
, 1);

1004 
	`AddExSèã
(
CHRRAM
, 
CHRRAMSIZE
, 0, "CHRR");

1005 
	}
}

1008 
	$M195CW
(
uöt32
 
A
, 
uöt8
 
V
) {

1009 i‡(
V
 <= 3)

1010 
	`£tchr1r
(0x10, 
A
, 
V
);

1012 
	`£tchr1r
(0, 
A
, 
V
);

1013 
	}
}

1015 
	$M195Powî
() {

1016 
	`GíMMC3Powî
();

1017 
	`£çrg4r
(0x10, 0x5000, 2);

1018 
	`SëWrôeH™dÀr
(0x5000, 0x5fff, 
C¨tBW
);

1019 
	`SëRódH™dÀr
(0x5000, 0x5fff, 
C¨tBR
);

1020 
	}
}

1022 
	$M≠≥r195_Inô
(
C¨tInfo
 *
öfo
) {

1023 
	`GíMMC3_Inô
(
öfo
, 512, 256, 16, info->
b©ãry
);

1024 
cwøp
 = 
M195CW
;

1025 
öfo
->
Powî
 = 
M195Powî
;

1026 
CHRRAMSIZE
 = 4096;

1027 
CHRRAM
 = (
uöt8
*)
	`FCEU_gmÆloc
(
CHRRAMSIZE
);

1028 
	`SëupC¨tCHRM≠pög
(0x10, 
CHRRAM
, 
CHRRAMSIZE
, 1);

1029 
	`AddExSèã
(
CHRRAM
, 
CHRRAMSIZE
, 0, "CHRR");

1030 
	}
}

1038 
	$M196PW
(
uöt32
 
A
, 
uöt8
 
V
) {

1039 i‡(
EXPREGS
[0])

1040 
	`£çrg32
(0x8000, 
EXPREGS
[1]);

1042 
	`£çrg8
(
A
, 
V
);

1043 
	}
}

1045 
	$DECLFW
(
M≠≥r196Wrôe
) {

1046 i‡(
A
 >= 0xC000) {

1047 
A
 = (A & 0xFFFE) | ((A >> 2) & 1) | ((A >> 3) & 1);

1048 
	`MMC3_IRQWrôe
(
A
, 
V
);

1050 
A
 = (A & 0xFFFE) | ((A >> 2) & 1) | ((A >> 3) & 1) | ((A >> 1) & 1);

1051 
	`MMC3_CMDWrôe
(
A
, 
V
);

1053 
	}
}

1055 
	$DECLFW
(
M≠≥r196WrôeLo
) {

1056 
EXPREGS
[0] = 1;

1057 
EXPREGS
[1] = (
V
 & 0xf) | (V >> 4);

1058 
	`FixMMC3PRG
(
MMC3_cmd
);

1059 
	}
}

1061 
	$M≠≥r196Powî
() {

1062 
	`GíMMC3Powî
();

1063 
EXPREGS
[0] = EXPREGS[1] = 0;

1064 
	`SëWrôeH™dÀr
(0x6000, 0x6FFF, 
M≠≥r196WrôeLo
);

1065 
	`SëWrôeH™dÀr
(0x8000, 0xFFFF, 
M≠≥r196Wrôe
);

1066 
	}
}

1068 
	$M≠≥r196_Inô
(
C¨tInfo
 *
öfo
) {

1069 
	`GíMMC3_Inô
(
öfo
, 128, 128, 0, 0);

1070 
pwøp
 = 
M196PW
;

1071 
öfo
->
Powî
 = 
M≠≥r196Powî
;

1072 
	}
}

1079 
	$UNLMÆiSBPW
(
uöt32
 
A
, 
uöt8
 
V
) {

1080 
	`£çrg8
(
A
, (
V
 & 3) | ((V & 8) >> 1) | ((V & 4) << 1));

1081 
	}
}

1083 
	$UNLMÆiSBCW
(
uöt32
 
A
, 
uöt8
 
V
) {

1084 
	`£tchr1
(
A
, (
V
 & 0xDD) | ((V & 0x20) >> 4) | ((V & 2) << 4));

1085 
	}
}

1087 
	$DECLFW
(
UNLMÆiSBWrôe
) {

1088 i‡(
A
 >= 0xC000) {

1089 
A
 = (A & 0xFFFE) | ((A >> 2) & 1) | ((A >> 3) & 1);

1090 
	`MMC3_IRQWrôe
(
A
, 
V
);

1092 
A
 = (A & 0xFFFE) | ((A >> 3) & 1);

1093 
	`MMC3_CMDWrôe
(
A
, 
V
);

1095 
	}
}

1097 
	$UNLMÆiSBPowî
() {

1098 
	`GíMMC3Powî
();

1099 
	`SëWrôeH™dÀr
(0x8000, 0xFFFF, 
UNLMÆiSBWrôe
);

1100 
	}
}

1102 
	$UNLMÆiSB_Inô
(
C¨tInfo
 *
öfo
) {

1103 
	`GíMMC3_Inô
(
öfo
, 128, 128, 0, 0);

1104 
pwøp
 = 
UNLMÆiSBPW
;

1105 
cwøp
 = 
UNLMÆiSBCW
;

1106 
öfo
->
Powî
 = 
UNLMÆiSBPowî
;

1107 
	}
}

1111 
	$M197CW
(
uöt32
 
A
, 
uöt8
 
V
) {

1112 i‡(
A
 == 0x0000)

1113 
	`£tchr4
(0x0000, 
V
 >> 1);

1114 i‡(
A
 == 0x1000)

1115 
	`£tchr2
(0x1000, 
V
);

1116 i‡(
A
 == 0x1400)

1117 
	`£tchr2
(0x1800, 
V
);

1118 
	}
}

1120 
	$M≠≥r197_Inô
(
C¨tInfo
 *
öfo
) {

1121 
	`GíMMC3_Inô
(
öfo
, 128, 512, 8, 0);

1122 
cwøp
 = 
M197CW
;

1123 
	}
}

1127 
	$M198PW
(
uöt32
 
A
, 
uöt8
 
V
) {

1128 i‡(
V
 >= 0x50)

1129 
	`£çrg8
(
A
, 
V
 & 0x4F);

1131 
	`£çrg8
(
A
, 
V
);

1132 
	}
}

1134 
	$M≠≥r198_Inô
(
C¨tInfo
 *
öfo
) {

1135 
	`GíMMC3_Inô
(
öfo
, 1024, 0, 16, info->
b©ãry
);

1136 
pwøp
 = 
M198PW
;

1137 
öfo
->
Powî
 = 
M195Powî
;

1138 
	}
}

1143 
	$M205PW
(
uöt32
 
A
, 
uöt8
 
V
) {

1145 
	`£çrg8
(
A
, (
V
 & 0x0fË| 
EXPREGS
[0]);

1146 
	}
}

1148 
	$M205CW
(
uöt32
 
A
, 
uöt8
 
V
) {

1150 
	`£tchr1
(
A
, (
V
 & 0x7FË| (
EXPREGS
[0] << 3));

1151 
	}
}

1153 
	$DECLFW
(
M205Wrôe0
) {

1154 i‡(
EXPREGS
[2] == 0) {

1155 
EXPREGS
[0] = 
A
 & 0x30;

1156 
EXPREGS
[2] = 
A
 & 0x80;

1157 
	`FixMMC3PRG
(
MMC3_cmd
);

1158 
	`FixMMC3CHR
(
MMC3_cmd
);

1160 
	`C¨tBW
(
A
, 
V
);

1161 
	}
}

1163 
	$DECLFW
(
M205Wrôe1
) {

1164 i‡(
EXPREGS
[2] == 0) {

1165 
EXPREGS
[0] = 
V
 & 0x30;

1166 
	`FixMMC3PRG
(
MMC3_cmd
);

1167 
	`FixMMC3CHR
(
MMC3_cmd
);

1169 
	`C¨tBW
(
A
, 
V
);

1170 
	}
}

1172 
	$M205Re£t
() {

1173 
EXPREGS
[0] = EXPREGS[2] = 0;

1174 
	`MMC3RegRe£t
();

1175 
	}
}

1177 
	$M205Powî
() {

1178 
	`GíMMC3Powî
();

1179 
	`SëWrôeH™dÀr
(0x6000, 0x6fff, 
M205Wrôe0
);

1180 
	`SëWrôeH™dÀr
(0x7000, 0x7fff, 
M205Wrôe1
);

1181 
	}
}

1183 
	$M≠≥r205_Inô
(
C¨tInfo
 *
öfo
) {

1184 
	`GíMMC3_Inô
(
öfo
, 128, 128, 8, 0);

1185 
pwøp
 = 
M205PW
;

1186 
cwøp
 = 
M205CW
;

1187 
öfo
->
Powî
 = 
M205Powî
;

1188 
öfo
->
Re£t
 = 
M205Re£t
;

1189 
	`AddExSèã
(
EXPREGS
, 1, 0, "EXPR");

1190 
	}
}

1194 
	$M245CW
(
uöt32
 
A
, 
uöt8
 
V
) {

1195 i‡(!
UNIFchºama
)

1196 
	`£tchr1
(
A
, 
V
 & 7);

1197 
EXPREGS
[0] = 
V
;

1198 
	`FixMMC3PRG
(
MMC3_cmd
);

1199 
	}
}

1201 
	$M245PW
(
uöt32
 
A
, 
uöt8
 
V
) {

1202 
	`£çrg8
(
A
, (
V
 & 0x3FË| ((
EXPREGS
[0] & 2) << 5));

1203 
	}
}

1205 
	$M245Powî
() {

1206 
EXPREGS
[0] = 0;

1207 
	`GíMMC3Powî
();

1208 
	}
}

1210 
	$M≠≥r245_Inô
(
C¨tInfo
 *
öfo
) {

1211 
	`GíMMC3_Inô
(
öfo
, 512, 256, 8, info->
b©ãry
);

1212 
cwøp
 = 
M245CW
;

1213 
pwøp
 = 
M245PW
;

1214 
öfo
->
Powî
 = 
M245Powî
;

1215 
	`AddExSèã
(
EXPREGS
, 1, 0, "EXPR");

1216 
	}
}

1220 
	$M249PW
(
uöt32
 
A
, 
uöt8
 
V
) {

1221 i‡(
EXPREGS
[0] & 0x2) {

1222 i‡(
V
 < 0x20)

1223 
V
 = (V & 1) | ((V >> 3) & 2) | ((V >> 1) & 4) | ((V << 2) & 8) | ((V << 2) & 0x10);

1225 
V
 -= 0x20;

1226 
V
 = (V & 3) | ((V >> 1) & 4) | ((V >> 4) & 8) | ((V >> 2) & 0x10) | ((V << 3) & 0x20) | ((V << 2) & 0xC0);

1229 
	`£çrg8
(
A
, 
V
);

1230 
	}
}

1232 
	$M249CW
(
uöt32
 
A
, 
uöt8
 
V
) {

1233 i‡(
EXPREGS
[0] & 0x2)

1234 
V
 = (V & 3) | ((V >> 1) & 4) | ((V >> 4) & 8) | ((V >> 2) & 0x10) | ((V << 3) & 0x20) | ((V << 2) & 0xC0);

1235 
	`£tchr1
(
A
, 
V
);

1236 
	}
}

1238 
	$DECLFW
(
M249Wrôe
) {

1239 
EXPREGS
[0] = 
V
;

1240 
	`FixMMC3PRG
(
MMC3_cmd
);

1241 
	`FixMMC3CHR
(
MMC3_cmd
);

1242 
	}
}

1244 
	$M249Powî
() {

1245 
EXPREGS
[0] = 0;

1246 
	`GíMMC3Powî
();

1247 
	`SëWrôeH™dÀr
(0x5000, 0x5000, 
M249Wrôe
);

1248 
	}
}

1250 
	$M≠≥r249_Inô
(
C¨tInfo
 *
öfo
) {

1251 
	`GíMMC3_Inô
(
öfo
, 512, 256, 8, info->
b©ãry
);

1252 
cwøp
 = 
M249CW
;

1253 
pwøp
 = 
M249PW
;

1254 
öfo
->
Powî
 = 
M249Powî
;

1255 
	`AddExSèã
(
EXPREGS
, 1, 0, "EXPR");

1256 
	}
}

1260 
	$DECLFW
(
M250Wrôe
) {

1261 
	`MMC3_CMDWrôe
((
A
 & 0xE000) | ((A & 0x400) >> 10), A & 0xFF);

1262 
	}
}

1264 
	$DECLFW
(
M250IRQWrôe
) {

1265 
	`MMC3_IRQWrôe
((
A
 & 0xE000) | ((A & 0x400) >> 10), A & 0xFF);

1266 
	}
}

1268 
	$M250_Powî
() {

1269 
	`GíMMC3Powî
();

1270 
	`SëWrôeH™dÀr
(0x8000, 0xBFFF, 
M250Wrôe
);

1271 
	`SëWrôeH™dÀr
(0xC000, 0xFFFF, 
M250IRQWrôe
);

1272 
	}
}

1274 
	$M≠≥r250_Inô
(
C¨tInfo
 *
öfo
) {

1275 
	`GíMMC3_Inô
(
öfo
, 512, 256, 8, info->
b©ãry
);

1276 
öfo
->
Powî
 = 
M250_Powî
;

1277 
	}
}

1281 
	$DECLFR
(
MR254WRAM
) {

1282 i‡(
EXPREGS
[0])

1283  
WRAM
[
A
 - 0x6000];

1285  
WRAM
[
A
 - 0x6000] ^ 
EXPREGS
[1];

1286 
	}
}

1288 
	$DECLFW
(
M254Wrôe
) {

1289 
A
) {

1290 0x8000: 
EXPREGS
[0] = 0xff; ;

1291 0xA001: 
EXPREGS
[1] = 
V
; ;

1293 
	`MMC3_CMDWrôe
(
A
, 
V
);

1294 
	}
}

1296 
	$M254_Powî
() {

1297 
	`GíMMC3Powî
();

1298 
	`SëWrôeH™dÀr
(0x8000, 0xBFFF, 
M254Wrôe
);

1299 
	`SëRódH™dÀr
(0x6000, 0x7FFF, 
MR254WRAM
);

1300 
	}
}

1302 
	$M≠≥r254_Inô
(
C¨tInfo
 *
öfo
) {

1303 
	`GíMMC3_Inô
(
öfo
, 128, 128, 8, info->
b©ãry
);

1304 
öfo
->
Powî
 = 
M254_Powî
;

1305 
	`AddExSèã
(
EXPREGS
, 2, 0, "EXPR");

1306 
	}
}

1310 
	$TBROM_Inô
(
C¨tInfo
 *
öfo
) {

1311 
	`GíMMC3_Inô
(
öfo
, 64, 64, 0, 0);

1312 
	}
}

1314 
	$TEROM_Inô
(
C¨tInfo
 *
öfo
) {

1315 
	`GíMMC3_Inô
(
öfo
, 32, 32, 0, 0);

1316 
	}
}

1318 
	$TFROM_Inô
(
C¨tInfo
 *
öfo
) {

1319 
	`GíMMC3_Inô
(
öfo
, 512, 64, 0, 0);

1320 
	}
}

1322 
	$TGROM_Inô
(
C¨tInfo
 *
öfo
) {

1323 
	`GíMMC3_Inô
(
öfo
, 512, 0, 0, 0);

1324 
	}
}

1326 
	$TKROM_Inô
(
C¨tInfo
 *
öfo
) {

1327 
	`GíMMC3_Inô
(
öfo
, 512, 256, 8, info->
b©ãry
);

1328 
	}
}

1330 
	$TLROM_Inô
(
C¨tInfo
 *
öfo
) {

1331 
	`GíMMC3_Inô
(
öfo
, 512, 256, 0, 0);

1332 
	}
}

1334 
	$TSROM_Inô
(
C¨tInfo
 *
öfo
) {

1335 
	`GíMMC3_Inô
(
öfo
, 512, 256, 8, 0);

1336 
	}
}

1338 
	$TLSROM_Inô
(
C¨tInfo
 *
öfo
) {

1339 
	`GíMMC3_Inô
(
öfo
, 512, 256, 8, 0);

1340 
cwøp
 = 
TKSWRAP
;

1341 
mwøp
 = 
GENNOMWRAP
;

1342 
PPU_hook
 = 
TKSPPU
;

1343 
	`AddExSèã
(&
PPUCHRBus
, 1, 0, "PPUC");

1344 
	}
}

1346 
	$TKSROM_Inô
(
C¨tInfo
 *
öfo
) {

1347 
	`GíMMC3_Inô
(
öfo
, 512, 256, 8, info->
b©ãry
);

1348 
cwøp
 = 
TKSWRAP
;

1349 
mwøp
 = 
GENNOMWRAP
;

1350 
PPU_hook
 = 
TKSPPU
;

1351 
	`AddExSèã
(&
PPUCHRBus
, 1, 0, "PPUC");

1352 
	}
}

1354 
	$TQROM_Inô
(
C¨tInfo
 *
öfo
) {

1355 
	`GíMMC3_Inô
(
öfo
, 512, 64, 0, 0);

1356 
cwøp
 = 
TQWRAP
;

1357 
CHRRAMSIZE
 = 8192;

1358 
CHRRAM
 = (
uöt8
*)
	`FCEU_gmÆloc
(
CHRRAMSIZE
);

1359 
	`SëupC¨tCHRM≠pög
(0x10, 
CHRRAM
, 
CHRRAMSIZE
, 1);

1360 
	`AddExSèã
(
CHRRAM
, 
CHRRAMSIZE
, 0, "CHRR");

1361 
	}
}

1363 
	$HKROM_Inô
(
C¨tInfo
 *
öfo
) {

1364 
	`GíMMC3_Inô
(
öfo
, 512, 512, 1, info->
b©ãry
);

1365 
	}
}

	@fceux-am/src/boards/mmc3.h

1 
uöt8
 
MMC3_cmd
;

2 
uöt8
 
mmc3›ts
;

3 
uöt8
 
A000B
;

4 
uöt8
 
A001B
;

5 
uöt8
 
EXPREGS
[8];

6 
uöt8
 
DRegBuf
[8];

8 #unde‡
IRQCou¡


9 #unde‡
IRQL©ch


10 #unde‡
IRQa


11 
uöt8
 
IRQCou¡
,
IRQL©ch
,
IRQa
;

12 
uöt8
 
IRQRñﬂd
;

14 (*
pwøp
)(
uöt32
 
A
, 
uöt8
 
V
);

15 (*
cwøp
)(
uöt32
 
A
, 
uöt8
 
V
);

16 (*
mwøp
)(
uöt8
 
V
);

18 
	`GíMMC3Powî
();

19 
	`GíMMC3Re°‹e
(
vîsi⁄
);

20 
	`MMC3RegRe£t
();

21 
	`FixMMC3PRG
(
V
);

22 
	`FixMMC3CHR
(
V
);

23 
	`DECLFW
(
MMC3_CMDWrôe
);

24 
	`DECLFW
(
MMC3_IRQWrôe
);

26 
	`GíMMC3_Inô
(
C¨tInfo
 *
öfo
, 
¥g
, 
chr
, 
wøm
, 
b©ãry
);

	@fceux-am/src/boards/mmc5.cpp

23 
	~"m≠öc.h
"

25 
	#ABANKS
 
MMC5SPRVPage


	)

26 
	#BBANKS
 
MMC5BGVPage


	)

27 
	#S¥ôeON
 (
PPU
[1] & 0x10)

28 
	#S¸ìnON
 (
PPU
[1] & 0x08)

29 
	#PPUON
 (
PPU
[1] & 0x18)

30 
	#S¥ôe16
 (
PPU
[0] & 0x20)

31 

	)

32 (*
sfun
)(
P
);

33 (*
psfun
)();

35 
	`MMC5RunSound
(
Cou¡
);

36 
	`MMC5RunSoundHQ
();

38 
INLINE
 
	$MMC5SPRVROM_BANK1
(
uöt32
 
A
, uöt32 
V
) {

39 i‡(
CHR±r
[0]) {

40 
V
 &
CHRmask1
[0];

41 
MMC5SPRVPage
[(
A
Ë>> 10] = &
CHR±r
[0][(
V
) << 10] - (A);

43 
	}
}

45 
INLINE
 
	$MMC5BGVROM_BANK1
(
uöt32
 
A
, uöt32 
V
) {

46 i‡(
CHR±r
[0]) {

47 
V
 &
CHRmask1
[0]; 
MMC5BGVPage
[(
A
Ë>> 10] = &
CHR±r
[0][(V) << 10] - (A);

49 
	}
}

51 
INLINE
 
	$MMC5SPRVROM_BANK2
(
uöt32
 
A
, uöt32 
V
) {

52 i‡(
CHR±r
[0]) {

53 
V
 &
CHRmask2
[0]; 
MMC5SPRVPage
[(
A
Ë>> 10] = MMC5SPRVPage[((AË>> 10Ë+ 1] = &
CHR±r
[0][(V) << 11] - (A);

55 
	}
}

56 
INLINE
 
	$MMC5BGVROM_BANK2
(
uöt32
 
A
, uöt32 
V
) {

57 i‡(
CHR±r
[0]) {

58 
V
 &
CHRmask2
[0]; 
MMC5BGVPage
[(
A
Ë>> 10] = MMC5BGVPage[((AË>> 10Ë+ 1] = &
CHR±r
[0][(V) << 11] - (A);

60 
	}
}

62 
INLINE
 
	$MMC5SPRVROM_BANK4
(
uöt32
 
A
, uöt32 
V
) {

63 i‡(
CHR±r
[0]) {

64 
V
 &
CHRmask4
[0]; 
MMC5SPRVPage
[(
A
Ë>> 10] = MMC5SPRVPage[((AË>> 10Ë+ 1] = MMC5SPRVPage[((AË>> 10Ë+ 2] = MMC5SPRVPage[((AË>> 10Ë+ 3] = &
CHR±r
[0][(V) << 12] - (A);

66 
	}
}

67 
INLINE
 
	$MMC5BGVROM_BANK4
(
uöt32
 
A
, uöt32 
V
) {

68 i‡(
CHR±r
[0]) {

69 
V
 &
CHRmask4
[0]; 
MMC5BGVPage
[(
A
Ë>> 10] = MMC5BGVPage[((AË>> 10Ë+ 1] = MMC5BGVPage[((AË>> 10Ë+ 2] = MMC5BGVPage[((AË>> 10Ë+ 3] = &
CHR±r
[0][(V) << 12] - (A);

71 
	}
}

73 
INLINE
 
	$MMC5SPRVROM_BANK8
(
uöt32
 
V
) {

74 i‡(
CHR±r
[0]) {

75 
V
 &
CHRmask8
[0]; 
MMC5SPRVPage
[0] = MMC5SPRVPage[1] = MMC5SPRVPage[2] = MMC5SPRVPage[3] = MMC5SPRVPage[4] = MMC5SPRVPage[5] = MMC5SPRVPage[6] = MMC5SPRVPage[7] = &
CHR±r
[0][(V) << 13];

77 
	}
}

78 
INLINE
 
	$MMC5BGVROM_BANK8
(
uöt32
 
V
) {

79 i‡(
CHR±r
[0]) {

80 
V
 &
CHRmask8
[0]; 
MMC5BGVPage
[0] = MMC5BGVPage[1] = MMC5BGVPage[2] = MMC5BGVPage[3] = MMC5BGVPage[4] = MMC5BGVPage[5] = MMC5BGVPage[6] = MMC5BGVPage[7] = &
CHR±r
[0][(V) << 13];

82 
	}
}

84 
uöt8
 
	gPRGB™ks
[4];

85 
uöt8
 
	gWRAMPage
;

86 
uöt16
 
	gCHRB™ksA
[8], 
	gCHRB™ksB
[4];

87 
uöt8
 
	gWRAMMaskE«bÀ
[2];

88 
uöt8
 
	gmmc5ABMode
;

90 
uöt8
 
	gIRQSˇ∆öe
, 
	gIRQE«bÀ
;

91 
uöt8
 
	gCHRMode
, 
	gNTAMúr‹ög
, 
	gNTFûl
, 
	gATFûl
;

93 
uöt8
 
	gMMC5IRQR
;

94 
uöt8
 
	gMMC5LöeCou¡î
;

95 
uöt8
 
	gmmc5psize
, 
	gmmc5vsize
;

96 
uöt8
 
	gmul
[2];

98 
uöt32
 
	gWRAMSIZE
 = 0;

99 
uöt8
 *
	gWRAM
 = 
NULL
;

100 
uöt8
 *
	gMMC5fûl
 = 
NULL
;

101 
uöt8
 *
	gExRAM
 = 
NULL
;

103 c⁄° 
	gMMC5WRAMMAX
 = 1<<7;

104 
uöt8
 
	gMMC5WRAMsize
;

105 
uöt8
 
	gMMC5WRAMIndex
[
MMC5WRAMMAX
];

107 
uöt8
 
	gMMC5ROMWrPrŸe˘
[4];

108 
uöt8
 
	gMMC5MemIn
[5];

110 
MMC5CHRA
();

111 
MMC5CHRB
();

113 
	s__ˇπd©a
 {

114 
uöt32
 
	m¸c32
;

115 
uöt8
 
	msize
;

116 } 
	tˇπd©a
;

118 
	#MMC5SPRVRAMADR
(
V
Ë&
MMC5SPRVPage
[(VË>> 10][(V)]

	)

120 
uöt8
* 
	$MMC5BGVRAMADR
(
uöt32
 
A
)

122 if(
√wµu
)

124 if(
S¥ôe16
)

126 
boﬁ
 
isP©ã∫
 = 
PPUON
 != 0;

127 i‡(
µupha£
 =
PPUPHASE_OBJ
 && 
isP©ã∫
)

128  &
ABANKS
[(
A
) >> 10][(A)];

129 i‡(
µupha£
 =
PPUPHASE_BG
 && 
isP©ã∫
)

130  &
BBANKS
[(
A
) >> 10][(A)];

131 if(
mmc5ABMode
 == 0)

132  &
ABANKS
[(
A
) >> 10][(A)];

134  &
BBANKS
[(
A
) >> 10][(A)];

136  &
ABANKS
[(
A
) >> 10][(A)];;

139 i‡(!
S¥ôe16
) {

140 i‡(
mmc5ABMode
 == 0)

141  &
ABANKS
[(
A
) >> 10][(A)];

143  &
BBANKS
[(
A
) >> 10][(A)];

144 }  &
BBANKS
[(
A
) >> 10][(A)];

145 
	}
}

147 
	$mmc5_PPUWrôe
(
uöt32
 
A
, 
uöt8
 
V
) {

148 
uöt32
 
tmp
 = 
A
;

149 
uöt8
 
PALRAM
[0x20];

150 
uöt8
 
UPALRAM
[0x03];

152 i‡(
tmp
 >= 0x3F00) {

153 i‡(!(
tmp
 & 3)) {

154 i‡(!(
tmp
 & 0xC)) {

155 
PALRAM
[0x00] = PALRAM[0x04] = PALRAM[0x08] = PALRAM[0x0C] = 
V
 & 0x3F;

156 
PALRAM
[0x10] = PALRAM[0x14] = PALRAM[0x18] = PALRAM[0x1C] = 
V
 & 0x3F;

159 
UPALRAM
[((
tmp
 & 0xCË>> 2Ë- 1] = 
V
 & 0x3F;

161 
PALRAM
[
tmp
 & 0x1F] = 
V
 & 0x3F;

162 } i‡(
tmp
 < 0x2000) {

163 i‡(
PPUCHRRAM
 & (1 << (
tmp
 >> 10)))

164 
VPage
[
tmp
 >> 10][tmp] = 
V
;

166 i‡(
PPUNTARAM
 & (1 << ((
tmp
 & 0xF00) >> 10)))

167 
v«∑ge
[((
tmp
 & 0xF00Ë>> 10)][tm∞& 0x3FF] = 
V
;

169 
	}
}

171 
uöt32
 
NTRe‰eshAddr
;

172 
uöt8
 
FASTCALL
 
	$mmc5_PPURód
(
uöt32
 
A
)

174 
boﬁ
 
•lô
 = 
Ál£
;

175 if(
√wµu
)

177 if((
MMC5HackSPMode
&0x80Ë&& !(
MMC5HackCHRMode
&2))

179 
èrgë
 = 
MMC5HackSPMode
&0x1f;

180 
side
 = 
MMC5HackSPMode
&0x40;

181 
ht
 = 
NTRe‰eshAddr
&31;

183 if(
side
==0)

185 if(
ht
<
èrgë
Ë
•lô
 = 
åue
;

189 if(
ht
>=
èrgë
Ë
•lô
 = 
åue
;

194 i‡(
A
 < 0x2000)

196 if(
S¥ôe16
)

198 
boﬁ
 
isP©ã∫
 = !!
PPUON
;

199 i‡(
µupha£
 =
PPUPHASE_OBJ
 && 
isP©ã∫
)

200  
ABANKS
[(
A
) >> 10][(A)];

201 i‡(
µupha£
 =
PPUPHASE_BG
 && 
isP©ã∫
)

203 if(
•lô
)

204  
MMC5HackVROMPTR
[
MMC5HackSPPage
*0x1000 + (
A
&0xFFF)];

208 i‡(
MMC5HackCHRMode
 == 1)

209  *
	`FCEUPPU_GëCHR
(
A
,
NTRe‰eshAddr
);

211  
BBANKS
[(
A
) >> 10][(A)];

213 if(
mmc5ABMode
 == 0)

214  
ABANKS
[(
A
) >> 10][(A)];

216  
BBANKS
[(
A
) >> 10][(A)];

220 i‡(
µupha£
 =
PPUPHASE_BG
 && 
S¸ìnON
)

222 if(
•lô
)

223  
MMC5HackVROMPTR
[
MMC5HackSPPage
*0x1000 + (
A
&0xFFF)];

227 i‡(
MMC5HackCHRMode
 == 1)

228  *
	`FCEUPPU_GëCHR
(
A
,
NTRe‰eshAddr
);

231  
ABANKS
[(
A
) >> 10][(A)];

236 if(
•lô
)

238 c⁄° 
kHack
 = -1;

239 
löëûe
 = (
	`√wµu_gë_sˇ∆öe
()+
kHack
)/8 + 
MMC5HackSPS¸ﬁl
;

244 if((
A
&0x3FF)>=0x3C0)

246 
A
 &= ~(0x1C<<1);

247 
A
 |(
löëûe
&0x1C)<<1;

248  
ExRAM
[
A
 & 0x3FF];

252 
A
 &= ~((0x1F<<5) | (1<<0xB));

253 
A
 |(
löëûe
&31)<<5;

254  
ExRAM
[
A
 & 0x3FF];

258 i‡(
MMC5HackCHRMode
 == 1)

260 if((
A
&0x3FF)>=0x3C0)

262 
uöt8
 
byã
 = 
ExRAM
[
NTRe‰eshAddr
 & 0x3ff];

264 
byã
 >>= 6;

265 
byã
 *= 0x55;

266  
byã
;

270  
v«∑ge
[(
A
 >> 10) & 0x3][A & 0x3FF];

272 
	}
}

274 
ˇπd©a
 
	gMMC5C¨tLi°
[] =

304 
	#MMC5_NOCARTS
 ((
MMC5C¨tLi°
Ë/ (MMC5C¨tLi°[0]))

	)

305 
	$Dëe˘MMC5WRAMSize
(
uöt32
 
¸c32
) {

306 
x
;

307 
x
 = 0; x < ()
MMC5_NOCARTS
; x++) {

308 i‡(
¸c32
 =
MMC5C¨tLi°
[
x
].crc32) {

309 if(
MMC5C¨tLi°
[
x
].
size
 > 1)

310 
	`FCEU_¥ötf
(" >8KBÉxternal WRAMÖresent. Use UNIF if you hackÅhe ROM image.\n");

311 (
MMC5C¨tLi°
[
x
].
size
 * 8);

315 
	}
}

317 
	$BuûdWRAMSizeTabÀ
() {

318 
boﬁ
 
Ÿhî
 = 
Ál£
;

320 
x
;

321 
x
 = 0; x < 8; x++) {

322 
MMC5WRAMsize
) {

323 0: 
MMC5WRAMIndex
[
x
] = 255; ;

324 1: 
MMC5WRAMIndex
[
x
] = (x > 3) ? 255 : 0; ;

325 2: 
MMC5WRAMIndex
[
x
] = (x & 4) >> 2; ;

326 4: 
MMC5WRAMIndex
[
x
] = (x > 3) ? 255 : (x & 3); ;

327 8: 
MMC5WRAMIndex
[
x
] = x; ;

328 : 
MMC5WRAMIndex
[
x
] = x; 
Ÿhî
 = 
åue
; ;

332 i‡(
Ÿhî
)

334 
x
 = 0; x < 
MMC5WRAMMAX
 && x < 
MMC5WRAMsize
; ++xË
MMC5WRAMIndex
[x] = x;

335 
x
 = 
MMC5WRAMsize
; x < 
MMC5WRAMMAX
; ++xË
MMC5WRAMIndex
[x] = MMC5WRAMIndex[x-MMC5WRAMsize];

341 
x
 = 8; x < 
MMC5WRAMMAX
; ++xË
MMC5WRAMIndex
[x] = MMC5WRAMIndex[x & 7];

343 
	}
}

345 
	$MMC5CHRA
() {

346 
x
;

347 
mmc5vsize
 & 3) {

349 
	`£tchr8
(
CHRB™ksA
[7]);

350 
	`MMC5SPRVROM_BANK8
(
CHRB™ksA
[7]);

353 
	`£tchr4
(0x0000, 
CHRB™ksA
[3]);

354 
	`£tchr4
(0x1000, 
CHRB™ksA
[7]);

355 
	`MMC5SPRVROM_BANK4
(0x0000, 
CHRB™ksA
[3]);

356 
	`MMC5SPRVROM_BANK4
(0x1000, 
CHRB™ksA
[7]);

359 
	`£tchr2
(0x0000, 
CHRB™ksA
[1]);

360 
	`£tchr2
(0x0800, 
CHRB™ksA
[3]);

361 
	`£tchr2
(0x1000, 
CHRB™ksA
[5]);

362 
	`£tchr2
(0x1800, 
CHRB™ksA
[7]);

363 
	`MMC5SPRVROM_BANK2
(0x0000, 
CHRB™ksA
[1]);

364 
	`MMC5SPRVROM_BANK2
(0x0800, 
CHRB™ksA
[3]);

365 
	`MMC5SPRVROM_BANK2
(0x1000, 
CHRB™ksA
[5]);

366 
	`MMC5SPRVROM_BANK2
(0x1800, 
CHRB™ksA
[7]);

369 
x
 = 0; x < 8; x++) {

370 
	`£tchr1
(
x
 << 10, 
CHRB™ksA
[x]);

371 
	`MMC5SPRVROM_BANK1
(
x
 << 10, 
CHRB™ksA
[x]);

375 
	}
}

377 
	$MMC5CHRB
() {

378 
x
;

379 
mmc5vsize
 & 3) {

381 
	`£tchr8
(
CHRB™ksB
[3]);

382 
	`MMC5BGVROM_BANK8
(
CHRB™ksB
[3]);

385 
	`£tchr4
(0x0000, 
CHRB™ksB
[3]);

386 
	`£tchr4
(0x1000, 
CHRB™ksB
[3]);

387 
	`MMC5BGVROM_BANK4
(0x0000, 
CHRB™ksB
[3]);

388 
	`MMC5BGVROM_BANK4
(0x1000, 
CHRB™ksB
[3]);

391 
	`£tchr2
(0x0000, 
CHRB™ksB
[1]);

392 
	`£tchr2
(0x0800, 
CHRB™ksB
[3]);

393 
	`£tchr2
(0x1000, 
CHRB™ksB
[1]);

394 
	`£tchr2
(0x1800, 
CHRB™ksB
[3]);

395 
	`MMC5BGVROM_BANK2
(0x0000, 
CHRB™ksB
[1]);

396 
	`MMC5BGVROM_BANK2
(0x0800, 
CHRB™ksB
[3]);

397 
	`MMC5BGVROM_BANK2
(0x1000, 
CHRB™ksB
[1]);

398 
	`MMC5BGVROM_BANK2
(0x1800, 
CHRB™ksB
[3]);

401 
x
 = 0; x < 8; x++) {

402 
	`£tchr1
(
x
 << 10, 
CHRB™ksB
[x & 3]);

403 
	`MMC5BGVROM_BANK1
(
x
 << 10, 
CHRB™ksB
[x & 3]);

407 
	}
}

409 
	$MMC5WRAM
(
uöt32
 
A
, uöt32 
V
) {

410 
V
 = 
MMC5WRAMIndex
[V & (
MMC5WRAMMAX
-1)];

411 i‡(
V
 != 255) {

412 
	`£çrg8r
(0x10, 
A
, 
V
);

413 
	`FCEU_ChótAddRAM
(8, 0x6000, (
WRAM
 + ((
V
 * 8192Ë& (
WRAMSIZE
 - 1))));

414 
MMC5MemIn
[(
A
 - 0x6000) >> 13] = 1;

416 
MMC5MemIn
[(
A
 - 0x6000) >> 13] = 0;

417 
	}
}

419 
	$MMC5PRG
() {

420 
x
;

421 
mmc5psize
 & 3) {

423 
MMC5ROMWrPrŸe˘
[0] = MMC5ROMWrProtect[1] = MMC5ROMWrProtect[2] = MMC5ROMWrProtect[3] = 1;

424 
	`£çrg32
(0x8000, ((
PRGB™ks
[1] & 0x7F) >> 2));

425 
x
 = 0; x < 4; x++)

426 
MMC5MemIn
[1 + 
x
] = 1;

429 i‡(
PRGB™ks
[1] & 0x80) {

430 
MMC5ROMWrPrŸe˘
[0] = MMC5ROMWrProtect[1] = 1;

431 
	`£çrg16
(0x8000, (
PRGB™ks
[1] >> 1));

432 
MMC5MemIn
[1] = MMC5MemIn[2] = 1;

434 
MMC5ROMWrPrŸe˘
[0] = MMC5ROMWrProtect[1] = 0;

435 
	`MMC5WRAM
(0x8000, 
PRGB™ks
[1] & (
MMC5WRAMMAX
-1) & 0xFE);

436 
	`MMC5WRAM
(0xA000, (
PRGB™ks
[1] & (
MMC5WRAMMAX
-1) & 0xFE) + 1);

438 
MMC5MemIn
[3] = MMC5MemIn[4] = 1;

439 
MMC5ROMWrPrŸe˘
[2] = MMC5ROMWrProtect[3] = 1;

440 
	`£çrg16
(0xC000, (
PRGB™ks
[3] & 0x7F) >> 1);

443 i‡(
PRGB™ks
[1] & 0x80) {

444 
MMC5MemIn
[1] = MMC5MemIn[2] = 1;

445 
MMC5ROMWrPrŸe˘
[0] = MMC5ROMWrProtect[1] = 1;

446 
	`£çrg16
(0x8000, (
PRGB™ks
[1] & 0x7F) >> 1);

448 
MMC5ROMWrPrŸe˘
[0] = MMC5ROMWrProtect[1] = 0;

449 
	`MMC5WRAM
(0x8000, 
PRGB™ks
[1] & (
MMC5WRAMMAX
-1) & 0xFE);

450 
	`MMC5WRAM
(0xA000, (
PRGB™ks
[1] & (
MMC5WRAMMAX
-1) & 0xFE) + 1);

452 i‡(
PRGB™ks
[2] & 0x80) {

453 
MMC5ROMWrPrŸe˘
[2] = 1;

454 
MMC5MemIn
[3] = 1;

455 
	`£çrg8
(0xC000, 
PRGB™ks
[2] & 0x7F);

457 
MMC5ROMWrPrŸe˘
[2] = 0;

458 
	`MMC5WRAM
(0xC000, 
PRGB™ks
[2] & (
MMC5WRAMMAX
-1));

460 
MMC5MemIn
[4] = 1;

461 
MMC5ROMWrPrŸe˘
[3] = 1;

462 
	`£çrg8
(0xE000, 
PRGB™ks
[3] & 0x7F);

465 
x
 = 0; x < 3; x++)

466 i‡(
PRGB™ks
[
x
] & 0x80) {

467 
MMC5ROMWrPrŸe˘
[
x
] = 1;

468 
	`£çrg8
(0x8000 + (
x
 << 13), 
PRGB™ks
[x] & 0x7F);

469 
MMC5MemIn
[1 + 
x
] = 1;

471 
MMC5ROMWrPrŸe˘
[
x
] = 0;

472 
	`MMC5WRAM
(0x8000 + (
x
 << 13), 
PRGB™ks
[x] & (
MMC5WRAMMAX
-1));

474 
MMC5MemIn
[4] = 1;

475 
MMC5ROMWrPrŸe˘
[3] = 1;

476 
	`£çrg8
(0xE000, 
PRGB™ks
[3] & 0x7F);

479 
	}
}

481 
	$DECLFW
(
M≠≥r5_wrôe
) {

482 
A
) {

484 
mmc5psize
 = 
V
;

485 
	`MMC5PRG
();

488 
mmc5vsize
 = 
V
;

489 i‡(!
mmc5ABMode
) {

490 
	`MMC5CHRB
();

491 
	`MMC5CHRA
();

493 
	`MMC5CHRA
();

494 
	`MMC5CHRB
();

498 
WRAMMaskE«bÀ
[0] = 
V
;

501 
WRAMMaskE«bÀ
[1] = 
V
;

504 
CHRMode
 = 
V
;

505 
MMC5HackCHRMode
 = 
V
 & 3;

509 
x
;

510 
x
 = 0; x < 4; x++) {

511 (
V
 >> (
x
 << 1)) & 3) {

512 0: 
PPUNTARAM
 |1 << 
x
; 
v«∑ge
[x] = 
NTARAM
; ;

513 1: 
PPUNTARAM
 |1 << 
x
; 
v«∑ge
[x] = 
NTARAM
 + 0x400; ;

514 2: 
PPUNTARAM
 |1 << 
x
; 
v«∑ge
[x] = 
ExRAM
; ;

515 3: 
PPUNTARAM
 &~(1 << 
x
); 
v«∑ge
[x] = 
MMC5fûl
; ;

518 
NTAMúr‹ög
 = 
V
;

522 i‡(
V
 !
NTFûl
)

523 
	`FCEU_dwmem£t
(
MMC5fûl
, (
V
 | (V << 8) | (V << 16) | (V << 24)), 0x3c0);

524 
NTFûl
 = 
V
;

527 i‡(
V
 !
ATFûl
) {

528 
mo›
 = 
V
 | (V << 2) | (V << 4) | (V << 6);

529 
	`FCEU_dwmem£t
(
MMC5fûl
 + 0x3c0, 
mo›
 | (moop << 8) | (moop << 16) | (moop << 24), 0x40);

531 
ATFûl
 = 
V
;

534 
WRAMPage
 = 
V
;

535 
	`MMC5WRAM
(0x6000, 
V
 & (
MMC5WRAMMAX
-1));

541 
PRGB™ks
[
A
 & 3] = 
V
;

542 
	`MMC5PRG
();

552 
mmc5ABMode
 = 0;

553 
CHRB™ksA
[
A
 & 7] = 
V
 | ((
MMC50x5130
 & 0x3) << 8);

554 
	`MMC5CHRA
();

560 
mmc5ABMode
 = 1;

561 
CHRB™ksB
[
A
 & 3] = 
V
 | ((
MMC50x5130
 & 0x3) << 8);

562 
	`MMC5CHRB
();

564 0x5130: 
MMC50x5130
 = 
V
; ;

565 0x5200: 
MMC5HackSPMode
 = 
V
; ;

566 0x5201: 
MMC5HackSPS¸ﬁl
 = (
V
 >> 3) & 0x1F; ;

567 0x5202: 
MMC5HackSPPage
 = 
V
 & 0x3F; ;

568 0x5203: 
	`X6502_IRQEnd
(
FCEU_IQEXT
); 
IRQSˇ∆öe
 = 
V
; ;

569 0x5204: 
	`X6502_IRQEnd
(
FCEU_IQEXT
); 
IRQE«bÀ
 = 
V
 & 0x80; ;

570 0x5205: 
mul
[0] = 
V
; ;

571 0x5206: 
mul
[1] = 
V
; ;

573 
	}
}

575 
	$DECLFR
(
MMC5_RódROMRAM
) {

576 i‡(
MMC5MemIn
[(
A
 - 0x6000) >> 13])

577  
Page
[
A
 >> 11][A];

579  
X
.
DB
;

580 
	}
}

582 
	$DECLFW
(
MMC5_WrôeROMRAM
) {

583 i‡((
A
 >0x8000Ë&& (
MMC5ROMWrPrŸe˘
[(A - 0x8000) >> 13]))

585 i‡(
MMC5MemIn
[(
A
 - 0x6000) >> 13])

586 i‡(((
WRAMMaskE«bÀ
[0] & 3) | ((WRAMMaskEnable[1] & 3) << 2)) == 6)

587 
Page
[
A
 >> 11][A] = 
V
;

588 
	}
}

590 
	$DECLFW
(
MMC5_ExRAMWr
) {

591 i‡(
MMC5HackCHRMode
 != 3)

592 
ExRAM
[
A
 & 0x3ff] = 
V
;

593 
	}
}

595 
	$DECLFR
(
MMC5_ExRAMRd
) {

596  
ExRAM
[
A
 & 0x3ff];

597 
	}
}

599 
	$DECLFR
(
MMC5_ªad
) {

600 
A
) {

602 
uöt8
 
x
;

603 
	`X6502_IRQEnd
(
FCEU_IQEXT
);

604 
x
 = 
MMC5IRQR
;

605 #ifde‡
FCEUDEF_DEBUGGER


606 i‡(!
f˚uödbg
)

608 
MMC5IRQR
 &= 0x40;

609  
x
;

612 (
mul
[0] * mul[1]);

614 ((
mul
[0] * mul[1]) >> 8);

616 (
X
.
DB
);

617 
	}
}

619 
	$MMC5Synco
() {

620 
x
;

622 
	`MMC5PRG
();

623 
x
 = 0; x < 4; x++) {

624 (
NTAMúr‹ög
 >> (
x
 << 1)) & 3) {

625 0: 
PPUNTARAM
 |1 << 
x
; 
v«∑ge
[x] = 
NTARAM
; ;

626 1: 
PPUNTARAM
 |1 << 
x
; 
v«∑ge
[x] = 
NTARAM
 + 0x400; ;

627 2: 
PPUNTARAM
 |1 << 
x
; 
v«∑ge
[x] = 
ExRAM
; ;

628 3: 
PPUNTARAM
 &~(1 << 
x
); 
v«∑ge
[x] = 
MMC5fûl
; ;

631 
	`MMC5WRAM
(0x6000, 
WRAMPage
 & (
MMC5WRAMMAX
-1));

632 i‡(!
mmc5ABMode
) {

633 
	`MMC5CHRB
();

634 
	`MMC5CHRA
();

636 
	`MMC5CHRA
();

637 
	`MMC5CHRB
();

641 
	`FCEU_dwmem£t
(
MMC5fûl
, 
NTFûl
 | (NTFill << 8) | (NTFill << 16) | (NTFill << 24), 0x3c0);

643 
mo›
 = 
ATFûl
 | (ATFill << 2) | (ATFill << 4) | (ATFill << 6);

644 
	`FCEU_dwmem£t
(
MMC5fûl
 + 0x3c0, 
mo›
 | (moop << 8) | (moop << 16) | (moop << 24), 0x40);

647 
MMC5HackCHRMode
 = 
CHRMode
 & 3;

652 
	}
}

654 
	$MMC5_hb
(
sˇ∆öe
) {

657 
¶
 = 
sˇ∆öe
 + 1;

658 
µu⁄
 = (
PPU
[1] & 0x18);

660 i‡(!
µu⁄
 || 
¶
 >= 241)

664 
MMC5IRQR
 &= ~0x40;

665 
MMC5IRQR
 &= ~0x80;

666 
MMC5LöeCou¡î
 = 0;

667 
	`X6502_IRQEnd
(
FCEU_IQEXT
);

671 i‡(!(
MMC5IRQR
&0x40))

673 
MMC5IRQR
 |= 0x40;

674 
MMC5IRQR
 &= ~0x80;

675 
MMC5LöeCou¡î
 = 0;

676 
	`X6502_IRQEnd
(
FCEU_IQEXT
);

680 
MMC5LöeCou¡î
++;

681 i‡(
MMC5LöeCou¡î
 =
IRQSˇ∆öe
)

683 
MMC5IRQR
 |= 0x80;

684 i‡(
IRQE«bÀ
 & 0x80)

685 
	`X6502_IRQBegö
(
FCEU_IQEXT
);

689 
	}
}

691 
	$MMC5_SèãRe°‹e
(
vîsi⁄
) {

692 
	`MMC5Synco
();

693 
	}
}

696 
uöt16
 
	mwl
[2];

697 
uöt8
 
	mív
[2];

698 
uöt8
 
	míabÀ
;

699 
uöt8
 
	mru¬ög
;

700 
uöt8
 
	møw
;

701 
uöt8
 
	møwc⁄åﬁ
;

702 
öt32
 
	mdcou¡
[2];

703 
öt32
 
	mBC
[3];

704 
öt32
 
	mvcou¡
[2];

705 } 
	tMMC5APU
;

707 
MMC5APU
 
	gMMC5Sound
;

710 
	$Do5PCM
() {

711 
öt32
 
V
;

712 
öt32
 
°¨t
, 
íd
;

714 
°¨t
 = 
MMC5Sound
.
BC
[2];

715 
íd
 = (
SOUNDTS
 << 16Ë/ 
soundtsöc
;

716 i‡(
íd
 <
°¨t
) ;

717 
MMC5Sound
.
BC
[2] = 
íd
;

719 i‡(!(
MMC5Sound
.
øwc⁄åﬁ
 & 0x40Ë&& MMC5Sound.
øw
)

720 
V
 = 
°¨t
; V < 
íd
; V++)

721 
Wave
[
V
 >> 4] +
MMC5Sound
.
øw
 << 1;

722 
	}
}

724 
	$Do5PCMHQ
() {

725 
uöt32
 
V
;

726 i‡(!(
MMC5Sound
.
øwc⁄åﬁ
 & 0x40Ë&& MMC5Sound.
øw
)

727 
V
 = 
MMC5Sound
.
BC
[2]; V < 
SOUNDTS
; V++)

728 
WaveHi
[
V
] +
MMC5Sound
.
øw
 << 5;

729 
MMC5Sound
.
BC
[2] = 
SOUNDTS
;

730 
	}
}

733 
	$DECLFW
(
M≠≥r5_SW
) {

734 
A
 &= 0x1F;

736 
GameExpSound
.
Fûl
 = 
MMC5RunSound
;

737 
GameExpSound
.
HiFûl
 = 
MMC5RunSoundHQ
;

739 
A
) {

740 0x10: i‡(
psfun
Ë
	`psfun
(); 
MMC5Sound
.
øwc⁄åﬁ
 = 
V
; ;

741 0x11: i‡(
psfun
Ë
	`psfun
(); 
MMC5Sound
.
øw
 = 
V
; ;

745 i‡(
sfun
Ë
	`sfun
(
A
 >> 2);

746 
MMC5Sound
.
ív
[
A
 >> 2] = 
V
;

750 i‡(
sfun
Ë
	`sfun
(
A
 >> 2);

751 
MMC5Sound
.
wl
[
A
 >> 2] &= ~0x00FF;

752 
MMC5Sound
.
wl
[
A
 >> 2] |
V
 & 0xFF;

756 
MMC5Sound
.
wl
[
A
 >> 2] &= ~0x0700;

757 
MMC5Sound
.
wl
[
A
 >> 2] |(
V
 & 0x07) << 8;

758 
MMC5Sound
.
ru¬ög
 |1 << (
A
 >> 2);

761 i‡(
sfun
) {

762 
	`sfun
(0);

763 
	`sfun
(1);

765 
MMC5Sound
.
ru¬ög
 &
V
;

766 
MMC5Sound
.
íabÀ
 = 
V
;

769 
	}
}

771 
	$Do5SQ
(
P
) {

772 
èl
[4] = { 1, 2, 4, 6 };

773 
öt32
 
V
, 
amp
, 
πhªsh
, 
wl
;

774 
öt32
 
°¨t
, 
íd
;

776 
°¨t
 = 
MMC5Sound
.
BC
[
P
];

777 
íd
 = (
SOUNDTS
 << 16Ë/ 
soundtsöc
;

778 i‡(
íd
 <
°¨t
) ;

779 
MMC5Sound
.
BC
[
P
] = 
íd
;

781 
wl
 = 
MMC5Sound
.wl[
P
] + 1;

782 
amp
 = (
MMC5Sound
.
ív
[
P
] & 0xF) << 4;

783 
πhªsh
 = 
èl
[(
MMC5Sound
.
ív
[
P
] & 0xC0) >> 6];

785 i‡(
wl
 >8 && (
MMC5Sound
.
ru¬ög
 & (
P
 + 1))) {

786 
dc
, 
vc
;

788 
wl
 <<= 18;

789 
dc
 = 
MMC5Sound
.
dcou¡
[
P
];

790 
vc
 = 
MMC5Sound
.
vcou¡
[
P
];

792 
V
 = 
°¨t
; V < 
íd
; V++) {

793 i‡(
dc
 < 
πhªsh
)

794 
Wave
[
V
 >> 4] +
amp
;

795 
vc
 -
√söcsize
;

796 
vc
 <= 0) {

797 
vc
 +
wl
;

798 
dc
 = (dc + 1) & 7;

801 
MMC5Sound
.
dcou¡
[
P
] = 
dc
;

802 
MMC5Sound
.
vcou¡
[
P
] = 
vc
;

804 
	}
}

806 
	$Do5SQHQ
(
P
) {

807 
èl
[4] = { 1, 2, 4, 6 };

808 
uöt32
 
V
;

809 
öt32
 
amp
, 
πhªsh
, 
wl
;

811 
wl
 = 
MMC5Sound
.wl[
P
] + 1;

812 
amp
 = ((
MMC5Sound
.
ív
[
P
] & 0xF) << 8);

813 
πhªsh
 = 
èl
[(
MMC5Sound
.
ív
[
P
] & 0xC0) >> 6];

815 i‡(
wl
 >8 && (
MMC5Sound
.
ru¬ög
 & (
P
 + 1))) {

816 
dc
, 
vc
;

818 
wl
 <<= 1;

820 
dc
 = 
MMC5Sound
.
dcou¡
[
P
];

821 
vc
 = 
MMC5Sound
.
vcou¡
[
P
];

822 
V
 = 
MMC5Sound
.
BC
[
P
]; V < 
SOUNDTS
; V++) {

823 i‡(
dc
 < 
πhªsh
)

824 
WaveHi
[
V
] +
amp
;

825 
vc
--;

826 i‡(
vc
 <= 0) {

827 
vc
 = 
wl
;

828 
dc
 = (dc + 1) & 7;

831 
MMC5Sound
.
dcou¡
[
P
] = 
dc
;

832 
MMC5Sound
.
vcou¡
[
P
] = 
vc
;

834 
MMC5Sound
.
BC
[
P
] = 
SOUNDTS
;

835 
	}
}

837 
	$MMC5RunSoundHQ
() {

838 
	`Do5SQHQ
(0);

839 
	`Do5SQHQ
(1);

840 
	`Do5PCMHQ
();

841 
	}
}

843 
	$MMC5HiSync
(
öt32
 
ts
) {

844 
x
;

845 
x
 = 0; x < 3; x++)

846 
MMC5Sound
.
BC
[
x
] = 
ts
;

847 
	}
}

849 
	$MMC5RunSound
(
Cou¡
) {

850 
x
;

851 
	`Do5SQ
(0);

852 
	`Do5SQ
(1);

853 
	`Do5PCM
();

854 
x
 = 0; x < 3; x++)

855 
MMC5Sound
.
BC
[
x
] = 
Cou¡
;

856 
	}
}

858 
	$M≠≥r5_ESI
() {

859 
GameExpSound
.
RCh™ge
 = 
M≠≥r5_ESI
;

860 i‡(
FSëtögs
.
SndR©e
) {

861 i‡(
FSëtögs
.
soundq
 >= 1) {

862 
sfun
 = 
Do5SQHQ
;

863 
psfun
 = 
Do5PCMHQ
;

865 
sfun
 = 
Do5SQ
;

866 
psfun
 = 
Do5PCM
;

869 
sfun
 = 0;

870 
psfun
 = 0;

872 
	`mem£t
(
MMC5Sound
.
BC
, 0, (MMC5Sound.BC));

873 
	`mem£t
(
MMC5Sound
.
vcou¡
, 0, (MMC5Sound.vcount));

874 
GameExpSound
.
HiSync
 = 
MMC5HiSync
;

875 
	}
}

877 
	$NSFMMC5_Inô
() {

878 
	`mem£t
(&
MMC5Sound
, 0, (MMC5Sound));

879 
mul
[0] = mul[1] = 0;

880 
ExRAM
 = (
uöt8
*)
	`FCEU_gmÆloc
(1024);

881 
	`M≠≥r5_ESI
();

882 
	`SëWrôeH™dÀr
(0x5c00, 0x5„f, 
MMC5_ExRAMWr
);

883 
	`SëRódH™dÀr
(0x5c00, 0x5„f, 
MMC5_ExRAMRd
);

884 
MMC5HackCHRMode
 = 2;

885 
	`SëWrôeH™dÀr
(0x5000, 0x5015, 
M≠≥r5_SW
);

886 
	`SëWrôeH™dÀr
(0x5205, 0x5206, 
M≠≥r5_wrôe
);

887 
	`SëRódH™dÀr
(0x5205, 0x5206, 
MMC5_ªad
);

888 
	}
}

890 
	$NSFMMC5_Clo£
() {

891 i‡(
WRAM
)

892 
	`FCEU_g‰ì
(
WRAM
);

893 
WRAM
 = 
NULL
;

894 
	`FCEU_g‰ì
(
ExRAM
);

895 
ExRAM
 = 
NULL
;

896 
	}
}

898 
	$GíMMC5Re£t
() {

899 
x
;

901 
x
 = 0; x < 4; x++Ë
PRGB™ks
[x] = ~0;

902 
x
 = 0; x < 8; x++Ë
CHRB™ksA
[x] = ~0;

903 
x
 = 0; x < 4; x++Ë
CHRB™ksB
[x] = ~0;

904 
WRAMMaskE«bÀ
[0] = WRAMMaskEnable[1] = ~0;

906 
mmc5psize
 = 
mmc5vsize
 = 3;

907 
CHRMode
 = 0;

909 
NTAMúr‹ög
 = 
NTFûl
 = 
ATFûl
 = 0xFF;

911 
	`MMC5Synco
();

913 
	`SëWrôeH™dÀr
(0x4020, 0x5bff, 
M≠≥r5_wrôe
);

914 
	`SëRódH™dÀr
(0x4020, 0x5bff, 
MMC5_ªad
);

916 
	`SëWrôeH™dÀr
(0x5c00, 0x5fff, 
MMC5_ExRAMWr
);

917 
	`SëRódH™dÀr
(0x5c00, 0x5fff, 
MMC5_ExRAMRd
);

919 
	`SëWrôeH™dÀr
(0x6000, 0xFFFF, 
MMC5_WrôeROMRAM
);

920 
	`SëRódH™dÀr
(0x6000, 0xFFFF, 
MMC5_RódROMRAM
);

922 
	`SëWrôeH™dÀr
(0x5000, 0x5015, 
M≠≥r5_SW
);

923 
	`SëWrôeH™dÀr
(0x5205, 0x5206, 
M≠≥r5_wrôe
);

924 
	`SëRódH™dÀr
(0x5205, 0x5206, 
MMC5_ªad
);

928 
	`FCEU_ChótAddRAM
(1, 0x5c00, 
ExRAM
);

929 
	}
}

931 
SFORMAT
 
	gMMC5_SèãRegs
[] = {

932 { 
PRGB™ks
, 4, "PRGB" },

933 { 
CHRB™ksA
, 16, "CHRA" },

934 { 
CHRB™ksB
, 8, "CHRB" },

935 { &
WRAMPage
, 1, "WRMP" },

936 { 
WRAMMaskE«bÀ
, 2, "WRME" },

937 { &
mmc5ABMode
, 1, "ABMD" },

938 { &
IRQSˇ∆öe
, 1, "IRQS" },

939 { &
IRQE«bÀ
, 1, "IRQE" },

940 { &
CHRMode
, 1, "CHRM" },

941 { &
NTAMúr‹ög
, 1, "NTAM" },

942 { &
NTFûl
, 1, "NTFL" },

943 { &
ATFûl
, 1, "ATFL" },

946 { &
MMC5IRQR
, 1, "IRQR" },

947 { &
MMC5LöeCou¡î
, 1, "LCTR" },

948 { &
mmc5psize
, 1, "PSIZ" },

949 { &
mmc5vsize
, 1, "VSIZ" },

950 { 
mul
, 2, "MUL2" },

951 { 
MMC5ROMWrPrŸe˘
, 4, "WRPR" },

952 { 
MMC5MemIn
, 5, "MEMI" },

954 { &
MMC5Sound
.
wl
[0], 2 | 
FCEUSTATE_RLSB
, "SDW0" },

955 { &
MMC5Sound
.
wl
[1], 2 | 
FCEUSTATE_RLSB
, "SDW1" },

956 { 
MMC5Sound
.
ív
, 2, "SDEV" },

957 { &
MMC5Sound
.
íabÀ
, 1, "SDEN" },

958 { &
MMC5Sound
.
ru¬ög
, 1, "SDRU" },

959 { &
MMC5Sound
.
øw
, 1, "SDRW" },

960 { &
MMC5Sound
.
øwc⁄åﬁ
, 1, "SDRC" },

963 { &
MMC5Sound
.
dcou¡
[0], 4 | 
FCEUSTATE_RLSB
, "DCT0" },

964 { &
MMC5Sound
.
dcou¡
[1], 4 | 
FCEUSTATE_RLSB
, "DCT1" },

965 { &
MMC5Sound
.
BC
[0], 4 | 
FCEUSTATE_RLSB
, "BC00" },

966 { &
MMC5Sound
.
BC
[1], 4 | 
FCEUSTATE_RLSB
, "BC01" },

967 { &
MMC5Sound
.
BC
[2], 4 | 
FCEUSTATE_RLSB
, "BC02" },

968 { &
MMC5Sound
.
vcou¡
[0], 4 | 
FCEUSTATE_RLSB
, "VCT0" },

969 { &
MMC5Sound
.
vcou¡
[1], 4 | 
FCEUSTATE_RLSB
, "VCT1" },

973 
	$GíMMC5_Inô
(
C¨tInfo
 *
öfo
, 
wsize
, 
b©ãry
) {

974 i‡(
wsize
) {

975 
WRAM
 = (
uöt8
*)
	`FCEU_gmÆloc
(
wsize
 * 1024);

976 
	`SëupC¨tPRGM≠pög
(0x10, 
WRAM
, 
wsize
 * 1024, 1);

977 
	`AddExSèã
(
WRAM
, 
wsize
 * 1024, 0, "WRAM");

980 
MMC5fûl
 = (
uöt8
*)
	`FCEU_gmÆloc
(1024);

981 
ExRAM
 = (
uöt8
*)
	`FCEU_gmÆloc
(1024);

984 
u8
 
nvÆ
 = 
MMC5fûl
[0x000];

985 
u8
 
avÆ
 = 
MMC5fûl
[0x3C0] & 3;ával =ával | (aval << 2) | (aval << 4) | (aval << 6);

986 
	`FCEU_dwmem£t
(
MMC5fûl
 + 0x000, 
nvÆ
 | (nval<<8) | (nval<<16) | (nval<<24), 0x3C0);

987 
	`FCEU_dwmem£t
(
MMC5fûl
 + 0x3C0, 
avÆ
 | (aval<<8) | (aval<<16) | (aval<<24), 0x040);

989 
	`AddExSèã
(
ExRAM
, 1024, 0, "ERAM");

990 
	`AddExSèã
(&
MMC5HackSPMode
, 1, 0, "SPLM");

991 
	`AddExSèã
(&
MMC5HackSPS¸ﬁl
, 1, 0, "SPLS");

992 
	`AddExSèã
(&
MMC5HackSPPage
, 1, 0, "SPLP");

993 
	`AddExSèã
(&
MMC50x5130
, 1, 0, "5130");

994 
	`AddExSèã
(
MMC5_SèãRegs
, ~0, 0, 0);

996 
MMC5WRAMsize
 = 
wsize
 / 8;

997 
	`BuûdWRAMSizeTabÀ
();

998 
GameSèãRe°‹e
 = 
MMC5_SèãRe°‹e
;

999 
öfo
->
Powî
 = 
GíMMC5Re£t
;

1001 i‡(
b©ãry
) {

1002 
öfo
->
SaveGame
[0] = 
WRAM
;

1003 i‡(
öfo
->
öes2
)

1005 
öfo
->
SaveGameLí
[0] = info->
b©ãry_wøm_size
;

1011 i‡(
wsize
 <= 16)

1012 
öfo
->
SaveGameLí
[0] = 8192;

1013 if(
wsize
 == 64)

1014 
öfo
->
SaveGameLí
[0] = 64*1024;

1016 
öfo
->
SaveGameLí
[0] = 32768;

1020 
MMC5HackVROMMask
 = 
CHRmask4
[0];

1021 
MMC5HackExNTARAMPå
 = 
ExRAM
;

1022 
MMC5Hack
 = 1;

1023 
MMC5HackVROMPTR
 = 
CHR±r
[0];

1024 
MMC5HackCHRMode
 = 0;

1025 
MMC5HackSPMode
 = 
MMC5HackSPS¸ﬁl
 = 
MMC5HackSPPage
 = 0;

1026 
	`M≠≥r5_ESI
();

1028 
FFCEUX_PPURód
 = 
mmc5_PPURód
;

1029 
FFCEUX_PPUWrôe
 = 
mmc5_PPUWrôe
;

1030 
	}
}

1032 
	$M≠≥r5_Inô
(
C¨tInfo
 *
öfo
) {

1033 i‡(
öfo
->
öes2
)

1035 
WRAMSIZE
 = (
öfo
->
wøm_size
 + info->
b©ãry_wøm_size
) / 1024;

1039 
WRAMSIZE
 = 
	`Dëe˘MMC5WRAMSize
(
öfo
->
CRC32
);

1041 
	`GíMMC5_Inô
(
öfo
, 
WRAMSIZE
, info->
b©ãry
);

1042 
	}
}

1049 
	$ELROM_Inô
(
C¨tInfo
 *
öfo
) {

1050 
	`GíMMC5_Inô
(
öfo
, 0, 0);

1051 
	}
}

1053 
	$EKROM_Inô
(
C¨tInfo
 *
öfo
) {

1054 
	`GíMMC5_Inô
(
öfo
, 8, info->
b©ãry
);

1055 
	}
}

1057 
	$ETROM_Inô
(
C¨tInfo
 *
öfo
) {

1058 
	`GíMMC5_Inô
(
öfo
, 16, info->
b©ãry
);

1059 
	}
}

1061 
	$EWROM_Inô
(
C¨tInfo
 *
öfo
) {

1062 
	`GíMMC5_Inô
(
öfo
, 32, info->
b©ãry
);

1063 
	}
}

	@fceux-am/src/boards/n106.cpp

21 
	~"m≠öc.h
"

23 
uöt16
 
	gIRQCou¡
;

24 
uöt8
 
	gIRQa
;

26 
uöt8
 
	gWRAM
[8192];

27 
uöt8
 
	gIRAM
[128];

29 
	$DECLFR
(
AWRAM
) {

30 (
WRAM
[
A
 - 0x6000]);

31 
	}
}

33 
	$DECLFW
(
BWRAM
) {

34 
WRAM
[
A
 - 0x6000] = 
V
;

35 
	}
}

37 
M≠≥r19_ESI
();

39 
uöt8
 
	gNTAPage
[4];

41 
uöt8
 
	gd›ﬁ
;

42 
uöt8
 
	gg‹fus
;

43 
uöt8
 
	gg‹ko
;

45 
NamcoSound
(
Cou¡
);

46 
NamcoSoundHack
();

47 
DoNamcoSound
(
öt32
 *
Wave
, 
Cou¡
);

48 
DoNamcoSoundHQ
();

49 
SyncHQ
(
öt32
 
ts
);

51 
	gis210
;

53 
uöt8
 
	gPRG
[3];

54 
uöt8
 
	gCHR
[8];

56 
SFORMAT
 
	gN106_SèãRegs
[] = {

57 { 
PRG
, 3, "PRG" },

58 { 
CHR
, 8, "CHR" },

59 { 
NTAPage
, 4, "NTA" },

60 { &
g‹fus
, 1, "GORF" },

61 { &
d›ﬁ
, 1, "DOPO" },

62 { &
g‹ko
, 1, "GORK" },

66 
	$SyncMúr‹
()

68 
g‹ko
) {

69 0: 
	`£tmúr‹
(
MI_0
); ;

70 1: 
	`£tmúr‹
(
MI_V
); ;

71 2: 
	`£tmúr‹
(
MI_H
); ;

72 3: 
	`£tmúr‹
(
MI_0
); ;

75 
	}
}

77 
	$SyncPRG
() {

78 
	`£çrg8
(0x8000, 
PRG
[0]);

79 
	`£çrg8
(0xa000, 
PRG
[1]);

80 
	`£çrg8
(0xc000, 
PRG
[2]);

81 
	`£çrg8
(0xe000, 0x3F);

82 
	}
}

84 
	$NamcoIRQHook
(
a
) {

85 i‡(
IRQa
) {

86 
IRQCou¡
 +
a
;

87 i‡(
IRQCou¡
 >= 0x7FFF) {

88 
	`X6502_IRQBegö
(
FCEU_IQEXT
);

89 
IRQa
 = 0;

90 
IRQCou¡
 = 0x7FFF;

93 
	}
}

95 
	$DECLFR
(
Namco_Ród4800
) {

96 
uöt8
 
ªt
 = 
IRAM
[
d›ﬁ
 & 0x7f];

98 #ifde‡
FCEUDEF_DEBUGGER


99 i‡(!
f˚uödbg
)

101 i‡(
d›ﬁ
 & 0x80)

102 
d›ﬁ
 = (dopol & 0x80) | ((dopol + 1) & 0x7f);

103  
ªt
;

104 
	}
}

106 
	$DECLFR
(
Namco_Ród5000
) {

107 (
IRQCou¡
);

108 
	}
}

110 
	$DECLFR
(
Namco_Ród5800
) {

111 (
IRQCou¡
 >> 8);

112 
	}
}

114 
	$DoNTARAMROM
(
w
, 
uöt8
 
V
) {

115 
NTAPage
[
w
] = 
V
;

116 i‡(
V
 >= 0xE0)

117 
	`£äèmem
(
NTARAM
 + ((
V
 & 1Ë<< 10), 1, 
w
);

119 
V
 &
CHRmask1
[0];

120 
	`£äèmem
(
CHR±r
[0] + (
V
 << 10), 0, 
w
);

122 
	}
}

124 
	$FixNTAR
() {

125 
x
;

126 
x
 = 0; x < 4; x++)

127 
	`DoNTARAMROM
(
x
, 
NTAPage
[x]);

128 
	}
}

130 
	$DoCHRRAMROM
(
x
, 
uöt8
 
V
) {

131 
CHR
[
x
] = 
V
;

132 i‡(!
is210
 && !((
g‹fus
 >> ((
x
 >> 2Ë+ 6)Ë& 1Ë&& (
V
 >= 0xE0)) {

136 
	`£tchr1
(
x
 << 10, 
V
);

137 
	}
}

139 
	$FixCRR
() {

140 
x
;

141 
x
 = 0; x < 8; x++)

142 
	`DoCHRRAMROM
(
x
, 
CHR
[x]);

143 
	}
}

145 
	$DECLFW
(
M≠≥r19C0D8_wrôe
) {

146 
	`DoNTARAMROM
((
A
 - 0xC000Ë>> 11, 
V
);

147 
	}
}

149 
uöt32
 
	gFªqCache
[8];

150 
uöt32
 
	gEnvCache
[8];

151 
uöt32
 
	gLígthCache
[8];

153 
	$FixCache
(
a
, 
V
) {

154 
w
 = (
a
 >> 3) & 0x7;

155 
a
 & 0x07) {

156 0x00: 
FªqCache
[
w
] &~0x000000FF; FªqCache[w] |
V
; ;

157 0x02: 
FªqCache
[
w
] &~0x0000FF00; FªqCache[w] |
V
 << 8; ;

159 
FªqCache
[
w
] &~0x00030000; FªqCache[w] |(
V
 & 3) << 16;

160 
LígthCache
[
w
] = (8 - ((
V
 >> 2) & 7)) << 2;

162 0x07: 
EnvCache
[
w
] = (
V
 & 0xF) * 576716; ;

164 
	}
}

166 
	$DECLFW
(
M≠≥r19_wrôe
) {

167 
A
 &= 0xF800;

168 i‡(
A
 >= 0x8000 && A <= 0xb800)

169 
	`DoCHRRAMROM
((
A
 - 0x8000Ë>> 11, 
V
);

171 
A
) {

173 i‡(
d›ﬁ
 & 0x40) {

174 i‡(
FSëtögs
.
SndR©e
) {

175 
	`NamcoSoundHack
();

176 
GameExpSound
.
Fûl
 = 
NamcoSound
;

177 
GameExpSound
.
HiFûl
 = 
DoNamcoSoundHQ
;

178 
GameExpSound
.
HiSync
 = 
SyncHQ
;

180 
	`FixCache
(
d›ﬁ
, 
V
);

182 
IRAM
[
d›ﬁ
 & 0x7f] = 
V
;

183 i‡(
d›ﬁ
 & 0x80)

184 
d›ﬁ
 = (dopol & 0x80) | ((dopol + 1) & 0x7f);

187 
d›ﬁ
 = 
V
; ;

189 
IRQCou¡
 &0xFF00; IRQCou¡ |
V
; 
	`X6502_IRQEnd
(
FCEU_IQEXT
); ;

191 
IRQCou¡
 &0x00ff; IRQCou¡ |(
V
 & 0x7F) << 8;

192 
IRQa
 = 
V
 & 0x80;

193 
	`X6502_IRQEnd
(
FCEU_IQEXT
);

196 
PRG
[0] = 
V
 & 0x3F;

197 if(
is210
) {

198 
g‹ko
 = 
V
>>6;

199 
	`SyncMúr‹
();

201 
	`SyncPRG
();

204 
g‹fus
 = 
V
 & 0xC0;

205 
	`FixCRR
();

206 
PRG
[1] = 
V
 & 0x3F;

207 
	`SyncPRG
();

210 
PRG
[2] = 
V
 & 0x3F;

211 
	`SyncPRG
();

214 
	}
}

216 
	gdwave
 = 0;

218 
	$NamcoSoundHack
() {

219 
öt32
 
z
, 
a
;

220 i‡(
FSëtögs
.
soundq
 >= 1) {

221 
	`DoNamcoSoundHQ
();

224 
z
 = ((
SOUNDTS
 << 16Ë/ 
soundtsöc
) >> 4;

225 
a
 = 
z
 - 
dwave
;

226 i‡(
a
Ë
	`DoNamcoSound
(&
Wave
[
dwave
],á);

227 
dwave
 +
a
;

228 
	}
}

230 
	$NamcoSound
(
Cou¡
) {

231 
öt32
 
z
, 
a
;

232 
z
 = ((
SOUNDTS
 << 16Ë/ 
soundtsöc
) >> 4;

233 
a
 = 
z
 - 
dwave
;

234 i‡(
a
Ë
	`DoNamcoSound
(&
Wave
[
dwave
],á);

235 
dwave
 = 0;

236 
	}
}

238 
uöt32
 
	gPœyIndex
[8];

239 
öt32
 
	gvcou¡
[8];

240 
öt32
 
	gCVBC
;

242 
	#TOINDEX
 (16 + 1)

	)

245 
	$SyncHQ
(
öt32
 
ts
) {

246 
CVBC
 = 
ts
;

247 
	}
}

258 
INLINE
 
uöt32
 
	$FëchDuff
(
uöt32
 
P
, uöt32 
ívñ›e
) {

259 
uöt32
 
duff
;

260 
duff
 = 
IRAM
[((IRAM[0x46 + (
P
 << 3)] + (
PœyIndex
[P] >> 
TOINDEX
)) & 0xFF) >> 1];

261 i‡((
IRAM
[0x46 + (
P
 << 3)] + (
PœyIndex
[P] >> 
TOINDEX
)) & 1)

262 
duff
 >>= 4;

263 
duff
 &= 0xF;

264 
duff
 = (duf‡* 
ívñ›e
) >> 16;

265 (
duff
);

266 
	}
}

268 
	$DoNamcoSoundHQ
() {

269 
öt32
 
P
, 
V
;

270 
öt32
 
cy˛esuck
 = (((
IRAM
[0x7F] >> 4) & 7) + 1) * 15;

272 
P
 = 7; P >(7 - ((
IRAM
[0x7F] >> 4) & 7)); P--) {

273 i‡((
IRAM
[0x44 + (
P
 << 3)] & 0xE0) && (IRAM[0x47 + (P << 3)] & 0xF)) {

274 
uöt32
 
‰eq
;

275 
öt32
 
vco
;

276 
uöt32
 
duff2
, 
Àngo
, 
ívñ›e
;

278 
vco
 = 
vcou¡
[
P
];

279 
‰eq
 = 
FªqCache
[
P
];

280 
ívñ›e
 = 
EnvCache
[
P
];

281 
Àngo
 = 
LígthCache
[
P
];

283 
duff2
 = 
	`FëchDuff
(
P
, 
ívñ›e
);

284 
V
 = 
CVBC
 << 1; V < ()
SOUNDTS
 << 1; V++) {

285 
WaveHi
[
V
 >> 1] +
duff2
;

286 i‡(!
vco
) {

287 
PœyIndex
[
P
] +
‰eq
;

288 (
PœyIndex
[
P
] >> 
TOINDEX
Ë>
Àngo
) PlayIndex[P] -=Üengo << TOINDEX;

289 
duff2
 = 
	`FëchDuff
(
P
, 
ívñ›e
);

290 
vco
 = 
cy˛esuck
;

292 
vco
--;

294 
vcou¡
[
P
] = 
vco
;

297 
CVBC
 = 
SOUNDTS
;

298 
	}
}

301 
	$DoNamcoSound
(
öt32
 *
Wave
, 
Cou¡
) {

302 
	`as£π
(0);

303 
	}
}

305 
	$M≠≥r19_SèãRe°‹e
(
vîsi⁄
) {

306 
	`SyncPRG
();

307 
	`FixNTAR
();

308 
	`FixCRR
();

309 
	`SyncMúr‹
();

310 
x
;

311 
x
 = 0x40; x < 0x80; x++)

312 
	`FixCache
(
x
, 
IRAM
[x]);

313 
	}
}

315 
	$M19SC
() {

316 i‡(
FSëtögs
.
SndR©e
)

317 
	`M≠≥r19_ESI
();

318 
	}
}

320 
	$M≠≥r19_ESI
() {

321 
GameExpSound
.
RCh™ge
 = 
M19SC
;

322 
	`mem£t
(
vcou¡
, 0, (vcount));

323 
	`mem£t
(
PœyIndex
, 0, (PlayIndex));

324 
CVBC
 = 0;

325 
	}
}

327 
	$NSFN106_Inô
() {

328 
	`SëWrôeH™dÀr
(0xf800, 0xffff, 
M≠≥r19_wrôe
);

329 
	`SëWrôeH™dÀr
(0x4800, 0x4fff, 
M≠≥r19_wrôe
);

330 
	`SëRódH™dÀr
(0x4800, 0x4fff, 
Namco_Ród4800
);

331 
	`M≠≥r19_ESI
();

332 
	}
}

334 
	gb©ãry
 = 0;

336 
	$N106_Powî
() {

337 
x
;

338 
	`SëRódH™dÀr
(0x8000, 0xFFFF, 
C¨tBR
);

339 
	`SëWrôeH™dÀr
(0x8000, 0xffff, 
M≠≥r19_wrôe
);

340 
	`SëWrôeH™dÀr
(0x4020, 0x5fff, 
M≠≥r19_wrôe
);

341 i‡(!
is210
) {

342 
	`SëWrôeH™dÀr
(0xc000, 0xdfff, 
M≠≥r19C0D8_wrôe
);

343 
	`SëRódH™dÀr
(0x4800, 0x4fff, 
Namco_Ród4800
);

344 
	`SëRódH™dÀr
(0x5000, 0x57ff, 
Namco_Ród5000
);

345 
	`SëRódH™dÀr
(0x5800, 0x5fff, 
Namco_Ród5800
);

346 
NTAPage
[0] = NTAPage[1] = NTAPage[2] = NTAPage[3] = 0xFF;

347 
	`FixNTAR
();

350 
	`SëRódH™dÀr
(0x6000, 0x7FFF, 
AWRAM
);

351 
	`SëWrôeH™dÀr
(0x6000, 0x7FFF, 
BWRAM
);

352 
	`FCEU_ChótAddRAM
(8, 0x6000, 
WRAM
);

354 
g‹fus
 = 0xFF;

355 
	`SyncPRG
();

356 
	`FixCRR
();

358 i‡(!
b©ãry
) {

359 
	`FCEU_Mem‹yR™d
(
WRAM
, (WRAM), 
åue
);

360 
	`FCEU_Mem‹yR™d
(
IRAM
, (IRAM), 
åue
);

362 
x
 = 0x40; x < 0x80; x++)

363 
	`FixCache
(
x
, 
IRAM
[x]);

364 
	}
}

366 
	$M≠≥r19_Inô
(
C¨tInfo
 *
öfo
) {

367 
is210
 = 0;

368 
b©ãry
 = 
öfo
->battery;

369 
öfo
->
Powî
 = 
N106_Powî
;

371 
M≠IRQHook
 = 
NamcoIRQHook
;

372 
GameSèãRe°‹e
 = 
M≠≥r19_SèãRe°‹e
;

373 
GameExpSound
.
RCh™ge
 = 
M19SC
;

375 i‡(
FSëtögs
.
SndR©e
)

376 
	`M≠≥r19_ESI
();

378 
	`FCEU_Mem‹yR™d
(
WRAM
, (WRAM), 
åue
);

379 
	`FCEU_Mem‹yR™d
(
IRAM
, (IRAM), 
åue
);

380 
	`AddExSèã
(
WRAM
, 8192, 0, "WRAM");

381 
	`AddExSèã
(
IRAM
, 128, 0, "IRAM");

382 
	`AddExSèã
(
N106_SèãRegs
, ~0, 0, 0);

384 i‡(
öfo
->
b©ãry
) {

385 
öfo
->
SaveGame
[0] = 
WRAM
;

386 
öfo
->
SaveGameLí
[0] = 8192;

387 
öfo
->
SaveGame
[1] = 
IRAM
;

388 
öfo
->
SaveGameLí
[1] = 128;

390 
	}
}

392 
	$M≠≥r210_SèãRe°‹e
(
vîsi⁄
) {

393 
	`SyncPRG
();

394 
	`FixCRR
();

395 
	}
}

397 
	$M≠≥r210_Inô
(
C¨tInfo
 *
öfo
) {

398 
is210
 = 1;

399 
GameSèãRe°‹e
 = 
M≠≥r210_SèãRe°‹e
;

400 
öfo
->
Powî
 = 
N106_Powî
;

401 
	`FCEU_Mem‹yR™d
(
WRAM
, (WRAM), 
åue
);

402 
	`AddExSèã
(
WRAM
, 8192, 0, "WRAM");

403 
	`AddExSèã
(
N106_SèãRegs
, ~0, 0, 0);

404 
	}
}

	@fceux-am/src/boards/n625092.cpp

25 
	~"m≠öc.h
"

27 
uöt16
 
	gcmd
, 
	gb™k
;

29 
SFORMAT
 
	gSèãRegs
[] =

31 { &
cmd
, 2, "CMD" },

32 { &
b™k
, 2, "BANK" },

36 
	$Sync
() {

37 
	`£tmúr‹
((
cmd
 & 1) ^ 1);

38 
	`£tchr8
(0);

39 i‡(
cmd
 & 2) {

40 i‡(
cmd
 & 0x100) {

41 
	`£çrg16
(0x8000, ((
cmd
 & 0xfcË>> 2Ë| 
b™k
);

42 
	`£çrg16
(0xC000, ((
cmd
 & 0xfc) >> 2) | 7);

44 
	`£çrg16
(0x8000, ((
cmd
 & 0xfcË>> 2Ë| (
b™k
 & 6));

45 
	`£çrg16
(0xC000, ((
cmd
 & 0xfcË>> 2Ë| ((
b™k
 & 6) | 1));

48 
	`£çrg16
(0x8000, ((
cmd
 & 0xfcË>> 2Ë| 
b™k
);

49 
	`£çrg16
(0xC000, ((
cmd
 & 0xfcË>> 2Ë| 
b™k
);

51 
	}
}

53 
uöt16
 
	gass
 = 0;

55 
	$DECLFW
(
UNLN625092WrôeComm™d
) {

56 
cmd
 = 
A
;

57 i‡(
A
 == 0x80F8) {

58 
	`£çrg16
(0x8000, 
ass
);

59 
	`£çrg16
(0xC000, 
ass
);

61 
	`Sync
();

63 
	}
}

65 
	$DECLFW
(
UNLN625092WrôeB™k
) {

66 
b™k
 = 
A
 & 7;

67 
	`Sync
();

68 
	}
}

70 
	$UNLN625092Powî
() {

71 
cmd
 = 0;

72 
b™k
 = 0;

73 
	`Sync
();

74 
	`SëRódH™dÀr
(0x8000, 0xFFFF, 
C¨tBR
);

75 
	`SëWrôeH™dÀr
(0x8000, 0xBFFF, 
UNLN625092WrôeComm™d
);

76 
	`SëWrôeH™dÀr
(0xC000, 0xFFFF, 
UNLN625092WrôeB™k
);

77 
	}
}

79 
	$UNLN625092Re£t
() {

80 
cmd
 = 0;

81 
b™k
 = 0;

82 
ass
++;

83 
	`FCEU_¥ötf
("%04x\n", 
ass
);

84 
	}
}

86 
	$SèãRe°‹e
(
vîsi⁄
) {

87 
	`Sync
();

88 
	}
}

90 
	$UNLN625092_Inô
(
C¨tInfo
 *
öfo
) {

91 
öfo
->
Re£t
 = 
UNLN625092Re£t
;

92 
öfo
->
Powî
 = 
UNLN625092Powî
;

93 
GameSèãRe°‹e
 = 
SèãRe°‹e
;

94 
	`AddExSèã
(&
SèãRegs
, ~0, 0, 0);

95 
	}
}

	@fceux-am/src/boards/novel.cpp

21 
	~"m≠öc.h
"

23 
uöt8
 
	gœtch
;

25 
	$DoNovñ
() {

26 
	`£çrg32
(0x8000, 
œtch
 & 3);

27 
	`£tchr8
(
œtch
 & 7);

28 
	}
}

30 
	$DECLFW
(
NovñWrôe
) {

31 
œtch
 = 
A
 & 0xFF;

32 
	`DoNovñ
();

33 
	}
}

35 
	$NovñRe£t
() {

36 
	`SëWrôeH™dÀr
(0x8000, 0xFFFF, 
NovñWrôe
);

37 
	`SëRódH™dÀr
(0x8000, 0xFFFF, 
C¨tBR
);

38 
	`£çrg32
(0x8000, 0);

39 
	`£tchr8
(0);

40 
	}
}

42 
	$NovñRe°‹e
(
vîsi⁄
) {

43 
	`DoNovñ
();

44 
	}
}

46 
	$Novñ_Inô
(
C¨tInfo
 *
öfo
) {

47 
	`AddExSèã
(&
œtch
, 1, 0, "L1");

48 
öfo
->
Powî
 = 
NovñRe£t
;

49 
GameSèãRe°‹e
 = 
NovñRe°‹e
;

50 
	}
}

	@fceux-am/src/boards/onebus.cpp

28 
	~"m≠öc.h
"

31 
uöt8
 
	g˝u410x
[16], 
	gµu201x
[16], 
	g≠u40xx
[64];

34 
uöt8
 
	gIRQCou¡
, 
	gIRQa
, 
	gIRQRñﬂd
;

35 
	#IRQL©ch
 
˝u410x
[0x1]

36 

	)

38 
uöt8
 
	göv_hack
 = 0;

40 
	#mmc3cmd
 
˝u410x
[0x5]

41 
	#múr‹
 
˝u410x
[0x6]

42 

	)

44 
uöt8
 
	gpcm_íabÀ
 = 0, 
	gpcm_úq
 = 0;

45 
öt16
 
	gpcm_addr
, 
	gpcm_size
, 
	gpcm_œtch
, 
	gpcm_˛ock
 = 0xE1;

47 
wrôefunc
 
	gdeÁpuwrôe
[64];

48 
ªadfunc
 
	gdeÁpuªad
[64];

50 
SFORMAT
 
	gSèãRegs
[] =

52 { 
˝u410x
, 16, "REGC" },

53 { 
µu201x
, 16, "REGS" },

54 { 
≠u40xx
, 64, "REGA" },

55 { &
IRQRñﬂd
, 1, "IRQR" },

56 { &
IRQCou¡
, 1, "IRQC" },

57 { &
IRQa
, 1, "IRQA" },

58 { &
pcm_íabÀ
, 1, "PCME" },

59 { &
pcm_úq
, 1, "PCMI" },

60 { &
pcm_addr
, 2, "PCMA" },

61 { &
pcm_size
, 2, "PCMS" },

62 { &
pcm_œtch
, 2, "PCML" },

63 { &
pcm_˛ock
, 2, "PCMC" },

67 
	$PSync
() {

68 
uöt8
 
b™kmode
 = 
˝u410x
[0xb] & 7;

69 
uöt8
 
mask
 = (
b™kmode
 == 0x7) ? (0xff) : (0x3f >> bankmode);

70 
uöt32
 
block
 = ((
˝u410x
[0x0] & 0xf0Ë<< 4Ë+ (˝u410x[0xa] & (~
mask
));

71 
uöt32
 
psw≠
 = (
mmc3cmd
 & 0x40) << 8;

77 
uöt8
 
b™k0
 = 
˝u410x
[0x7 ^ 
öv_hack
];

78 
uöt8
 
b™k1
 = 
˝u410x
[0x8 ^ 
öv_hack
];

79 
uöt8
 
b™k2
 = (
˝u410x
[0xb] & 0x40) ? (cpu410x[0x9]) : (~1);

80 
uöt8
 
b™k3
 = ~0;

83 
	`£çrg8
(0x8000 ^ 
psw≠
, 
block
 | (
b™k0
 & 
mask
));

85 
	`£çrg8
(0xa000, 
block
 | (
b™k1
 & 
mask
));

87 
	`£çrg8
(0xc000 ^ 
psw≠
, 
block
 | (
b™k2
 & 
mask
));

89 
	`£çrg8
(0xe000, 
block
 | (
b™k3
 & 
mask
));

90 
	}
}

92 
	$CSync
() {

93 c⁄° 
uöt8
 
midx
[8] = { 0, 1, 2, 0, 3, 4, 5, 0 };

94 
uöt8
 
mask
 = 0xf‡>> 
midx
[
µu201x
[0xa] & 7];

95 
uöt32
 
block
 = ((
˝u410x
[0x0] & 0x0fË<< 11Ë+ ((
µu201x
[0x8] & 0x70Ë<< 4Ë+ (µu201x[0xa] & (~
mask
));

96 
uöt32
 
csw≠
 = (
mmc3cmd
 & 0x80) << 5;

98 
uöt8
 
b™k0
 = 
µu201x
[0x6] & (~1);

99 
uöt8
 
b™k1
 = 
µu201x
[0x6] | 1;

100 
uöt8
 
b™k2
 = 
µu201x
[0x7] & (~1);

101 
uöt8
 
b™k3
 = 
µu201x
[0x7] | 1;

102 
uöt8
 
b™k4
 = 
µu201x
[0x2];

103 
uöt8
 
b™k5
 = 
µu201x
[0x3];

104 
uöt8
 
b™k6
 = 
µu201x
[0x4];

105 
uöt8
 
b™k7
 = 
µu201x
[0x5];

107 
	`£tchr1
(0x0000 ^ 
csw≠
, 
block
 | (
b™k0
 & 
mask
));

108 
	`£tchr1
(0x0400 ^ 
csw≠
, 
block
 | (
b™k1
 & 
mask
));

109 
	`£tchr1
(0x0800 ^ 
csw≠
, 
block
 | (
b™k2
 & 
mask
));

110 
	`£tchr1
(0x0c00 ^ 
csw≠
, 
block
 | (
b™k3
 & 
mask
));

111 
	`£tchr1
(0x1000 ^ 
csw≠
, 
block
 | (
b™k4
 & 
mask
));

112 
	`£tchr1
(0x1400 ^ 
csw≠
, 
block
 | (
b™k5
 & 
mask
));

113 
	`£tchr1
(0x1800 ^ 
csw≠
, 
block
 | (
b™k6
 & 
mask
));

114 
	`£tchr1
(0x1c00 ^ 
csw≠
, 
block
 | (
b™k7
 & 
mask
));

116 
	`£tmúr‹
((
múr‹
 ^ 1) & 1);

117 
	}
}

119 
	$Sync
() {

120 
	`PSync
();

121 
	`CSync
();

122 
	}
}

124 
	$DECLFW
(
UNLO√BusWrôeCPU410X
) {

126 
A
 & 0xf) {

127 0x1: 
IRQL©ch
 = 
V
 & 0xfe; ;

128 0x2: 
IRQRñﬂd
 = 1; ;

129 0x3: 
	`X6502_IRQEnd
(
FCEU_IQEXT
); 
IRQa
 = 0; ;

130 0x4: 
IRQa
 = 1; ;

132 
˝u410x
[
A
 & 0xf] = 
V
;

133 
	`Sync
();

135 
	}
}

137 
	$DECLFW
(
UNLO√BusWrôePPU201X
) {

139 
µu201x
[
A
 & 0x0f] = 
V
;

140 
	`Sync
();

141 
	}
}

143 
	$DECLFW
(
UNLO√BusWrôeMMC3
) {

145 
A
 & 0xe001) {

146 0x8000: 
mmc3cmd
 = (mmc3cmd & 0x38Ë| (
V
 & 0xc7); 
	`Sync
(); ;

149 
mmc3cmd
 & 7) {

150 0: 
µu201x
[0x6] = 
V
; 
	`CSync
(); ;

151 1: 
µu201x
[0x7] = 
V
; 
	`CSync
(); ;

152 2: 
µu201x
[0x2] = 
V
; 
	`CSync
(); ;

153 3: 
µu201x
[0x3] = 
V
; 
	`CSync
(); ;

154 4: 
µu201x
[0x4] = 
V
; 
	`CSync
(); ;

155 5: 
µu201x
[0x5] = 
V
; 
	`CSync
(); ;

156 6: 
˝u410x
[0x7] = 
V
; 
	`PSync
(); ;

157 7: 
˝u410x
[0x8] = 
V
; 
	`PSync
(); ;

161 0xa000: 
múr‹
 = 
V
; 
	`CSync
(); ;

162 0xc000: 
IRQL©ch
 = 
V
 & 0xfe; ;

163 0xc001: 
IRQRñﬂd
 = 1; ;

164 0xe000: 
	`X6502_IRQEnd
(
FCEU_IQEXT
); 
IRQa
 = 0; ;

165 0xe001: 
IRQa
 = 1; ;

167 
	}
}

169 
	$UNLO√BusIRQHook
() {

170 
uöt32
 
cou¡
 = 
IRQCou¡
;

171 i‡(!
cou¡
 || 
IRQRñﬂd
) {

172 
IRQCou¡
 = 
IRQL©ch
;

173 
IRQRñﬂd
 = 0;

175 
IRQCou¡
--;

176 i‡(
cou¡
 && !
IRQCou¡
) {

177 i‡(
IRQa
)

178 
	`X6502_IRQBegö
(
FCEU_IQEXT
);

180 
	}
}

182 
	$DECLFW
(
UNLO√BusWrôeAPU40XX
) {

184 
≠u40xx
[
A
 & 0x3f] = 
V
;

185 
A
 & 0x3f) {

187 i‡(
≠u40xx
[0x30] & 0x10) {

188 
pcm_addr
 = 
V
 << 6;

192 i‡(
≠u40xx
[0x30] & 0x10) {

193 
pcm_size
 = (
V
 << 4) + 1;

197 i‡(
≠u40xx
[0x30] & 0x10) {

198 
pcm_íabÀ
 = 
V
 & 0x10;

199 i‡(
pcm_úq
) {

200 
	`X6502_IRQEnd
(
FCEU_IQEXT
);

201 
pcm_úq
 = 0;

203 i‡(
pcm_íabÀ
)

204 
pcm_œtch
 = 
pcm_˛ock
;

205 
V
 &= 0xef;

209 
deÁpuwrôe
[
A
 & 0x3f](A, 
V
);

210 
	}
}

212 
	$DECLFR
(
UNLO√BusRódAPU40XX
) {

213 
uöt8
 
ªsu…
 = 
deÁpuªad
[
A
 & 0x3f](A);

215 
A
 & 0x3f) {

217 i‡(
≠u40xx
[0x30] & 0x10) {

218 
ªsu…
 = (ªsu… & 0x7fË| 
pcm_úq
;

222  
ªsu…
;

223 
	}
}

225 
	$UNLO√BusCpuHook
(
a
) {

226 i‡(
pcm_íabÀ
) {

227 
pcm_œtch
 -
a
;

228 i‡(
pcm_œtch
 <= 0) {

229 
pcm_œtch
 +
pcm_˛ock
;

230 
pcm_size
--;

231 i‡(
pcm_size
 < 0) {

232 
pcm_úq
 = 0x80;

233 
pcm_íabÀ
 = 0;

234 
	`X6502_IRQBegö
(
FCEU_IQEXT
);

236 
uöt16
 
addr
 = 
pcm_addr
 | ((
≠u40xx
[0x30]^3) << 14);

237 
uöt8
 
øw_pcm
 = 
ARód
[
addr
](addr) >> 1;

238 
deÁpuwrôe
[0x11](0x4011, 
øw_pcm
);

239 
pcm_addr
++;

240 
pcm_addr
 &= 0x7FFF;

244 
	}
}

246 
	$UNLO√BusPowî
() {

247 
uöt32
 
i
;

248 
IRQRñﬂd
 = 
IRQCou¡
 = 
IRQa
 = 0;

250 
	`mem£t
(
˝u410x
, 0x00, (cpu410x));

251 
	`mem£t
(
µu201x
, 0x00, (ppu201x));

252 
	`mem£t
(
≠u40xx
, 0x00, (apu40xx));

254 
	`SëupC¨tCHRM≠pög
(0, 
PRG±r
[0], 
PRGsize
[0], 0);

256 
i
 = 0; i < 64; i++) {

257 
deÁpuªad
[
i
] = 
	`GëRódH™dÀr
(0x4000 | i);

258 
deÁpuwrôe
[
i
] = 
	`GëWrôeH™dÀr
(0x4000 | i);

260 
	`SëRódH™dÀr
(0x4000, 0x403f, 
UNLO√BusRódAPU40XX
);

261 
	`SëWrôeH™dÀr
(0x4000, 0x403f, 
UNLO√BusWrôeAPU40XX
);

263 
	`SëRódH™dÀr
(0x8000, 0xFFFF, 
C¨tBR
);

264 
	`SëWrôeH™dÀr
(0x2010, 0x201f, 
UNLO√BusWrôePPU201X
);

265 
	`SëWrôeH™dÀr
(0x4100, 0x410f, 
UNLO√BusWrôeCPU410X
);

266 
	`SëWrôeH™dÀr
(0x8000, 0xffff, 
UNLO√BusWrôeMMC3
);

268 
	`Sync
();

269 
	}
}

271 
	$UNLO√BusRe£t
() {

272 
IRQRñﬂd
 = 
IRQCou¡
 = 
IRQa
 = 0;

274 
	`mem£t
(
˝u410x
, 0x00, (cpu410x));

275 
	`mem£t
(
µu201x
, 0x00, (ppu201x));

276 
	`mem£t
(
≠u40xx
, 0x00, (apu40xx));

278 
	`Sync
();

279 
	}
}

281 
	$SèãRe°‹e
(
vîsi⁄
) {

282 
	`Sync
();

283 
	}
}

285 
	$UNLO√Bus_Inô
(
C¨tInfo
 *
öfo
) {

286 
öfo
->
Powî
 = 
UNLO√BusPowî
;

287 
öfo
->
Re£t
 = 
UNLO√BusRe£t
;

289 i‡(((*(
uöt32
*)&(
öfo
->
MD5
)) == 0x305fcdc3) ||

290 ((*(
uöt32
*)&(
öfo
->
MD5
)) == 0x6abfce8e))

291 
öv_hack
 = 0xf;

293 
GameHBIRQHook
 = 
UNLO√BusIRQHook
;

294 
M≠IRQHook
 = 
UNLO√BusCpuHook
;

295 
GameSèãRe°‹e
 = 
SèãRe°‹e
;

296 
	`AddExSèã
(&
SèãRegs
, ~0, 0, 0);

297 
	}
}

	@fceux-am/src/boards/pec-586.cpp

24 
	~"m≠öc.h
"

26 
uöt8
 
	gªg
[8];

27 
uöt32
 
	gœ°¡
 = 0;

28 
uöt8
 *
	gWRAM
 = 
NULL
;

29 
uöt32
 
	gWRAMSIZE
;

31 
SFORMAT
 
	gSèãRegs
[] =

33 { 
ªg
, 2, "REG" },

34 { &
œ°¡
, 4, "LNT" },

38 
uöt8
 
	gbs_tbl
[128] = {

49 
uöt8
 
	gbr_tbl
[16] = {

53 
	$Sync
() {

54 
	`£tchr8
(0);

55 
	`£çrg8r
(0x10, 0x6000, 0);

56 if(
PRGsize
[0] == 512 * 1024) {

57 if(
ªg
[0] & 0x010) {

58 
	`£çrg32
(0x8000, 
ªg
[0] & 7);

60 if(
ªg
[0] & 0x40)

61 
	`£çrg8
(0x8000, (
ªg
[0] & 0x0F) | 0x20 | ((reg[0] & 0x20) >> 1));

63 if((
ªg
[0] & 0x18) == 0x18)

64 
	`£tmúr‹
(
MI_H
);

66 
	`£tmúr‹
(
MI_V
);

68 
	`£çrg16
(0x8000, 
bs_tbl
[
ªg
[0] & 0x7f] >> 4);

69 
	`£çrg16
(0xc000, 
bs_tbl
[
ªg
[0] & 0x7f] & 0xf);

70 
	`£tmúr‹
(
MI_V
);

72 
	}
}

74 
	$DECLFW
(
UNLPEC586Wrôe
) {

75 
ªg
[(
A
 & 0x700Ë>> 8] = 
V
;

76 
PEC586Hack
 = (
ªg
[0] & 0x80) >> 7;

78 
	`Sync
();

79 
	}
}

81 
	$DECLFR
(
UNLPEC586Ród
) {

83  (
X
.
DB
 & 0xD8Ë| 
br_tbl
[
ªg
[4] >> 4];

84 
	}
}

86 
	$DECLFR
(
UNLPEC586RódHi
) {

87 if((
ªg
[0] & 0x10Ë|| (‘eg[0] & 0x40Ë&& (
A
 < 0xA000)))

88  
	`C¨tBR
(
A
);

90  
PRG±r
[0][((0x0107 | ((
A
 >> 7) & 0x0F8)) << 10) | (A & 0x3FF)];

91 
	}
}

93 
	$UNLPEC586Powî
() {

94 if(
PRGsize
[0] == 512 * 1024)

95 
ªg
[0] = 0x00;

97 
ªg
[0] = 0x0E;

98 
	`Sync
();

99 
	`SëRódH™dÀr
(0x6000, 0x7FFF, 
C¨tBR
);

100 
	`SëWrôeH™dÀr
(0x6000, 0x7FFF, 
C¨tBW
);

101 if(
PRGsize
[0] == 512 * 1024)

102 
	`SëRódH™dÀr
(0x8000, 0xFFFF, 
UNLPEC586RódHi
);

104 
	`SëRódH™dÀr
(0x8000, 0xFFFF, 
C¨tBR
);

105 
	`SëWrôeH™dÀr
(0x5000, 0x5fff, 
UNLPEC586Wrôe
);

106 
	`SëRódH™dÀr
(0x5000, 0x5fff, 
UNLPEC586Ród
);

107 
	`FCEU_ChótAddRAM
(
WRAMSIZE
 >> 10, 0x6000, 
WRAM
);

108 
	}
}

110 
	$UNLPEC586Clo£
() {

111 i‡(
WRAM
)

112 
	`FCEU_g‰ì
(
WRAM
);

113 
WRAM
 = 
NULL
;

114 
	}
}

116 
	$SèãRe°‹e
(
vîsi⁄
) {

117 
	`Sync
();

118 
	}
}

120 
	$UNLPEC586Inô
(
C¨tInfo
 *
öfo
) {

121 
öfo
->
Powî
 = 
UNLPEC586Powî
;

122 
öfo
->
Clo£
 = 
UNLPEC586Clo£
;

123 
GameSèãRe°‹e
 = 
SèãRe°‹e
;

125 
WRAMSIZE
 = 8192;

126 
WRAM
 = (
uöt8
*)
	`FCEU_gmÆloc
(
WRAMSIZE
);

127 
	`SëupC¨tPRGM≠pög
(0x10, 
WRAM
, 
WRAMSIZE
, 1);

128 
	`AddExSèã
(
WRAM
, 
WRAMSIZE
, 0, "WRAM");

130 
	`AddExSèã
(&
SèãRegs
, ~0, 0, 0);

131 
	}
}

	@fceux-am/src/boards/rt-01.cpp

27 
	~"m≠öc.h
"

29 
u64
 
x‹oshúo128∂us_√xt
();

31 
	$DECLFR
(
UNLRT01Ród
) {

36 if(((
A
 >= 0xCE80) && (A < 0xCF00)) ||

37 ((
A
 >= 0xFE80) && (A < 0xFF00))) {

38  0xF2 | (
	`x‹oshúo128∂us_√xt
() & 0x0D);

40  
	`C¨tBR
(
A
);

41 
	}
}

43 
	$UNLRT01Powî
() {

44 
	`£çrg16
(0x8000, 0);

45 
	`£çrg16
(0xC000, 0);

46 
	`£tchr2
(0x0000,0);

47 
	`£tchr2
(0x0800,0);

48 
	`£tchr2
(0x1000,0);

49 
	`£tchr2
(0x1800,0);

50 
	`SëRódH™dÀr
(0x8000, 0xFFFF, 
UNLRT01Ród
);

51 
	}
}

53 
	$UNLRT01_Inô
(
C¨tInfo
 *
öfo
) {

54 
öfo
->
Powî
 = 
UNLRT01Powî
;

55 
	}
}

	@fceux-am/src/boards/sa-9602b.cpp

21 
	~"m≠öc.h
"

22 
	~"mmc3.h
"

24 
	$SA9602BPW
(
uöt32
 
A
, 
uöt8
 
V
) {

25 
	`£çrg8r
(
EXPREGS
[1], 
A
, 
V
 & 0x3F);

26 i‡(
MMC3_cmd
 & 0x40)

27 
	`£çrg8r
(0, 0x8000, ~(1));

29 
	`£çrg8r
(0, 0xc000, ~(1));

30 
	`£çrg8r
(0, 0xe000, ~(0));

31 
	}
}

33 
	$DECLFW
(
SA9602BWrôe
) {

34 
A
 & 0xe001) {

35 0x8000: 
EXPREGS
[0] = 
V
; ;

37 i‡((
EXPREGS
[0] & 7) < 6) {

38 
EXPREGS
[1] = 
V
 >> 6;

39 
	`FixMMC3PRG
(
MMC3_cmd
);

43 
	`MMC3_CMDWrôe
(
A
, 
V
);

44 
	}
}

46 
	$SA9602BPowî
() {

47 
EXPREGS
[0] = EXPREGS[1] = 0;

48 
	`GíMMC3Powî
();

49 
	`SëRódH™dÀr
(0x8000, 0xFFFF, 
C¨tBR
);

50 
	`SëWrôeH™dÀr
(0x8000, 0xBFFF, 
SA9602BWrôe
);

51 
	}
}

53 
	$SA9602B_Inô
(
C¨tInfo
 *
öfo
) {

54 
	`GíMMC3_Inô
(
öfo
, 512, 0, 0, 0);

55 
pwøp
 = 
SA9602BPW
;

56 
mmc3›ts
 |= 2;

57 
öfo
->
SaveGame
[0] = 
UNIFchºama
;

58 
öfo
->
SaveGameLí
[0] = 32 * 1024;

59 
öfo
->
Powî
 = 
SA9602BPowî
;

60 
	`AddExSèã
(
EXPREGS
, 2, 0, "EXPR");

61 
	}
}

	@fceux-am/src/boards/sachen.cpp

21 
	~"m≠öc.h
"

23 
uöt8
 
	gcmd
, 
	gdù
;

24 
uöt8
 
	gœtch
[8];

26 
	$S74LS374MSync
(
uöt8
 
múr
) {

27 
múr
 & 3) {

28 0: 
	`£tmúr‹
(
MI_V
); ;

29 1: 
	`£tmúr‹
(
MI_H
); ;

30 2: 
	`£tmúr‹w
(0, 1, 1, 1); ;

31 3: 
	`£tmúr‹
(
MI_0
); ;

33 
	}
}

35 
	$S74LS374NSynco
() {

36 
	`£çrg32
(0x8000, 
œtch
[0]);

37 
	`£tchr8
(
œtch
[1] |Üatch[3] |Üatch[4]);

38 
	`S74LS374MSync
(
œtch
[2]);

39 
	}
}

41 
	$DECLFW
(
S74LS374NWrôe
) {

42 
A
 &= 0x4101;

43 i‡(
A
 == 0x4100)

44 
cmd
 = 
V
 & 7;

46 
cmd
) {

47 2: 
œtch
[0] = 
V
 & 1;Üatch[3] = (V & 1) << 3; ;

48 4: 
œtch
[4] = (
V
 & 1) << 2; ;

49 5: 
œtch
[0] = 
V
 & 7; ;

50 6: 
œtch
[1] = 
V
 & 3; ;

51 7: 
œtch
[2] = 
V
 >> 1; ;

53 
	`S74LS374NSynco
();

55 
	}
}

57 
	$DECLFR
(
S74LS374NRód
) {

58 
uöt8
 
ªt
;

59 i‡((
A
 & 0x4100) == 0x4100)

61 
ªt
 = ((~
cmd
Ë& 0x3FË^ 
dù
;

63 
ªt
 = 
X
.
DB
;

64  
ªt
;

65 
	}
}

67 
	$S74LS374NPowî
() {

68 
dù
 = 0;

69 
œtch
[0] =Üatch[1] =Üatch[2] =Üatch[3] =Üatch[4] = 0;

70 
	`S74LS374NSynco
();

71 
	`SëRódH™dÀr
(0x8000, 0xFFFF, 
C¨tBR
);

72 
	`SëWrôeH™dÀr
(0x4100, 0x7FFF, 
S74LS374NWrôe
);

73 
	`SëRódH™dÀr
(0x4100, 0x5fff, 
S74LS374NRód
);

74 
	}
}

76 
	$S74LS374NRe£t
() {

77 
dù
 ^= 1;

78 
œtch
[0] =Üatch[1] =Üatch[2] =Üatch[3] =Üatch[4] = 0;

79 
	`S74LS374NSynco
();

80 
	}
}

82 
	$S74LS374NRe°‹e
(
vîsi⁄
) {

83 
	`S74LS374NSynco
();

84 
	}
}

86 
	$S74LS374N_Inô
(
C¨tInfo
 *
öfo
) {

87 
öfo
->
Powî
 = 
S74LS374NPowî
;

88 
öfo
->
Re£t
 = 
S74LS374NRe£t
;

89 
GameSèãRe°‹e
 = 
S74LS374NRe°‹e
;

90 
	`AddExSèã
(
œtch
, 5, 0, "LATC");

91 
	`AddExSèã
(&
cmd
, 1, 0, "CMD");

92 
	`AddExSèã
(&
dù
, 1, 0, "DIP");

93 
	}
}

95 
	$S74LS374NASynco
() {

96 
	`£çrg32
(0x8000, 
œtch
[0]);

97 
	`£tchr8
(
œtch
[1]);

98 
	`S74LS374MSync
(
œtch
[2]);

99 
	}
}

101 
	$DECLFW
(
S74LS374NAWrôe
) {

102 
A
 &= 0x4101;

103 i‡(
A
 == 0x4100)

104 
cmd
 = 
V
 & 7;

106 
cmd
) {

107 0: 
œtch
[0] = 0;Üatch[1] = 3; ;

108 2: 
œtch
[3] = (
V
 & 1) << 3; ;

109 4: 
œtch
[1] = (œtch[1] & 6Ë| (
V
 & 3); ;

110 5: 
œtch
[0] = 
V
 & 1; ;

111 6: 
œtch
[1] = (œtch[1] & 1Ë|Ü©ch[3] | ((
V
 & 3) << 1); ;

112 7: 
œtch
[2] = 
V
 & 1; ;

114 
	`S74LS374NASynco
();

116 
	}
}

118 
	$S74LS374NAPowî
() {

119 
œtch
[0] =Üatch[2] =Üatch[3] =Üatch[4] = 0;

120 
œtch
[1] = 3;

121 
	`S74LS374NASynco
();

122 
	`SëRódH™dÀr
(0x8000, 0xFFFF, 
C¨tBR
);

123 
	`SëWrôeH™dÀr
(0x4100, 0x7FFF, 
S74LS374NAWrôe
);

124 
	}
}

126 
	$S74LS374NA_Inô
(
C¨tInfo
 *
öfo
) {

127 
öfo
->
Powî
 = 
S74LS374NAPowî
;

128 
GameSèãRe°‹e
 = 
S74LS374NRe°‹e
;

129 
	`AddExSèã
(
œtch
, 5, 0, "LATC");

130 
	`AddExSèã
(&
cmd
, 1, 0, "CMD");

131 
	}
}

133 
	gty≥
;

134 
	$S8259Synco
() {

135 
x
;

136 
	`£çrg32
(0x8000, 
œtch
[5] & 7);

138 i‡(!
UNIFchºama
) {

139 
x
 = 0; x < 4; x++) {

140 
b™k
;

141 i‡(
œtch
[7] & 1)

142 
b™k
 = (
œtch
[0] & 0x7) | ((latch[4] & 7) << 3);

144 
b™k
 = (
œtch
[
x
] & 0x7) | ((latch[4] & 7) << 3);

145 
ty≥
) {

146 00: 
b™k
 = (b™k << 1Ë| (
x
 & 1); 
	`£tchr2
(0x800 * x, bank); ;

147 01: 
	`£tchr2
(0x800 * 
x
, 
b™k
); ;

148 02: 
b™k
 = (b™k << 2Ë| (
x
 & 3); 
	`£tchr2
(0x800 * x, bank); ;

150 
b™k
 = 
œtch
[
x
] & 7;

151 
x
 & 3) {

152 01: 
b™k
 |(
œtch
[4] & 1) << 4; ;

153 02: 
b™k
 |(
œtch
[4] & 2) << 3; ;

154 03: 
b™k
 |((
œtch
[4] & 4) << 2) | ((latch[6] & 1) << 3); ;

156 
	`£tchr1
(0x400 * 
x
, 
b™k
);

157 
	`£tchr4
(0x1000, ~0);

162 i‡(!(
œtch
[7] & 1))

163 
	`S74LS374MSync
(
œtch
[7] >> 1);

165 
	`£tmúr‹
(
MI_V
);

166 
	}
}

168 
	$DECLFW
(
S8259Wrôe
) {

169 
A
 &= 0x4101;

170 i‡(
A
 == 0x4100)

171 
cmd
 = 
V
;

173 
œtch
[
cmd
 & 7] = 
V
;

174 
	`S8259Synco
();

176 
	}
}

178 
	$S8259Re£t
() {

179 
x
;

180 
cmd
 = 0;

182 
x
 = 0; x < 8; x++Ë
œtch
[x] = 0;

183 
	`£tchr8
(0);

185 
	`S8259Synco
();

186 
	`SëRódH™dÀr
(0x8000, 0xFFFF, 
C¨tBR
);

187 
	`SëWrôeH™dÀr
(0x4100, 0x7FFF, 
S8259Wrôe
);

188 
	}
}

190 
	$S8259Re°‹e
(
vîsi⁄
) {

191 
	`S8259Synco
();

192 
	}
}

194 
	$S8259A_Inô
(
C¨tInfo
 *
öfo
) {

195 
öfo
->
Powî
 = 
S8259Re£t
;

196 
GameSèãRe°‹e
 = 
S8259Re°‹e
;

197 
	`AddExSèã
(
œtch
, 8, 0, "LATC");

198 
	`AddExSèã
(&
cmd
, 1, 0, "CMD");

199 
ty≥
 = 0;

200 
	}
}

202 
	$S8259B_Inô
(
C¨tInfo
 *
öfo
) {

203 
öfo
->
Powî
 = 
S8259Re£t
;

204 
GameSèãRe°‹e
 = 
S8259Re°‹e
;

205 
	`AddExSèã
(
œtch
, 8, 0, "LATC");

206 
	`AddExSèã
(&
cmd
, 1, 0, "CMD");

207 
ty≥
 = 1;

208 
	}
}

210 
	$S8259C_Inô
(
C¨tInfo
 *
öfo
) {

211 
öfo
->
Powî
 = 
S8259Re£t
;

212 
GameSèãRe°‹e
 = 
S8259Re°‹e
;

213 
	`AddExSèã
(
œtch
, 8, 0, "LATC");

214 
	`AddExSèã
(&
cmd
, 1, 0, "CMD");

215 
ty≥
 = 2;

216 
	}
}

218 
	$S8259D_Inô
(
C¨tInfo
 *
öfo
) {

219 
öfo
->
Powî
 = 
S8259Re£t
;

220 
GameSèãRe°‹e
 = 
S8259Re°‹e
;

221 
	`AddExSèã
(
œtch
, 8, 0, "LATC");

222 
	`AddExSèã
(&
cmd
, 1, 0, "CMD");

223 
ty≥
 = 3;

224 
	}
}

226 (*
WSync
)();

228 
	$DECLFW
(
SAWrôe
) {

229 i‡(
A
 & 0x100) {

230 
œtch
[0] = 
V
;

231 
	`WSync
();

233 
	}
}

235 
	$SAPowî
() {

236 
œtch
[0] = 0;

237 
	`WSync
();

238 
	`SëRódH™dÀr
(0x8000, 0xFFFF, 
C¨tBR
);

239 
	`SëWrôeH™dÀr
(0x4100, 0x5FFF, 
SAWrôe
);

240 
	}
}

242 
	$SARe°‹e
(
vîsi⁄
) {

243 
	`WSync
();

244 
	}
}

246 
	$DECLFW
(
SADWrôe
) {

247 
œtch
[0] = 
V
;

248 
	`WSync
();

249 
	}
}

251 
	$SADPowî
() {

252 
œtch
[0] = 0;

253 
	`WSync
();

254 
	`SëRódH™dÀr
(0x8000, 0xFFFF, 
C¨tBR
);

255 
	`SëWrôeH™dÀr
(0x8000, 0xFFFF, 
SADWrôe
);

256 
	}
}

258 
	$SA0161MSynco
() {

259 
	`£çrg32
(0x8000, (
œtch
[0] >> 3) & 1);

260 
	`£tchr8
(
œtch
[0] & 7);

261 
	}
}

263 
	$SA72007Synco
() {

264 
	`£çrg32
(0x8000, 0);

265 
	`£tchr8
(
œtch
[0] >> 7);

266 
	}
}

268 
	$SA009Synco
() {

269 
	`£çrg32
(0x8000, 0);

270 
	`£tchr8
(
œtch
[0] & 1);

271 
	}
}

273 
	$SA72008Synco
() {

274 
	`£çrg32
(0x8000, (
œtch
[0] >> 2) & 1);

275 
	`£tchr8
(
œtch
[0] & 3);

276 
	}
}

278 
	$SA0161M_Inô
(
C¨tInfo
 *
öfo
) {

279 
WSync
 = 
SA0161MSynco
;

280 
GameSèãRe°‹e
 = 
SARe°‹e
;

281 
öfo
->
Powî
 = 
SAPowî
;

282 
	`AddExSèã
(&
œtch
[0], 1, 0, "LATC");

283 
	}
}

285 
	$SA72007_Inô
(
C¨tInfo
 *
öfo
) {

286 
WSync
 = 
SA72007Synco
;

287 
GameSèãRe°‹e
 = 
SARe°‹e
;

288 
öfo
->
Powî
 = 
SAPowî
;

289 
	`AddExSèã
(&
œtch
[0], 1, 0, "LATC");

290 
	}
}

292 
	$SA72008_Inô
(
C¨tInfo
 *
öfo
) {

293 
WSync
 = 
SA72008Synco
;

294 
GameSèãRe°‹e
 = 
SARe°‹e
;

295 
öfo
->
Powî
 = 
SAPowî
;

296 
	`AddExSèã
(&
œtch
[0], 1, 0, "LATC");

297 
	}
}

299 
	$SA009_Inô
(
C¨tInfo
 *
öfo
) {

300 
WSync
 = 
SA009Synco
;

301 
GameSèãRe°‹e
 = 
SARe°‹e
;

302 
öfo
->
Powî
 = 
SAPowî
;

303 
	`AddExSèã
(&
œtch
[0], 1, 0, "LATC");

304 
	}
}

306 
	$SA0036_Inô
(
C¨tInfo
 *
öfo
) {

307 
WSync
 = 
SA72007Synco
;

308 
GameSèãRe°‹e
 = 
SARe°‹e
;

309 
öfo
->
Powî
 = 
SADPowî
;

310 
	`AddExSèã
(&
œtch
[0], 1, 0, "LATC");

311 
	}
}

313 
	$SA0037_Inô
(
C¨tInfo
 *
öfo
) {

314 
WSync
 = 
SA0161MSynco
;

315 
GameSèãRe°‹e
 = 
SARe°‹e
;

316 
öfo
->
Powî
 = 
SADPowî
;

317 
	`AddExSèã
(&
œtch
[0], 1, 0, "LATC");

318 
	}
}

322 
	$TCU01Synco
() {

323 
	`£çrg32
(0x8000, ((
œtch
[0] & 0x80) >> 6) | ((latch[0] >> 2) & 1));

324 
	`£tchr8
((
œtch
[0] >> 3) & 0xF);

325 
	}
}

327 
	$DECLFW
(
TCU01Wrôe
) {

328 i‡((
A
 & 0x103) == 0x102) {

329 
œtch
[0] = 
V
;

330 
	`TCU01Synco
();

332 
	}
}

334 
	$TCU01Powî
() {

335 
œtch
[0] = 0;

336 
	`SëRódH™dÀr
(0x8000, 0xFFFF, 
C¨tBR
);

337 
	`SëWrôeH™dÀr
(0x4100, 0xFFFF, 
TCU01Wrôe
);

338 
	`TCU01Synco
();

339 
	}
}

341 
	$TCU01Re°‹e
(
vîsi⁄
) {

342 
	`TCU01Synco
();

343 
	}
}

345 
	$TCU01_Inô
(
C¨tInfo
 *
öfo
) {

346 
GameSèãRe°‹e
 = 
TCU01Re°‹e
;

347 
öfo
->
Powî
 = 
TCU01Powî
;

348 
	`AddExSèã
(&
œtch
[0], 1, 0, "LATC");

349 
	}
}

353 
	$TCU02Synco
() {

354 
	`£çrg32
(0x8000, 0);

355 
	`£tchr8
(
œtch
[0] & 3);

356 
	}
}

358 
	$DECLFW
(
TCU02Wrôe
) {

359 i‡((
A
 & 0x103) == 0x102) {

360 
œtch
[0] = 
V
 + 3;

361 
	`TCU02Synco
();

363 
	}
}

365 
	$DECLFR
(
TCU02Ród
) {

366  (
œtch
[0] & 0x3FË| (
X
.
DB
 & 0xC0);

367 
	}
}

369 
	$TCU02Powî
() {

370 
œtch
[0] = 0;

371 
	`SëRódH™dÀr
(0x8000, 0xFFFF, 
C¨tBR
);

372 
	`SëRódH™dÀr
(0x4100, 0x4100, 
TCU02Ród
);

373 
	`SëWrôeH™dÀr
(0x4100, 0xFFFF, 
TCU02Wrôe
);

374 
	`TCU02Synco
();

375 
	}
}

377 
	$TCU02Re°‹e
(
vîsi⁄
) {

378 
	`TCU02Synco
();

379 
	}
}

381 
	$TCU02_Inô
(
C¨tInfo
 *
öfo
) {

382 
GameSèãRe°‹e
 = 
TCU02Re°‹e
;

383 
öfo
->
Powî
 = 
TCU02Powî
;

384 
	`AddExSèã
(&
œtch
[0], 1, 0, "LATC");

385 
	}
}

389 
	$DECLFR
(
TCA01Ród
) {

390 
uöt8
 
ªt
;

391 i‡((
A
 & 0x4100) == 0x4100)

392 
ªt
 = (
X
.
DB
 & 0xC0Ë| ((~
A
) & 0x3F);

394 
ªt
 = 
X
.
DB
;

395  
ªt
;

396 
	}
}

398 
	$TCA01Powî
() {

399 
	`£çrg16
(0x8000, 0);

400 
	`£çrg16
(0xC000, 1);

401 
	`£tchr8
(0);

402 
	`SëRódH™dÀr
(0x8000, 0xFFFF, 
C¨tBR
);

403 
	`SëRódH™dÀr
(0x4100, 0x5FFF, 
TCA01Ród
);

404 
	}
}

406 
	$TCA01_Inô
(
C¨tInfo
 *
öfo
) {

407 
öfo
->
Powî
 = 
TCA01Powî
;

408 
	}
}

	@fceux-am/src/boards/sb-2000.cpp

21 
	~"m≠öc.h
"

23 
uöt8
 
	g¥eg
[8];

24 
uöt8
 
	gIRQa
;

25 
öt16
 
	gIRQCou¡
, 
	gIRQL©ch
;

26 
uöt8
 *
	gWRAM
 = 
NULL
;

27 
uöt32
 
	gWRAMSIZE
;

33 
SFORMAT
 
	gSèãRegs
[] =

35 { 
¥eg
, 8, "PREG" },

36 { &
IRQa
, 1, "IRQA" },

37 { &
IRQCou¡
, 2, "IRQC" },

38 { &
IRQL©ch
, 2, "IRQL" },

42 
	$Sync
() {

43 
	`£tchr8
(0);

44 
	`£çrg8r
(0x10, 0x6000, 0);

45 if(
¥eg
[0] & 0x80)

46 
	`£çrg4r
(0x10,0x8000,
¥eg
[0] & 0x7f);

48 
	`£çrg4
(0x8000,
¥eg
[0] & 0x7f);

49 if(
¥eg
[1] & 0x80)

50 
	`£çrg4r
(0x10,0x9000,
¥eg
[1] & 0x7f);

52 
	`£çrg4
(0x9000,
¥eg
[1] & 0x7f);

53 if(
¥eg
[2] & 0x80)

54 
	`£çrg4r
(0x10,0xa000,
¥eg
[2] & 0x7f);

56 
	`£çrg4
(0xa000,
¥eg
[2] & 0x7f);

57 if(
¥eg
[3] & 0x80)

58 
	`£çrg4r
(0x10,0xb000,
¥eg
[3] & 0x7f);

60 
	`£çrg4
(0xb000,
¥eg
[3] & 0x7f);

79 
	`£çrg16
(0xC000,1);

80 
	}
}

82 
	$DECLFR
(
UNLSB2000Ród
) {

83 
A
) {

85 
	`X6502_IRQEnd
(
FCEU_IQFCOUNT
);

92 
	`FCEU_¥ötf
("unkÑód: %04x\n",
A
);

96 
	}
}

98 
	$DECLFW
(
UNLSB2000Wrôe
) {

99 
A
) {

101 
BWrôe
[0x4015](0x4015, 0x10);

102 
BWrôe
[0x4011](0x4011, 
V
 >> 1);

105 
IRQa
 &~
V
;

117 
¥eg
[
A
&7] = 
V
;

118 
	`Sync
();

124 
	}
}

126 
	$UNLSB2000Re£t
() {

127 
¥eg
[0] = 0;

128 
¥eg
[1] = 1;

129 
¥eg
[2] = 2;

130 
¥eg
[3] = 3;

131 
¥eg
[4] = 4;

132 
¥eg
[5] = 5;

133 
¥eg
[6] = 6;

134 
¥eg
[7] = 7;

135 
IRQa
 = 0;

138 
	}
}

140 
	$UNLSB2000Powî
() {

141 
	`UNLSB2000Re£t
();

142 
	`Sync
();

143 
	`SëRódH™dÀr
(0x6000, 0x7fff, 
C¨tBR
);

144 
	`SëWrôeH™dÀr
(0x6000, 0x7fff, 
C¨tBW
);

145 
	`SëRódH™dÀr
(0x8000, 0xffff, 
C¨tBR
);

146 
	`SëWrôeH™dÀr
(0x8000, 0xbfff, 
C¨tBW
);

147 
	`SëWrôeH™dÀr
(0x4020, 0x5fff, 
UNLSB2000Wrôe
);

148 
	`SëRódH™dÀr
(0x4020, 0x5fff, 
UNLSB2000Ród
);

149 
	}
}

151 
	$UNLSB2000Clo£
()

153 i‡(
WRAM
)

154 
	`FCEU_g‰ì
(
WRAM
);

159 
WRAM
 = 
NULL
;

160 
	}
}

166 
	$SèãRe°‹e
(
vîsi⁄
) {

167 
	`Sync
();

168 
	}
}

170 
	$UNLSB2000_Inô
(
C¨tInfo
 *
öfo
) {

171 
öfo
->
Re£t
 = 
UNLSB2000Re£t
;

172 
öfo
->
Powî
 = 
UNLSB2000Powî
;

173 
öfo
->
Clo£
 = 
UNLSB2000Clo£
;

175 
GameSèãRe°‹e
 = 
SèãRe°‹e
;

185 
WRAMSIZE
 = 512 * 1024;

186 
WRAM
 = (
uöt8
*)
	`FCEU_gmÆloc
(
WRAMSIZE
);

187 
	`SëupC¨tPRGM≠pög
(0x10, 
WRAM
, 
WRAMSIZE
, 1);

188 
	`AddExSèã
(
WRAM
, 
WRAMSIZE
, 0, "WRAM");

189 i‡(
öfo
->
b©ãry
) {

190 
öfo
->
SaveGame
[0] = 
WRAM
;

191 
öfo
->
SaveGameLí
[0] = 
WRAMSIZE
;

194 
	`AddExSèã
(&
SèãRegs
, ~0, 0, 0);

195 
	}
}

	@fceux-am/src/boards/sc-127.cpp

23 
	~"m≠öc.h
"

25 
uöt8
 
	gªg
[8], 
	gchr
[8];

26 
uöt8
 *
	gWRAM
 = 
NULL
;

27 
uöt32
 
	gWRAMSIZE
;

28 
uöt16
 
	gIRQCou¡
, 
	gIRQa
;

30 
SFORMAT
 
	gSèãRegs
[] =

32 { 
ªg
, 8, "REGS" },

33 { 
chr
, 8, "CHRS" },

34 { &
IRQCou¡
, 2, "IRQc" },

35 { &
IRQa
, 2, "IRQa" },

39 
	$Sync
() {

40 
i
;

41 
	`£çrg8r
(0x10, 0x6000, 0);

42 
	`£çrg8
(0x8000, 
ªg
[0]);

43 
	`£çrg8
(0xA000, 
ªg
[1]);

44 
	`£çrg8
(0xC000, 
ªg
[2]);

45 
	`£çrg8
(0xE000, ~0);

46 
i
 = 0; i < 8; i++)

47 
	`£tchr1
(
i
 << 10, 
chr
[i]);

48 
	`£tmúr‹
(
ªg
[3] ^ 1);

49 
	}
}

51 
	$DECLFW
(
UNLSC127Wrôe
) {

52 
A
) {

53 0x8000: 
ªg
[0] = 
V
; ;

54 0x8001: 
ªg
[1] = 
V
; ;

55 0x8002: 
ªg
[2] = 
V
; ;

56 0x9000: 
chr
[0] = 
V
; ;

57 0x9001: 
chr
[1] = 
V
; ;

58 0x9002: 
chr
[2] = 
V
; ;

59 0x9003: 
chr
[3] = 
V
; ;

60 0x9004: 
chr
[4] = 
V
; ;

61 0x9005: 
chr
[5] = 
V
; ;

62 0x9006: 
chr
[6] = 
V
; ;

63 0x9007: 
chr
[7] = 
V
; ;

64 0xC002: 
IRQa
 = 0; 
	`X6502_IRQEnd
(
FCEU_IQEXT
); ;

65 0xC005: 
IRQCou¡
 = 
V
; ;

66 0xC003: 
IRQa
 = 1; ;

67 0xD001: 
ªg
[3] = 
V
; ;

69 
	`Sync
();

70 
	}
}

72 
	$DECLFR
(
UNLSC127PrŸRód
) {

74 
	}
}

76 
	$UNLSC127Powî
() {

77 
IRQCou¡
 = 
IRQa
 = 0;

78 
	`Sync
();

79 
	`SëRódH™dÀr
(0x5800, 0x5800, 
UNLSC127PrŸRód
);

80 
	`SëRódH™dÀr
(0x6000, 0x7fff, 
C¨tBR
);

81 
	`SëWrôeH™dÀr
(0x6000, 0x7fff, 
C¨tBW
);

82 
	`SëRódH™dÀr
(0x8000, 0xFFFF, 
C¨tBR
);

83 
	`SëWrôeH™dÀr
(0x8000, 0xFFFF, 
UNLSC127Wrôe
);

84 
	`FCEU_ChótAddRAM
(
WRAMSIZE
 >> 10, 0x6000, 
WRAM
);

85 
	}
}

87 
	$UNLSC127IRQ
() {

88 i‡(
IRQa
) {

89 if(
IRQCou¡
 > 0)

90 
IRQCou¡
--;

91 i‡(!
IRQCou¡
) {

92 
	`X6502_IRQBegö
(
FCEU_IQEXT
);

93 
IRQa
 = 0;

96 
	}
}

98 
	$UNLSC127Re£t
() {

99 
IRQCou¡
 = 
IRQa
 = 0;

100 
	}
}

102 
	$UNLSC127Clo£
() {

103 i‡(
WRAM
)

104 
	`FCEU_g‰ì
(
WRAM
);

105 
WRAM
 = 
NULL
;

106 
	}
}

108 
	$SèãRe°‹e
(
vîsi⁄
) {

109 
	`Sync
();

110 
	}
}

112 
	$UNLSC127_Inô
(
C¨tInfo
 *
öfo
) {

113 
öfo
->
Re£t
 = 
UNLSC127Re£t
;

114 
öfo
->
Powî
 = 
UNLSC127Powî
;

115 
öfo
->
Clo£
 = 
UNLSC127Clo£
;

116 
GameHBIRQHook
 = 
UNLSC127IRQ
;

117 
GameSèãRe°‹e
 = 
SèãRe°‹e
;

118 
WRAMSIZE
 = 8192;

119 
WRAM
 = (
uöt8
*)
	`FCEU_gmÆloc
(
WRAMSIZE
);

120 
	`SëupC¨tPRGM≠pög
(0x10, 
WRAM
, 
WRAMSIZE
, 1);

121 
	`AddExSèã
(
WRAM
, 
WRAMSIZE
, 0, "WRAM");

122 
	`AddExSèã
(&
SèãRegs
, ~0, 0, 0);

123 
	}
}

	@fceux-am/src/boards/sheroes.cpp

21 
	~"m≠öc.h
"

22 
	~"mmc3.h
"

24 
uöt8
 *
	gCHRRAM
;

25 
uöt8
 
	gãkkî
;

27 
	$MSHCW
(
uöt32
 
A
, 
uöt8
 
V
) {

28 i‡(
EXPREGS
[0] & 0x40)

29 
	`£tchr8r
(0x10, 0);

31 i‡(
A
 < 0x800)

32 
	`£tchr1
(
A
, 
V
 | ((
EXPREGS
[0] & 8) << 5));

33 i‡(
A
 < 0x1000)

34 
	`£tchr1
(
A
, 
V
 | ((
EXPREGS
[0] & 4) << 6));

35 i‡(
A
 < 0x1800)

36 
	`£tchr1
(
A
, 
V
 | ((
EXPREGS
[0] & 1) << 8));

38 
	`£tchr1
(
A
, 
V
 | ((
EXPREGS
[0] & 2) << 7));

40 
	}
}

42 
	$DECLFW
(
MSHWrôe
) {

43 
EXPREGS
[0] = 
V
;

44 
	`FixMMC3CHR
(
MMC3_cmd
);

45 
	}
}

47 
	$DECLFR
(
MSHRód
) {

48 (
ãkkî
);

49 
	}
}

51 
	$MSHRe£t
() {

52 
	`MMC3RegRe£t
();

53 
ãkkî
 ^= 0xFF;

54 
	}
}

56 
	$MSHPowî
() {

57 
ãkkî
 = 0x00;

58 
	`GíMMC3Powî
();

59 
	`SëWrôeH™dÀr
(0x4100, 0x4100, 
MSHWrôe
);

60 
	`SëRódH™dÀr
(0x4100, 0x4100, 
MSHRód
);

61 
	}
}

63 
	$MSHClo£
() {

64 i‡(
CHRRAM
)

65 
	`FCEU_g‰ì
(
CHRRAM
);

66 
CHRRAM
 = 
NULL
;

67 
	}
}

69 
	$UNLSHî€s_Inô
(
C¨tInfo
 *
öfo
) {

70 
	`GíMMC3_Inô
(
öfo
, 256, 512, 0, 0);

71 
cwøp
 = 
MSHCW
;

72 
öfo
->
Powî
 = 
MSHPowî
;

73 
öfo
->
Re£t
 = 
MSHRe£t
;

74 
öfo
->
Clo£
 = 
MSHClo£
;

75 
CHRRAM
 = (
uöt8
*)
	`FCEU_gmÆloc
(8192);

76 
	`SëupC¨tCHRM≠pög
(0x10, 
CHRRAM
, 8192, 1);

77 
	`AddExSèã
(
EXPREGS
, 4, 0, "EXPR");

78 
	`AddExSèã
(&
ãkkî
, 1, 0, "DIPSW");

79 
	}
}

	@fceux-am/src/boards/sl1632.cpp

21 
	~"m≠öc.h
"

22 
	~"mmc3.h
"

24 
uöt8
 
	gchrcmd
[8], 
	g¥g0
, 
	g¥g1
, 
	gbbrk
, 
	gmúr
, 
	gsw≠
;

25 
SFORMAT
 
	gSèãRegs
[] =

27 { 
chrcmd
, 8, "CHRC" },

28 { &
¥g0
, 1, "PRG0" },

29 { &
¥g1
, 1, "PRG1" },

30 { &
bbrk
, 1, "BRK" },

31 { &
múr
, 1, "MIRR" },

32 { &
sw≠
, 1, "SWAP" },

36 
	$Sync
() {

37 
i
;

38 
	`£çrg8
(0x8000, 
¥g0
);

39 
	`£çrg8
(0xA000, 
¥g1
);

40 
	`£çrg8
(0xC000, ~1);

41 
	`£çrg8
(0xE000, ~0);

42 
i
 = 0; i < 8; i++)

43 
	`£tchr1
(
i
 << 10, 
chrcmd
[i]);

44 
	`£tmúr‹
(
múr
 ^ 1);

45 
	}
}

47 
	$UNLSL1632CW
(
uöt32
 
A
, 
uöt8
 
V
) {

48 
cba£
 = (
MMC3_cmd
 & 0x80) << 5;

49 
∑ge0
 = (
bbrk
 & 0x08) << 5;

50 
∑ge1
 = (
bbrk
 & 0x20) << 3;

51 
∑ge2
 = (
bbrk
 & 0x80) << 1;

52 
	`£tchr1
(
cba£
 ^ 0x0000, 
∑ge0
 | (
DRegBuf
[0] & (~1)));

53 
	`£tchr1
(
cba£
 ^ 0x0400, 
∑ge0
 | 
DRegBuf
[0] | 1);

54 
	`£tchr1
(
cba£
 ^ 0x0800, 
∑ge0
 | (
DRegBuf
[1] & (~1)));

55 
	`£tchr1
(
cba£
 ^ 0x0C00, 
∑ge0
 | 
DRegBuf
[1] | 1);

56 
	`£tchr1
(
cba£
 ^ 0x1000, 
∑ge1
 | 
DRegBuf
[2]);

57 
	`£tchr1
(
cba£
 ^ 0x1400, 
∑ge1
 | 
DRegBuf
[3]);

58 
	`£tchr1
(
cba£
 ^ 0x1800, 
∑ge2
 | 
DRegBuf
[4]);

59 
	`£tchr1
(
cba£
 ^ 0x1c00, 
∑ge2
 | 
DRegBuf
[5]);

60 
	}
}

62 
	$DECLFW
(
UNLSL1632CMDWrôe
) {

63 i‡(
A
 == 0xA131) {

64 
bbrk
 = 
V
;

66 i‡(
bbrk
 & 2) {

67 
	`FixMMC3PRG
(
MMC3_cmd
);

68 
	`FixMMC3CHR
(
MMC3_cmd
);

69 i‡(
A
 < 0xC000)

70 
	`MMC3_CMDWrôe
(
A
, 
V
);

72 
	`MMC3_IRQWrôe
(
A
, 
V
);

74 i‡((
A
 >= 0xB000) && (A <= 0xE003)) {

75 
öd
 = ((((
A
 & 2) | (A >> 10)) >> 1) + 2) & 7;

76 
ßr
 = ((
A
 & 1) << 2);

77 
chrcmd
[
öd
] = (chrcmd[öd] & (0xF0 >> 
ßr
)Ë| ((
V
 & 0x0F) << sar);

79 
A
 & 0xF003) {

80 0x8000: 
¥g0
 = 
V
; ;

81 0xA000: 
¥g1
 = 
V
; ;

82 0x9000: 
múr
 = 
V
 & 1; ;

84 
	`Sync
();

86 
	}
}

88 
	$SèãRe°‹e
(
vîsi⁄
) {

89 i‡(
bbrk
 & 2) {

90 
	`FixMMC3PRG
(
MMC3_cmd
);

91 
	`FixMMC3CHR
(
MMC3_cmd
);

93 
	`Sync
();

94 
	}
}

96 
	$UNLSL1632Powî
() {

97 
	`GíMMC3Powî
();

98 
	`SëWrôeH™dÀr
(0x4100, 0xFFFF, 
UNLSL1632CMDWrôe
);

99 
	}
}

101 
	$UNLSL1632_Inô
(
C¨tInfo
 *
öfo
) {

102 
	`GíMMC3_Inô
(
öfo
, 256, 512, 0, 0);

103 
cwøp
 = 
UNLSL1632CW
;

104 
öfo
->
Powî
 = 
UNLSL1632Powî
;

105 
GameSèãRe°‹e
 = 
SèãRe°‹e
;

106 
	`AddExSèã
(&
SèãRegs
, ~0, 0, 0);

107 
	}
}

	@fceux-am/src/boards/subor.cpp

21 
	~"m≠öc.h
"

23 
uöt8
 
	gis167
, 
	gªgs
[4];

25 
SFORMAT
 
	gSèãRegs
[] =

27 { 
ªgs
, 4, "DREG" },

31 
	$Sync
() {

32 
ba£
, 
b™k
;

33 
ba£
 = ((
ªgs
[0] ^Ñegs[1]) & 0x10) << 1;

34 
b™k
 = (
ªgs
[2] ^Ñegs[3]) & 0x1f;

36 i‡(
ªgs
[1] & 0x08) {

37 
b™k
 &= 0xFE;

38 i‡(
is167
) {

39 
	`£çrg16
(0x8000, 
ba£
 + 
b™k
 + 1);

40 
	`£çrg16
(0xC000, 
ba£
 + 
b™k
 + 0);

42 
	`£çrg16
(0x8000, 
ba£
 + 
b™k
 + 0);

43 
	`£çrg16
(0xC000, 
ba£
 + 
b™k
 + 1);

46 i‡(
ªgs
[1] & 0x04) {

47 
	`£çrg16
(0x8000, 0x1F);

48 
	`£çrg16
(0xC000, 
ba£
 + 
b™k
);

50 
	`£çrg16
(0x8000, 
ba£
 + 
b™k
);

51 i‡(
is167
)

52 
	`£çrg16
(0xC000, 0x20);

54 
	`£çrg16
(0xC000, 0x07);

57 
	`£tchr8
(0);

58 
	}
}

60 
	$DECLFW
(
M166Wrôe
) {

61 
ªgs
[(
A
 >> 13Ë& 0x03] = 
V
;

62 
	`Sync
();

63 
	}
}

65 
	$M166Powî
() {

66 
ªgs
[0] =Ñegs[1] =Ñegs[2] =Ñegs[3] = 0;

67 
	`Sync
();

68 
	`SëRódH™dÀr
(0x8000, 0xFFFF, 
C¨tBR
);

69 
	`SëWrôeH™dÀr
(0x8000, 0xFFFF, 
M166Wrôe
);

70 
	}
}

72 
	$SèãRe°‹e
(
vîsi⁄
) {

73 
	`Sync
();

74 
	}
}

76 
	$M≠≥r166_Inô
(
C¨tInfo
 *
öfo
) {

77 
is167
 = 0;

78 
öfo
->
Powî
 = 
M166Powî
;

79 
GameSèãRe°‹e
 = 
SèãRe°‹e
;

80 
	`AddExSèã
(&
SèãRegs
, ~0, 0, 0);

81 
	}
}

83 
	$M≠≥r167_Inô
(
C¨tInfo
 *
öfo
) {

84 
is167
 = 1;

85 
öfo
->
Powî
 = 
M166Powî
;

86 
GameSèãRe°‹e
 = 
SèãRe°‹e
;

87 
	`AddExSèã
(&
SèãRegs
, ~0, 0, 0);

88 
	}
}

	@fceux-am/src/boards/super24.cpp

21 
	~"m≠öc.h
"

22 
	~"mmc3.h
"

24 
uöt8
 *
	gCHRRAM
 = 
NULL
;

25 
	gmasko8
[8] = { 63, 31, 15, 1, 3, 0, 0, 0 };

27 
	$Su≥r24PW
(
uöt32
 
A
, 
uöt8
 
V
) {

28 
uöt32
 
NV
 = 
V
 & 
masko8
[
EXPREGS
[0] & 7];

29 
NV
 |(
EXPREGS
[1] << 1);

30 
	`£çrg8r
((
NV
 >> 6Ë& 0xF, 
A
, NV);

31 
	}
}

33 
	$Su≥r24CW
(
uöt32
 
A
, 
uöt8
 
V
) {

34 i‡(
EXPREGS
[0] & 0x20)

35 
	`£tchr1r
(0x10, 
A
, 
V
);

37 
uöt32
 
NV
 = 
V
 | (
EXPREGS
[2] << 3);

38 
	`£tchr1r
((
NV
 >> 9Ë& 0xF, 
A
, NV);

40 
	}
}

42 
	$DECLFW
(
Su≥r24Wrôe
) {

43 
A
) {

45 
EXPREGS
[0] = 
V
;

46 
	`FixMMC3PRG
(
MMC3_cmd
);

47 
	`FixMMC3CHR
(
MMC3_cmd
);

50 
EXPREGS
[1] = 
V
;

51 
	`FixMMC3PRG
(
MMC3_cmd
);

54 
EXPREGS
[2] = 
V
;

55 
	`FixMMC3CHR
(
MMC3_cmd
);

58 
	}
}

60 
	$Su≥r24Powî
() {

61 
EXPREGS
[0] = 0x24;

62 
EXPREGS
[1] = 159;

63 
EXPREGS
[2] = 0;

64 
	`GíMMC3Powî
();

65 
	`SëWrôeH™dÀr
(0x5000, 0x7FFF, 
Su≥r24Wrôe
);

66 
	`SëRódH™dÀr
(0x8000, 0xFFFF, 
C¨tBR
);

67 
	}
}

69 
	$Su≥r24Re£t
() {

70 
EXPREGS
[0] = 0x24;

71 
EXPREGS
[1] = 159;

72 
EXPREGS
[2] = 0;

73 
	`MMC3RegRe£t
();

74 
	}
}

76 
	$Su≥r24Clo£
() {

77 i‡(
CHRRAM
)

78 
	`FCEU_g‰ì
(
CHRRAM
);

79 
CHRRAM
 = 
NULL
;

80 
	}
}

82 
	$Su≥r24_Inô
(
C¨tInfo
 *
öfo
) {

83 
	`GíMMC3_Inô
(
öfo
, 128, 256, 0, 0);

84 
öfo
->
Powî
 = 
Su≥r24Powî
;

85 
öfo
->
Re£t
 = 
Su≥r24Re£t
;

86 
öfo
->
Clo£
 = 
Su≥r24Clo£
;

87 
cwøp
 = 
Su≥r24CW
;

88 
pwøp
 = 
Su≥r24PW
;

89 
CHRRAM
 = (
uöt8
*)
	`FCEU_gmÆloc
(8192);

90 
	`SëupC¨tCHRM≠pög
(0x10, 
CHRRAM
, 8192, 1);

91 
	`AddExSèã
(
CHRRAM
, 8192, 0, "CHRR");

92 
	`AddExSèã
(
EXPREGS
, 3, 0, "BIG2");

93 
	}
}

	@fceux-am/src/boards/supervision.cpp

21 
	~"m≠öc.h
"

23 
uöt8
 
	gcmd0
, 
	gcmd1
;

24 
SFORMAT
 
	gSèãRegs
[] =

26 { &
cmd0
, 1, "L1" },

27 { &
cmd1
, 1, "L2" },

31 
	$Sync
() {

32 
	`£tchr8
(0);

33 i‡(
PRG±r
[1])

34 
	`£çrg8r
((
cmd0
 & 0xC) >> 2, 0x6000, ((cmd0 & 0x3) << 4) | 0xF);

36 
	`£çrg8
(0x6000, (((
cmd0
 & 0xF) << 4) | 0xF) + 4);

37 i‡(
cmd0
 & 0x10) {

38 i‡(
PRG±r
[1]) {

39 
	`£çrg16r
((
cmd0
 & 0xCË>> 2, 0x8000, ((cmd0 & 0x3Ë<< 3Ë| (
cmd1
 & 7));

40 
	`£çrg16r
((
cmd0
 & 0xC) >> 2, 0xc000, ((cmd0 & 0x3) << 3) | 7);

42 
	`£çrg16
(0x8000, (((
cmd0
 & 0xFË<< 3Ë| (
cmd1
 & 7)) + 2);

43 
	`£çrg16
(0xc000, (((
cmd0
 & 0xF) << 3) | 7) + 2);

46 i‡(
PRG±r
[4])

47 
	`£çrg32r
(4, 0x8000, 0);

49 
	`£çrg32
(0x8000, 0);

50 
	`£tmúr‹
(((
cmd0
 & 0x20) >> 5) ^ 1);

51 
	}
}

53 
	$DECLFW
(
Su≥rWrôeLo
) {

54 i‡(!(
cmd0
 & 0x10)) {

55 
cmd0
 = 
V
;

56 
	`Sync
();

58 
	}
}

60 
	$DECLFW
(
Su≥rWrôeHi
) {

61 
cmd1
 = 
V
;

62 
	`Sync
();

63 
	}
}

65 
	$Su≥rPowî
() {

66 
	`SëWrôeH™dÀr
(0x6000, 0x7FFF, 
Su≥rWrôeLo
);

67 
	`SëWrôeH™dÀr
(0x8000, 0xFFFF, 
Su≥rWrôeHi
);

68 
	`SëRódH™dÀr
(0x6000, 0xFFFF, 
C¨tBR
);

69 
cmd0
 = 
cmd1
 = 0;

70 
	`Sync
();

71 
	}
}

73 
	$Su≥rRe£t
() {

74 
cmd0
 = 
cmd1
 = 0;

75 
	`Sync
();

76 
	}
}

78 
	$Su≥rRe°‹e
(
vîsi⁄
) {

79 
	`Sync
();

80 
	}
}

82 
	$Su≥rvisi⁄16_Inô
(
C¨tInfo
 *
öfo
) {

83 
öfo
->
Powî
 = 
Su≥rPowî
;

84 
öfo
->
Re£t
 = 
Su≥rRe£t
;

85 
GameSèãRe°‹e
 = 
Su≥rRe°‹e
;

86 
	`AddExSèã
(&
SèãRegs
, ~0, 0, 0);

87 
	}
}

	@fceux-am/src/boards/t-227-1.cpp

23 
	~"m≠öc.h
"

24 
	~"mmc3.h
"

26 
uöt8
 
	gª£t_Êag
 = 0x07;

28 
	$BMCT2271CW
(
uöt32
 
A
, 
uöt8
 
V
) {

29 
uöt32
 
va
 = 
V
;

30 i‡(
EXPREGS
[0] & 0x20) {

31 
va
 |= 0x200;

32 
va
 |(
EXPREGS
[0] & 0x10) << 4;

34 
va
 &= 0x7F;

35 
va
 |(
EXPREGS
[0] & 0x18) << 4;

37 
	`£tchr1
(
A
, 
va
);

38 
	}
}

40 
	$BMCT2271PW
(
uöt32
 
A
, 
uöt8
 
V
) {

41 
uöt32
 
va
 = 
V
 & 0x3F;

42 i‡(
EXPREGS
[0] & 0x20) {

43 
va
 &= 0x1F;

44 
va
 |= 0x40;

45 
va
 |(
EXPREGS
[0] & 0x10) << 1;

47 
va
 &= 0x0F;

48 
va
 |(
EXPREGS
[0] & 0x18) << 1;

50 
EXPREGS
[0] & 3) {

51 0x00: 
	`£çrg8
(
A
, 
va
); ;

54 
va
 = (v®& 0xFDË| ((
EXPREGS
[0] & 4) >> 1);

55 i‡(
A
 < 0xC000) {

56 
	`£çrg16
(0x8000, 
va
 >> 1);

57 
	`£çrg16
(0xC000, 
va
 >> 1);

62 0x03: i‡(
A
 < 0xC000Ë
	`£çrg32
(0x8000, 
va
 >> 2); ;

64 
	}
}

66 
	$DECLFW
(
BMCT2271LoWrôe
) {

67 i‡(!(
EXPREGS
[0] & 0x80))

68 
EXPREGS
[0] = 
A
 & 0xFF;

69 
	`FixMMC3PRG
(
MMC3_cmd
);

70 
	`FixMMC3CHR
(
MMC3_cmd
);

71 
	}
}

73 
	$DECLFR
(
BMCT2271HiRód
) {

74 
uöt32
 
av
 = 
A
;

75 i‡(
EXPREGS
[0] & 0x40Ë
av
 = (av & 0xFFF0Ë| 
ª£t_Êag
;

76  
	`C¨tBR
(
av
);

77 
	}
}

79 
	$BMCT2271Re£t
() {

80 
EXPREGS
[0] = 0x00;

81 
ª£t_Êag
++;

82 
ª£t_Êag
 &= 0x0F;

83 
	`MMC3RegRe£t
();

84 
	}
}

86 
	$BMCT2271Powî
() {

87 
EXPREGS
[0] = 0x00;

88 
	`GíMMC3Powî
();

89 
	`SëWrôeH™dÀr
(0x6000, 0x7FFF, 
BMCT2271LoWrôe
);

90 
	`SëRódH™dÀr
(0x8000, 0xFFFF, 
BMCT2271HiRód
);

91 
	}
}

93 
	$BMCT2271_Inô
(
C¨tInfo
 *
öfo
) {

94 
	`GíMMC3_Inô
(
öfo
, 128, 128, 8, 0);

95 
pwøp
 = 
BMCT2271PW
;

96 
cwøp
 = 
BMCT2271CW
;

97 
öfo
->
Powî
 = 
BMCT2271Powî
;

98 
öfo
->
Re£t
 = 
BMCT2271Re£t
;

99 
	`AddExSèã
(
EXPREGS
, 1, 0, "EXPR");

100 
	}
}

	@fceux-am/src/boards/t-262.cpp

21 
	~"m≠öc.h
"

23 
uöt8
 
	gb™k
, 
	gba£
, 
	glock
, 
	gmúr
, 
	gmode
;

24 
SFORMAT
 
	gSèãRegs
[] =

26 { &
b™k
, 1, "BANK" },

27 { &
ba£
, 1, "BASE" },

28 { &
lock
, 1, "LOCK" },

29 { &
múr
, 1, "MIRR" },

30 { &
mode
, 1, "MODE" },

34 
	$Sync
() {

35 
	`£tchr8
(0);

36 
	`£çrg16
(0x8000, 
ba£
 | 
b™k
);

37 
	`£çrg16
(0xC000, 
ba£
 | (
mode
 ? 
b™k
 : 7));

38 
	`£tmúr‹
(
múr
);

39 
	}
}

41 
	$DECLFW
(
BMCT262Wrôe
) {

42 i‡(!
lock
) {

43 
ba£
 = ((
A
 & 0x60) >> 2) | ((A & 0x100) >> 3);

44 
mode
 = 
A
 & 0x80;

45 
múr
 = ((
A
 & 2) >> 1) ^ 1;

46 
lock
 = (
A
 & 0x2000) >> 13;

48 
b™k
 = 
V
 & 7;

49 
	`Sync
();

50 
	}
}

52 
	$BMCT262Powî
() {

53 
lock
 = 
b™k
 = 
ba£
 = 
mode
 = 0;

54 
	`Sync
();

55 
	`SëWrôeH™dÀr
(0x8000, 0xFFFF, 
BMCT262Wrôe
);

56 
	`SëRódH™dÀr
(0x8000, 0xFFFF, 
C¨tBR
);

57 
	}
}

59 
	$BMCT262Re£t
() {

60 
lock
 = 
b™k
 = 
ba£
 = 
mode
 = 0;

61 
	`Sync
();

62 
	}
}

64 
	$BMCT262Re°‹e
(
vîsi⁄
) {

65 
	`Sync
();

66 
	}
}

68 
	$BMCT262_Inô
(
C¨tInfo
 *
öfo
) {

69 
öfo
->
Powî
 = 
BMCT262Powî
;

70 
öfo
->
Re£t
 = 
BMCT262Re£t
;

71 
GameSèãRe°‹e
 = 
BMCT262Re°‹e
;

72 
	`AddExSèã
(&
SèãRegs
, ~0, 0, 0);

73 
	}
}

	@fceux-am/src/boards/tengen.cpp

21 
	~"m≠öc.h
"

23 
uöt8
 
	gcmd
, 
	gmúr
, 
	gªgs
[11];

24 
uöt8
 
	grmode
, 
	gIRQmode
, 
	gIRQCou¡
, 
	gIRQa
, 
	gIRQL©ch
;

26 
SFORMAT
 
	gSèãRegs
[] = {

27 { 
ªgs
, 11, "REGS" },

28 { &
cmd
, 1, "CMDR" },

29 { &
múr
, 1, "MIRR" },

30 { &
rmode
, 1, "RMOD" },

31 { &
IRQmode
, 1, "IRQM" },

32 { &
IRQCou¡
, 1, "IRQC" },

33 { &
IRQa
, 1, "IRQA" },

34 { &
IRQL©ch
, 1, "IRQL" },

38 
	$M64IRQHook
(
a
) {

39 
öt32
 
smÆlcou¡
;

40 i‡(
IRQmode
) {

41 
smÆlcou¡
 +
a
;

42 
smÆlcou¡
 >= 4) {

43 
smÆlcou¡
 -= 4;

44 
IRQCou¡
--;

45 i‡(
IRQCou¡
 == 0xFF)

46 i‡(
IRQa
Ë
	`X6502_IRQBegö
(
FCEU_IQEXT
);

49 
	}
}

51 
	$M64HBHook
() {

52 i‡((!
IRQmode
Ë&& (
sˇ∆öe
 != 240)) {

53 
rmode
 = 0;

54 
IRQCou¡
--;

55 i‡(
IRQCou¡
 == 0xFF) {

56 i‡(
IRQa
) {

57 
rmode
 = 1;

58 
	`X6502_IRQBegö
(
FCEU_IQEXT
);

62 
	}
}

64 
	$Sync
() {

65 i‡(
cmd
 & 0x20) {

66 
	`£tchr1
(0x0000, 
ªgs
[0]);

67 
	`£tchr1
(0x0400, 
ªgs
[8]);

68 
	`£tchr1
(0x0800, 
ªgs
[1]);

69 
	`£tchr1
(0x0C00, 
ªgs
[9]);

71 
	`£tchr2
(0x0000, 
ªgs
[0] >> 1);

72 
	`£tchr2
(0x0800, 
ªgs
[1] >> 1);

74 
	`£tchr1
(0x1000, 
ªgs
[2]);

75 
	`£tchr1
(0x1400, 
ªgs
[3]);

76 
	`£tchr1
(0x1800, 
ªgs
[4]);

77 
	`£tchr1
(0x1C00, 
ªgs
[5]);

78 
	`£çrg8
(0x8000, 
ªgs
[6]);

79 
	`£çrg8
(0xA000, 
ªgs
[7]);

80 
	`£çrg8
(0xC000, 
ªgs
[10]);

81 
	`£çrg8
(0xE000, ~0);

82 
	`£tmúr‹
(
múr
);

83 
	}
}

85 
	$DECLFW
(
M64Wrôe
) {

86 
A
 & 0xF001) {

87 0xA000: 
múr
 = (
V
 & 1Ë^ 1; 
	`Sync
(); ;\

88 0x8000: 
cmd
 = 
V
; ;

90 i‡((
cmd
 & 0xF) < 10)

91 
ªgs
[
cmd
 & 0xF] = 
V
;

92 i‡((
cmd
 & 0xF) == 0xF)

93 
ªgs
[10] = 
V
;

94 
	`Sync
();

97 
IRQL©ch
 = 
V
;

98 i‡(
rmode
 == 1)

99 
IRQCou¡
 = 
IRQL©ch
;

102 
rmode
 = 1;

103 
IRQCou¡
 = 
IRQL©ch
;

104 
IRQmode
 = 
V
 & 1;

107 
IRQa
 = 0;

108 
	`X6502_IRQEnd
(
FCEU_IQEXT
);

109 i‡(
rmode
 == 1)

110 
IRQCou¡
 = 
IRQL©ch
;

113 
IRQa
 = 1;

114 i‡(
rmode
 == 1)

115 
IRQCou¡
 = 
IRQL©ch
;

118 
	}
}

120 
	$M64Powî
() {

121 
cmd
 = 
múr
 = 0;

122 
ªgs
[0] =Ñegs[1] =Ñegs[2] =Ñegs[3] =Ñegs[4] =Ñegs[5] = ~0;

123 
ªgs
[6] =Ñegs[7] =Ñegs[8] =Ñegs[9] =Ñegs[10] = ~0;

124 
	`Sync
();

125 
	`SëRódH™dÀr
(0x8000, 0xFFFF, 
C¨tBR
);

126 
	`SëWrôeH™dÀr
(0x8000, 0xFFFF, 
M64Wrôe
);

127 
	}
}

129 
	$SèãRe°‹e
(
vîsi⁄
) {

130 
	`Sync
();

131 
	}
}

133 
	$M≠≥r64_Inô
(
C¨tInfo
 *
öfo
) {

134 
öfo
->
Powî
 = 
M64Powî
;

135 
GameHBIRQHook
 = 
M64HBHook
;

136 
M≠IRQHook
 = 
M64IRQHook
;

137 
GameSèãRe°‹e
 = 
SèãRe°‹e
;

138 
	`AddExSèã
(&
SèãRegs
, ~0, 0, 0);

139 
	}
}

	@fceux-am/src/boards/tf-1201.cpp

23 
	~"m≠öc.h
"

25 
uöt8
 
	g¥g0
, 
	g¥g1
, 
	gmúr
, 
	gsw≠
;

26 
uöt8
 
	gchr
[8];

27 
uöt8
 
	gIRQCou¡
;

28 
uöt8
 
	gIRQPª
;

29 
uöt8
 
	gIRQa
;

31 
SFORMAT
 
	gSèãRegs
[] =

33 { &
¥g0
, 1, "PRG0" },

34 { &
¥g0
, 1, "PRG1" },

35 { &
múr
, 1, "MIRR" },

36 { &
sw≠
, 1, "SWAP" },

37 { 
chr
, 8, "CHR" },

38 { &
IRQCou¡
, 1, "IRQC" },

39 { &
IRQPª
, 1, "IRQP" },

40 { &
IRQa
, 1, "IRQA" },

44 
	$SyncPrg
() {

45 i‡(
sw≠
 & 3) {

46 
	`£çrg8
(0x8000, ~1);

47 
	`£çrg8
(0xC000, 
¥g0
);

49 
	`£çrg8
(0x8000, 
¥g0
);

50 
	`£çrg8
(0xC000, ~1);

52 
	`£çrg8
(0xA000, 
¥g1
);

53 
	`£çrg8
(0xE000, ~0);

54 
	}
}

56 
	$SyncChr
() {

57 
i
;

58 
i
 = 0; i < 8; i++)

59 
	`£tchr1
(
i
 << 10, 
chr
[i]);

60 
	`£tmúr‹
(
múr
 ^ 1);

61 
	}
}

63 
	$SèãRe°‹e
(
vîsi⁄
) {

64 
	`SyncPrg
();

65 
	`SyncChr
();

66 
	}
}

68 
	$DECLFW
(
UNLTF1201Wrôe
) {

69 
A
 = (A & 0xF003) | ((A & 0xC) >> 2);

70 i‡((
A
 >= 0xB000) && (A <= 0xE003)) {

71 
öd
 = (((
A
 >> 11) - 6) | (A & 1)) & 7;

72 
ßr
 = ((
A
 & 2) << 1);

73 
chr
[
öd
] = (chr[öd] & (0xF0 >> 
ßr
)Ë| ((
V
 & 0x0F) << sar);

74 
	`SyncChr
();

75 } 
A
 & 0xF003) {

76 0x8000: 
¥g0
 = 
V
; 
	`SyncPrg
(); ;

77 0xA000: 
¥g1
 = 
V
; 
	`SyncPrg
(); ;

78 0x9000: 
múr
 = 
V
 & 1; 
	`SyncChr
(); ;

79 0x9001: 
sw≠
 = 
V
 & 3; 
	`SyncPrg
(); ;

80 0xF000: 
IRQCou¡
 = ((IRQCou¡ & 0xF0Ë| (
V
 & 0xF)); ;

81 0xF002: 
IRQCou¡
 = ((IRQCou¡ & 0x0FË| ((
V
 & 0xF) << 4)); ;

83 0xF003: 
IRQa
 = 
V
 & 2; 
	`X6502_IRQEnd
(
FCEU_IQEXT
); i‡(
sˇ∆öe
 < 240Ë
IRQCou¡
 -= 8; ;

85 
	}
}

87 
	$UNLTF1201IRQCou¡î
() {

88 i‡(
IRQa
) {

89 
IRQCou¡
++;

90 i‡(
IRQCou¡
 == 237) {

91 
	`X6502_IRQBegö
(
FCEU_IQEXT
);

94 
	}
}

96 
	$UNLTF1201Powî
() {

97 
IRQPª
 = 
IRQCou¡
 = 
IRQa
 = 0;

98 
	`SëRódH™dÀr
(0x8000, 0xFFFF, 
C¨tBR
);

99 
	`SëWrôeH™dÀr
(0x8000, 0xFFFF, 
UNLTF1201Wrôe
);

100 
	`SyncPrg
();

101 
	`SyncChr
();

102 
	}
}

104 
	$UNLTF1201_Inô
(
C¨tInfo
 *
öfo
) {

105 
öfo
->
Powî
 = 
UNLTF1201Powî
;

106 
GameHBIRQHook
 = 
UNLTF1201IRQCou¡î
;

107 
GameSèãRe°‹e
 = 
SèãRe°‹e
;

108 
	`AddExSèã
(&
SèãRegs
, ~0, 0, 0);

109 
	}
}

	@fceux-am/src/boards/transformer.cpp

21 
	~"m≠öc.h
"

23 
uöt8
 *
	gWRAM
 = 
NULL
;

24 
uöt32
 
	gWRAMSIZE
;

26 *
GëKeybﬂrd
();

28 *
	gTønsf‹mîKeys
, 
	gﬁdkeys
[256];

29 
	gTønsf‹mîCy˛eCou¡
, 
	gTønsf‹mîCh¨
 = 0;

31 
	$Tønsf‹mîIRQHook
(
a
) {

32 
Tønsf‹mîCy˛eCou¡
 +
a
;

33 i‡(
Tønsf‹mîCy˛eCou¡
 >= 1000) {

34 
uöt32
 
i
;

35 
Tønsf‹mîCy˛eCou¡
 -= 1000;

36 
Tønsf‹mîKeys
 = 
	`GëKeybﬂrd
();

38 
i
 = 0; i < 256; i++) {

39 i‡(
ﬁdkeys
[
i
] !
Tønsf‹mîKeys
[i]) {

40 i‡(
ﬁdkeys
[
i
] == 0)

41 
Tønsf‹mîCh¨
 = 
i
;

43 
Tønsf‹mîCh¨
 = 
i
 | 0x80;

44 
	`X6502_IRQBegö
(
FCEU_IQEXT
);

45 
	`mem˝y
((*)&
ﬁdkeys
[0], (*)
Tønsf‹mîKeys
, (oldkeys));

50 
	}
}

52 
	$DECLFR
(
Tønsf‹mîRód
) {

53 
uöt8
 
ªt
 = 0;

54 
A
 & 3) {

55 0: 
ªt
 = 
Tønsf‹mîCh¨
 & 15; ;

56 1: 
ªt
 = (
Tønsf‹mîCh¨
 >> 4); ;

60 
	`X6502_IRQEnd
(
FCEU_IQEXT
);

61  
ªt
;

62 
	}
}

64 
	$Tønsf‹mîPowî
() {

65 
	`£çrg8r
(0x10, 0x6000, 0);

66 
	`£çrg16
(0x8000, 0);

67 
	`£çrg16
(0xC000, ~0);

68 
	`£tchr8
(0);

70 
	`SëRódH™dÀr
(0x5000, 0x5004, 
Tønsf‹mîRód
);

71 
	`SëRódH™dÀr
(0x6000, 0x7FFF, 
C¨tBR
);

72 
	`SëWrôeH™dÀr
(0x6000, 0x7FFF, 
C¨tBW
);

73 
	`SëRódH™dÀr
(0x8000, 0xFFFF, 
C¨tBR
);

74 
	`FCEU_ChótAddRAM
(
WRAMSIZE
 >> 10, 0x6000, 
WRAM
);

76 
M≠IRQHook
 = 
Tønsf‹mîIRQHook
;

77 
	}
}

79 
	$Tønsf‹mîClo£
() {

80 i‡(
WRAM
)

81 
	`FCEU_g‰ì
(
WRAM
);

82 
WRAM
 = 
NULL
;

83 
	}
}

85 
	$Tønsf‹mî_Inô
(
C¨tInfo
 *
öfo
) {

86 
öfo
->
Powî
 = 
Tønsf‹mîPowî
;

87 
öfo
->
Clo£
 = 
Tønsf‹mîClo£
;

89 
WRAMSIZE
 = 8192;

90 
WRAM
 = (
uöt8
*)
	`FCEU_gmÆloc
(
WRAMSIZE
);

91 
	`SëupC¨tPRGM≠pög
(0x10, 
WRAM
, 
WRAMSIZE
, 1);

92 i‡(
öfo
->
b©ãry
) {

93 
öfo
->
SaveGame
[0] = 
WRAM
;

94 
öfo
->
SaveGameLí
[0] = 
WRAMSIZE
;

96 
	`AddExSèã
(
WRAM
, 
WRAMSIZE
, 0, "WRAM");

97 
	}
}

	@fceux-am/src/boards/unrom512.cpp

35 
	~"m≠öc.h
"

36 
	~"../öes.h
"

38 
uöt8
 
	gœtche
, 
	gœtcheöô
, 
	gbus_c⁄Êi˘
, 
	gchºam_mask
, 
	gso·w¨e_id
=
Ál£
;

39 
uöt16
 
	gœtcha
;

40 
uöt8
 *
	gÊashd©a
;

41 
uöt32
 *
	gÊash_wrôe_cou¡
;

42 
uöt8
 *
	gFœshPage
[32];

44 
uöt8
 
	gÊash_ßve
=0, 
	gÊash_°©e
=0, 
	gÊash_mode
=0, 
	gÊash_b™k
;

45 (*
WLSync
)();

46 (*
WHSync
)();

48 
INLINE
 
	$£tÂagïå
(
s
, 
uöt32
 
A
, 
uöt8
 *
p
) {

49 
uöt32
 
AB
 = 
A
 >> 11;

50 
x
;

52 i‡(
p
)

53 
x
 = (
s
 >> 1) - 1; x >= 0; x--) {

54 
FœshPage
[
AB
 + 
x
] = 
p
 - 
A
;

57 
x
 = (
s
 >> 1) - 1; x >= 0; x--) {

58 
FœshPage
[
AB
 + 
x
] = 0;

60 
	}
}

62 
	$£tÂrg16
(
uöt32
 
A
, uöt32 
V
) {

63 i‡(
PRGsize
[0] >= 16384) {

64 
V
 &
PRGmask16
[0];

65 
	`£tÂagïå
(16, 
A
, 
Êashd©a
 ? (&Êashd©a[
V
 << 14]) : 0);

67 
uöt32
 
VA
 = 
V
 << 3;

68 
x
;

70 
x
 = 0; x < 8; x++)

71 
	`£tÂagïå
(2, 
A
 + (
x
 << 11), 
Êashd©a
 ? (&Êashd©a[((
VA
 + xË& 
PRGmask2
[0]) << 11]) : 0);

73 
	}
}

75 
	$öc_Êash_wrôe_cou¡
(
uöt8
 
b™k
, 
uöt32
 
A
)

77 
Êash_wrôe_cou¡
[(
b™k
*4Ë+ ((
A
&0x3000)>>12)]++;

78 if(!
Êash_wrôe_cou¡
[(
b™k
*4Ë+ ((
A
&0x3000)>>12)])

79 
Êash_wrôe_cou¡
[(
b™k
*4Ë+ ((
A
&0x3000)>>12)]++;

80 
	}
}

82 
uöt32
 
	$GëFœshWrôeCou¡
(
uöt8
 
b™k
, 
uöt32
 
A
)

84  
Êash_wrôe_cou¡
[(
b™k
*4Ë+ ((
A
&0x3000)>>12)];

85 
	}
}

87 
	$SèãRe°‹e
(
vîsi⁄
) {

88 
	`WHSync
();

89 
	}
}

91 
	$DECLFW
(
UNROM512LL©chWrôe
)

93 
œtche
 = 
V
;

94 
œtcha
 = 
A
;

95 
	`WLSync
();

96 
	}
}

98 
	$DECLFW
(
UNROM512HL©chWrôe
)

100 i‡(
bus_c⁄Êi˘
)

101 
œtche
 = (
V
 =
	`C¨tBR
(
A
)) ? V : 0;

103 
œtche
 = 
V
;

104 
œtcha
 = 
A
;

105 
	`WHSync
();

106 
	}
}

108 
	$DECLFR
(
UNROM512L©chRód
)

110 
uöt8
 
Êash_id
[3]={0xB5,0xB6,0xB7};

111 if(
so·w¨e_id
)

113 if(
A
&1)

114  
Êash_id
[
ROM_size
>>4];

118 if(
Êash_ßve
)

120 if(
A
 < 0xC000)

122 if(
	`GëFœshWrôeCou¡
(
Êash_b™k
,
A
))

123  
FœshPage
[
A
 >> 11][A];

127 if(
	`GëFœshWrôeCou¡
(
ROM_size
-1,
A
))

128  
FœshPage
[
A
 >> 11][A];

131  
Page
[
A
 >> 11][A];

132 
	}
}

134 
	$UNROM512L©chPowî
() {

135 
œtche
 = 
œtcheöô
;

136 
	`WHSync
();

137 
	`SëRódH™dÀr
(0x8000, 0xFFFF, 
UNROM512L©chRód
);

138 if(!
Êash_ßve
)

139 
	`SëWrôeH™dÀr
(0x8000, 0xFFFF, 
UNROM512HL©chWrôe
);

142 
	`SëWrôeH™dÀr
(0x8000,0xBFFF,
UNROM512LL©chWrôe
);

143 
	`SëWrôeH™dÀr
(0xC000,0xFFFF,
UNROM512HL©chWrôe
);

145 
	}
}

147 
	$UNROM512L©chClo£
() {

148 if(
Êash_wrôe_cou¡
)

149 
	`FCEU_g‰ì
(
Êash_wrôe_cou¡
);

150 if(
Êashd©a
)

151 
	`FCEU_g‰ì
(
Êashd©a
);

152 
Êash_wrôe_cou¡
 = 
NULL
;

153 
Êashd©a
 = 
NULL
;

154 
	}
}

157 
	$UNROM512LSync
() {

158 
îa£_a
[5]={0x9555,0xAAAA,0x9555,0x9555,0xAAAA};

159 
îa£_d
[5]={0xAA,0x55,0x80,0xAA,0x55};

160 
îa£_b
[5]={1,0,1,1,0};

162 if(
Êash_mode
==0)

164 if((
œtcha
 =
îa£_a
[
Êash_°©e
]Ë&& (
œtche
 =
îa£_d
[Êash_°©e]Ë&& (
Êash_b™k
 =
îa£_b
[flash_state]))

166 
Êash_°©e
++;

167 if(
Êash_°©e
 == 5)

169 
Êash_mode
=1;

172 i‡((
Êash_°©e
==2)&&(
œtcha
==0x9555)&&(
œtche
==0xA0)&&(
Êash_b™k
==1))

174 
Êash_°©e
++;

175 
Êash_mode
=2;

177 i‡((
Êash_°©e
==2)&&(
œtcha
==0x9555)&&(
œtche
==0x90)&&(
Êash_b™k
==1))

179 
Êash_°©e
=0;

180 
so·w¨e_id
=
åue
;

184 if(
œtche
==0xF0)

185 
so·w¨e_id
=
Ál£
;

186 
Êash_°©e
=0;

189 if(
Êash_mode
==1)

191 if(
œtche
==0x30)

193 
	`öc_Êash_wrôe_cou¡
(
Êash_b™k
,
œtcha
);

194 
	`mem£t
(&
FœshPage
[(
œtcha
 & 0xF000) >> 11][latcha & 0xF000],0xFF,0x1000);

196 i‡(
œtche
==0x10)

198 
uöt32
 
i
=0;i<(
ROM_size
*4);i++)

199 
	`öc_Êash_wrôe_cou¡
(
i
>>2,i<<12);

200 
	`mem£t
(
Êashd©a
,0xFF,
ROM_size
*0x4000);

202 
Êash_°©e
=0;

203 
Êash_mode
=0;

205 if(
Êash_mode
==2)

207 if(!
	`GëFœshWrôeCou¡
(
Êash_b™k
,
œtcha
))

209 
	`öc_Êash_wrôe_cou¡
(
Êash_b™k
,
œtcha
);

210 
	`mem˝y
(&
FœshPage
[(
œtcha
 & 0xF000Ë>> 11][œtch®& 0xF000],&
Page
[(latcha & 0xF000)>>11][latcha & 0xF000],0x1000);

212 
FœshPage
[
œtcha
>>11][œtcha]&=
œtche
;

213 
Êash_°©e
=0;

214 
Êash_mode
=0;

216 
	}
}

218 
	$UNROM512HSync
()

220 
Êash_b™k
=
œtche
&(
ROM_size
-1);

222 
	`£çrg16
(0x8000, 
Êash_b™k
);

223 
	`£çrg16
(0xc000, ~0);

224 
	`£tÂrg16
(0x8000, 
Êash_b™k
);

225 
	`£tÂrg16
(0xC000, ~0);

226 
	`£tchr8r
(0, (
œtche
 & 
chºam_mask
) >> 5);

227 
	`£tmúr‹
(
MI_0
+(
œtche
>>7));

228 
	}
}

230 
	$UNROM512_Inô
(
C¨tInfo
 *
öfo
) {

231 
Êash_°©e
=0;

232 
Êash_b™k
=0;

233 
Êash_ßve
=
öfo
->
b©ãry
;

235 if(
öfo
->
vøm_size
 == 8192)

236 
chºam_mask
 = 0;

237 i‡(
öfo
->
vøm_size
 == 16384)

238 
chºam_mask
 = 0x20;

240 
chºam_mask
 = 0x60;

242 
múr‹
 = (
hód
.
ROM_ty≥
 & 1) | ((head.ROM_type & 8) >> 2);

243 
múr‹
)

246 
	`SëupC¨tMúr‹ög
(
MI_H
, 1, 
NULL
);

249 
	`SëupC¨tMúr‹ög
(
MI_V
, 1, 
NULL
);

252 
	`SëupC¨tMúr‹ög
(
MI_0
, 0, 
NULL
);

255 
	`SëupC¨tMúr‹ög
–4, 1, 
VROM
 + (
öfo
->
vøm_size
 - 8192));

259 
bus_c⁄Êi˘
 = !
öfo
->
b©ãry
;

260 
œtcheöô
 = 0;

261 
WLSync
 = 
UNROM512LSync
;

262 
WHSync
 = 
UNROM512HSync
;

263 
öfo
->
Powî
 = 
UNROM512L©chPowî
;

264 
öfo
->
Clo£
 = 
UNROM512L©chClo£
;

265 
GameSèãRe°‹e
 = 
SèãRe°‹e
;

266 if(
Êash_ßve
)

268 
Êashd©a
 = (
uöt8
*)
	`FCEU_gmÆloc
(
ROM_size
*0x4000);

269 
Êash_wrôe_cou¡
 = (
uöt32
*)
	`FCEU_gmÆloc
(
ROM_size
*4*(uint32));

270 
öfo
->
SaveGame
[0] = (
uöt8
*)
Êash_wrôe_cou¡
;

271 
öfo
->
SaveGame
[1] = 
Êashd©a
;

272 
öfo
->
SaveGameLí
[0] = 
ROM_size
*4*(
uöt32
);

273 
öfo
->
SaveGameLí
[1] = 
ROM_size
*0x4000;

274 
	`AddExSèã
(
Êash_wrôe_cou¡
,
ROM_size
*4*(
uöt32
),0,"FLASH_WRITE_COUNT");

275 
	`AddExSèã
(
Êashd©a
,
ROM_size
*0x4000,0,"FLASH_DATA");

276 
	`AddExSèã
(&
Êash_°©e
,1,0,"FLASH_STATE");

277 
	`AddExSèã
(&
Êash_mode
,1,0,"FLASH_MODE");

278 
	`AddExSèã
(&
Êash_b™k
,1,0,"FLASH_BANK");

279 
	`AddExSèã
(&
œtcha
,2,0,"LATA");

281 
	`AddExSèã
(&
œtche
, 1, 0, "LATC");

282 
	`AddExSèã
(&
bus_c⁄Êi˘
, 1, 0, "BUSC");

283 
	}
}

	@fceux-am/src/boards/vrc1.cpp

24 
	~"m≠öc.h
"

26 
uöt8
 
	g¥eg
[3], 
	g¸eg
[2], 
	gmode
;

27 
SFORMAT
 
	gSèãRegs
[] =

29 { &
mode
, 1, "MODE" },

30 { 
¸eg
, 2, "CREG" },

31 { 
¥eg
, 3, "PREG" },

35 
	$Sync
() {

36 
	`£çrg8
(0x8000, 
¥eg
[0]);

37 
	`£çrg8
(0xA000, 
¥eg
[1]);

38 
	`£çrg8
(0xC000, 
¥eg
[2]);

39 
	`£çrg8
(0xE000, ~0);

40 
	`£tchr4
(0x0000, 
¸eg
[0] | ((
mode
 & 2) << 3));

41 
	`£tchr4
(0x1000, 
¸eg
[1] | ((
mode
 & 4) << 2));

42 
	`£tmúr‹
((
mode
 & 1) ^ 1);

43 
	}
}

45 
	$DECLFW
(
M75Wrôe
) {

46 
A
 & 0xF000) {

47 0x8000: 
¥eg
[0] = 
V
; 
	`Sync
(); ;

48 0x9000: 
mode
 = 
V
; 
	`Sync
(); ;

49 0xA000: 
¥eg
[1] = 
V
; 
	`Sync
(); ;

50 0xC000: 
¥eg
[2] = 
V
; 
	`Sync
(); ;

51 0xE000: 
¸eg
[0] = 
V
 & 0xF; 
	`Sync
(); ;

52 0xF000: 
¸eg
[1] = 
V
 & 0xF; 
	`Sync
(); ;

54 
	}
}

56 
	$M75Powî
() {

57 
	`Sync
();

58 
	`SëWrôeH™dÀr
(0x8000, 0xFFFF, 
M75Wrôe
);

59 
	`SëRódH™dÀr
(0x8000, 0xFFFF, 
C¨tBR
);

60 
	}
}

62 
	$SèãRe°‹e
(
vîsi⁄
) {

63 
	`Sync
();

64 
	}
}

66 
	$M≠≥r75_Inô
(
C¨tInfo
 *
öfo
) {

67 
öfo
->
Powî
 = 
M75Powî
;

68 
	`AddExSèã
(&
SèãRegs
, ~0, 0, 0);

69 
GameSèãRe°‹e
 = 
SèãRe°‹e
;

70 
	}
}

	@fceux-am/src/boards/vrc2and4.cpp

21 
	~"m≠öc.h
"

23 
boﬁ
 
	gisPú©e
;

24 
uöt8
 
	gis22
, 
	gªg1mask
, 
	gªg2mask
;

25 
uöt16
 
	gIRQCou¡
;

26 
uöt8
 
	gIRQL©ch
, 
	gIRQa
;

27 
uöt8
 
	g¥gªg
[2], 
	gchºeg
[8];

28 
uöt16
 
	gchrhi
[8];

29 
uöt8
 
	gªgcmd
, 
	gúqcmd
, 
	gmúr
, 
	gbig_b™k
;

30 
uöt16
 
	gacou¡
 = 0;

32 
uöt8
 *
	gWRAM
 = 
NULL
;

33 
uöt32
 
	gWRAMSIZE
;

35 
SFORMAT
 
	gSèãRegs
[] =

37 { 
¥gªg
, 2, "PREG" },

38 { 
chºeg
, 8, "CREG" },

39 { 
chrhi
, 16, "CRGH" },

40 { &
ªgcmd
, 1, "CMDR" },

41 { &
úqcmd
, 1, "CMDI" },

42 { &
múr
, 1, "MIRR" },

43 { &
big_b™k
, 1, "BIGB" },

44 { &
IRQCou¡
, 2, "IRQC" },

45 { &
IRQL©ch
, 1, "IRQL" },

46 { &
IRQa
, 1, "IRQA" },

50 
	$Sync
() {

51 i‡(
ªgcmd
 & 2) {

52 
	`£çrg8
(0xC000, 
¥gªg
[0] | 
big_b™k
);

53 
	`£çrg8
(0x8000, ((~1Ë& 0x1FË| 
big_b™k
);

55 
	`£çrg8
(0x8000, 
¥gªg
[0] | 
big_b™k
);

56 
	`£çrg8
(0xC000, ((~1Ë& 0x1FË| 
big_b™k
);

58 
	`£çrg8
(0xA000, 
¥gªg
[1] | 
big_b™k
);

59 
	`£çrg8
(0xE000, ((~0Ë& 0x1FË| 
big_b™k
);

60 i‡(
UNIFchºama
)

61 
	`£tchr8
(0);

63 
uöt8
 
i
;

65 
i
 = 0; i < 8; i++)

66 
	`£tchr1
(
i
 << 10, (
chrhi
[i] | 
chºeg
[i]Ë>> 
is22
);

74 
múr
 & 0x3) {

75 0: 
	`£tmúr‹
(
MI_V
); ;

76 1: 
	`£tmúr‹
(
MI_H
); ;

77 2: 
	`£tmúr‹
(
MI_0
); ;

78 3: 
	`£tmúr‹
(
MI_1
); ;

80 
	}
}

82 
	$DECLFW
(
VRC24Wrôe
) {

83 
A
 = (A & 0xF000Ë| !!(A & 
ªg2mask
Ë<< 1 | !!(A & 
ªg1mask
);

84 i‡((
A
 >= 0xB000) && (A <= 0xE003)) {

85 i‡(
UNIFchºama
)

86 
big_b™k
 = (
V
 & 8) << 2;

88 
uöt16
 
i
 = ((
A
 >> 1) & 1) | ((A - 0xB000) >> 11);

89 
uöt16
 
nibbÀ
 = ((
A
 & 1) << 2);

90 
chºeg
[
i
] = (chºeg[i] & (0xF0 >> 
nibbÀ
)Ë| ((
V
 & 0xF) <<Çibble);

91 if(
nibbÀ
)

92 
chrhi
[
i
] = (
V
 & 0x10) << 4;

94 
	`Sync
();

96 
A
 & 0xF003) {

101 i‡(!
isPú©e
) {

102 
¥gªg
[0] = 
V
 & 0x1F;

103 
	`Sync
();

110 i‡(!
isPú©e
)

111 
¥gªg
[1] = 
V
 & 0x1F;

113 
¥gªg
[0] = (
V
 & 0x1F) << 1;

114 
¥gªg
[1] = ((
V
 & 0x1F) << 1) | 1;

116 
	`Sync
();

119 0x9001: i‡(
V
 !0xFFË
múr
 = V; 
	`Sync
(); ;

121 0x9003: 
ªgcmd
 = 
V
; 
	`Sync
(); ;

122 0xF000: 
	`X6502_IRQEnd
(
FCEU_IQEXT
); 
IRQL©ch
 &0xF0; IRQL©ch |
V
 & 0xF; ;

123 0xF001: 
	`X6502_IRQEnd
(
FCEU_IQEXT
); 
IRQL©ch
 &0x0F; IRQL©ch |
V
 << 4; ;

124 0xF002: 
	`X6502_IRQEnd
(
FCEU_IQEXT
); 
acou¡
 = 0; 
IRQCou¡
 = 
IRQL©ch
; 
IRQa
 = 
V
 & 2; 
úqcmd
 = V & 1; ;

125 0xF003: 
	`X6502_IRQEnd
(
FCEU_IQEXT
); 
IRQa
 = 
úqcmd
; ;

127 
	}
}

129 
	$VRC24Powî
() {

130 
big_b™k
 = 0x20;

131 
	`Sync
();

132 i‡(
WRAM
) {

133 
	`£çrg8r
(0x10, 0x6000, 0);

134 
	`SëRódH™dÀr
(0x6000, 0x7FFF, 
C¨tBR
);

135 
	`SëWrôeH™dÀr
(0x6000, 0x7FFF, 
C¨tBW
);

136 
	`FCEU_ChótAddRAM
(
WRAMSIZE
 >> 10, 0x6000, 
WRAM
);

138 
	`SëRódH™dÀr
(0x8000, 0xFFFF, 
C¨tBR
);

139 
	`SëWrôeH™dÀr
(0x8000, 0xFFFF, 
VRC24Wrôe
);

140 
	}
}

142 
	$VRC24IRQHook
(
a
) {

143 
	#LCYCS
 341

	)

144 i‡(
IRQa
) {

145 
acou¡
 +
a
 * 3;

146 i‡(
acou¡
 >
LCYCS
) {

147 
acou¡
 >
LCYCS
) {

148 
acou¡
 -
LCYCS
;

149 
IRQCou¡
++;

150 i‡(
IRQCou¡
 & 0x100) {

151 
	`X6502_IRQBegö
(
FCEU_IQEXT
);

152 
IRQCou¡
 = 
IRQL©ch
;

157 
	}
}

159 
	$SèãRe°‹e
(
vîsi⁄
) {

160 
	`Sync
();

161 
	}
}

163 
	$VRC24Clo£
() {

164 i‡(
WRAM
)

165 
	`FCEU_g‰ì
(
WRAM
);

166 
WRAM
 = 
NULL
;

167 
	}
}

169 
	$VRC24_Inô
(
C¨tInfo
 *
öfo
) {

170 
öfo
->
Powî
 = 
VRC24Powî
;

171 
öfo
->
Clo£
 = 
VRC24Clo£
;

172 
M≠IRQHook
 = 
VRC24IRQHook
;

173 
GameSèãRe°‹e
 = 
SèãRe°‹e
;

175 
WRAMSIZE
 = 8192;

176 
WRAM
 = (
uöt8
*)
	`FCEU_gmÆloc
(
WRAMSIZE
);

177 
	`SëupC¨tPRGM≠pög
(0x10, 
WRAM
, 
WRAMSIZE
, 1);

178 
	`AddExSèã
(
WRAM
, 
WRAMSIZE
, 0, "WRAM");

180 if(
öfo
->
b©ãry
) {

181 
öfo
->
SaveGame
[0]=
WRAM
;

182 
öfo
->
SaveGameLí
[0]=
WRAMSIZE
;

185 
	`AddExSèã
(&
SèãRegs
, ~0, 0, 0);

186 
	}
}

188 
	$M≠≥r21_Inô
(
C¨tInfo
 *
öfo
) {

189 
isPú©e
 = 
Ál£
;

190 
is22
 = 0;

191 
ªg1mask
 = 0x42;

192 
ªg2mask
 = 0x84;

193 
	`VRC24_Inô
(
öfo
);

194 
	}
}

196 
	$M≠≥r22_Inô
(
C¨tInfo
 *
öfo
) {

197 
isPú©e
 = 
Ál£
;

198 
is22
 = 1;

199 
ªg1mask
 = 2;

200 
ªg2mask
 = 1;

204 
öfo
->
Powî
 = 
VRC24Powî
;

205 
GameSèãRe°‹e
 = 
SèãRe°‹e
;

207 
	`AddExSèã
(&
SèãRegs
, ~0, 0, 0);

208 
	}
}

210 
	$M≠≥r23_Inô
(
C¨tInfo
 *
öfo
) {

211 
isPú©e
 = 
Ál£
;

212 
is22
 = 0;

213 
ªg1mask
 = 0x15;

214 
ªg2mask
 = 0x2a;

215 
	`VRC24_Inô
(
öfo
);

216 
	}
}

218 
	$M≠≥r25_Inô
(
C¨tInfo
 *
öfo
) {

219 
isPú©e
 = 
Ál£
;

220 
is22
 = 0;

221 
ªg1mask
 = 0xa;

222 
ªg2mask
 = 0x5;

223 
	`VRC24_Inô
(
öfo
);

224 
	}
}

226 
	$UNLT230_Inô
(
C¨tInfo
 *
öfo
) {

227 
isPú©e
 = 
åue
;

228 
is22
 = 0;

229 
ªg1mask
 = 0x15;

230 
ªg2mask
 = 0x2a;

231 
	`VRC24_Inô
(
öfo
);

232 
	}
}

	@fceux-am/src/boards/vrc3.cpp

24 
	~"m≠öc.h
"

26 
uöt8
 
	g¥eg
;

27 
uöt8
 
	gIRQx
;

28 
uöt8
 
	gIRQm
;

29 
uöt8
 
	gIRQa
;

30 
uöt16
 
	gIRQRñﬂd
, 
	gIRQCou¡
;

31 
uöt8
 *
	gWRAM
 = 
NULL
;

32 
uöt32
 
	gWRAMSIZE
;

34 
SFORMAT
 
	gSèãRegs
[] =

36 { &
¥eg
, 1, "PREG" },

37 { &
IRQa
, 1, "IRQA" },

38 { &
IRQx
, 1, "IRQX" },

39 { &
IRQm
, 1, "IRQM" },

40 { &
IRQRñﬂd
, 2, "IRQR" },

41 { &
IRQCou¡
, 2, "IRQC" },

45 
	$Sync
() {

46 
	`£çrg8r
(0x10, 0x6000, 0);

47 
	`£çrg16
(0x8000, 
¥eg
);

48 
	`£çrg16
(0xC000, ~0);

49 
	`£tchr8
(0);

50 
	}
}

52 
	$DECLFW
(
M73Wrôe
) {

53 
A
 & 0xF000) {

54 0x8000: 
IRQRñﬂd
 &0xFFF0; IRQRñﬂd |(
V
 & 0xF) << 0; ;

55 0x9000: 
IRQRñﬂd
 &0xFF0F; IRQRñﬂd |(
V
 & 0xF) << 4; ;

56 0xA000: 
IRQRñﬂd
 &0xF0FF; IRQRñﬂd |(
V
 & 0xF) << 8; ;

57 0xB000: 
IRQRñﬂd
 &0x0FFF; IRQRñﬂd |(
V
 & 0xF) << 12; ;

59 
IRQm
 = 
V
 & 4;

60 
IRQx
 = 
V
 & 1;

61 
IRQa
 = 
V
 & 2;

62 i‡(
IRQa
) {

63 i‡(
IRQm
) {

64 
IRQCou¡
 &= 0xFFFF;

65 
IRQCou¡
 |(
IRQRñﬂd
 & 0xFF);

67 
IRQCou¡
 = 
IRQRñﬂd
;

69 
	`X6502_IRQEnd
(
FCEU_IQEXT
);

71 0xD000: 
	`X6502_IRQEnd
(
FCEU_IQEXT
); 
IRQa
 = 
IRQx
; ;

72 0xF000: 
¥eg
 = 
V
; 
	`Sync
(); ;

74 
	}
}

76 
	$M73IRQHook
(
a
) {

77 
öt32
 
i
;

78 i‡(!
IRQa
) ;

79 
i
 = 0; i < 
a
; i++) {

80 i‡(
IRQm
) {

81 
uöt16
 
ãmp
 = 
IRQCou¡
;

82 
ãmp
 &= 0xFF;

83 
IRQCou¡
 &= 0xFF00;

84 i‡(
ãmp
 == 0xFF) {

85 
IRQCou¡
 = 
IRQRñﬂd
;

86 
IRQCou¡
 |(
uöt16
)(
IRQRñﬂd
 & 0xFF);

87 
	`X6502_IRQBegö
(
FCEU_IQEXT
);

89 
ãmp
++;

90 
IRQCou¡
 |
ãmp
;

94 i‡(
IRQCou¡
 == 0xFFFF) {

95 
IRQCou¡
 = 
IRQRñﬂd
;

96 
	`X6502_IRQBegö
(
FCEU_IQEXT
);

98 
IRQCou¡
++;

101 
	}
}

103 
	$M73Powî
() {

104 
IRQRñﬂd
 = 
IRQm
 = 
IRQx
 = 0;

105 
	`Sync
();

106 
	`SëRódH™dÀr
(0x6000, 0xFFFF, 
C¨tBR
);

107 
	`SëWrôeH™dÀr
(0x6000, 0x7FFF, 
C¨tBW
);

108 
	`SëWrôeH™dÀr
(0x8000, 0xFFFF, 
M73Wrôe
);

109 
	`FCEU_ChótAddRAM
(
WRAMSIZE
 >> 10, 0x6000, 
WRAM
);

110 
	}
}

112 
	$M73Clo£
()

114 i‡(
WRAM
)

115 
	`FCEU_g‰ì
(
WRAM
);

116 
WRAM
 = 
NULL
;

117 
	}
}

119 
	$SèãRe°‹e
(
vîsi⁄
) {

120 
	`Sync
();

121 
	}
}

123 
	$M≠≥r73_Inô
(
C¨tInfo
 *
öfo
) {

124 
öfo
->
Powî
 = 
M73Powî
;

125 
öfo
->
Clo£
 = 
M73Clo£
;

126 
M≠IRQHook
 = 
M73IRQHook
;

128 
WRAMSIZE
 = 8192;

129 
WRAM
 = (
uöt8
*)
	`FCEU_gmÆloc
(
WRAMSIZE
);

130 
	`SëupC¨tPRGM≠pög
(0x10, 
WRAM
, 
WRAMSIZE
, 1);

131 
	`AddExSèã
(
WRAM
, 
WRAMSIZE
, 0, "WRAM");

133 
	`AddExSèã
(&
SèãRegs
, ~0, 0, 0);

134 
GameSèãRe°‹e
 = 
SèãRe°‹e
;

135 
	}
}

	@fceux-am/src/boards/vrc5.cpp

24 
	~"m≠öc.h
"

34 
uöt16
 
	gCHRSIZE
 = 8192;

38 
uöt16
 
	gWRAMSIZE
 = 8192 + 8192;

39 
uöt8
 *
	gCHRRAM
 = 
NULL
;

40 
uöt8
 *
	gWRAM
 = 
NULL
;

42 
uöt8
 
	gIRQa
, 
	gK4IRQ
;

43 
uöt32
 
	gIRQL©ch
, 
	gIRQCou¡
;

55 
uöt8
 
	gc⁄v_tbl
[4][8] = {

131 
uöt8
 
	gªgs
[16];

132 
SFORMAT
 
	gSèãRegs
[] =

134 { &
IRQCou¡
, 1, "IRQC" },

135 { &
IRQL©ch
, 1, "IRQL" },

136 { &
IRQa
, 1, "IRQA" },

137 { &
K4IRQ
, 1, "KIRQ" },

138 { 
ªgs
, 16, "REGS" },

142 
	$chrSync
() {

143 
	`£tchr4r
(0x10, 0x0000, 
ªgs
[5] & 1);

148 
	`£tchr4r
(0x10, 0x1000, 1);

149 
	}
}

151 
	$Sync
() {

152 
	`chrSync
();

153 
	`£çrg4r
(0x10, 0x6000, (
ªgs
[0] & 1) | (regs[0] >> 2));

154 
	`£çrg4r
(0x10, 0x7000, (
ªgs
[1] & 1) | (regs[1] >> 2));

155 i‡(
PRG±r
[1] =
NULL
) {

156 
	`£çrg8
(0x8000, (
ªgs
[2] & 0x3F) + ((regs[2] & 0x40) >> 2));

157 
	`£çrg8
(0xA000, (
ªgs
[3] & 0x3F) + ((regs[3] & 0x40) >> 2));

158 
	`£çrg8
(0xC000, (
ªgs
[4] & 0x3F) + ((regs[4] & 0x40) >> 2));

159 
	`£çrg8
(0xE000, 0x10 + 0x3F);

161 
	`£çrg8r
((
ªgs
[2] >> 6) & 1, 0x8000, (regs[2] & 0x3F));

162 
	`£çrg8r
((
ªgs
[3] >> 6) & 1, 0xA000, (regs[3] & 0x3F));

163 
	`£çrg8r
((
ªgs
[4] >> 6) & 1, 0xC000, (regs[4] & 0x3F));

164 
	`£çrg8r
(1, 0xE000, ~0);

166 
	`£tmúr‹
(((
ªgs
[0xA]&2)>>1)^1);

167 
	}
}

169 
	$DECLFW
(
QTAiWrôe
) {

170 
ªgs
[(
A
 & 0x0F00Ë>> 8] = 
V
;

171 
A
) {

172 0xd600: 
IRQL©ch
 &0xFF00; IRQL©ch |
V
; ;

173 0xd700: 
IRQL©ch
 &0x00FF; IRQL©ch |
V
 << 8; ;

174 0xd900: 
IRQCou¡
 = 
IRQL©ch
; 
IRQa
 = 
V
 & 2; 
K4IRQ
 = V & 1; 
	`X6502_IRQEnd
(
FCEU_IQEXT
); ;

175 0xd800: 
IRQa
 = 
K4IRQ
; 
	`X6502_IRQEnd
(
FCEU_IQEXT
); ;

176 0xda00: 
qèöåamªg
 = 
ªgs
[0xA] & 3; ;

178 
	`Sync
();

179 
	}
}

181 
	$DECLFR
(
QTAiRód
) {

186 
uöt8
 
èbl
 = 
c⁄v_tbl
[(
ªgs
[0xC] >> 5) & 3][(regs[0xD] & 0x7F) >> 4];

187 
uöt8
 
ªs1
 = 0x40 | (
èbl
 & 0x3FË| ((
ªgs
[0xD] >> 1) & 7) | ((regs[0xB] & 4) << 5);

188 
uöt8
 
ªs2
 = ((
ªgs
[0xD] & 1) << 7) | ((regs[0xC] & 0x1F) << 2) | (regs[0xB] & 3);

190 i‡(
èbl
 & 0x40)

191 
ªs1
 &= 0xFB;

192 i‡(
èbl
 & 0x80)

193 
ªs1
 |= 0x04;

195 i‡(
A
 == 0xDD00) {

196  
ªs1
;

197 } i‡(
A
 == 0xDC00) {

198 #ifde‡
CAI_DEBUG


199 
	`FCEU_¥ötf
("%02x:%02x+%d -> %02x:%02x\n", 
ªgs
[0xD],Ñegs[0xC],Ñegs[0xB], 
ªs1
, 
ªs2
);

201  
ªs2
;

204 
	}
}

206 
	$VRC5IRQ
(
a
) {

207 i‡(
IRQa
) {

208 
IRQCou¡
 +
a
;

209 i‡(
IRQCou¡
 & 0x10000) {

210 
	`X6502_IRQBegö
(
FCEU_IQEXT
);

211 
IRQCou¡
 = 
IRQL©ch
;

214 
	}
}

216 
	$QTAiPowî
() {

217 
	`SëRódH™dÀr
(0x6000, 0xFFFF, 
C¨tBR
);

218 
	`SëWrôeH™dÀr
(0x6000, 0x7FFF, 
C¨tBW
);

219 
	`SëWrôeH™dÀr
(0x8000, 0xFFFF, 
QTAiWrôe
);

220 
	`SëRódH™dÀr
(0xDC00, 0xDC00, 
QTAiRód
);

221 
	`SëRódH™dÀr
(0xDD00, 0xDD00, 
QTAiRód
);

222 
	`FCEU_ChótAddRAM
(
WRAMSIZE
 >> 10, 0x6000, 
WRAM
);

223 
	`Sync
();

224 
	}
}

226 
	$QTAiClo£
() {

227 i‡(
CHRRAM
)

228 
	`FCEU_g‰ì
(
CHRRAM
);

229 
CHRRAM
 = 
NULL
;

230 i‡(
WRAM
)

231 
	`FCEU_g‰ì
(
WRAM
);

232 
WRAM
 = 
NULL
;

233 
	}
}

235 
	$SèãRe°‹e
(
vîsi⁄
) {

236 
	`Sync
();

237 
	}
}

239 
	$QTAi_Inô
(
C¨tInfo
 *
öfo
) {

240 
QTAIHack
 = 1;

242 
öfo
->
Powî
 = 
QTAiPowî
;

243 
öfo
->
Clo£
 = 
QTAiClo£
;

244 
GameSèãRe°‹e
 = 
SèãRe°‹e
;

246 
M≠IRQHook
 = 
VRC5IRQ
;

248 
CHRRAM
 = (
uöt8
*)
	`FCEU_gmÆloc
(
CHRSIZE
);

249 
	`SëupC¨tCHRM≠pög
(0x10, 
CHRRAM
, 
CHRSIZE
, 1);

250 
	`AddExSèã
(
CHRRAM
, 
CHRSIZE
, 0, "CRAM");

252 
WRAM
 = (
uöt8
*)
	`FCEU_gmÆloc
(
WRAMSIZE
);

253 
	`SëupC¨tPRGM≠pög
(0x10, 
WRAM
, 
WRAMSIZE
, 1);

254 
	`AddExSèã
(
WRAM
, 
WRAMSIZE
, 0, "WRAM");

256 i‡(
öfo
->
b©ãry
) {

257 
öfo
->
SaveGame
[0] = 
WRAM
;

261 
öfo
->
SaveGameLí
[0] = 
WRAMSIZE
;

264 
	`AddExSèã
(&
SèãRegs
, ~0, 0, 0);

265 
	}
}

	@fceux-am/src/boards/vrc6.cpp

24 
	~"m≠öc.h
"

26 
uöt8
 
	gis26
;

27 
uöt8
 
	g¥g
[2], 
	gchr
[8], 
	gmúr
;

28 
uöt8
 
	gIRQL©ch
, 
	gIRQa
, 
	gIRQd
;

29 
öt32
 
	gIRQCou¡
, 
	gCy˛eCou¡
;

30 
uöt8
 *
	gWRAM
 = 
NULL
;

31 
uöt32
 
	gWRAMSIZE
;

33 
SFORMAT
 
	gSèãRegs
[] =

35 { 
¥g
, 2, "PRG" },

36 { 
chr
, 8, "CHR" },

37 { &
múr
, 1, "MIRR" },

38 { &
IRQa
, 1, "IRQA" },

39 { &
IRQd
, 1, "IRQD" },

40 { &
IRQL©ch
, 1, "IRQL" },

41 { &
IRQCou¡
, 4, "IRQC" },

42 { &
Cy˛eCou¡
, 4, "CYCC" },

46 (*
sfun
[3]) ();

47 
uöt8
 
vpsg1
[8];

48 
uöt8
 
vpsg2
[4];

49 
öt32
 
cvbc
[3];

50 
öt32
 
vcou¡
[3];

51 
öt32
 
dcou¡
[2];

53 
SFORMAT
 
SSèãRegs
[] =

55 { 
vpsg1
, 8, "PSG1" },

56 { 
vpsg2
, 4, "PSG2" },

58 
	}
};

60 
	$Sync
() {

61 
uöt8
 
i
;

62 i‡(
is26
)

63 
	`£çrg8r
(0x10, 0x6000, 0);

64 
	`£çrg16
(0x8000, 
¥g
[0]);

65 
	`£çrg8
(0xc000, 
¥g
[1]);

66 
	`£çrg8
(0xe000, ~0);

67 
i
 = 0; i < 8; i++)

68 
	`£tchr1
(
i
 << 10, 
chr
[i]);

69 
múr
 & 3) {

70 0: 
	`£tmúr‹
(
MI_V
); ;

71 1: 
	`£tmúr‹
(
MI_H
); ;

72 2: 
	`£tmúr‹
(
MI_0
); ;

73 3: 
	`£tmúr‹
(
MI_1
); ;

75 
	}
}

77 
	$DECLFW
(
VRC6SW
) {

78 
A
 &= 0xF003;

79 i‡(
A
 >= 0x9000 && A <= 0x9002) {

80 
vpsg1
[
A
 & 3] = 
V
;

81 i‡(
sfun
[0]) sfun[0]();

82 } i‡(
A
 >= 0xA000 && A <= 0xA002) {

83 
vpsg1
[4 | (
A
 & 3)] = 
V
;

84 i‡(
sfun
[1]) sfun[1]();

85 } i‡(
A
 >= 0xB000 && A <= 0xB002) {

86 
vpsg2
[
A
 & 3] = 
V
;

87 i‡(
sfun
[2]) sfun[2]();

89 
	}
}

91 
	$DECLFW
(
VRC6Wrôe
) {

92 i‡(
is26
)

93 
A
 = (A & 0xFFFC) | ((A >> 1) & 1) | ((A << 1) & 2);

94 i‡(
A
 >= 0x9000 && A <= 0xB002) {

95 
	`VRC6SW
(
A
, 
V
);

98 
A
 & 0xF003) {

99 0x8000: 
¥g
[0] = 
V
; 
	`Sync
(); ;

100 0xB003: 
múr
 = (
V
 >> 2Ë& 3; 
	`Sync
(); ;

101 0xC000: 
¥g
[1] = 
V
; 
	`Sync
(); ;

102 0xD000: 
chr
[0] = 
V
; 
	`Sync
(); ;

103 0xD001: 
chr
[1] = 
V
; 
	`Sync
(); ;

104 0xD002: 
chr
[2] = 
V
; 
	`Sync
(); ;

105 0xD003: 
chr
[3] = 
V
; 
	`Sync
(); ;

106 0xE000: 
chr
[4] = 
V
; 
	`Sync
(); ;

107 0xE001: 
chr
[5] = 
V
; 
	`Sync
(); ;

108 0xE002: 
chr
[6] = 
V
; 
	`Sync
(); ;

109 0xE003: 
chr
[7] = 
V
; 
	`Sync
(); ;

110 0xF000: 
IRQL©ch
 = 
V
; 
	`X6502_IRQEnd
(
FCEU_IQEXT
); ;

112 
IRQa
 = 
V
 & 2;

113 
IRQd
 = 
V
 & 1;

114 i‡(
V
 & 2)

115 
IRQCou¡
 = 
IRQL©ch
;

116 
Cy˛eCou¡
 = 0;

117 
	`X6502_IRQEnd
(
FCEU_IQEXT
);

120 
IRQa
 = 
IRQd
;

121 
	`X6502_IRQEnd
(
FCEU_IQEXT
);

123 
	}
}

125 
	$VRC6Powî
() {

126 
	`Sync
();

127 
	`SëRódH™dÀr
(0x6000, 0xFFFF, 
C¨tBR
);

128 
	`SëWrôeH™dÀr
(0x6000, 0x7FFF, 
C¨tBW
);

129 
	`SëWrôeH™dÀr
(0x8000, 0xFFFF, 
VRC6Wrôe
);

130 
	`FCEU_ChótAddRAM
(
WRAMSIZE
 >> 10, 0x6000, 
WRAM
);

131 
	}
}

133 
	$VRC6IRQHook
(
a
) {

134 i‡(
IRQa
) {

135 
Cy˛eCou¡
 +
a
 * 3;

136 
Cy˛eCou¡
 >= 341) {

137 
Cy˛eCou¡
 -= 341;

138 
IRQCou¡
++;

139 i‡(
IRQCou¡
 == 0x100) {

140 
IRQCou¡
 = 
IRQL©ch
;

141 
	`X6502_IRQBegö
(
FCEU_IQEXT
);

145 
	}
}

147 
	$VRC6Clo£
()

149 i‡(
WRAM
)

150 
	`FCEU_g‰ì
(
WRAM
);

151 
WRAM
 = 
NULL
;

152 
	}
}

154 
	$SèãRe°‹e
(
vîsi⁄
) {

155 
	`Sync
();

156 
	}
}

160 
DoSQV1
();

161 
DoSQV2
();

162 
DoSawV
();

164 
INLINE
 
	$DoSQV
(
x
) {

165 
öt32
 
V
;

166 
öt32
 
amp
 = (((
vpsg1
[
x
 << 2] & 15) << 8) * 6 / 8) >> 4;

167 
öt32
 
°¨t
, 
íd
;

169 
°¨t
 = 
cvbc
[
x
];

170 
íd
 = (
SOUNDTS
 << 16Ë/ 
soundtsöc
;

171 i‡(
íd
 <
°¨t
) ;

172 
cvbc
[
x
] = 
íd
;

174 i‡(
vpsg1
[(
x
 << 2) | 0x2] & 0x80) {

175 i‡(
vpsg1
[
x
 << 2] & 0x80) {

176 
V
 = 
°¨t
; V < 
íd
; V++)

177 
Wave
[
V
 >> 4] +
amp
;

179 
öt32
 
thªsh
 = (
vpsg1
[
x
 << 2] >> 4) & 7;

180 
öt32
 
‰eq
 = ((
vpsg1
[(
x
 << 2) | 0x1] | ((vpsg1[(x << 2) | 0x2] & 15) << 8)) + 1) << 17;

181 
V
 = 
°¨t
; V < 
íd
; V++) {

182 i‡(
dcou¡
[
x
] > 
thªsh
)

183 
Wave
[
V
 >> 4] +
amp
;

184 
vcou¡
[
x
] -
√söcsize
;

185 
vcou¡
[
x
] <= 0) {

186 
vcou¡
[
x
] +
‰eq
;

187 
dcou¡
[
x
] = (dcount[x] + 1) & 15;

192 
	}
}

194 
	$DoSQV1
() {

195 
	`DoSQV
(0);

196 
	}
}

198 
	$DoSQV2
() {

199 
	`DoSQV
(1);

200 
	}
}

202 
	$DoSawV
() {

203 
V
;

204 
öt32
 
°¨t
, 
íd
;

206 
°¨t
 = 
cvbc
[2];

207 
íd
 = (
SOUNDTS
 << 16Ë/ 
soundtsöc
;

208 i‡(
íd
 <
°¨t
) ;

209 
cvbc
[2] = 
íd
;

211 i‡(
vpsg2
[2] & 0x80) {

212 
öt32
 
ßw1pha£acc
 = 0;

213 
uöt32
 
‰eq3
;

214 
uöt8
 
b3
 = 0;

215 
öt32
 
pha£acc
 = 0;

216 
uöt32
 
duff
 = 0;

218 
‰eq3
 = (
vpsg2
[1] + ((vpsg2[2] & 15) << 8) + 1);

220 
V
 = 
°¨t
; V < 
íd
; V++) {

221 
ßw1pha£acc
 -
√söcsize
;

222 i‡(
ßw1pha£acc
 <= 0) {

223 
öt32
 
t
;

224 
ªa
:

225 
t
 = 
‰eq3
;

226 
t
 <<= 18;

227 
ßw1pha£acc
 +
t
;

228 
pha£acc
 +
vpsg2
[0] & 0x3f;

229 
b3
++;

230 i‡(
b3
 == 7) {

231 
b3
 = 0;

232 
pha£acc
 = 0;

234 i‡(
ßw1pha£acc
 <= 0)

235 
ªa
;

236 
duff
 = (((
pha£acc
 >> 3) & 0x1f) << 4) * 6 / 8;

238 
Wave
[
V
 >> 4] +
duff
;

241 
	}
}

243 
INLINE
 
	$DoSQVHQ
(
x
) {

244 
öt32
 
V
;

245 
öt32
 
amp
 = ((
vpsg1
[
x
 << 2] & 15) << 8) * 6 / 8;

247 i‡(
vpsg1
[(
x
 << 2) | 0x2] & 0x80) {

248 i‡(
vpsg1
[
x
 << 2] & 0x80) {

249 
V
 = 
cvbc
[
x
]; V < ()
SOUNDTS
; V++)

250 
WaveHi
[
V
] +
amp
;

252 
öt32
 
thªsh
 = (
vpsg1
[
x
 << 2] >> 4) & 7;

253 
V
 = 
cvbc
[
x
]; V < ()
SOUNDTS
; V++) {

254 i‡(
dcou¡
[
x
] > 
thªsh
)

255 
WaveHi
[
V
] +
amp
;

256 
vcou¡
[
x
]--;

257 i‡(
vcou¡
[
x
] <= 0) {

258 
vcou¡
[
x
] = (
vpsg1
[(x << 2) | 0x1] | ((vpsg1[(x << 2) | 0x2] & 15) << 8)) + 1;

259 
dcou¡
[
x
] = (dcount[x] + 1) & 15;

264 
cvbc
[
x
] = 
SOUNDTS
;

265 
	}
}

267 
	$DoSQV1HQ
() {

268 
	`DoSQVHQ
(0);

269 
	}
}

271 
	$DoSQV2HQ
() {

272 
	`DoSQVHQ
(1);

273 
	}
}

275 
	$DoSawVHQ
() {

276 
uöt8
 
b3
 = 0;

277 
öt32
 
pha£acc
 = 0;

278 
öt32
 
V
;

280 i‡(
vpsg2
[2] & 0x80) {

281 
V
 = 
cvbc
[2]; V < ()
SOUNDTS
; V++) {

282 
WaveHi
[
V
] +(((
pha£acc
 >> 3) & 0x1f) << 8) * 6 / 8;

283 
vcou¡
[2]--;

284 i‡(
vcou¡
[2] <= 0) {

285 
vcou¡
[2] = (
vpsg2
[1] + ((vpsg2[2] & 15) << 8) + 1) << 1;

286 
pha£acc
 +
vpsg2
[0] & 0x3f;

287 
b3
++;

288 i‡(
b3
 == 7) {

289 
b3
 = 0;

290 
pha£acc
 = 0;

295 
cvbc
[2] = 
SOUNDTS
;

296 
	}
}

299 
	$VRC6Sound
(
Cou¡
) {

300 
x
;

302 
	`DoSQV1
();

303 
	`DoSQV2
();

304 
	`DoSawV
();

305 
x
 = 0; x < 3; x++)

306 
cvbc
[
x
] = 
Cou¡
;

307 
	}
}

309 
	$VRC6SoundHQ
() {

310 
	`DoSQV1HQ
();

311 
	`DoSQV2HQ
();

312 
	`DoSawVHQ
();

313 
	}
}

315 
	$VRC6SyncHQ
(
öt32
 
ts
) {

316 
x
;

317 
x
 = 0; x < 3; x++Ë
cvbc
[x] = 
ts
;

318 
	}
}

320 
	$VRC6_ESI
() {

321 
GameExpSound
.
RCh™ge
 = 
VRC6_ESI
;

322 
GameExpSound
.
Fûl
 = 
VRC6Sound
;

323 
GameExpSound
.
HiFûl
 = 
VRC6SoundHQ
;

324 
GameExpSound
.
HiSync
 = 
VRC6SyncHQ
;

326 
	`mem£t
(
cvbc
, 0, (cvbc));

327 
	`mem£t
(
vcou¡
, 0, (vcount));

328 
	`mem£t
(
dcou¡
, 0, (dcount));

329 i‡(
FSëtögs
.
SndR©e
) {

330 i‡(
FSëtögs
.
soundq
 >= 1) {

331 
sfun
[0] = 
DoSQV1HQ
;

332 
sfun
[1] = 
DoSQV2HQ
;

333 
sfun
[2] = 
DoSawVHQ
;

335 
sfun
[0] = 
DoSQV1
;

336 
sfun
[1] = 
DoSQV2
;

337 
sfun
[2] = 
DoSawV
;

340 
	`mem£t
(
sfun
, 0, (sfun));

341 
	`AddExSèã
(&
SSèãRegs
, ~0, 0, 0);

342 
	}
}

346 
	$M≠≥r24_Inô
(
C¨tInfo
 *
öfo
) {

347 
is26
 = 0;

348 
öfo
->
Powî
 = 
VRC6Powî
;

349 
M≠IRQHook
 = 
VRC6IRQHook
;

350 
	`VRC6_ESI
();

351 
GameSèãRe°‹e
 = 
SèãRe°‹e
;

352 
	`AddExSèã
(&
SèãRegs
, ~0, 0, 0);

353 
	}
}

355 
	$M≠≥r26_Inô
(
C¨tInfo
 *
öfo
) {

356 
is26
 = 1;

357 
öfo
->
Powî
 = 
VRC6Powî
;

358 
öfo
->
Clo£
 = 
VRC6Clo£
;

359 
M≠IRQHook
 = 
VRC6IRQHook
;

360 
	`VRC6_ESI
();

361 
GameSèãRe°‹e
 = 
SèãRe°‹e
;

363 
WRAMSIZE
 = 8192;

364 
WRAM
 = (
uöt8
*)
	`FCEU_gmÆloc
(
WRAMSIZE
);

365 
	`SëupC¨tPRGM≠pög
(0x10, 
WRAM
, 
WRAMSIZE
, 1);

366 
	`AddExSèã
(
WRAM
, 
WRAMSIZE
, 0, "WRAM");

367 i‡(
öfo
->
b©ãry
) {

368 
öfo
->
SaveGame
[0] = 
WRAM
;

369 
öfo
->
SaveGameLí
[0] = 
WRAMSIZE
;

372 
	`AddExSèã
(&
SèãRegs
, ~0, 0, 0);

373 
	}
}

375 
	$NSFVRC6_Inô
() {

376 
	`VRC6_ESI
();

377 
	`SëWrôeH™dÀr
(0x8000, 0xbfff, 
VRC6SW
);

378 
	}
}

	@fceux-am/src/boards/vrc7.cpp

21 
	~"m≠öc.h
"

23 
uöt8
 
	gvrc7idx
, 
	g¥eg
[3], 
	g¸eg
[8], 
	gmúr
;

24 
uöt8
 
	gIRQL©ch
, 
	gIRQa
, 
	gIRQd
;

25 
öt32
 
	gIRQCou¡
, 
	gCy˛eCou¡
;

26 
uöt8
 *
	gWRAM
 = 
NULL
;

27 
uöt32
 
	gWRAMSIZE
;

29 
	~"emu2413.h
"

31 
öt32
 
	gdwave
 = 0;

32 
OPLL
 *
	gVRC7Sound
 = 
NULL
;

33 
OPLL
 **
	gVRC7Sound_ßvïå
 = &
VRC7Sound
;

35 
SFORMAT
 
	gSèãRegs
[] =

37 { &
vrc7idx
, 1, "VRCI" },

38 { 
¥eg
, 3, "PREG" },

39 { 
¸eg
, 8, "CREG" },

40 { &
múr
, 1, "MIRR" },

41 { &
IRQa
, 1, "IRQA" },

42 { &
IRQd
, 1, "IRQD" },

43 { &
IRQL©ch
, 1, "IRQL" },

44 { &
IRQCou¡
, 4, "IRQC" },

45 { &
Cy˛eCou¡
, 4, "CYCC" },

46 { (**)
VRC7Sound_ßvïå
, (*
VRC7Sound
Ë| 
FCEUSTATE_INDIRECT
, "VRC7" },

52 
	$DoVRC7Sound
() {

53 
öt32
 
z
, 
a
;

54 i‡(
FSëtögs
.
soundq
 >= 1)

56 
z
 = ((
SOUNDTS
 << 16Ë/ 
soundtsöc
) >> 4;

57 
a
 = 
z
 - 
dwave
;

58 
	`OPLL_fûlbuf
(
VRC7Sound
, &
Wave
[
dwave
], 
a
, 1);

59 
dwave
 +
a
;

60 
	}
}

62 
	$Upd©eOPLNEO
(
öt32
 *
Wave
, 
Cou¡
) {

63 
	`OPLL_fûlbuf
(
VRC7Sound
, 
Wave
, 
Cou¡
, 4);

64 
	}
}

66 
	$Upd©eOPL
(
Cou¡
) {

67 
öt32
 
z
, 
a
;

68 
z
 = ((
SOUNDTS
 << 16Ë/ 
soundtsöc
) >> 4;

69 
a
 = 
z
 - 
dwave
;

70 i‡(
VRC7Sound
 && 
a
)

71 
	`OPLL_fûlbuf
(
VRC7Sound
, &
Wave
[
dwave
], 
a
, 1);

72 
dwave
 = 0;

73 
	}
}

75 
	$VRC7SC
() {

76 i‡(
VRC7Sound
)

77 
	`OPLL_£t_øã
(
VRC7Sound
, 
FSëtögs
.
SndR©e
);

78 
	}
}

80 
	$VRC7SKûl
() {

81 i‡(
VRC7Sound
)

82 
	`OPLL_dñëe
(
VRC7Sound
);

83 
VRC7Sound
 = 
NULL
;

84 
	}
}

86 
	$VRC7_ESI
() {

87 
GameExpSound
.
RCh™ge
 = 
VRC7SC
;

88 
GameExpSound
.
Kûl
 = 
VRC7SKûl
;

89 
VRC7Sound
 = 
	`OPLL_√w
(3579545, 
FSëtögs
.
SndR©e
 ? FSettings.SndRate : 48000);

90 
	`OPLL_ª£t
(
VRC7Sound
);

91 
	`OPLL_ª£t
(
VRC7Sound
);

92 
	}
}

96 
	$Sync
() {

97 
uöt8
 
i
;

98 
	`£çrg8r
(0x10, 0x6000, 0);

99 
	`£çrg8
(0x8000, 
¥eg
[0]);

100 
	`£çrg8
(0xA000, 
¥eg
[1]);

101 
	`£çrg8
(0xC000, 
¥eg
[2]);

102 
	`£çrg8
(0xE000, ~0);

103 
i
 = 0; i < 8; i++)

104 
	`£tchr1
(
i
 << 10, 
¸eg
[i]);

105 
múr
 & 3) {

106 0: 
	`£tmúr‹
(
MI_V
); ;

107 1: 
	`£tmúr‹
(
MI_H
); ;

108 2: 
	`£tmúr‹
(
MI_0
); ;

109 3: 
	`£tmúr‹
(
MI_1
); ;

111 
	}
}

113 
	$DECLFW
(
VRC7SW
) {

114 i‡(
FSëtögs
.
SndR©e
) {

115 
	`OPLL_wrôeReg
(
VRC7Sound
, 
vrc7idx
, 
V
);

116 
GameExpSound
.
Fûl
 = 
Upd©eOPL
;

117 
GameExpSound
.
NeoFûl
 = 
Upd©eOPLNEO
;

119 
	}
}

121 
	$DECLFW
(
VRC7Wrôe
) {

122 
A
 |= (A & 8) << 1;

123 i‡(
A
 >= 0xA000 && A <= 0xDFFF) {

124 
A
 &= 0xF010;

125 
¸eg
[((
A
 >> 4Ë& 1Ë| ((A - 0xA000Ë>> 11)] = 
V
;

126 
	`Sync
();

127 } i‡(
A
 == 0x9030) {

128 
	`VRC7SW
(
A
, 
V
);

129 } 
A
 & 0xF010) {

130 0x8000: 
¥eg
[0] = 
V
; 
	`Sync
(); ;

131 0x8010: 
¥eg
[1] = 
V
; 
	`Sync
(); ;

132 0x9000: 
¥eg
[2] = 
V
; 
	`Sync
(); ;

133 0x9010: 
vrc7idx
 = 
V
; ;

134 0xE000: 
múr
 = 
V
 & 3; 
	`Sync
(); ;

135 0xE010: 
IRQL©ch
 = 
V
; 
	`X6502_IRQEnd
(
FCEU_IQEXT
); ;

137 
IRQa
 = 
V
 & 2;

138 
IRQd
 = 
V
 & 1;

139 i‡(
V
 & 2)

140 
IRQCou¡
 = 
IRQL©ch
;

141 
Cy˛eCou¡
 = 0;

142 
	`X6502_IRQEnd
(
FCEU_IQEXT
);

145 
IRQa
 = 
IRQd
;

146 
	`X6502_IRQEnd
(
FCEU_IQEXT
);

149 
	}
}

151 
	$VRC7Powî
() {

152 
	`Sync
();

153 
	`SëWrôeH™dÀr
(0x6000, 0x7FFF, 
C¨tBW
);

154 
	`SëRódH™dÀr
(0x6000, 0xFFFF, 
C¨tBR
);

155 
	`SëWrôeH™dÀr
(0x8000, 0xFFFF, 
VRC7Wrôe
);

156 
	`FCEU_ChótAddRAM
(
WRAMSIZE
 >> 10, 0x6000, 
WRAM
);

157 
	}
}

159 
	$VRC7Clo£
()

161 i‡(
WRAM
)

162 
	`FCEU_g‰ì
(
WRAM
);

163 
WRAM
 = 
NULL
;

164 
	}
}

166 
	$VRC7IRQHook
(
a
) {

167 i‡(
IRQa
) {

168 
Cy˛eCou¡
 +
a
 * 3;

169 
Cy˛eCou¡
 >= 341) {

170 
Cy˛eCou¡
 -= 341;

171 
IRQCou¡
++;

172 i‡(
IRQCou¡
 == 0x100) {

173 
IRQCou¡
 = 
IRQL©ch
;

174 
	`X6502_IRQBegö
(
FCEU_IQEXT
);

178 
	}
}

180 
	$SèãRe°‹e
(
vîsi⁄
) {

181 
	`Sync
();

182 
	}
}

184 
	$M≠≥r85_Inô
(
C¨tInfo
 *
öfo
) {

185 
öfo
->
Powî
 = 
VRC7Powî
;

186 
öfo
->
Clo£
 = 
VRC7Clo£
;

187 
M≠IRQHook
 = 
VRC7IRQHook
;

188 
WRAMSIZE
 = 8192;

189 
WRAM
 = (
uöt8
*)
	`FCEU_gmÆloc
(
WRAMSIZE
);

190 
	`SëupC¨tPRGM≠pög
(0x10, 
WRAM
, 
WRAMSIZE
, 1);

191 
	`AddExSèã
(
WRAM
, 
WRAMSIZE
, 0, "WRAM");

192 i‡(
öfo
->
b©ãry
) {

193 
öfo
->
SaveGame
[0] = 
WRAM
;

194 
öfo
->
SaveGameLí
[0] = 
WRAMSIZE
;

196 
GameSèãRe°‹e
 = 
SèãRe°‹e
;

197 
	`VRC7_ESI
();

198 
	`AddExSèã
(&
SèãRegs
, ~0, 0, 0);

199 
	}
}

201 
	$NSFVRC7_Inô
() {

202 
	`SëWrôeH™dÀr
(0x9010, 0x901F, 
VRC7Wrôe
);

203 
	`SëWrôeH™dÀr
(0x9030, 0x903F, 
VRC7Wrôe
);

204 
	`VRC7_ESI
();

205 
	}
}

	@fceux-am/src/boards/vrc7p.cpp

23 
	~"m≠öc.h
"

25 
uöt8
 
	g¥g
[3], 
	gchr
[8], 
	gmúr
;

26 
uöt8
 
	gIRQL©ch
, 
	gIRQa
, 
	gIRQd
;

27 
öt32
 
	gIRQCou¡
, 
	gCy˛eCou¡
;

29 
SFORMAT
 
	gSèãRegs
[] =

31 { 
¥g
, 3, "PRG" },

32 { 
chr
, 8, "CHR" },

33 { &
múr
, 1, "MIRR" },

34 { &
IRQa
, 1, "IRQA" },

35 { &
IRQd
, 1, "IRQD" },

36 { &
IRQL©ch
, 1, "IRQL" },

37 { &
IRQCou¡
, 4, "IRQC" },

38 { &
Cy˛eCou¡
, 4, "CYCC" },

42 
	$Sync
() {

43 
uöt8
 
i
;

44 
	`£çrg8
(0x8000, 
¥g
[0]);

45 
	`£çrg8
(0xa000, 
¥g
[1]);

46 
	`£çrg8
(0xc000, 
¥g
[2]);

47 
	`£çrg8
(0xe000, ~0);

48 
i
 = 0; i < 8; i++)

49 
	`£tchr1
(
i
 << 10, 
chr
[i]);

50 
múr
 & 3) {

51 0: 
	`£tmúr‹
(
MI_V
); ;

52 1: 
	`£tmúr‹
(
MI_H
); ;

53 2: 
	`£tmúr‹
(
MI_0
); ;

54 3: 
	`£tmúr‹
(
MI_1
); ;

56 
	}
}

58 
	$DECLFW
(
UNLVRC7Wrôe
) {

59 
A
 & 0xF008) {

60 0x8000: 
¥g
[0] = 
V
; 
	`Sync
(); ;

61 0x8008: 
¥g
[1] = 
V
; 
	`Sync
(); ;

62 0x9000: 
¥g
[2] = 
V
; 
	`Sync
(); ;

63 0xa000: 
chr
[0] = 
V
; 
	`Sync
(); ;

64 0xa008: 
chr
[1] = 
V
; 
	`Sync
(); ;

65 0xb000: 
chr
[2] = 
V
; 
	`Sync
(); ;

66 0xb008: 
chr
[3] = 
V
; 
	`Sync
(); ;

67 0xc000: 
chr
[4] = 
V
; 
	`Sync
(); ;

68 0xc008: 
chr
[5] = 
V
; 
	`Sync
(); ;

69 0xd000: 
chr
[6] = 
V
; 
	`Sync
(); ;

70 0xd008: 
chr
[7] = 
V
; 
	`Sync
(); ;

71 0xe000: 
múr
 = 
V
; 
	`Sync
(); ;

72 0xe008: 
IRQL©ch
 = 
V
; 
	`X6502_IRQEnd
(
FCEU_IQEXT
); ;

74 
IRQa
 = 
V
 & 2;

75 
IRQd
 = 
V
 & 1;

76 i‡(
V
 & 2)

77 
IRQCou¡
 = 
IRQL©ch
;

78 
Cy˛eCou¡
 = 0;

79 
	`X6502_IRQEnd
(
FCEU_IQEXT
);

82 i‡(
IRQd
)

83 
IRQa
 = 1;

85 
IRQa
 = 0;

86 
	`X6502_IRQEnd
(
FCEU_IQEXT
);

89 
	}
}

91 
	$UNLVRC7Powî
() {

92 
	`Sync
();

93 
	`SëRódH™dÀr
(0x8000, 0xFFFF, 
C¨tBR
);

94 
	`SëWrôeH™dÀr
(0x8000, 0xFFFF, 
UNLVRC7Wrôe
);

95 
	}
}

97 
	$UNLVRC7IRQHook
(
a
) {

98 i‡(
IRQa
) {

99 
Cy˛eCou¡
 +
a
 * 3;

100 
Cy˛eCou¡
 >= 341) {

101 
Cy˛eCou¡
 -= 341;

102 
IRQCou¡
++;

103 i‡(
IRQCou¡
 == 248) {

104 
IRQCou¡
 = 
IRQL©ch
;

105 
	`X6502_IRQBegö
(
FCEU_IQEXT
);

109 
	}
}

111 
	$SèãRe°‹e
(
vîsi⁄
) {

112 
	`Sync
();

113 
	}
}

115 
	$UNLVRC7_Inô
(
C¨tInfo
 *
öfo
) {

116 
öfo
->
Powî
 = 
UNLVRC7Powî
;

117 
M≠IRQHook
 = 
UNLVRC7IRQHook
;

118 
GameSèãRe°‹e
 = 
SèãRe°‹e
;

119 
	`AddExSèã
(&
SèãRegs
, ~0, 0, 0);

120 
	}
}

	@fceux-am/src/boards/yoko.cpp

29 
	~"m≠öc.h
"

31 
uöt8
 
	gmode
, 
	gb™k
, 
	gªg
[11], 
	glow
[4], 
	gdù
, 
	gIRQa
;

32 
öt32
 
	gIRQCou¡
;

33 
uöt8
 *
	gWRAM
 = 
NULL
;

34 
uöt32
 
	gWRAMSIZE
;

36 
uöt8
 
	gis2kb™k
, 
	gi¢Ÿ2kb™k
;

38 
SFORMAT
 
	gSèãRegs
[] =

40 { &
mode
, 1, "MODE" },

41 { &
b™k
, 1, "BANK" },

42 { &
IRQCou¡
, 4, "IRQC" },

43 { &
IRQa
, 1, "IRQA" },

44 { 
ªg
, 11, "REGS" },

45 { 
low
, 4, "LOWR" },

46 { &
is2kb™k
, 1, "IS2K" },

47 { &
i¢Ÿ2kb™k
, 1, "NT2K" },

51 
	$UNLYOKOSync
() {

52 
	`£tmúr‹
((
mode
 & 1) ^ 1);

53 
	`£tchr2
(0x0000, 
ªg
[3]);

54 
	`£tchr2
(0x0800, 
ªg
[4]);

55 
	`£tchr2
(0x1000, 
ªg
[5]);

56 
	`£tchr2
(0x1800, 
ªg
[6]);

57 i‡(
mode
 & 0x10) {

58 
uöt32
 
ba£
 = (
b™k
 & 8) << 1;

59 
	`£çrg8
(0x8000, (
ªg
[0] & 0x0fË| 
ba£
);

60 
	`£çrg8
(0xA000, (
ªg
[1] & 0x0fË| 
ba£
);

61 
	`£çrg8
(0xC000, (
ªg
[2] & 0x0fË| 
ba£
);

62 
	`£çrg8
(0xE000, 0x0‡| 
ba£
);

64 i‡(
mode
 & 8)

65 
	`£çrg32
(0x8000, 
b™k
 >> 1);

67 
	`£çrg16
(0x8000, 
b™k
);

68 
	`£çrg16
(0xC000, ~0);

71 
	}
}

73 
	$M83Sync
() {

74 
mode
 & 3) {

75 0: 
	`£tmúr‹
(
MI_V
); ;

76 1: 
	`£tmúr‹
(
MI_H
); ;

77 2: 
	`£tmúr‹
(
MI_0
); ;

78 3: 
	`£tmúr‹
(
MI_1
); ;

80 i‡(
is2kb™k
 && !
i¢Ÿ2kb™k
) {

81 
	`£tchr2
(0x0000, 
ªg
[0]);

82 
	`£tchr2
(0x0800, 
ªg
[1]);

83 
	`£tchr2
(0x1000, 
ªg
[6]);

84 
	`£tchr2
(0x1800, 
ªg
[7]);

86 
x
;

87 
x
 = 0; x < 8; x++)

88 
	`£tchr1
(
x
 << 10, 
ªg
[x] | ((
b™k
 & 0x30) << 4));

90 
	`£çrg8r
(0x10, 0x6000, 0);

91 i‡(
mode
 & 0x40) {

92 
	`£çrg16
(0x8000, (
b™k
 & 0x3F));

93 
	`£çrg16
(0xC000, (
b™k
 & 0x30) | 0xF);

95 
	`£çrg8
(0x8000, 
ªg
[8]);

96 
	`£çrg8
(0xA000, 
ªg
[9]);

97 
	`£çrg8
(0xC000, 
ªg
[10]);

98 
	`£çrg8
(0xE000, ~0);

100 
	}
}

102 
	$DECLFW
(
UNLYOKOWrôe
) {

103 
A
 & 0x8C17) {

104 0x8000: 
b™k
 = 
V
; 
	`UNLYOKOSync
(); ;

105 0x8400: 
mode
 = 
V
; 
	`UNLYOKOSync
(); ;

106 0x8800: 
IRQCou¡
 &0xFF00; IRQCou¡ |
V
; 
	`X6502_IRQEnd
(
FCEU_IQEXT
); ;

107 0x8801: 
IRQa
 = 
mode
 & 0x80; 
IRQCou¡
 &0xFF; IRQCou¡ |
V
 << 8; ;

108 0x8c00: 
ªg
[0] = 
V
; 
	`UNLYOKOSync
(); ;

109 0x8c01: 
ªg
[1] = 
V
; 
	`UNLYOKOSync
(); ;

110 0x8c02: 
ªg
[2] = 
V
; 
	`UNLYOKOSync
(); ;

111 0x8c10: 
ªg
[3] = 
V
; 
	`UNLYOKOSync
(); ;

112 0x8c11: 
ªg
[4] = 
V
; 
	`UNLYOKOSync
(); ;

113 0x8c16: 
ªg
[5] = 
V
; 
	`UNLYOKOSync
(); ;

114 0x8c17: 
ªg
[6] = 
V
; 
	`UNLYOKOSync
(); ;

116 
	}
}

118 
	$DECLFW
(
M83Wrôe
) {

119 
A
) {

120 0x8000: 
is2kb™k
 = 1;

123 0xB1FF: 
b™k
 = 
V
; 
mode
 |0x40; 
	`M83Sync
(); ;

124 0x8100: 
mode
 = 
V
 | (modê& 0x40); 
	`M83Sync
(); ;

125 0x8200: 
IRQCou¡
 &0xFF00; IRQCou¡ |
V
; 
	`X6502_IRQEnd
(
FCEU_IQEXT
); ;

126 0x8201: 
IRQa
 = 
mode
 & 0x80; 
IRQCou¡
 &0xFF; IRQCou¡ |
V
 << 8; ;

127 0x8300: 
ªg
[8] = 
V
; 
mode
 &0xBF; 
	`M83Sync
(); ;

128 0x8301: 
ªg
[9] = 
V
; 
mode
 &0xBF; 
	`M83Sync
(); ;

129 0x8302: 
ªg
[10] = 
V
; 
mode
 &0xBF; 
	`M83Sync
(); ;

130 0x8310: 
ªg
[0] = 
V
; 
	`M83Sync
(); ;

131 0x8311: 
ªg
[1] = 
V
; 
	`M83Sync
(); ;

132 0x8312: 
ªg
[2] = 
V
; 
i¢Ÿ2kb™k
 = 1; 
	`M83Sync
(); ;

133 0x8313: 
ªg
[3] = 
V
; 
i¢Ÿ2kb™k
 = 1; 
	`M83Sync
(); ;

134 0x8314: 
ªg
[4] = 
V
; 
i¢Ÿ2kb™k
 = 1; 
	`M83Sync
(); ;

135 0x8315: 
ªg
[5] = 
V
; 
i¢Ÿ2kb™k
 = 1; 
	`M83Sync
(); ;

136 0x8316: 
ªg
[6] = 
V
; 
	`M83Sync
(); ;

137 0x8317: 
ªg
[7] = 
V
; 
	`M83Sync
(); ;

139 
	}
}

141 
	$DECLFR
(
UNLYOKORódDù
) {

142  (
X
.
DB
 & 0xFCË| 
dù
;

143 
	}
}

145 
	$DECLFR
(
UNLYOKORódLow
) {

146  
low
[
A
 & 3];

147 
	}
}

149 
	$DECLFW
(
UNLYOKOWrôeLow
) {

150 
low
[
A
 & 3] = 
V
;

151 
	}
}

153 
	$UNLYOKOPowî
() {

154 
mode
 = 
b™k
 = 0;

155 
dù
 = 3;

156 
	`UNLYOKOSync
();

157 
	`SëRódH™dÀr
(0x5000, 0x53FF, 
UNLYOKORódDù
);

158 
	`SëRódH™dÀr
(0x5400, 0x5FFF, 
UNLYOKORódLow
);

159 
	`SëWrôeH™dÀr
(0x5400, 0x5FFF, 
UNLYOKOWrôeLow
);

160 
	`SëRódH™dÀr
(0x8000, 0xFFFF, 
C¨tBR
);

161 
	`SëWrôeH™dÀr
(0x8000, 0xFFFF, 
UNLYOKOWrôe
);

162 
	}
}

164 
	$M83Powî
() {

165 
is2kb™k
 = 0;

166 
i¢Ÿ2kb™k
 = 0;

167 
mode
 = 
b™k
 = 0;

168 
dù
 = 0;

169 
	`M83Sync
();

170 
	`SëRódH™dÀr
(0x5000, 0x5000, 
UNLYOKORódDù
);

171 
	`SëRódH™dÀr
(0x5100, 0x5103, 
UNLYOKORódLow
);

172 
	`SëWrôeH™dÀr
(0x5100, 0x5103, 
UNLYOKOWrôeLow
);

173 
	`SëRódH™dÀr
(0x6000, 0x7fff, 
C¨tBR
);

174 
	`SëWrôeH™dÀr
(0x6000, 0x7fff, 
C¨tBW
);

175 
	`SëRódH™dÀr
(0x8000, 0xffff, 
C¨tBR
);

176 
	`SëWrôeH™dÀr
(0x8000, 0xffff, 
M83Wrôe
);

177 
	`FCEU_ChótAddRAM
(
WRAMSIZE
 >> 10, 0x6000, 
WRAM
);

178 
	}
}

180 
	$UNLYOKORe£t
() {

181 
dù
 = (dip + 1) & 3;

182 
mode
 = 
b™k
 = 0;

183 
	`UNLYOKOSync
();

184 
	}
}

186 
	$M83Re£t
() {

187 
dù
 ^= 1;

188 
	`M83Sync
();

189 
	}
}

191 
	$M83Clo£
() {

192 i‡(
WRAM
)

193 
	`FCEU_g‰ì
(
WRAM
);

194 
WRAM
 = 
NULL
;

195 
	}
}

197 
	$UNLYOKOIRQHook
(
a
) {

198 i‡(
IRQa
) {

199 
IRQCou¡
 -
a
;

200 i‡(
IRQCou¡
 < 0) {

201 
	`X6502_IRQBegö
(
FCEU_IQEXT
);

202 
IRQa
 = 0;

203 
IRQCou¡
 = 0xFFFF;

206 
	}
}

208 
	$UNLYOKOSèãRe°‹e
(
vîsi⁄
) {

209 
	`UNLYOKOSync
();

210 
	}
}

212 
	$M83SèãRe°‹e
(
vîsi⁄
) {

213 
	`M83Sync
();

214 
	}
}

216 
	$UNLYOKO_Inô
(
C¨tInfo
 *
öfo
) {

217 
öfo
->
Powî
 = 
UNLYOKOPowî
;

218 
öfo
->
Re£t
 = 
UNLYOKORe£t
;

219 
M≠IRQHook
 = 
UNLYOKOIRQHook
;

220 
GameSèãRe°‹e
 = 
UNLYOKOSèãRe°‹e
;

221 
	`AddExSèã
(&
SèãRegs
, ~0, 0, 0);

222 
	}
}

224 
	$M≠≥r83_Inô
(
C¨tInfo
 *
öfo
) {

225 
öfo
->
Powî
 = 
M83Powî
;

226 
öfo
->
Re£t
 = 
M83Re£t
;

227 
öfo
->
Clo£
 = 
M83Clo£
;

228 
M≠IRQHook
 = 
UNLYOKOIRQHook
;

229 
GameSèãRe°‹e
 = 
M83SèãRe°‹e
;

231 
WRAMSIZE
 = 8192;

232 
WRAM
 = (
uöt8
*)
	`FCEU_gmÆloc
(
WRAMSIZE
);

233 
	`SëupC¨tPRGM≠pög
(0x10, 
WRAM
, 
WRAMSIZE
, 1);

234 
	`AddExSèã
(
WRAM
, 
WRAMSIZE
, 0, "WRAM");

236 
	`AddExSèã
(&
SèãRegs
, ~0, 0, 0);

237 
	}
}

	@fceux-am/src/cart.cpp

24 
	~"ty≥s.h
"

25 
	~"f˚u.h
"

26 
	~"µu.h
"

27 
	~"drivî.h
"

29 
	~"ˇπ.h
"

30 
	~"x6502.h
"

32 
	~"fûe.h
"

33 
	~"utûs/mem‹y.h
"

35 
uöt8
 *
	gPage
[32], *
	gVPage
[8];

36 
uöt8
 **
	gVPageR
 = 
VPage
;

37 
uöt8
 *
	gVPageG
[8];

38 
uöt8
 *
	gMMC5SPRVPage
[8];

39 
uöt8
 *
	gMMC5BGVPage
[8];

41 
uöt8
 
	gPRGIsRAM
[32];

44 
uöt8
 
	gCHRøm
[32];

45 
uöt8
 
	gPRGøm
[32];

47 
uöt8
 *
	gPRG±r
[32];

48 
uöt8
 *
	gCHR±r
[32];

50 
uöt32
 
	gPRGsize
[32];

51 
uöt32
 
	gCHRsize
[32];

53 
uöt32
 
	gPRGmask2
[32];

54 
uöt32
 
	gPRGmask4
[32];

55 
uöt32
 
	gPRGmask8
[32];

56 
uöt32
 
	gPRGmask16
[32];

57 
uöt32
 
	gPRGmask32
[32];

59 
uöt32
 
	gCHRmask1
[32];

60 
uöt32
 
	gCHRmask2
[32];

61 
uöt32
 
	gCHRmask4
[32];

62 
uöt32
 
	gCHRmask8
[32];

64 
	ggíõ°age
 = 0;

66 
	gmodc⁄
;

68 
uöt8
 
	ggíõvÆ
[3];

69 
uöt8
 
	ggíõch
[3];

71 
uöt32
 
	ggíõaddr
[3];

73 
C¨tInfo
 *
	gcuºC¨tInfo
;

75 
INLINE
 
	$£çagïå
(
s
, 
uöt32
 
A
, 
uöt8
 *
p
, 
øm
) {

76 
uöt32
 
AB
 = 
A
 >> 11;

77 
x
;

79 i‡(
p
)

80 
x
 = (
s
 >> 1) - 1; x >= 0; x--) {

81 
PRGIsRAM
[
AB
 + 
x
] = 
øm
;

82 
Page
[
AB
 + 
x
] = 
p
 - 
A
;

85 
x
 = (
s
 >> 1) - 1; x >= 0; x--) {

86 
PRGIsRAM
[
AB
 + 
x
] = 0;

87 
Page
[
AB
 + 
x
] = 0;

89 
	}
}

91 
uöt8
 
	gnŸhög
[8192];

92 
	$Re£tC¨tM≠pög
() {

93 
x
;

95 
	`PPU_Re£tHooks
();

97 
x
 = 0; x < 32; x++) {

98 
Page
[
x
] = 
nŸhög
 - x * 2048;

99 
PRG±r
[
x
] = 
CHR±r
[x] = 0;

100 
PRGsize
[
x
] = 
CHRsize
[x] = 0;

102 
x
 = 0; x < 8; x++) {

103 
MMC5SPRVPage
[
x
] = 
MMC5BGVPage
[x] = 
VPageR
[x] = 
nŸhög
 - 0x400 * x;

105 
	}
}

107 
	$SëupC¨tPRGM≠pög
(
chù
, 
uöt8
 *
p
, 
uöt32
 
size
, 
øm
) {

108 
PRG±r
[
chù
] = 
p
;

109 
PRGsize
[
chù
] = 
size
;

111 
PRGmask2
[
chù
] = (
size
 >> 11) - 1;

112 
PRGmask4
[
chù
] = (
size
 >> 12) - 1;

113 
PRGmask8
[
chù
] = (
size
 >> 13) - 1;

114 
PRGmask16
[
chù
] = (
size
 >> 14) - 1;

115 
PRGmask32
[
chù
] = (
size
 >> 15) - 1;

117 
PRGøm
[
chù
] = 
øm
 ? 1 : 0;

118 
	}
}

120 
	$SëupC¨tCHRM≠pög
(
chù
, 
uöt8
 *
p
, 
uöt32
 
size
, 
øm
) {

121 
CHR±r
[
chù
] = 
p
;

122 
CHRsize
[
chù
] = 
size
;

124 
CHRmask1
[
chù
] = (
size
 >> 10) - 1;

125 
CHRmask2
[
chù
] = (
size
 >> 11) - 1;

126 
CHRmask4
[
chù
] = (
size
 >> 12) - 1;

127 
CHRmask8
[
chù
] = (
size
 >> 13) - 1;

129 
CHRøm
[
chù
] = 
øm
;

130 
	}
}

132 
	$DECLFR
(
C¨tBR
) {

133  
Page
[
A
 >> 11][A];

134 
	}
}

136 
	$DECLFW
(
C¨tBW
) {

138 i‡(
PRGIsRAM
[
A
 >> 11] && 
Page
[A >> 11])

139 
Page
[
A
 >> 11][A] = 
V
;

140 
	}
}

142 
	$DECLFR
(
C¨tBROB
) {

143 i‡(!
Page
[
A
 >> 11])

144 (
X
.
DB
);

146  
Page
[
A
 >> 11][A];

147 
	}
}

149 
	$£çrg2r
(
r
, 
uöt32
 
A
, uöt32 
V
) {

150 
V
 &
PRGmask2
[
r
];

151 
	`£çagïå
(2, 
A
, 
PRG±r
[
r
] ? (&PRG±r[r][
V
 << 11]Ë: 0, 
PRGøm
[r]);

152 
	}
}

154 
	$£çrg2
(
uöt32
 
A
, uöt32 
V
) {

155 
	`£çrg2r
(0, 
A
, 
V
);

156 
	}
}

158 
	$£çrg4r
(
r
, 
uöt32
 
A
, uöt32 
V
) {

159 
V
 &
PRGmask4
[
r
];

160 
	`£çagïå
(4, 
A
, 
PRG±r
[
r
] ? (&PRG±r[r][
V
 << 12]Ë: 0, 
PRGøm
[r]);

161 
	}
}

163 
	$£çrg4
(
uöt32
 
A
, uöt32 
V
) {

164 
	`£çrg4r
(0, 
A
, 
V
);

165 
	}
}

167 
	$£çrg8r
(
r
, 
uöt32
 
A
, uöt32 
V
) {

168 i‡(
PRGsize
[
r
] >= 8192) {

169 
V
 &
PRGmask8
[
r
];

170 
	`£çagïå
(8, 
A
, 
PRG±r
[
r
] ? (&PRG±r[r][
V
 << 13]Ë: 0, 
PRGøm
[r]);

172 
uöt32
 
VA
 = 
V
 << 2;

173 
x
;

174 
x
 = 0; x < 4; x++)

175 
	`£çagïå
(2, 
A
 + (
x
 << 11), 
PRG±r
[
r
] ? (&PRG±r[r][((
VA
 + xË& 
PRGmask2
[r]Ë<< 11]Ë: 0, 
PRGøm
[r]);

177 
	}
}

179 
	$£çrg8
(
uöt32
 
A
, uöt32 
V
) {

180 
	`£çrg8r
(0, 
A
, 
V
);

181 
	}
}

183 
	$£çrg16r
(
r
, 
uöt32
 
A
, uöt32 
V
) {

184 i‡(
PRGsize
[
r
] >= 16384) {

185 
V
 &
PRGmask16
[
r
];

186 
	`£çagïå
(16, 
A
, 
PRG±r
[
r
] ? (&PRG±r[r][
V
 << 14]Ë: 0, 
PRGøm
[r]);

188 
uöt32
 
VA
 = 
V
 << 3;

189 
x
;

191 
x
 = 0; x < 8; x++)

192 
	`£çagïå
(2, 
A
 + (
x
 << 11), 
PRG±r
[
r
] ? (&PRG±r[r][((
VA
 + xË& 
PRGmask2
[r]Ë<< 11]Ë: 0, 
PRGøm
[r]);

194 
	}
}

196 
	$£çrg16
(
uöt32
 
A
, uöt32 
V
) {

197 
	`£çrg16r
(0, 
A
, 
V
);

198 
	}
}

200 
	$£çrg32r
(
r
, 
uöt32
 
A
, uöt32 
V
) {

201 i‡(
PRGsize
[
r
] >= 32768) {

202 
V
 &
PRGmask32
[
r
];

203 
	`£çagïå
(32, 
A
, 
PRG±r
[
r
] ? (&PRG±r[r][
V
 << 15]Ë: 0, 
PRGøm
[r]);

205 
uöt32
 
VA
 = 
V
 << 4;

206 
x
;

208 
x
 = 0; x < 16; x++)

209 
	`£çagïå
(2, 
A
 + (
x
 << 11), 
PRG±r
[
r
] ? (&PRG±r[r][((
VA
 + xË& 
PRGmask2
[r]Ë<< 11]Ë: 0, 
PRGøm
[r]);

211 
	}
}

213 
	$£çrg32
(
uöt32
 
A
, uöt32 
V
) {

214 
	`£çrg32r
(0, 
A
, 
V
);

215 
	}
}

217 
	$£tchr1r
(
r
, 
uöt32
 
A
, uöt32 
V
) {

218 i‡(!
CHR±r
[
r
]) ;

219 
	`FCEUPPU_LöeUpd©e
();

220 
V
 &
CHRmask1
[
r
];

221 i‡(
CHRøm
[
r
])

222 
PPUCHRRAM
 |(1 << (
A
 >> 10));

224 
PPUCHRRAM
 &~(1 << (
A
 >> 10));

225 
VPageR
[(
A
Ë>> 10] = &
CHR±r
[
r
][(
V
) << 10] - (A);

226 
	}
}

228 
	$£tchr2r
(
r
, 
uöt32
 
A
, uöt32 
V
) {

229 i‡(!
CHR±r
[
r
]) ;

230 
	`FCEUPPU_LöeUpd©e
();

231 
V
 &
CHRmask2
[
r
];

232 
VPageR
[(
A
Ë>> 10] = VPageR[((AË>> 10Ë+ 1] = &
CHR±r
[
r
][(
V
) << 11] - (A);

233 i‡(
CHRøm
[
r
])

234 
PPUCHRRAM
 |(3 << (
A
 >> 10));

236 
PPUCHRRAM
 &~(3 << (
A
 >> 10));

237 
	}
}

239 
	$£tchr4r
(
r
, 
uöt32
 
A
, uöt32 
V
) {

240 i‡(!
CHR±r
[
r
]) ;

241 
	`FCEUPPU_LöeUpd©e
();

242 
V
 &
CHRmask4
[
r
];

243 
VPageR
[(
A
) >> 10] = VPageR[((A) >> 10) + 1] =

244 
VPageR
[((
A
Ë>> 10Ë+ 2] = VPageR[((AË>> 10Ë+ 3] = &
CHR±r
[
r
][(
V
) << 12] - (A);

245 i‡(
CHRøm
[
r
])

246 
PPUCHRRAM
 |(15 << (
A
 >> 10));

248 
PPUCHRRAM
 &~(15 << (
A
 >> 10));

249 
	}
}

251 
	$£tchr8r
(
r
, 
uöt32
 
V
) {

252 
x
;

254 i‡(!
CHR±r
[
r
]) ;

255 
	`FCEUPPU_LöeUpd©e
();

256 
V
 &
CHRmask8
[
r
];

257 
x
 = 7; x >= 0; x--)

258 
VPageR
[
x
] = &
CHR±r
[
r
][
V
 << 13];

259 i‡(
CHRøm
[
r
])

260 
PPUCHRRAM
 |= (255);

262 
PPUCHRRAM
 = 0;

263 
	}
}

265 
	$£tchr1
(
uöt32
 
A
, uöt32 
V
) {

266 
	`£tchr1r
(0, 
A
, 
V
);

267 
	}
}

269 
	$£tchr2
(
uöt32
 
A
, uöt32 
V
) {

270 
	`£tchr2r
(0, 
A
, 
V
);

271 
	}
}

273 
	$£tchr4
(
uöt32
 
A
, uöt32 
V
) {

274 
	`£tchr4r
(0, 
A
, 
V
);

275 
	}
}

277 
	$£tchr8
(
uöt32
 
V
) {

278 
	`£tchr8r
(0, 
V
);

279 
	}
}

283 
	$£äèmem
(
uöt8
 *
p
, 
øm
, 
uöt32
 
b
) {

284 
	`FCEUPPU_LöeUpd©e
();

285 
v«∑ge
[
b
] = 
p
;

286 
PPUNTARAM
 &~(1 << 
b
);

287 i‡(
øm
)

288 
PPUNTARAM
 |1 << 
b
;

289 
	}
}

291 
	gmúr‹h¨d
 = 0;

292 
	$£tmúr‹w
(
a
, 
b
, 
c
, 
d
) {

293 
	`FCEUPPU_LöeUpd©e
();

294 
v«∑ge
[0] = 
NTARAM
 + 
a
 * 0x400;

295 
v«∑ge
[1] = 
NTARAM
 + 
b
 * 0x400;

296 
v«∑ge
[2] = 
NTARAM
 + 
c
 * 0x400;

297 
v«∑ge
[3] = 
NTARAM
 + 
d
 * 0x400;

298 
	}
}

300 
	$£tmúr‹
(
t
) {

301 
	`FCEUPPU_LöeUpd©e
();

302 i‡(!
múr‹h¨d
) {

303 
t
) {

304 
MI_H
:

305 
v«∑ge
[0] = v«∑ge[1] = 
NTARAM
; vnapage[2] = vnapage[3] = NTARAM + 0x400;

307 
MI_V
:

308 
v«∑ge
[0] = v«∑ge[2] = 
NTARAM
; vnapage[1] = vnapage[3] = NTARAM + 0x400;

310 
MI_0
:

311 
v«∑ge
[0] = v«∑ge[1] = v«∑ge[2] = v«∑ge[3] = 
NTARAM
;

313 
MI_1
:

314 
v«∑ge
[0] = v«∑ge[1] = v«∑ge[2] = v«∑ge[3] = 
NTARAM
 + 0x400;

317 
PPUNTARAM
 = 0xF;

319 
	}
}

321 
	$SëupC¨tMúr‹ög
(
m
, 
h¨d
, 
uöt8
 *
exåa
) {

322 i‡(
m
 < 4) {

323 
múr‹h¨d
 = 0;

324 
	`£tmúr‹
(
m
);

326 
v«∑ge
[0] = 
NTARAM
;

327 
v«∑ge
[1] = 
NTARAM
 + 0x400;

328 
v«∑ge
[2] = 
exåa
;

329 
v«∑ge
[3] = 
exåa
 + 0x400;

330 
PPUNTARAM
 = 0xF;

332 
múr‹h¨d
 = 
h¨d
;

333 
	}
}

336 
	$FCEU_Clo£Gíõ
() {

338 
gíõ°age
 = 0;

339 
	`FlushGíõRW
();

340 
VPageR
 = 
VPage
;

341 
	}
}

343 
	$FCEU_KûlGíõ
() {

344 
	}
}

	@fceux-am/src/cart.h

1 #i‚de‡
CART_H


2 
	#CART_H


	)

6 (*
	mPowî
)();

7 (*
	mRe£t
)();

8 (*
	mClo£
)();

9 
uöt8
 *
	mSaveGame
[4];

10 
uöt32
 
	mSaveGameLí
[4];

13 
	mmúr‹
;

18 
	mb©ãry
;

19 
	möes2
;

20 
	msubm≠≥r
;

21 
	mwøm_size
;

22 
	mb©ãry_wøm_size
;

23 
	mvøm_size
;

24 
	mb©ãry_vøm_size
;

25 
uöt8
 
	mMD5
[16];

26 
uöt32
 
	mCRC32
;

29 } 
	tC¨tInfo
;

31 
C¨tInfo
 *
cuºC¨tInfo
;

33 
FCEU_SaveGameSave
(
C¨tInfo
 *
LoˇlHWInfo
);

34 
FCEU_LﬂdGameSave
(
C¨tInfo
 *
LoˇlHWInfo
);

35 
FCEU_CÀ¨GameSave
(
C¨tInfo
 *
LoˇlHWInfo
);

37 
uöt8
 *
Page
[32], *
VPage
[8], *
MMC5SPRVPage
[8], *
MMC5BGVPage
[8];

39 
Re£tC¨tM≠pög
();

40 
SëupC¨tPRGM≠pög
(
chù
, 
uöt8
 *
p
, 
uöt32
 
size
, 
øm
);

41 
SëupC¨tCHRM≠pög
(
chù
, 
uöt8
 *
p
, 
uöt32
 
size
, 
øm
);

42 
SëupC¨tMúr‹ög
(
m
, 
h¨d
, 
uöt8
 *
exåa
);

44 
DECLFR
(
C¨tBROB
);

45 
DECLFR
(
C¨tBR
);

46 
DECLFW
(
C¨tBW
);

48 
uöt8
 
PRGøm
[32];

49 
uöt8
 
CHRøm
[32];

51 
uöt8
 *
PRG±r
[32];

52 
uöt8
 *
CHR±r
[32];

54 
uöt32
 
PRGsize
[32];

55 
uöt32
 
CHRsize
[32];

57 
uöt32
 
PRGmask2
[32];

58 
uöt32
 
PRGmask4
[32];

59 
uöt32
 
PRGmask8
[32];

60 
uöt32
 
PRGmask16
[32];

61 
uöt32
 
PRGmask32
[32];

63 
uöt32
 
CHRmask1
[32];

64 
uöt32
 
CHRmask2
[32];

65 
uöt32
 
CHRmask4
[32];

66 
uöt32
 
CHRmask8
[32];

68 
£çrg2
(
uöt32
 
A
, uöt32 
V
);

69 
£çrg4
(
uöt32
 
A
, uöt32 
V
);

70 
£çrg8
(
uöt32
 
A
, uöt32 
V
);

71 
£çrg16
(
uöt32
 
A
, uöt32 
V
);

72 
£çrg32
(
uöt32
 
A
, uöt32 
V
);

74 
£çrg2r
(
r
, 
uöt32
 
A
, uöt32 
V
);

75 
£çrg4r
(
r
, 
uöt32
 
A
, uöt32 
V
);

76 
£çrg8r
(
r
, 
uöt32
 
A
, uöt32 
V
);

77 
£çrg16r
(
r
, 
uöt32
 
A
, uöt32 
V
);

78 
£çrg32r
(
r
, 
uöt32
 
A
, uöt32 
V
);

80 
£tchr1r
(
r
, 
uöt32
 
A
, uöt32 
V
);

81 
£tchr2r
(
r
, 
uöt32
 
A
, uöt32 
V
);

82 
£tchr4r
(
r
, 
uöt32
 
A
, uöt32 
V
);

83 
£tchr8r
(
r
, 
uöt32
 
V
);

85 
£tchr1
(
uöt32
 
A
, uöt32 
V
);

86 
£tchr2
(
uöt32
 
A
, uöt32 
V
);

87 
£tchr4
(
uöt32
 
A
, uöt32 
V
);

88 
£tchr8
(
uöt32
 
V
);

90 
£tmúr‹
(
t
);

91 
£tmúr‹w
(
a
, 
b
, 
c
, 
d
);

92 
£äèmem
(
uöt8
 *
p
, 
øm
, 
uöt32
 
b
);

94 
	#MI_H
 0

	)

95 
	#MI_V
 1

	)

96 
	#MI_0
 2

	)

97 
	#MI_1
 3

	)

99 
gíõ°age
;

101 
FCEU_GíõPowî
();

103 
boﬁ
 
FCEU_O≥nGíõ
();

104 
FCEU_Clo£Gíõ
();

105 
FCEU_KûlGíõ
();

	@fceux-am/src/config.h

1 #i‚de‡
__CONFIG_H__


2 
	#__CONFIG_H__


	)

4 
	#HAS_GUI


	)

6 
	#SOUND_NONE
 0

	)

7 
	#SOUND_LQ
 1

	)

8 
	#SOUND_HQ
 2

	)

10 
	#PERF_LOW
 0

	)

11 
	#PERF_MIDDLE
 1

	)

12 
	#PERF_HIGH
 2

	)

14 #i‡
deföed
(
__ARCH_NATIVE
Ë|| deföed(
__PLATFORM_QEMU
)

15 
	#PERF_CONFIG
 
PERF_HIGH


	)

16 #ñi‡
deföed
(
__PLATFORM_NEMU
)

17 
	#PERF_CONFIG
 
PERF_MIDDLE


	)

19 
	#PERF_CONFIG
 
PERF_LOW


	)

22 #i‡
PERF_CONFIG
 =
PERF_HIGH


23 
	#NR_FRAMESKIP
 0

	)

24 
	#SOUND_CONFIG
 
SOUND_HQ


	)

25 #ñi‡
PERF_CONFIG
 =
PERF_MIDDLE


26 
	#NR_FRAMESKIP
 1

	)

27 
	#SOUND_CONFIG
 
SOUND_LQ


	)

29 
	#NR_FRAMESKIP
 2

	)

30 
	#SOUND_CONFIG
 
SOUND_NONE


	)

	@fceux-am/src/drawing.cpp

1 
	~"ty≥s.h
"

2 
	~"f˚u.h
"

3 
	~"døwög.h
"

4 
	~"video.h
"

5 
	~"drivî.h
"

7 
uöt8
 
	gF⁄t6x7
[792] =

106 
	$FixJ€dCh¨
(
uöt8
 
ch
)

108 
c
 = 
ch
 - 32;

109  (
c
 < 0 || c > 98) ? 0 : c;

110 
	}
}

112 
	gèrgë
[64][256];

114 
	$DøwTextTønsWH
(
uöt8
 *
de°
, 
width
, uöt8 *
ãxtmsg
, uöt8 
fgcﬁ‹
, 
max_w
, 
max_h
, 
b‹dî
)

116 
begöx
=2, 
x
=beginx;

117 
y
=2;

119 
	`mem£t
(
èrgë
, 0, 64 * 256);

121 
	`as£π
(
width
==256);

122 i‡(
max_w
 > 256) max_w = 256;

123 i‡(
max_h
 > 64) max_h = 64;

125 
ch
 = 0, 
wid
 = 0, 
nx
 = 0, 
ny
 = 0, 
max_x
 = 
x
, 
offs
 = 0;

126 
pixñ_cﬁ‹
;

127 ; *
ãxtmsg
; ++textmsg)

129 if(*
ãxtmsg
 == '\n')

132 
x
 = 
begöx
;

133 
y
 += 8;

136 
ch
 = 
	`FixJ€dCh¨
(*
ãxtmsg
);

137 
wid
 = 
F⁄t6x7
[
ch
 * 8];

139 i‡((
x
 + 
wid
Ë>()
width
)

142 
x
 = 
begöx
;

143 
y
 += 8;

146 
ny
 = 0;Çy < 7; ++ny)

148 
uöt8
 
d
 = 
F⁄t6x7
[
ch
 * 8 + 1 + 
ny
];

149 
nx
 = 0;Çx < 
wid
; ++nx)

151 
pixñ_cﬁ‹
 = (
d
 >> (7 - 
nx
)) & 1;

152 i‡(
pixñ_cﬁ‹
)

154 i‡(
y
 + 
ny
 >= 62)

157 
ãxtovîÊow
;

159 
èrgë
[
y
 + 
ny
][
x
 + 
nx
] = 2;

162 
èrgë
[
y
 + 
ny
][
x
 + 
nx
] = 1;

167 
x
 +
wid
;

168 i‡(
max_x
 < 
x
)

169 
max_x
 = 
x
;

172 
ãxtovîÊow
:

174 
max_x
 += 2;

175 i‡(
max_x
 > 
width
)

176 
max_x
 = 
width
;

177 
max_y
 = 
y
 + 
ny
 + 2;

178 i‡(
max_y
 > 62)

179 
max_y
 = 62;

182 
y
 = 0; y < 
max_y
; ++y)

184 
x
 = 0; x < 
max_x
; ++x)

186 
offs
 = 
y
 * 
width
 + 
x
;

187 
pixñ_cﬁ‹
 = 
èrgë
[
y
][
x
] * 100;

189 if(
b‹dî
>=1)

191 
x
>=–1Ë&& (
pixñ_cﬁ‹
 +
èrgë
[
y
][x-1]);

192 
x
<(
width
-1Ë&& (
pixñ_cﬁ‹
 +
èrgë
[
y
][x+1]);

193 
y
>=–1Ë&& (
pixñ_cﬁ‹
 +
èrgë
[y-1][
x
]);

194 
y
<(16 -1Ë&& (
pixñ_cﬁ‹
 +
èrgë
[y+1][
x
]);

196 if(
b‹dî
>=2)

198 
x
>=–1Ë&& (
pixñ_cﬁ‹
 +
èrgë
[
y
][x-1]*10);

199 
x
<(
width
-1Ë&& (
pixñ_cﬁ‹
 +
èrgë
[
y
][x+1]*10);

200 
y
>=–1Ë&& (
pixñ_cﬁ‹
 +
èrgë
[y-1][
x
]*10);

201 
y
<(16 -1Ë&& (
pixñ_cﬁ‹
 +
èrgë
[y+1][
x
]*10);

203 
x
>=–1Ë&& 
y
>=–1Ë&& (
pixñ_cﬁ‹
 +
èrgë
[y-1][x-1]);

204 
x
<(
width
-1Ë&& 
y
>=–1Ë&& (
pixñ_cﬁ‹
 +
èrgë
[y-1][x+1]);

205 
x
>=–1Ë&& 
y
<(16-1Ë&& (
pixñ_cﬁ‹
 +
èrgë
[y+1][x-1]);

206 
x
<(
width
-1Ë&& 
y
<(16-1Ë&& (
pixñ_cﬁ‹
 +
èrgë
[y+1][x+1]);

208 
x
>=–2Ë&& (
pixñ_cﬁ‹
 +
èrgë
[
y
][x-2]);

209 
x
<(
width
-2Ë&& (
pixñ_cﬁ‹
 +
èrgë
[
y
][x+2]);

210 
y
>=–2Ë&& (
pixñ_cﬁ‹
 +
èrgë
[y-2][
x
]);

211 
y
<(16 -2Ë&& (
pixñ_cﬁ‹
 +
èrgë
[y+2][
x
]);

214 if(
pixñ_cﬁ‹
 >= 200)

215 
de°
[
offs
] = 
fgcﬁ‹
;

216 if(
pixñ_cﬁ‹
 >= 10)

218 if(
de°
[
offs
] < 0xA0)

219 
de°
[
offs
] = 0xC1;

221 
de°
[
offs
] = 0xD1;

223 if(
pixñ_cﬁ‹
 > 0)

225 
de°
[
offs
] = 0xCF;

229 
	}
}

231 
	$DøwTextTøns
(
uöt8
 *
de°
, 
uöt32
 
width
, uöt8 *
ãxtmsg
, uöt8 
fgcﬁ‹
)

233 
	`DøwTextTønsWH
(
de°
, 
width
, 
ãxtmsg
, 
fgcﬁ‹
, 256, 16, 2);

234 
	}
}

	@fceux-am/src/drawing.h

1 
DøwTextLöeBG
(
uöt8
 *
de°
);

2 
DøwMesßge
(
boﬁ
 
bef‹eMovõ
);

3 
FCEU_DøwRec‹dögSètus
(
uöt8
* 
XBuf
);

4 
FCEU_DøwNumbîRow
(
uöt8
 *
XBuf
, *
n°©us
, 
cur
);

5 
DøwTextTøns
(
uöt8
 *
de°
, 
uöt32
 
width
, uöt8 *
ãxtmsg
, uöt8 
fgcﬁ‹
);

6 
DøwTextTønsWH
(
uöt8
 *
de°
, 
width
, uöt8 *
ãxtmsg
, uöt8 
fgcﬁ‹
, 
max_w
, 
max_h
, 
b‹dî
);

	@fceux-am/src/driver.h

1 #i‚de‡
__DRIVER_H_


2 
	#__DRIVER_H_


	)

4 
	~"ty≥s.h
"

5 
	~"gô.h
"

6 
	~"fûe.h
"

8 
EMUFILE_FILE
* 
FCEUD_UTF8_f°ªam
(c⁄° *
n
, c⁄° *
m
);

11 c⁄° *
FCEUD_GëCompûîSåög
();

13 
	#FCEUI_¥ötf
(
msg
Ë
	`FCEU_¥ötf
(msg "\n")

	)

16 
FCEUD_SëPÆëã
(
uöt8
 
ödex
, uöt8 
r
, uöt8 
g
, uöt8 
b
);

17 
FCEUD_GëPÆëã
(
uöt8
 
i
,uöt8 *
r
, uöt8 *
g
, uöt8 *
b
);

20 
FCEUD_PrötEº‹
(c⁄° *
s
);

21 
FCEUD_Mesßge
(c⁄° *
s
);

26 
FCEUI_Në∂aySèπ
(
∆oˇl
, 
divis‹
);

29 
FCEUI_Në∂aySt›
();

34 
FCEUD_SídD©a
(*
d©a
, 
uöt32
 
Àn
);

35 
FCEUD_RecvD©a
(*
d©a
, 
uöt32
 
Àn
);

38 
FCEUD_Në∂ayText
(
uöt8
 *
ãxt
);

41 
FCEUI_Në∂ayText
(
uöt8
 *
ãxt
);

46 
FCEUD_Nëw‹kClo£
();

48 
boﬁ
 
FCEUI_BegöWaveRec‹d
(c⁄° *
‚
);

49 
FCEUI_EndWaveRec‹d
();

51 
FCEUI_Re£tNES
();

52 
FCEUI_PowîNES
();

54 
FCEUI_NTSCSELHUE
();

55 
FCEUI_NTSCSELTINT
();

56 
FCEUI_NTSCDEC
();

57 
FCEUI_NTSCINC
();

58 
FCEUI_GëNTSCTH
(*
töt
, *
hue
);

59 
FCEUI_SëNTSCTH
(
boﬁ
 
í
, 
töt
, 
hue
);

61 
FCEUI_SëI≈ut
(
p‹t
, 
ESI
 
ty≥
, *
±r
, 
©åib
);

62 
FCEUI_SëI≈utFC
(
ESIFC
 
ty≥
, *
±r
, 
©åib
);

65 
FCEUI_SëI≈utFoursc‹e
(
boﬁ
 
©èchFoursc‹e
);

67 
boﬁ
 
FCEUI_GëI≈utFoursc‹e
();

69 
boﬁ
 
FCEUI_GëI≈utMi¸›h⁄e
();

71 
FCEUI_U£I≈utPª£t
(
¥e£t
);

81 
FCEUI_DißbÀS¥ôeLimô©i⁄
(
a
);

83 
FCEUI_SëRídîPœ√s
(
boﬁ
 
•rôes
, boﬁ 
bg
);

84 
FCEUI_GëRídîPœ√s
(
boﬁ
& 
•rôes
, boﬁ& 
bg
);

87 
FCEUGI
 *
FCEUI_LﬂdGame
(c⁄° *
«me
, 
OvîwrôeVidMode
, 
boﬁ
 
sûít
 = 
Ál£
);

91 
FCEUGI
 *
FCEUI_LﬂdGameVútuÆ
(c⁄° *
«me
, 
OvîwrôeVidMode
, 
boﬁ
 
sûít
 = 
Ál£
);

94 
boﬁ
 
FCEUI_Inôülize
();

97 
FCEUI_Emuœã
(
uöt8
 **, 
öt32
 **, int32 *, );

100 
FCEUI_Clo£Game
();

103 
FCEUI_Kûl
();

106 
FCEUI_SëGameGíõ
(
boﬁ
 
a
);

109 
FCEUI_SëVidSy°em
(
a
);

113 
FCEUI_SëRegi⁄
(
ªgi⁄
, 
nŸify
 = 1);

116 
FCEUI_GëCuºítVidSy°em
(*
¶°¨t
, *
¶íd
);

118 #ifde‡
FRAMESKIP


123 
FCEUI_FømeSkù
(
x
);

127 
FCEUI_SëRídîedLöes
(
¡scf
, 
¡s˛
, 
∑lf
, 
∑Œ
);

129 
FCEUI_SëU£rPÆëã
(
uöt8
 *
∑l
, 
nE¡rõs
);

134 
FCEUI_Sound
(
R©e
);

135 
FCEUI_SëSoundVﬁume
(
uöt32
 
vﬁume
);

136 
FCEUI_SëTrüngÀVﬁume
(
uöt32
 
vﬁume
);

137 
FCEUI_SëSqu¨e1Vﬁume
(
uöt32
 
vﬁume
);

138 
FCEUI_SëSqu¨e2Vﬁume
(
uöt32
 
vﬁume
);

139 
FCEUI_SëNoi£Vﬁume
(
uöt32
 
vﬁume
);

140 
FCEUI_SëPCMVﬁume
(
uöt32
 
vﬁume
);

142 
FCEUI_SëSoundQuÆôy
(
quÆôy
);

144 
FCEUD_SoundToggÀ
();

145 
FCEUD_SoundVﬁumeAdju°
();

147 
FCEUI_Sñe˘Sèã
(, );

148 
FCEUI_Sñe˘SèãNext
();

151 
FCEUI_SaveSèã
(c⁄° *
‚ame
, 
boﬁ
 
di•œy_mesßge
=
åue
);

152 
FCEUI_LﬂdSèã
(c⁄° *
‚ame
, 
boﬁ
 
di•œy_mesßge
=
åue
);

154 
FCEUD_SaveSèãAs
();

155 
FCEUD_LﬂdSèãFrom
();

159 
FCEUD_SëI≈ut
(
boﬁ
 
foursc‹e
, boﬁ 
mi¸›h⁄e
, 
ESI
 
p‹t0
, ESI 
p‹t1
, 
ESIFC
 
f˚xp
);

162 
FCEUD_MovõRec‹dTo
();

163 
FCEUD_MovõRïœyFrom
();

164 
FCEUD_LuaRunFrom
();

166 
öt32
 
FCEUI_GëDesúedFPS
();

167 
FCEUI_SaveS«pshŸ
();

168 
FCEUI_SaveS«pshŸAs
();

169 
	#FCEUI_Di•Mesßge
 
FCEU_Di•Mesßge


	)

171 
FCEUI_DecodePAR
(c⁄° *
code
, *
a
, *
v
, *
c
, *
ty≥
);

172 
FCEUI_DecodeGG
(c⁄° *
°r
, *
a
, *
v
, *
c
);

173 
FCEUI_AddChót
(c⁄° *
«me
, 
uöt32
 
addr
, 
uöt8
 
vÆ
, 
com∑ª
, 
ty≥
);

174 
FCEUI_DñChót
(
uöt32
 
which
);

175 
FCEUI_ToggÀChót
(
uöt32
 
which
);

176 
FCEUI_GlobÆToggÀChót
(
globÆ_íabÀ
);

178 
öt32
 
FCEUI_ChótSórchGëCou¡
();

179 
FCEUI_ChótSórchGëR™ge
(
uöt32
 
fú°
, uöt32 
œ°
, (*
ˇŒb
)(uöt32 
a
, 
uöt8
Üa°, uöt8 
cuºít
));

180 
	`FCEUI_ChótSórchGë
((*
ˇŒb
)(
uöt32
 
a
, 
uöt8
 
œ°
, uöt8 
cuºít
, *
d©a
), *data);

181 
	`FCEUI_ChótSórchBegö
();

182 
	`FCEUI_ChótSórchEnd
(
ty≥
, 
uöt8
 
v1
, uöt8 
v2
);

183 
	`FCEUI_Li°Chóts
((*
ˇŒb
)(*
«me
, 
uöt32
 
a
, 
uöt8
 
v
, 
com∑ª
, 
s
, 
ty≥
, *
d©a
), *data);

185 
	`FCEUI_GëChót
(
uöt32
 
which
, **
«me
, uöt32 *
a
, 
uöt8
 *
v
, *
com∑ª
, *
s
, *
ty≥
);

186 
	`FCEUI_SëChót
(
uöt32
 
which
, c⁄° *
«me
, 
öt32
 
a
, i¡32 
v
, 
com∑ª
,
s
, 
ty≥
);

188 
	`FCEUI_ChótSórchShowEx˛uded
();

189 
	`FCEUI_ChótSórchSëCuºítAsOrigöÆ
();

192 
	#FCEUIOD_ROMS
 0

193 
	#FCEUIOD_NV
 1

194 
	#FCEUIOD_STATES
 2

195 
	#FCEUIOD_FDSROM
 3

196 
	#FCEUIOD_SNAPS
 4

197 
	#FCEUIOD_CHEATS
 5

198 
	#FCEUIOD_MOVIES
 6

199 
	#FCEUIOD_MEMW
 7

200 
	#FCEUIOD_BBOT
 8

201 
	#FCEUIOD_MACRO
 9

202 
	#FCEUIOD_INPUT
 10

203 
	#FCEUIOD_LUA
 11

204 
	#FCEUIOD_AVI
 12

205 
	#FCEUIOD__COUNT
 13

206 

	)

207 
	`FCEUI_SëDúOvîride
(
which
, *
n
);

209 
	`FCEUI_MemDump
(
uöt16
 
a
, 
öt32
 
Àn
, (*
ˇŒb
)(uöt16á, 
uöt8
 
v
));

210 
uöt8
 
	`FCEUI_MemSa„Pìk
(
uöt16
 
A
);

211 
	`FCEUI_MemPoke
(
uöt16
 
a
, 
uöt8
 
v
, 
hl
);

212 
	`FCEUI_NMI
();

213 
	`FCEUI_IRQ
();

214 
uöt16
 
	`FCEUI_Dißs£mbÀ
(*
XA
, uöt16 
a
, *
°rögo
);

215 
	`FCEUI_GëIVe˘‹s
(
uöt16
 *
ª£t
, uöt16 *
úq
, uöt16 *
nmi
);

217 
uöt32
 
	`FCEUI_CRC32
(uöt32 
¸c
, 
uöt8
 *
buf
, uöt32 
Àn
);

219 
	`FCEUI_SëLowPass
(
q
);

221 
	`FCEUI_NSFSëVis
(
mode
);

222 
	`FCEUI_NSFCh™ge
(
amou¡
);

223 
	`FCEUI_NSFGëInfo
(
uöt8
 *
«me
, uöt8 *
¨ti°
, uöt8 *
c›yright
, 
maxÀn
);

225 
	`FCEUI_VSUniToggÀDIPVõw
();

226 
	`FCEUI_VSUniToggÀDIP
(
w
);

227 
uöt8
 
	`FCEUI_VSUniGëDIPs
();

228 
	`FCEUI_VSUniSëDIP
(
w
, 
°©e
);

229 
	`FCEUI_VSUniCoö
();

231 
	`FCEUI_FDSIn£π
();

233 
	`FCEUI_FDSSñe˘
();

235 
	`FCEUI_D©achSë
(c⁄° 
uöt8
 *
rcode
);

238 
	`FCEUI_Emuœti⁄Pau£d
();

240 
	`FCEUI_Emuœti⁄FømeSãµed
();

242 
	`FCEUI_CÀ¨Emuœti⁄FømeSãµed
();

244 
	`FCEUI_SëEmuœti⁄Pau£d
(
vÆ
);

246 
	`FCEUI_ToggÀEmuœti⁄Pau£
();

249 
boﬁ
 
	`FCEUD_ShouldDøwI≈utAids
();

252 
	`FCEUD_OnClo£Game
();

254 
	`FCEUI_FømeAdv™˚
();

255 
	`FCEUI_FømeAdv™˚End
();

258 
	`FCEUI_AviBegö
(c⁄° * 
‚ame
);

259 
	`FCEUI_AviEnd
();

260 
	`FCEUI_AviVideoUpd©e
(c⁄° * 
buf„r
);

261 
	`FCEUI_AviSoundUpd©e
(* 
soundD©a
, 
soundLí
);

262 
boﬁ
 
	`FCEUI_AviIsRec‹dög
();

263 
boﬁ
 
	`FCEUI_AviE«bÀHUDªc‹dög
();

264 
	`FCEUI_SëAviE«bÀHUDªc‹dög
(
boﬁ
 
íabÀ
);

265 
boﬁ
 
	`FCEUI_AviDißbÀMovõMesßges
();

266 
	`FCEUI_SëAviDißbÀMovõMesßges
(
boﬁ
 
dißbÀ
);

268 
	`FCEUD_AviRec‹dTo
();

269 
	`FCEUD_AviSt›
();

272 
	tTe°Comm™dSèã
(
	tcmd
);

274 
	`FCEUI_H™dÀEmuComm™ds
(
Te°Comm™dSèã
* 
ã°‚
);

278 
	eEMUSPEED_SET


280 
EMUSPEED_SLOWEST
=0,

281 
EMUSPEED_SLOWER
,

282 
EMUSPEED_NORMAL
,

283 
EMUSPEED_FASTER
,

284 
EMUSPEED_FASTEST


286 
	`FCEUD_SëEmuœti⁄S≥ed
(
cmd
);

287 
	`FCEUD_TurboOn
();

288 
	`FCEUD_TurboOff
();

289 
	`FCEUD_TurboToggÀ
();

291 
	`FCEUD_ShowSètusIc⁄
();

292 
	`FCEUD_ToggÀSètusIc⁄
();

293 
	`FCEUD_HideMíuToggÀ
();

296 
	`FCEUD_CmdO≥n
();

301 
	`FCEUD_DebugBªakpoöt
(
bp_num
);

304 
	`FCEUD_Tø˚In°ru˘i⁄
(
uöt8
 *
›code
, 
size
);

307 
	`FCEUD_Upd©eNTVõw
(
sˇ∆öe
, 
boﬁ
 
døwÆl
);

310 
	`FCEUD_Upd©ePPUVõw
(
sˇ∆öe
, 
døwÆl
);

313 
boﬁ
 
	`FCEUD_Pau£A·îPœyback
();

316 
	`FCEUD_VideoCh™ged
();

318 
	eEFCEUI


320 
FCEUI_STOPAVI
, 
FCEUI_QUICKSAVE
, 
FCEUI_QUICKLOAD
, 
FCEUI_SAVESTATE
, 
FCEUI_LOADSTATE
,

321 
FCEUI_NEXTSAVESTATE
,
FCEUI_PREVIOUSSAVESTATE
,
FCEUI_VIEWSLOTS
,

322 
FCEUI_STOPMOVIE
, 
FCEUI_RECORDMOVIE
, 
FCEUI_PLAYMOVIE
,

323 
FCEUI_OPENGAME
, 
FCEUI_CLOSEGAME
,

324 
FCEUI_TASEDITOR
,

325 
FCEUI_RESET
, 
FCEUI_POWER
, 
FCEUI_PLAYFROMBEGINNING
, 
FCEUI_EJECT_DISK
, 
FCEUI_SWITCH_DISK
, 
FCEUI_INSERT_COIN
,

326 
FCEUI_TOGGLERECORDINGMOVIE
, 
FCEUI_TRUNCATEMOVIE
, 
FCEUI_INSERT1FRAME
, 
FCEUI_DELETE1FRAME


330 
boﬁ
 
	`FCEU_IsVÆidUI
(
EFCEUI
 
ui
);

	@fceux-am/src/drivers/common/vidblit.cpp

21 
	~"../../f˚u.h
"

22 
	~"../../ty≥s.h
"

23 
	~"../../∑Àâe.h
"

24 
	~"../../utûs/mem‹y.h
"

26 
u8
 *
XBuf
;

27 
u8
 *
XDBuf
;

28 
∑l
 *
∑lo
;

30 
uöt32
 
	gCBM
[3];

31 
uöt32
 *
	g∑Àâëøn¶©e
=0;

32 
	gBµ
;

34 
boﬁ
 
	g∑ldìmphsw≠
 = 0;

36 
	$CÆcuœãShi·
(
uöt32
 *
CBM
, *
cshi·r
, *
cshi·l
)

38 
a
,
x
,
z
;

39 
cshi·l
[0]=cshiftl[1]=cshiftl[2]=-1;

40 
a
=0;a<3;a++)

42 
x
=0,
z
=0;x<32;x++)

44 if(
CBM
[
a
]&(1<<
x
))

46 if(
cshi·l
[
a
]==-1Ëcshi·l[a]=
x
;

47 
z
++;

50 
cshi·r
[
a
]=(8-
z
);

52 
	}
}

54 
	$InôBlôToHigh
(
b
, 
uöt32
 
rmask
, uöt32 
gmask
, uöt32 
bmask
, 
efx
, 
•ecfût
, 
•ecfûãr›t
)

56 
	`as£π
(
b
 == 4);

58 
Bµ
=
b
;

60 if(
Bµ
<=1 || Bpp>4)

64 
∑Àâëøn¶©e
=(
uöt32
*)
	`FCEU_dmÆloc
(256*4 + 512*4);

66 if(!
∑Àâëøn¶©e
)

70 
CBM
[0]=
rmask
;

71 
CBM
[1]=
gmask
;

72 
CBM
[2]=
bmask
;

74 
	}
}

76 
	$KûlBlôToHigh
()

78 if(
∑Àâëøn¶©e
)

80 
	`‰ì
(
∑Àâëøn¶©e
);

81 
∑Àâëøn¶©e
=
NULL
;

83 
	}
}

86 
	$SëPÆëãBlôToHigh
(
uöt8
 *
§c
)

88 
cshi·r
[3];

89 
cshi·l
[3];

91 
	`CÆcuœãShi·
(
CBM
, 
cshi·r
, 
cshi·l
);

93 
	`as£π
(
Bµ
 == 4);

94 
x
=0;x<256;x++)

96 
uöt32
 
r
=
§c
[
x
<<2];

97 
uöt32
 
g
=
§c
[(
x
<<2)+1];

98 
uöt32
 
b
=
§c
[(
x
<<2)+2];

99 
∑Àâëøn¶©e
[
x
]=(
r
<<
cshi·l
[0])|(
g
<<cshi·l[1])|(
b
<<cshiftl[2]);

103 if(
∑lo
)

105 
x
=0;x<512;x++)

107 
uöt32
 
r
=
∑lo
[
x
].r;

108 
uöt32
 
g
=
∑lo
[
x
].g;

109 
uöt32
 
b
=
∑lo
[
x
].b;

110 
∑Àâëøn¶©e
[256+
x
]=(
r
<<
cshi·l
[0])|(
g
<<cshi·l[1])|(
b
<<cshiftl[2]);

113 
	}
}

116 
u32
 
	$ModînDìmphCﬁ‹M≠
(
u8
* 
§c
, u8* 
§cbuf
, 
xsˇÀ
, 
ysˇÀ
)

118 
u8
 
pixñ
 = *
§c
;

121 
u32
 
cﬁ‹
 = 
∑Àâëøn¶©e
[
pixñ
];

123 
ofs
 = 
§c
-
§cbuf
;

124 
xofs
 = 
ofs
&255;

125 
yofs
 = 
ofs
>>8;

126 if(
xsˇÀ
!=1Ë
xofs
 /= xscale;

127 if(
ysˇÀ
!=1Ë
yofs
 /= yscale;

128 
ofs
 = 
xofs
+
yofs
*256;

131 
uöt8
 
dìmph
 = 
XDBuf
[
ofs
];

134 if(
dìmph
 != 0)

135 
cﬁ‹
 = 
∑Àâëøn¶©e
[256+(
pixñ
&0x3F)+
dìmph
*64];

137  
cﬁ‹
;

138 
	}
}

140 
	$Blô8ToHigh
(
uöt8
 *
§c
, uöt8 *
de°
, 
xr
, 
yr
, 
pôch
, 
xsˇÀ
, 
ysˇÀ
)

142 
x
,
y
;

144 
	`as£π
(
Bµ
 == 4);

145 
uöt32
 * 
de°32
 = (uöt32 *)
de°
;

146 
pöc
=
pôch
-(
xr
<<2);

147 
	`as£π
(
xr
 % 8 == 0);

148 
	`as£π
(
pöc
 % 4 == 0);

149 
y
=
yr
;y;y--,
§c
+=256-
xr
) {

150 
x
=
xr
;x;x-=8) {

156 
	#ma¸o
(Ë*
de°32
 ++ = 
∑Àâëøn¶©e
[*
§c
 ++]

	)

157 
	`ma¸o
(); macro(); macro(); macro();

158 
	`ma¸o
(); macro(); macro(); macro();

160 
de°32
+=(
pöc
 / 4);

162 
	}
}

	@fceux-am/src/drivers/common/vidblit.h

21 
InôBlôToHigh
(
b
, 
uöt32
 
rmask
, uöt32 
gmask
, uöt32 
bmask
, 
ìfx
, 
•ecfût
, 
•ecfûãr›t
);

22 
SëPÆëãBlôToHigh
(
uöt8
 *
§c
);

23 
KûlBlôToHigh
();

24 
Blô8ToHigh
(
uöt8
 *
§c
, uöt8 *
de°
, 
xr
, 
yr
, 
pôch
, 
xsˇÀ
, 
ysˇÀ
);

25 
Blô8To8
(
uöt8
 *
§c
, uöt8 *
de°
, 
xr
, 
yr
, 
pôch
, 
xsˇÀ
, 
ysˇÀ
, 
efx
, 
•ecül
);

27 
Blô32to24
(
uöt32
 *
§c
, 
uöt8
 *
de°
, 
xr
, 
yr
, 
dpôch
);

28 
Blô32to16
(
uöt32
 *
§c
, 
uöt16
 *
de°
, 
xr
, 
yr
, 
dpôch
,

29 
shi·r
[3], 
shi·l
[3]);

32 
u32
 
ModînDìmphCﬁ‹M≠
(
u8
* 
§c
, u8* 
§cbuf
, 
xsˇÀ
, 
ysˇÀ
);

	@fceux-am/src/drivers/sdl/dface.h

1 
	~"öput.h
"

3 
DoDrivîArgs
();

5 
InôSound
();

6 
WrôeSound
(
öt32
 *
Buf„r
, 
Cou¡
);

7 
KûlSound
();

8 
uöt32
 
GëMaxSound
();

9 
uöt32
 
GëWrôeSound
();

11 
Sûí˚Sound
(
s
);

13 
InôJoy°icks
();

14 
KûlJoy°icks
();

15 
uöt32
 *
GëJSOr
();

17 
InôVideo
(
FCEUGI
 *
gi
);

18 
KûlVideo
();

19 
BlôS¸ìn
(
uöt8
 *
XBuf
);

20 
LockC⁄sﬁe
();

21 
U∆ockC⁄sﬁe
();

22 
ToggÀFS
();

24 
LﬂdGame
(c⁄° *
∑th
);

27 
GiggÀs
();

28 
DoFun
();

30 
FCEUD_Nëw‹kC⁄√˘
();

	@fceux-am/src/drivers/sdl/input.cpp

21 
	~<klib-ma¸os.h
>

22 
	~"maö.h
"

23 
	~"dÁ˚.h
"

24 
	~"öput.h
"

26 
	~"sdl-video.h
"

27 
	~"sdl.h
"

29 
	~"../../f˚u.h
"

30 
	~"../../drivî.h
"

33 
	gNoWaôög
 = 1;

38 
	gU§I≈utTy≥
[
NUM_INPUT_DEVICES
];

39 
	gCurI≈utTy≥
[
NUM_INPUT_DEVICES
];

40 
	gc•ec
 = 0;

42 
gamëy≥
;

48 
	$I≈utU£rA˘iveFix
 ()

50 
x
;

51 
x
 = 0; x < 3; x++)

53 
CurI≈utTy≥
[
x
] = 
U§I≈utTy≥
[x];

55 
	}
}

61 
	$P¨£GII≈ut
 (
FCEUGI
 * 
gi
)

63 
gamëy≥
 = 
gi
->
ty≥
;

65 
CurI≈utTy≥
[0] = 
U§I≈utTy≥
[0];

66 
CurI≈utTy≥
[1] = 
U§I≈utTy≥
[1];

67 
CurI≈utTy≥
[2] = 
U§I≈utTy≥
[2];

69 i‡(
gi
->
öput
[0] >= 0)

71 
CurI≈utTy≥
[0] = 
gi
->
öput
[0];

73 i‡(
gi
->
öput
[1] >= 0)

75 
CurI≈utTy≥
[1] = 
gi
->
öput
[1];

77 i‡(
gi
->
öputfc
 >= 0)

79 
CurI≈utTy≥
[2] = 
gi
->
öputfc
;

81 
c•ec
 = 
gi
->
c•ecül
;

82 
	}
}

85 
Upd©eGamïad
 ();

87 
uöt32
 
	gJSªtu∫
 = 0;

89 
	~"keysˇn.h
"

90 
uöt8
 
	gg_keySèã
[256] = {};

95 *
	$GëKeybﬂrd
()

97  (*)(
g_keySèã
);

98 
	}
}

103 
	$KeybﬂrdComm™ds
 ()

106 
keycode
;

108 
	#KEYDOWN_MASK
 0x8000

	)

109 
AM_INPUT_KEYBRD_T
 
ev
 = 
	`io_ªad
(
AM_INPUT_KEYBRD
);

110 
	`as£π
(
ev
.
keycode
 < 256);

111 
keycode
 = 
ev
.keycode;

112 
g_keySèã
[
keycode
] = 
ev
.
keydown
;

113 i‡(
keycode
 =
AM_KEY_ESCAPE
 || keycodê=
AM_KEY_Q
Ë
	`hÆt
(0);

114 } 
keycode
 !
AM_KEY_NONE
);

117 
NoWaôög
 &= ~1;

118 
	}
}

125 
GëMou£D©a
 (
uöt32
 (&
d
)[3])

134 
	$DTe°Buâ⁄
 (
BuâC⁄fig
 * 
bc
)

136 
x
;

138 
x
 = 0; x < ()
bc
->
NumC
; x++)

140 i‡(
bc
->
BuâTy≥
[
x
] =
BUTTC_KEYBOARD
)

142 i‡(
g_keySèã
[
bc
->
Buâ⁄Num
[
x
]])

149 
	}
}

152 
	#MK
(
x
Ë{{
BUTTC_KEYBOARD
},{0},{
	`MKK
(x)},1}

	)

153 
	#MK2
(
x1
,
x2
Ë{{
BUTTC_KEYBOARD
},{0},{
	`MKK
(x1),MKK(x2)},2}

	)

154 
	#MKZ
(Ë{{0},{0},{0},0}

	)

155 
	#GPZ
(Ë{
	`MKZ
(), MKZ(), MKZ(), MKZ()}

	)

157 
BuâC⁄fig
 
	gGamePadC⁄fig
[4][10] = {

159 {
MK
 (
J
), MK (
K
), MK (
U
), MK (
I
),

160 
MK
 (
W
), MK (
S
), MK (
A
), MK (
D
), 
MKZ
 (), MKZ ()},

163 
GPZ
 (),

166 
GPZ
 (),

169 
GPZ
 ()

176 
	$Upd©eGamïad
()

178 
øpid
 = 0;

179 
uöt32
 
JS
 = 0;

180 
x
;

181 
wg
;

183 
øpid
 ^= 1;

186 
wg
 = 0; wg < 4; wg++)

189 
x
 = 0; x < 8; x++)

191 i‡(
	`DTe°Buâ⁄
 (&
GamePadC⁄fig
[
wg
][
x
]))

193 
JS
 |(1 << 
x
Ë<< (
wg
 << 3);

198 i‡(
øpid
)

200 
x
 = 0; x < 2; x++)

202 i‡(
	`DTe°Buâ⁄
 (&
GamePadC⁄fig
[
wg
][8 + 
x
]))

204 
JS
 |(1 << 
x
Ë<< (
wg
 << 3);

210 
JSªtu∫
 = 
JS
;

211 
	}
}

216 
	$FCEUD_Upd©eI≈ut
 ()

218 
x
;

219 
t
 = 0;

221 
	`KeybﬂrdComm™ds
 ();

223 
x
 = 0; x < 2; x++)

225 
CurI≈utTy≥
[
x
])

227 
SI_GAMEPAD
:

228 
t
 |= 1;

233 i‡(
t
 & 1)

235 
	`Upd©eGamïad
 ();

237 
	}
}

242 
	$InôI≈utI¡îÁ˚
 ()

244 *
I≈utDPå
;

246 
x
;

247 
©åib
;

249 
x
 = 0; x < 2; x++)

251 
©åib
 = 0;

252 
I≈utDPå
 = 0;

254 
CurI≈utTy≥
[
x
])

256 
SI_GAMEPAD
:

257 
I≈utDPå
 = &
JSªtu∫
;

260 
	`FCEUI_SëI≈ut
 (
x
, (
ESI
Ë
CurI≈utTy≥
[x], 
I≈utDPå
, 
©åib
);

263 
©åib
 = 0;

264 
I≈utDPå
 = 0;

266 
	`FCEUI_SëI≈utFC
 ((
ESIFC
Ë
CurI≈utTy≥
[2], 
I≈utDPå
, 
©åib
);

267 
	`FCEUI_SëI≈utFoursc‹e
 ((
e›ti⁄s
 & 
EO_FOURSCORE
) != 0);

268 
	}
}

275 
	$Upd©eI≈ut
 ()

277 
i
 = 0; i < 3; i++) {

278 
U§I≈utTy≥
[
i
] = (ò< 2Ë? (Ë
SI_GAMEPAD
 : (Ë
SIFC_NONE
;

282 
i
 = 0; i < 
GAMEPAD_NUM_DEVICES
; i++) {

283 
ty≥
 = (
i
 =0 ? 
BUTTC_KEYBOARD
 : 0);

285 
j
 = 0; j < 
GAMEPAD_NUM_BUTTONS
; j++) {

286 
GamePadC⁄fig
[
i
][
j
].
BuâTy≥
[0] = 
ty≥
;

287 
GamePadC⁄fig
[
i
][
j
].
Devi˚Num
[0] = 0;

288 
GamePadC⁄fig
[
i
][
j
].
Buâ⁄Num
[0] = 
DeÁu…GamePad
[i][j];

289 
GamePadC⁄fig
[
i
][
j
].
NumC
 = 1;

292 
	}
}

296 c⁄° *
	gGamePadNames
[
GAMEPAD_NUM_BUTTONS
] = { "A", "B", "Select", "Start",

299 c⁄° *
	gDeÁu…GamePadDevi˚
[
GAMEPAD_NUM_DEVICES
] =

301 c⁄° 
	gDeÁu…GamePad
[
GAMEPAD_NUM_DEVICES
][
GAMEPAD_NUM_BUTTONS
] =

302 { {
AM_KEY_J
, 
AM_KEY_K
, 
AM_KEY_U
, 
AM_KEY_I
,

303 
AM_KEY_W
, 
AM_KEY_S
, 
AM_KEY_A
, 
AM_KEY_D
, 0, 0},

	@fceux-am/src/drivers/sdl/input.h

1 #i‚de‡
_aosdfjk02fmasf


2 
	#_aosdfjk02fmasf


	)

4 
	#MAXBUTTCONFIG
 4

	)

6 
uöt8
 
	mBuâTy≥
[
MAXBUTTCONFIG
];

7 
uöt8
 
	mDevi˚Num
[
MAXBUTTCONFIG
];

8 
uöt16
 
	mBuâ⁄Num
[
MAXBUTTCONFIG
];

9 
uöt32
 
	mNumC
;

11 } 
	tBuâC⁄fig
;

14 
NoWaôög
;

15 
P¨£GII≈ut
(
FCEUGI
 *
GI
);

16 
Buâ⁄C⁄figBegö
();

17 
Buâ⁄C⁄figEnd
();

18 
C⁄figBuâ⁄
(*
ãxt
, 
BuâC⁄fig
 *
bc
);

19 
DWaôBuâ⁄
(c⁄° 
uöt8
 *
ãxt
, 
BuâC⁄fig
 *
bc
, 
wb
);

21 
	#BUTTC_KEYBOARD
 0x00

	)

22 
	#BUTTC_JOYSTICK
 0x01

	)

23 
	#BUTTC_MOUSE
 0x02

	)

25 
	#FCFGD_GAMEPAD
 1

	)

26 
	#FCFGD_POWERPAD
 2

	)

27 
	#FCFGD_HYPERSHOT
 3

	)

28 
	#FCFGD_QUIZKING
 4

	)

30 
	#SDL_FCEU_HOTKEY_EVENT
 
SDL_USEREVENT


	)

32 
InôI≈utI¡îÁ˚
();

33 
I≈utU£rA˘iveFix
();

35 
boﬁ
 
ª∂a˚P2SèπWôhMi¸›h⁄e
;

36 
BuâC⁄fig
 
GamePadC⁄fig
[4][10];

41 
In¸ó£Emuœti⁄S≥ed
();

42 
De¸ó£Emuœti⁄S≥ed
();

44 
DTe°Buâ⁄Joy
(
BuâC⁄fig
 *
bc
);

46 
FCEUD_Upd©eI≈ut
();

48 
Upd©eI≈ut
();

50 c⁄° * 
Buâ⁄Name
(c⁄° 
BuâC⁄fig
* 
bc
, 
which
);

	@fceux-am/src/drivers/sdl/keyscan.h

1 
	~<am.h
>

3 
	#MKK
(
k
Ë
AM_KEY_
##
	)
k

4 
	#MKK_COUNT
 256

	)

	@fceux-am/src/drivers/sdl/main.h

20 #i‚de‡
__FCEU_SDL_MAIN_H


21 
	#__FCEU_SDL_MAIN_H


	)

23 
	~"../../drivî.h
"

25 
e›ti⁄s
;

26 
	#EO_NO8LIM
 1

	)

27 
	#EO_SUBASE
 2

	)

28 
	#EO_CLIPSIDES
 8

	)

29 
	#EO_SNAPNAME
 16

	)

30 
	#EO_FOURSCORE
 32

	)

31 
	#EO_NOTHROTTLE
 64

	)

32 
	#EO_GAMEGENIE
 128

	)

33 
	#EO_PAL
 256

	)

34 
	#EO_LOWPASS
 512

	)

35 
	#EO_AUTOHIDE
 1024

	)

37 
_sound
;

38 
soundøã
;

39 
soundbufsize
;

41 
∑l_emuœti⁄
;

43 
CLImaö
(
¨gc
, *
¨gv
[]);

46 
	#NUM_INPUT_DEVICES
 3

	)

49 
	#GAMEPAD_NUM_DEVICES
 4

	)

50 
	#GAMEPAD_NUM_BUTTONS
 10

	)

51 c⁄° *
GamePadNames
[
GAMEPAD_NUM_BUTTONS
];

52 c⁄° *
DeÁu…GamePadDevi˚
[
GAMEPAD_NUM_DEVICES
];

53 c⁄° 
DeÁu…GamePad
[
GAMEPAD_NUM_DEVICES
][
GAMEPAD_NUM_BUTTONS
];

56 
	#POWERPAD_NUM_DEVICES
 2

	)

57 
	#POWERPAD_NUM_BUTTONS
 12

	)

58 c⁄° *
PowîPadNames
[
POWERPAD_NUM_BUTTONS
];

59 c⁄° *
DeÁu…PowîPadDevi˚
[
POWERPAD_NUM_DEVICES
];

60 c⁄° 
DeÁu…PowîPad
[
POWERPAD_NUM_DEVICES
][
POWERPAD_NUM_BUTTONS
];

63 
	#QUIZKING_NUM_BUTTONS
 6

	)

64 c⁄° *
QuizKögNames
[
QUIZKING_NUM_BUTTONS
];

65 c⁄° *
DeÁu…QuizKögDevi˚
;

66 c⁄° 
DeÁu…QuizKög
[
QUIZKING_NUM_BUTTONS
];

69 
	#HYPERSHOT_NUM_BUTTONS
 4

	)

70 c⁄° *
Hy≥rShŸNames
[
HYPERSHOT_NUM_BUTTONS
];

71 c⁄° *
DeÁu…Hy≥rShŸDevi˚
;

72 c⁄° 
DeÁu…Hy≥rShŸ
[
HYPERSHOT_NUM_BUTTONS
];

75 
	#MAHJONG_NUM_BUTTONS
 21

	)

76 c⁄° *
Mahj⁄gNames
[
MAHJONG_NUM_BUTTONS
];

77 c⁄° *
DeÁu…Mahj⁄gDevi˚
;

78 c⁄° 
DeÁu…Mahj⁄g
[
MAHJONG_NUM_BUTTONS
];

81 
	#TOPRIDER_NUM_BUTTONS
 8

	)

82 c⁄° *
T›RidîNames
[
TOPRIDER_NUM_BUTTONS
];

83 c⁄° *
DeÁu…T›RidîDevi˚
;

84 c⁄° 
DeÁu…T›Ridî
[
TOPRIDER_NUM_BUTTONS
];

87 
	#FTRAINER_NUM_BUTTONS
 12

	)

88 c⁄° *
FTøöîNames
[
FTRAINER_NUM_BUTTONS
];

89 c⁄° *
DeÁu…FTøöîDevi˚
;

90 c⁄° 
DeÁu…FTøöî
[
FTRAINER_NUM_BUTTONS
];

93 
	#FAMILYKEYBOARD_NUM_BUTTONS
 0x48

	)

94 c⁄° *
FamûyKeyBﬂrdNames
[
FAMILYKEYBOARD_NUM_BUTTONS
];

95 c⁄° *
DeÁu…FamûyKeyBﬂrdDevi˚
;

96 c⁄° 
DeÁu…FamûyKeyBﬂrd
[
FAMILYKEYBOARD_NUM_BUTTONS
];

	@fceux-am/src/drivers/sdl/sdl-icon.h

2 
	mwidth
;

3 
	mheight
;

4 
	mbyãs_≥r_pixñ
;

5 
uöt8
 
	mpixñ_d©a
[32 * 32 * 3 + 1];

6 } 
	gf˚u_∂ayic⁄
 = {

	@fceux-am/src/drivers/sdl/sdl-sound.cpp

24 
	~<klib-ma¸os.h
>

25 
	~"sdl.h
"

26 
	~"../../c⁄fig.h
"

29 
	gs_Buf„rSize
;

35 
	$InôSound
()

37 #i‡
SOUND_CONFIG
 =
SOUND_NONE


41 #i‡
SOUND_CONFIG
 =
SOUND_HQ


42 c⁄° 
soundøã
 = 44100;

43 c⁄° 
soundq
 = 1;

45 c⁄° 
soundøã
 = 11025;

46 c⁄° 
soundq
 = 0;

48 c⁄° 
soundvﬁume
 = 150;

49 c⁄° 
soundåüngÀvﬁume
 = 256;

50 c⁄° 
soundsqu¨e1vﬁume
 = 256;

51 c⁄° 
soundsqu¨e2vﬁume
 = 256;

52 c⁄° 
soundnoi£vﬁume
 = 256;

53 c⁄° 
soundpcmvﬁume
 = 256;

55 #i‡
SOUND_CONFIG
 !
SOUND_NONE


56 i‡(!
	`io_ªad
(
AM_AUDIO_CONFIG
).
¥e£¡
) {

57 
	`¥ötf
("WARNING: %†d€†nŸ suµ‹àaudio\n", 
	`TOSTRING
(
__ARCH__
));

61 c⁄° 
soundbufsize
 = 128;

62 
ßm∂es
 = 512;

63 
s_Buf„rSize
 = 
soundbufsize
 * 
soundøã
 / 1000;

64 i‡(
s_Buf„rSize
 < 
ßm∂es
 * 2) {

65 
s_Buf„rSize
 = 
ßm∂es
 * 2;

67 
	`io_wrôe
(
AM_AUDIO_CTRL
, 
soundøã
, 1, 
ßm∂es
);

70 
	`FCEUI_SëSoundVﬁume
(
soundvﬁume
);

71 
	`FCEUI_SëSoundQuÆôy
(
soundq
);

72 
	`FCEUI_Sound
(
soundøã
);

73 
	`FCEUI_SëTrüngÀVﬁume
(
soundåüngÀvﬁume
);

74 
	`FCEUI_SëSqu¨e1Vﬁume
(
soundsqu¨e1vﬁume
);

75 
	`FCEUI_SëSqu¨e2Vﬁume
(
soundsqu¨e2vﬁume
);

76 
	`FCEUI_SëNoi£Vﬁume
(
soundnoi£vﬁume
);

77 
	`FCEUI_SëPCMVﬁume
(
soundpcmvﬁume
);

79 
	}
}

85 
uöt32


86 
	$GëMaxSound
()

88 (
s_Buf„rSize
);

89 
	}
}

94 
uöt32


95 
	$GëWrôeSound
()

97 #i‡
SOUND_CONFIG
 !
SOUND_NONE


98 
cou¡
 = 
	`io_ªad
(
AM_AUDIO_STATUS
).cou¡ / (
öt16_t
);

99  
s_Buf„rSize
 - 
cou¡
;

103 
	}
}

109 
	$WrôeSound
(
öt32
 *
buf
,

110 
Cou¡
)

112 #i‡
SOUND_CONFIG
 !
SOUND_NONE


113 
öt16_t
 
buf16
[2048+512] = {};

114 
Emuœti⁄Pau£d
;

115 i‡(
Emuœti⁄Pau£d
 == 0) {

120 
	`as£π
(
Cou¡
 < ()
	`LENGTH
(
buf16
));

121 
i
;

122 
i
 = 0; i < 
Cou¡
; i ++) {

123 
buf16
[
i
] = 
buf
[i];

126 
Aªa
 
sbuf
;

127 
sbuf
.
°¨t
 = 
buf16
;

128 
‰ì
;

129 
Cou¡
) {

130 (
‰ì
 = 
	`GëWrôeSound
()) == 0);

131 
ƒ∂ay
 = (
‰ì
 > 
Cou¡
 ? Count : free);

132 
sbuf
.
íd
 = (
uöt16_t
 *)sbuf.
°¨t
 + 
ƒ∂ay
;

133 
	`io_wrôe
(
AM_AUDIO_PLAY
, 
sbuf
);

134 
Cou¡
 -
ƒ∂ay
;

135 
sbuf
.
°¨t
 = sbuf.
íd
;

139 
	}
}

145 
	$Sûí˚Sound
(
n
)

148 
	}
}

154 
	$KûlSound
()

156 
	`FCEUI_Sound
(0);

158 
	}
}

166 
	$FCEUD_SoundVﬁumeAdju°
(
n
)

168 
	}
}

174 
	$FCEUD_SoundToggÀ
()

176 
	}
}

	@fceux-am/src/drivers/sdl/sdl-throttle.cpp

4 
	~"sdl.h
"

5 
	~"thrŸée.h
"

7 
uöt64
 
	gLa°time
, 
	gNexâime
;

8 
öt32
 
	gdesúed_Âs
;

9 
	gInFøme
;

15 
	$Re‰eshThrŸéeFPS
()

17 
desúed_Âs
 = 
	`FCEUI_GëDesúedFPS
();

19 
La°time
=0;

20 
Nexâime
=0;

21 
InFøme
=0;

22 
	}
}

28 
	$S≥edThrŸée
()

30 
uöt64
 
time_À·
;

31 
uöt64
 
cur_time
 = 
	`FCEUD_GëTime
();

33 if(!
La°time
)

34 
La°time
 = 
cur_time
;

36 if(!
InFøme
)

38 
InFøme
 = 1;

39 
Nexâime
 = 
La°time
 + 1000 / 
desúed_Âs
;

42 if(
cur_time
 >
Nexâime
)

43 
time_À·
 = 0;

45 
time_À·
 = 
Nexâime
 - 
cur_time
;

47 if(
time_À·
 > 50)

49 
time_À·
 = 50;

54 
InFøme
 = 0;

57 
uöt64
 
now
;

58 (
now
 = 
	`FCEUD_GëTime
()Ë- 
cur_time
 < 
time_À·
)

61 if(!
InFøme
)

63 
La°time
 = 
now
;

67 
	}
}

	@fceux-am/src/drivers/sdl/sdl-video.cpp

21 
	~<klib-ma¸os.h
>

22 
	~"sdl.h
"

23 
	~"../comm⁄/vidblô.h
"

24 
	~"../../f˚u.h
"

25 
	~"../../vîsi⁄.h
"

26 
	~"../../video.h
"

28 
	~"../../utûs/mem‹y.h
"

30 
	~"sdl-ic⁄.h
"

31 
	~"dÁ˚.h
"

33 
	~"sdl-video.h
"

34 
	~"../../c⁄fig.h
"

36 
	gs_§ídlöe
;

38 c⁄° 
	gs_éöes
 = 240;

39 
	gs_öôed
;

41 
	#s_˛ùSides
 0

	)

43 
	#NWIDTH
 (256 - (
s_˛ùSides
 ? 16 : 0))

	)

44 
	#NOFFSET
 (
s_˛ùSides
 ? 8 : 0)

	)

46 
	gs_∑Àâîe‰esh
;

49 
	$KûlVideo
()

52 if(
s_öôed
 == 0)

57 
	`KûlBlôToHigh
();

59 
s_öôed
 = 0;

61 
	}
}

64 
	$FCEUD_VideoCh™ged
()

66 
PAL
 = 0;

67 
	}
}

74 
	$InôVideo
(
FCEUGI
 *
gi
)

76 
	`FCEUI_¥ötf
("Initializing video...");

82 
s_öôed
 = 1;

84 
	`FCEUI_SëShowFPS
(
åue
);

86 
s_∑Àâîe‰esh
 = 1;

89 
	`InôBlôToHigh
(4, 0x00ff0000, 0x0000ff00, 0x000000ff, 0, 0, 0);

91 
	}
}

94 
uöt8
 
	mr
, 
	mg
, 
	mb
, 
	munu£d
;

95 } 
	gs_psdl
[256];

101 
	$FCEUD_SëPÆëã
(
uöt8
 
ödex
,

102 
uöt8
 
r
,

103 
uöt8
 
g
,

104 
uöt8
 
b
)

106 
s_psdl
[
ödex
].
r
 =Ñ;

107 
s_psdl
[
ödex
].
g
 = g;

108 
s_psdl
[
ödex
].
b
 = b;

110 
s_∑Àâîe‰esh
 = 1;

111 
	}
}

113 
uöt32_t
 
	gˇnvas
[
NWIDTH
 * 240];

119 
	$BlôS¸ìn
(
uöt8
 *
XBuf
)

122 if(
s_∑Àâîe‰esh
) {

123 
	`SëPÆëãBlôToHigh
((
uöt8
*)
s_psdl
);

124 
s_∑Àâîe‰esh
 = 0;

128 
XBuf
 +
s_§ídlöe
 * 256;

132 
	`Blô8ToHigh
(
XBuf
 + 
NOFFSET
, (
uöt8
 *)
ˇnvas
, 
NWIDTH
, 
s_éöes
, NWIDTH * 4, 1, 1);

134 
s¸w
 = 
NWIDTH
;

138 #ifde‡
HAS_GUI


139 
x
 = (
	`io_ªad
(
AM_GPU_CONFIG
).
width
 - 256) / 2;

140 
y
 = (
	`io_ªad
(
AM_GPU_CONFIG
).
height
 - 240) / 2;

141 
	`io_wrôe
(
AM_GPU_FBDRAW
, 
x
, 
y
, 
ˇnvas
, 
s¸w
, 
s_éöes
, 
åue
);

143 
	`¥ötf
("\033[0;0H");

144 
y
 = 0; y < 
s_éöes
; y += 4) {

146 
x
 = 0; x < 
s¸w
; x += 2) {

147 
uöt32_t
 
cﬁ‹
 = 
ˇnvas
[
y
 * 256 + 
x
];

148 c⁄° *
li°
 = "o. *O0@#";

149 
c
 = 
li°
[
cﬁ‹
 / 0x222222u];

150 
	`putch
(
c
);

152 
	`putch
('\n');

155 
	}
}

	@fceux-am/src/drivers/sdl/sdl-video.h

1 #i‚de‡
__FCEU_SDL_VIDEO_H


2 
	#__FCEU_SDL_VIDEO_H


	)

4 
uöt32
 
PtoV
(
uöt16
 
x
, uöt16 
y
);

5 
boﬁ
 
FCEUD_ShouldDøwI≈utAids
();

6 
boﬁ
 
FCEUI_AviDißbÀMovõMesßges
();

7 
boﬁ
 
FCEUI_AviE«bÀHUDªc‹dög
();

8 
FCEUI_SëAviE«bÀHUDªc‹dög
(
boﬁ
 
íabÀ
);

9 
boﬁ
 
FCEUI_AviDißbÀMovõMesßges
();

10 
FCEUI_SëAviDißbÀMovõMesßges
(
boﬁ
 
dißbÀ
);

	@fceux-am/src/drivers/sdl/sdl.cpp

1 
	~<klib-ma¸os.h
>

2 
	~"maö.h
"

3 
	~"thrŸée.h
"

5 
	~"../../f˚u.h
"

6 
	~"../../vîsi⁄.h
"

8 
	~"öput.h
"

9 
	~"dÁ˚.h
"

11 
	~"sdl.h
"

12 
	~"sdl-video.h
"

14 
	~"../../ty≥s.h
"

15 
	~"../../c⁄fig.h
"

17 
	gi¶ﬂded
;

19 
boﬁ
 
	gturbo
 = 
Ál£
;

21 
	ge›ti⁄s
=0;

23 
	göôed
 = 0;

25 
DrivîKûl
();

26 
DrivîInôülize
(
FCEUGI
 *
gi
);

27 
uöt64
 
FCEUD_GëTime
();

28 
	ggamëy≥
 = 0;

30 
	g∑l_emuœti⁄
;

31 
	gdídy
;

33 
boﬁ
 
	gsw≠Duty
;

44 
	$LﬂdGame
(c⁄° *
∑th
)

46 i‡(
i¶ﬂded
){

47 
	`Clo£Game
();

49 if(!
	`FCEUI_LﬂdGame
(
∑th
, 1)) {

53 
	`P¨£GII≈ut
(
GameInfo
);

54 
	`Re‰eshThrŸéeFPS
();

56 if(!
	`DrivîInôülize
(
GameInfo
)) {

61 
	`FCEUI_SëRegi⁄
(0);

63 
i¶ﬂded
 = 1;

66 
	}
}

72 
	$Clo£Game
()

74 if(!
i¶ﬂded
) {

78 
	`FCEUI_Clo£Game
();

80 
	`DrivîKûl
();

81 
i¶ﬂded
 = 0;

82 
GameInfo
 = 0;

84 
	`I≈utU£rA˘iveFix
();

86 
	}
}

88 
FCEUD_Upd©e
(
uöt8
 *
XBuf
, 
öt32
 *
Buf„r
, 
Cou¡
);

90 
	$DoFun
(
‰ameskù
, 
≥riodic_ßves
)

92 
uöt8
 *
gfx
;

93 
öt32
 *
sound
;

94 
öt32
 
ssize
 = 0;

95 
fskùc
 = 0;

96 
›au£
 = 0;

98 #ifde‡
FRAMESKIP


99 
fskùc
 = (fskù¯+ 1Ë% (
‰ameskù
 + 1);

102 if(
NoWaôög
) {

103 
gfx
 = 0;

105 
	`FCEUI_Emuœã
(&
gfx
, &
sound
, &
ssize
, 
fskùc
);

106 
	`FCEUD_Upd©e
(
gfx
, 
sound
, 
ssize
);

108 if(
›au£
!=
	`FCEUI_Emuœti⁄Pau£d
()) {

109 
›au£
=
	`FCEUI_Emuœti⁄Pau£d
();

112 
	}
}

119 
	$DrivîInôülize
(
FCEUGI
 *
gi
)

121 if(
	`InôVideo
(
gi
) < 0)  0;

122 
öôed
|=4;

124 if(
	`InôSound
())

125 
öôed
|=1;

127 
e›ti⁄s
 &~
EO_FOURSCORE
;

129 
	`InôI≈utI¡îÁ˚
();

131 
	}
}

137 
	$DrivîKûl
()

139 if(
öôed
&4)

140 
	`KûlVideo
();

141 
öôed
=0;

142 
	}
}

149 
	$FCEUD_Upd©e
(
uöt8
 *
XBuf
,

150 
öt32
 *
Buf„r
,

151 
Cou¡
)

153 
ocou¡
 = 
Cou¡
;

154 if(
Cou¡
) {

155 
öt32
 
ˇn
=
	`GëWrôeSound
();

156 
uÊow
=0;

157 
öt32
 
tmpˇn
;

160 if(
ˇn
 >()
	`GëMaxSound
()Ë
uÊow
=1;

162 if(
ˇn
 > 
Cou¡
) can=Count;

163 
uÊow
=0;

165 
	`WrôeSound
(
Buf„r
,
ˇn
);

168 
tmpˇn
 = 
	`GëWrôeSound
();

170 if((
tmpˇn
 < 
Cou¡
*9/10Ë&& !
uÊow
) {

171 if(
XBuf
 && (
öôed
&4Ë&& !(
NoWaôög
 & 2))

172 
	`BlôS¸ìn
(
XBuf
);

173 
Buf„r
+=
ˇn
;

174 
Cou¡
-=
ˇn
;

175 if(
Cou¡
) {

176 if(
NoWaôög
) {

177 
ˇn
=
	`GëWrôeSound
();

178 if(
Cou¡
>
ˇn
) Count=can;

179 
	`WrôeSound
(
Buf„r
,
Cou¡
);

181 
Cou¡
>0) {

182 
	`WrôeSound
(
Buf„r
,(
Cou¡
<
ocou¡
) ? Count : ocount);

183 
Cou¡
 -
ocou¡
;

192 if(!
NoWaôög
 && (
uÊow
 || 
tmpˇn
 >(
Cou¡
 * 9 / 5))) {

193 if(
Cou¡
 > 
tmpˇn
) Count=tmpcan;

194 
tmpˇn
 > 0) {

196 
	`WrôeSound
(
Buf„r
, (
Cou¡
 <
tmpˇn
)?Count :Åmpcan);

197 
tmpˇn
 -
Cou¡
;

201 if(!
NoWaôög
 && (!(
e›ti⁄s
&
EO_NOTHROTTLE
Ë|| 
	`FCEUI_Emuœti⁄Pau£d
())) {

202 
	`S≥edThrŸée
()Ë{ 
	`FCEUD_Upd©eI≈ut
(); }

204 if(
XBuf
 && (
öôed
&4)) {

205 
	`BlôS¸ìn
(
XBuf
);

208 
	`FCEUD_Upd©eI≈ut
();

209 
	}
}

214 
EMUFILE_FILE
* 
	$FCEUD_UTF8_f°ªam
(c⁄° *
‚
, c⁄° *
m
)

216 #ifde‡
__NO_FILE_SYSTEM__


217 
EMUFILE_FILE
 *
p
 = (EMUFILE_FILE*)
	`mÆloc
((EMUFILE_FILE));

218 
p
->
	`›í
(
‚
, 
m
);

219  
p
;

221  
√w
 
	`EMUFILE_FILE
(
‚
, 
m
);

223 
	}
}

225 
	$Upd©eEMUC‹e
()

227 
¡sccﬁ
 = 0, 
¡s˘öt
 = 56, 
¡schue
 = 72, 
°¨t
 = 0, 
íd
 = 239;

228 
	`FCEUI_SëNTSCTH
(
¡sccﬁ
, 
¡s˘öt
, 
¡schue
);

230 
	`FCEUI_SëRegi⁄
(0);

232 
	`FCEUI_DißbÀS¥ôeLimô©i⁄
(1);

234 #i‡
DOING_SCANLINE_CHECKS


235 
i
 = 0; i < 2; 
x
++) {

236 if(
§ídlöev
[
x
]<0 || srendlinev[x]>239) srendlinev[x]=0;

237 if(
îídlöev
[
x
]<
§ídlöev
[x] ||Érendlinev[x]>239)Érendlinev[x]=239;

241 
	`FCEUI_SëRídîedLöes
(
°¨t
 + 8, 
íd
 - 8, start,Énd);

242 
	}
}

247 
	$FCEUD_Tø˚In°ru˘i⁄
() {

249 
	}
}

252 
	gnoGui
 = 1;

254 
	gKûlFCEUX⁄Føme
 = 0;

259 #ifde‡
__NO_FILE_SYSTEM__


260 
	$maö
(c⁄° *
rom«me
)

262 
	$maö
(
¨gc
, *
¨gv
[])

265 
	`i€_öô
();

267 #i‚de‡
__NO_FILE_SYSTEM__


268 c⁄° *
rom«me
;

269 i‡(
¨gc
 < 2) {

270 
rom«me
 = "mario3.nes";

271 
	`¥ötf
("NÿROM s≥cifõd. Dófu…Åÿ%s\n", 
rom«me
);

273 
rom«me
 = 
¨gv
[1];

276 
fuŒ∑th
[128];

277 i‡(
rom«me
[0] != '/') {

278 
	`•rötf
(
fuŒ∑th
, "/sh¨e/games/√s/%s", 
rom«me
);

279 
rom«me
 = 
fuŒ∑th
;

283 
	`¥ötf
("ROM i†%s\n", 
rom«me
);

285 
îr‹
;

287 
	`FCEUD_Mesßge
("Sèπög " 
FCEU_NAME_AND_VERSION
 "...\n");

290 
îr‹
 = 
	`FCEUI_Inôülize
();

291 if(
îr‹
 != 1) {

296 
	`Upd©eI≈ut
();

299 
	`Upd©eEMUC‹e
();

302 
îr‹
 = 
	`LﬂdGame
(
rom«me
);

303 if(
îr‹
 != 1) {

304 
	`DrivîKûl
();

308 
≥riodic_ßves
 = 0;

311 
GameInfo
)

313 
	`DoFun
(
NR_FRAMESKIP
, 
≥riodic_ßves
);

315 
	`Clo£Game
();

318 
	`FCEUI_Kûl
();

320 
	}
}

325 
uöt64


326 
	$FCEUD_GëTime
()

328  
	`io_ªad
(
AM_TIMER_UPTIME
).
us
 / 1000;

329 
	}
}

334 
uöt32


335 
	$FCEUD_GëTimeFªq
()

339 
	}
}

348 
	$FCEUD_Mesßge
(c⁄° *
ãxt
)

350 
	`¥ötf
("%s", 
ãxt
);

351 
	}
}

361 
	$FCEUD_PrötEº‹
(c⁄° *
îr‹msg
)

363 
	`¥ötf
("%s\n", 
îr‹msg
);

364 
	}
}

369 
	#DUMMY
(
__f
) \

370 
	`__f
() {\

371 
	`¥ötf
("%s\n", #__f);\

372 
	`FCEU_Di•Mesßge
("Not implemented.");\

373 }

	)

374 
	$DUMMY
(
FCEUD_HideMíuToggÀ
)

375 
	$DUMMY
(
FCEUD_MovõRïœyFrom
)

376 
	$DUMMY
(
FCEUD_ToggÀSètusIc⁄
)

377 
	$DUMMY
(
FCEUD_AviRec‹dTo
)

378 
	$DUMMY
(
FCEUD_AviSt›
)

379 
	$FCEUI_AviVideoUpd©e
(c⁄° * 
buf„r
Ë{ 
	}
}

380 
	$FCEUD_ShowSètusIc⁄
(Ë{ 0;
	}
}

381 
boﬁ
 
	$FCEUI_AviIsRec‹dög
(Ë{ 
Ál£
;
	}
}

382 
	$FCEUI_U£I≈utPª£t
(
¥e£t
Ë{ 
	}
}

383 
boﬁ
 
	$FCEUD_Pau£A·îPœyback
(Ë{  
Ál£
; 
	}
}

385 
	$FCEUD_TurboOn
 (Ë{ 
NoWaôög
|1; 
	}
}

386 
	$FCEUD_TurboOff
 (Ë{ 
NoWaôög
&=~1; 
	}
}

387 
	$FCEUD_TurboToggÀ
(Ë{ 
NoWaôög
^1; 
	}
}

	@fceux-am/src/drivers/sdl/sdl.h

1 #i‚de‡
__FCEU_SDL_H


2 
	#__FCEU_SDL_H


	)

4 
	~"maö.h
"

5 
	~"dÁ˚.h
"

6 
	~"öput.h
"

10 
	#PERIODIC_SAVE_INTERVAL
 5000

11 

	)

12 c⁄° 
	gINVALID_STATE
 = 99;

14 
noGui
;

15 
i¶ﬂded
;

17 
dídy
;

18 
∑l_emuœti⁄
;

19 
boﬁ
 
sw≠Duty
;

21 
LﬂdGame
(c⁄° *
∑th
);

22 
Clo£Game
();

23 
FCEUD_Upd©e
(
uöt8
 *
XBuf
, 
öt32
 *
Buf„r
, 
Cou¡
);

24 
uöt64
 
FCEUD_GëTime
();

	@fceux-am/src/drivers/sdl/throttle.h

1 
Re‰eshThrŸéeFPS
();

2 
S≥edThrŸée
();

	@fceux-am/src/emufile.cpp

23 
	~"emufûe.h
"

25 #ifde‡
__NO_FILE_SYSTEM__


27 
	~"roms.h
"

29 
	gEMUFILE_FILE
::
	$›í
(c⁄° * 
‚ame
, c⁄° * 
mode
) {

30 
rom
 *
cur
 = &
roms
[0];

31 
found
 = 0;

32 
i
 = 1; i < 
ƒoms
; i++) {

33 i‡(
	`°rcmp
(
roms
[
i
].
«me
, 
‚ame
) == 0) {

34 
cur
 = &
roms
[
i
];

35 
found
 = 1;

39 i‡(
found
Ë{ 
	`¥ötf
("Found ROM '%s'\n", 
‚ame
); }

40 { 
	`¥ötf
("ROM '%s'ÇŸ found, usög deÁu… ROM '%s'\n", 
‚ame
, 
cur
->
«me
); }

42 
this
->
d©a
 = (
u8
 *)
cur
->
body
;

43 
this
->
fûesize
 = ()*(
cur
->
size
);

44 
this
->
cuΩos
 = 0;

45 
this
->
‚ame
 = 
cur
->
«me
;

46 
	`°r˝y
(
this
->
mode
,mode);

47 
this
->
Áûbô
 = 
Ál£
;

48 
	}
}

52 
	gEMUFILE_FILE
::
	$›í
(c⁄° * 
‚ame
, c⁄° * 
mode
)

54 
Â
 = 
	`f›í
(
‚ame
,
mode
);

55 if(!
Â
)

57 
Áûbô
 = 
åue
;

59 
this
->
‚ame
 = fname;

60 
	`°r˝y
(
this
->
mode
,mode);

61 
	}
}

	@fceux-am/src/emufile.h

25 #i‚de‡
EMUFILE_H


26 
	#EMUFILE_H


	)

28 
	~<°d¨g.h
>

29 
	~"ty≥s.h
"

31 #i‚de‡
SEEK_SET


32 íum {
	mSEEK_SET
, 
	mSEEK_CUR
, 
	mSEEK_END
};

35 ˛as†
	cEMUFILE
 {

36 
	m¥Ÿe˘ed
:

37 
boﬁ
 
Áûbô
;

39 
	mpublic
:

40 
	$EMUFILE
()

41 : 
	$Áûbô
(
Ál£
)

45 
vútuÆ
 ~
	$EMUFILE
(Ë{
	}
}

47 
boﬁ
 
	$Áû
(
boﬁ
 
un£t
=
Ál£
Ë{ boﬁ 
ªt
 = 
Áûbô
; if(un£tË
	`unÁû
(); Ñë; 
	}
}

48 
	$unÁû
(Ë{ 
Áûbô
=
Ál£
; 
	}
}

50 
boﬁ
 
	$eof
(Ë{  
	`size
()==
	`·ñl
(); 
	}
}

52 
	gpublic
:

54 
vútuÆ
 
boﬁ
 
is_›í
() = 0;

56 
vútuÆ
 
Ârötf
(c⁄° *
f‹m©
, ...) = 0;

58 
vútuÆ
 
fgëc
() = 0;

59 
vútuÆ
 
Âutc
(
c
) = 0;

61 
vútuÆ
 
size_t
 
_‰ód
(c⁄° *
±r
, size_à
byãs
) = 0;

66 
vútuÆ
 
fwrôe
(c⁄° *
±r
, 
size_t
 
byãs
) = 0;

68 
vútuÆ
 
f£ek
(
off£t
, 
‹igö
) = 0;

70 
vútuÆ
 
·ñl
() = 0;

71 
vútuÆ
 
size
() = 0;

72 
vútuÆ
 
fÊush
() = 0;

75 #ifde‡
__NO_FILE_SYSTEM__


77 ˛as†
	cEMUFILE_FILE
 {

78 
	m¥Ÿe˘ed
:

79 
u8
* 
d©a
;

80 c⁄° * 
	m‚ame
;

81 
	mmode
[16];

82 
boﬁ
 
	mÁûbô
;

84 
	m¥iv©e
:

85 
cuΩos
;

86 
	mfûesize
;

88 
	mpublic
:

90 
›í
(c⁄° * 
‚ame
, c⁄° * 
mode
);

92 
	$EMUFILE_FILE
(c⁄° * 
‚ame
, c⁄° * 
mode
Ë{ 
	`›í
(fname,mode); }

94 ~
	$EMUFILE_FILE
(Ë{ 
	}
}

96 
boﬁ
 
	$is_›í
(Ë{  
åue
; 
	}
}

97 
	$Ârötf
(c⁄° *
f‹m©
, ...Ë{  0; 
	}
};

99 
	$fgëc
() {

100 i‡(
	`size
()==
	`·ñl
()) {

101 
	`¥ötf
("%s: C™ÇŸÑódÖas†EOF\n", 
__func__
);

104 
ªt
 = ()
d©a
[
cuΩos
];

105 
cuΩos
 ++;

106  
ªt
;

107 
	}
}

109 
	$Âutc
(
c
) {

110 
	`as£π
(0);

112 
	}
}

114 
size_t
 
	$_‰ód
(c⁄° *
±r
, 
size_t
 
byãs
){

115 
size_t
 
ªmaö
 = 
fûesize
 - 
cuΩos
;

116 
size_t
 
ªt
 = (
byãs
 <
ªmaö
 ? bytes :Ñemain);

117 
	`mem˝y
(
c⁄°_ˇ°
<*>(
±r
), 
d©a
 + 
cuΩos
, 
ªt
);

118 
cuΩos
 +
ªt
;

119 if(
ªt
 < 
byãs
)

120 
Áûbô
 = 
åue
;

121  
ªt
;

122 
	}
}

124 
	$fwrôe
(c⁄° *
±r
, 
size_t
 
byãs
){

125 
Áûbô
 = 
åue
;

126 
	`as£π
(0);

127 
	}
}

129 
	$f£ek
(
off£t
, 
‹igö
) {

130 
‹igö
) {

131 
SEEK_END
: 
cuΩos
 = 
fûesize
; ;

132 
SEEK_SET
: 
cuΩos
 = 
off£t
; ;

133 
SEEK_CUR
: 
cuΩos
 +
off£t
; ;

135 i‡(
cuΩos
 < 0) curpos = 0;

136 i‡(
cuΩos
 > 
fûesize
) curpos = filesize;

138 
	}
}

140 
	$·ñl
(Ë{  
cuΩos
; 
	}
}

141 
	$size
(Ë{  
fûesize
; 
	}
}

142 
	$fÊush
(Ë{ 
	}
}

148 ˛as†
	cEMUFILE_FILE
 : 
public
 
EMUFILE
 {

149 
¥Ÿe˘ed
:

150 
FILE
* 
Â
;

151 c⁄° * 
	m‚ame
;

152 
	mmode
[16];

154 
	m¥iv©e
:

155 
›í
(c⁄° * 
‚ame
, c⁄° * 
mode
);

157 
	mpublic
:

160 
	$EMUFILE_FILE
(c⁄° * 
‚ame
, c⁄° * 
mode
Ë{ 
	`›í
(fname,mode); }

162 
vútuÆ
 ~
	$EMUFILE_FILE
() {

163 if(
NULL
 !
Â
)

164 
	`f˛o£
(
Â
);

165 
	}
}

167 
boﬁ
 
	$is_›í
(Ë{  
Â
 !
NULL
; 
	}
}

169 
vútuÆ
 
	$Ârötf
(c⁄° *
f‹m©
, ...) {

170 
va_li°
 
¨g±r
;

171 
	`va_°¨t
(
¨g±r
, 
f‹m©
);

172 
ªt
 = ::
	`vÂrötf
(
Â
, 
f‹m©
, 
¨g±r
);

173 
	`va_íd
(
¨g±r
);

174  
ªt
;

175 
	}
};

177 
vútuÆ
 
	$fgëc
() {

178  ::
	`fgëc
(
Â
);

179 
	}
}

180 
vútuÆ
 
	$Âutc
(
c
) {

181  ::
	`Âutc
(
c
, 
Â
);

182 
	}
}

184 
vútuÆ
 
size_t
 
	$_‰ód
(c⁄° *
±r
, 
size_t
 
byãs
){

185 
size_t
 
ªt
 = ::
	`‰ód
((*)
±r
, 1, 
byãs
, 
Â
);

186 if(
ªt
 < 
byãs
)

187 
Áûbô
 = 
åue
;

188  
ªt
;

189 
	}
}

194 
vútuÆ
 
	$fwrôe
(c⁄° *
±r
, 
size_t
 
byãs
){

195 
size_t
 
ªt
 = ::
	`fwrôe
((*)
±r
, 1, 
byãs
, 
Â
);

196 if(
ªt
 < 
byãs
)

197 
Áûbô
 = 
åue
;

198 
	}
}

200 
vútuÆ
 
	$f£ek
(
off£t
, 
‹igö
) {

201  ::
	`f£ek
(
Â
, 
off£t
, 
‹igö
);

202 
	}
}

204 
vútuÆ
 
	$·ñl
() {

205  (
u32
)::
	`·ñl
(
Â
);

206 
	}
}

208 
vútuÆ
 
	$size
() {

209 
ﬁdpos
 = 
	`·ñl
();

210 
	`f£ek
(0,
SEEK_END
);

211 
Àn
 = 
	`·ñl
();

212 
	`f£ek
(
ﬁdpos
,
SEEK_SET
);

213  
Àn
;

214 
	}
}

216 
vútuÆ
 
	$fÊush
() {

217 ::
	`fÊush
(
Â
);

218 
	}
}

	@fceux-am/src/fceu.cpp

21 
	~"ty≥s.h
"

22 
	~"x6502.h
"

23 
	~"f˚u.h
"

24 
	~"µu.h
"

25 
	~"sound.h
"

26 
	~"fûe.h
"

27 
	~"utûs/mem‹y.h
"

29 
	~"ˇπ.h
"

30 
	~"öes.h
"

31 
	~"∑Àâe.h
"

32 
	~"°©e.h
"

33 
	~"video.h
"

34 
	~"öput.h
"

35 
	~"fûe.h
"

36 
	~"öes.h
"

38 
Re‰eshThrŸéeFPS
();

40 
	~"drivîs/sdl/sdl.h
"

42 
usög
 
«me•a˚
 
	g°d
;

49 
boﬁ
 
	govî˛ock_íabÀd
 = 0;

50 
boﬁ
 
	govî˛ockög
 = 0;

51 
boﬁ
 
	gskù_7bô_ovî˛ockög
 = 1;

52 
	gn‹mÆsˇ∆öes
;

53 
	gtŸÆsˇ∆öes
;

54 
	gpo°ªndîsˇ∆öes
 = 0;

55 
	gvbœnksˇ∆öes
 = 0;

59 
	#‰ameAdv™˚LagSkù
 
Ál£


	)

62 
	gFCEUGI
::
	$FCEUGI
(Ë{ 
	}
}

64 
FCEUGI
::~
	$FCEUGI
(Ë{ 
	}
}

66 
	$FCEU_ToggÀPPU
() {

67 
√wµu
 ^= 1;

68 i‡(
√wµu
) {

69 
	`FCEU_Di•Mesßge
("New PPUÜoaded");

70 
	`FCEUI_¥ötf
("New PPUÜoaded");

71 
ovî˛ock_íabÀd
 = 0;

73 
	`FCEU_Di•Mesßge
("Old PPUÜoaded");

74 
	`FCEUI_¥ötf
("Old PPUÜoaded");

76 
n‹mÆsˇ∆öes
 = (
dídy
 ? 290 : 240)+
√wµu
;

77 
	}
}

79 
	$FCEU_Clo£Game
()

81 i‡(
GameInfo
)

83 i‡(
GameInfo
->
«me
) {

84 
	`‰ì
(
GameInfo
->
«me
);

85 
GameInfo
->
«me
 = 
NULL
;

88 i‡(
GameInfo
->
ty≥
 !
GIT_NSF
) {

92 
	`GameI¡îÁ˚
(
GI_CLOSE
);

99 
uöt8
 *
XBuf
;

100 i‡(
XBuf
)

101 
	`mem£t
(
XBuf
, 0, 256 * 256);

103 
	`FCEU_Clo£Gíõ
();

105 
	`‰ì
(
GameInfo
);

106 
GameInfo
 = 
NULL
;

108 
	}
}

111 
uöt64
 
	gtime°ampba£
;

114 
FCEUGI
 *
	gGameInfo
 = 
NULL
;

116 (*
GameI¡îÁ˚
)(
GI
 
h
);

117 (*
GameSèãRe°‹e
)(
vîsi⁄
);

119 
ªadfunc
 
ARód
[0x10000];

120 
wrôefunc
 
BWrôe
[0x10000];

121 
ªadfunc
 *
ARódG
;

122 
wrôefunc
 *
BWrôeG
;

123 
RWWøp
 = 0;

128 
Emuœti⁄Pau£d
 = 0;

129 
boﬁ
 
‰ameAdv™˚Reque°ed
=
Ál£
;

130 
‰ameAdv™˚_Dñay_cou¡
 = 0;

131 
‰ameAdv™˚_Dñay
 = 
FRAMEADVANCE_DELAY_DEFAULT
;

133 
AutoßveQty
 = 4;

134 
AutoßveFªquícy
 = 256;

137 
E«bÀAutoßve
 = 0;

139 
	$DECLFW
(
BNuŒ
) {

140 
	}
}

142 
	$DECLFR
(
ANuŒ
) {

143 (
X
.
DB
);

144 
	}
}

146 
	$AŒocGíõRW
() {

147 i‡(!(
ARódG
 = (
ªadfunc
*)
	`FCEU_mÆloc
(0x8000 * (readfunc))))

149 i‡(!(
BWrôeG
 = (
wrôefunc
*)
	`FCEU_mÆloc
(0x8000 * (writefunc))))

151 
RWWøp
 = 1;

153 
	}
}

155 
	$FlushGíõRW
() {

156 
öt32
 
x
;

158 i‡(
RWWøp
) {

159 
x
 = 0; x < 0x8000; x++) {

160 
ARód
[
x
 + 0x8000] = 
ARódG
[x];

161 
BWrôe
[
x
 + 0x8000] = 
BWrôeG
[x];

163 
	`‰ì
(
ARódG
);

164 
	`‰ì
(
BWrôeG
);

165 
ARódG
 = 
NULL
;

166 
BWrôeG
 = 
NULL
;

167 
RWWøp
 = 0;

169 
	}
}

171 
ªadfunc
 
	$GëRódH™dÀr
(
öt32
 
a
) {

172 i‡(
a
 >0x8000 && 
RWWøp
)

173  
ARódG
[
a
 - 0x8000];

175  
ARód
[
a
];

176 
	}
}

178 
	$SëRódH™dÀr
(
öt32
 
°¨t
, i¡32 
íd
, 
ªadfunc
 
func
) {

179 
öt32
 
x
;

181 i‡(!
func
)

182 
func
 = 
ANuŒ
;

184 i‡(
RWWøp
)

185 
x
 = 
íd
; x >
°¨t
; x--) {

186 i‡(
x
 >= 0x8000)

187 
ARódG
[
x
 - 0x8000] = 
func
;

189 
ARód
[
x
] = 
func
;

192 
x
 = 
íd
; x >
°¨t
; x--)

193 
ARód
[
x
] = 
func
;

194 
	}
}

196 
wrôefunc
 
	$GëWrôeH™dÀr
(
öt32
 
a
) {

197 i‡(
RWWøp
 && 
a
 >= 0x8000)

198  
BWrôeG
[
a
 - 0x8000];

200  
BWrôe
[
a
];

201 
	}
}

203 
	$SëWrôeH™dÀr
(
öt32
 
°¨t
, i¡32 
íd
, 
wrôefunc
 
func
) {

204 
öt32
 
x
;

206 i‡(!
func
)

207 
func
 = 
BNuŒ
;

209 i‡(
RWWøp
)

210 
x
 = 
íd
; x >
°¨t
; x--) {

211 i‡(
x
 >= 0x8000)

212 
BWrôeG
[
x
 - 0x8000] = 
func
;

214 
BWrôe
[
x
] = 
func
;

217 
x
 = 
íd
; x >
°¨t
; x--)

218 
BWrôe
[
x
] = 
func
;

219 
	}
}

221 
uöt8
 
	gRAM
[0x800];

225 
uöt8
 
	gPAL
 = 0;

227 
	$DECLFW
(
BRAML
) {

228 
RAM
[
A
] = 
V
;

229 
	}
}

231 
	$DECLFW
(
BRAMH
) {

232 
RAM
[
A
 & 0x7FF] = 
V
;

233 
	}
}

235 
	$DECLFR
(
ARAML
) {

236  
RAM
[
A
];

237 
	}
}

239 
	$DECLFR
(
ARAMH
) {

240  
RAM
[
A
 & 0x7FF];

241 
	}
}

244 
	$Re£tGameLﬂded
() {

245 i‡(
GameInfo
Ë
	`FCEU_Clo£Game
();

246 
Emuœti⁄Pau£d
 = 0;

247 
GameSèãRe°‹e
 = 0;

248 
PPU_hook
 = 
NULL
;

249 
GameHBIRQHook
 = 
NULL
;

250 
FFCEUX_PPURód
 = 
NULL
;

251 
FFCEUX_PPUWrôe
 = 
NULL
;

252 i‡(
GameExpSound
.
Kûl
)

253 
GameExpSound
.
	`Kûl
();

254 
	`mem£t
(&
GameExpSound
, 0, (GameExpSound));

255 
M≠IRQHook
 = 
NULL
;

256 
MMC5Hack
 = 0;

257 
PEC586Hack
 = 0;

258 
QTAIHack
 = 0;

259 
PAL
 &= 1;

260 
deÁu…_∑Àâe_£À˘i⁄
 = 0;

261 
	}
}

263 
iNESLﬂd
(c⁄° *
«me
, 
FCEUFILE
 *
Â
, 
OvîwrôeVidMode
);

266 
FCEUGI
 *
	$FCEUI_LﬂdGameVútuÆ
(c⁄° *
«me
, 
OvîwrôeVidMode
, 
boﬁ
 
sûít
)

270 
FCEUFILE
 *
Â
;

271 
fuŒ«me
[2048];

272 
œ°∑l
 = 
PAL
;

273 
œ°dídy
 = 
dídy
;

275 c⁄° * 
romexãnsi⁄s
[] = { "nes", "fds", 0 };

280 
u£rC™˚l
 = 0;

281 
Â
 = 
	`FCEU_f›í
(
«me
, 0, "rb", 0, -1, 
romexãnsi⁄s
, &
u£rC™˚l
);

283 i‡(!
Â
)

286 i‡(!
sûít
 && !
u£rC™˚l
)

287 
	`FCEU_PrötEº‹
("Eº‹ o≥nög \"%s\"!", 
«me
);

292 
	`°r˝y
(
fuŒ«me
, 
«me
);

295 
	`Re£tGameLﬂded
();

297 
	`FCEU_¥ötf
("Loading ...\n\n");

299 
	`FCEU_Clo£Game
();

300 
GameInfo
 = (
FCEUGI
 *)
	`mÆloc
((FCEUGI));

301 
	`mem£t
(
GameInfo
, 0, (
FCEUGI
));

303 
GameInfo
->
¨chiveCou¡
 = 
Â
->archiveCount;

305 
GameInfo
->
soundch™
 = 0;

306 
GameInfo
->
soundøã
 = 0;

307 
GameInfo
->
«me
 = 0;

308 
GameInfo
->
ty≥
 = 
GIT_CART
;

309 
GameInfo
->
vidsys
 = 
GIV_USER
;

310 
GameInfo
->
öput
[0] = GameInfo->öput[1] = 
SI_UNSET
;

311 
GameInfo
->
öputfc
 = 
SIFC_UNSET
;

312 
GameInfo
->
c•ecül
 = 
SIS_NONE
;

315 
boﬁ
 
	`FCEUXLﬂd
(c⁄° *
«me
, 
FCEUFILE
 * 
Â
);

317 i‡(
	`iNESLﬂd
(
fuŒ«me
, 
Â
, 
OvîwrôeVidMode
))

319 i‡(
OvîwrôeVidMode
)

320 
	`FCEU_Re£tVidSys
();

322 
	`PowîNES
();

324 i‡(
GameInfo
->
ty≥
 !
GIT_NSF
)

325 
	`FCEU_LﬂdGamePÆëã
();

327 
	`FCEU_Re£tPÆëã
();

329 i‡(!
œ°∑l
 && 
PAL
) {

330 
	`FCEU_Di•Mesßge
("PAL mode set");

331 
	`FCEUI_¥ötf
("PAL mode set");

333 i‡(!
œ°dídy
 && 
dídy
) {

335 
	`FCEU_Di•Mesßge
("Dendy mode set");

336 
	`FCEUI_¥ötf
("Dendy mode set");

338 i‡((
œ°∑l
 || 
œ°dídy
Ë&& !(
PAL
 || 
dídy
)) {

339 
	`FCEU_Di•Mesßge
("NTSC mode set");

340 
	`FCEUI_¥ötf
("NTSC mode set");

344 i‡(!
sûít
)

345 
	`FCEU_PrötEº‹
("AnÉrror occurred whileÜoadingÅhe file.");

347 
	`‰ì
(
GameInfo
);

348 
GameInfo
 = 0;

351 
	`FCEU_f˛o£
(
Â
);

352  
GameInfo
;

353 
	}
}

355 
FCEUGI
 *
	$FCEUI_LﬂdGame
(c⁄° *
«me
, 
OvîwrôeVidMode
, 
boﬁ
 
sûít
)

357  
	`FCEUI_LﬂdGameVútuÆ
(
«me
, 
OvîwrôeVidMode
, 
sûít
);

358 
	}
}

362 
boﬁ
 
	$FCEUI_Inôülize
() {

363 
	`§™d
(0);

365 i‡(!
	`FCEU_InôVútuÆVideo
()) {

366  
Ál£
;

372 
	`mem£t
(&
FSëtögs
, 0, (FSettings));

374 
FSëtögs
.
U§Fú°SLöe
[0] = 0;

375 
FSëtögs
.
U§Fú°SLöe
[1] = 0;

377 
FSëtögs
.
U§La°SLöe
[0] = 239;

378 
FSëtögs
.
U§La°SLöe
[1] = 239;

379 
FSëtögs
.
SoundVﬁume
 = 150;

380 
FSëtögs
.
TrüngÀVﬁume
 = 256;

381 
FSëtögs
.
Squ¨e1Vﬁume
 = 256;

382 
FSëtögs
.
Squ¨e2Vﬁume
 = 256;

383 
FSëtögs
.
Noi£Vﬁume
 = 256;

384 
FSëtögs
.
PCMVﬁume
 = 256;

386 
	`FCEUPPU_Inô
();

388 
	`X6502_Inô
();

390  
åue
;

391 
	}
}

393 
	$FCEUI_Kûl
() {

394 
	`FCEU_KûlVútuÆVideo
();

395 
	`FCEU_KûlGíõ
();

396 
	}
}

401 
	$FCEUI_Emuœã
(
uöt8
 **
pXBuf
, 
öt32
 **
SoundBuf
, i¡32 *
SoundBufSize
, 
skù
) {

403 
ssize
;

405 i‡(
‰ameAdv™˚Reque°ed
)

407 i‡(
‰ameAdv™˚_Dñay_cou¡
 =0 || fømeAdv™˚_Dñay_cou¡ >
‰ameAdv™˚_Dñay
)

408 
Emuœti⁄Pau£d
 = 
EMULATIONPAUSED_FA
;

409 i‡(
‰ameAdv™˚_Dñay_cou¡
 < 
‰ameAdv™˚_Dñay
)

410 
‰ameAdv™˚_Dñay_cou¡
++;

413 i‡(
Emuœti⁄Pau£d
 & 
EMULATIONPAUSED_FA
)

417 
Emuœti⁄Pau£d
 &~
EMULATIONPAUSED_PAUSED
;

420 i‡(
Emuœti⁄Pau£d
 & 
EMULATIONPAUSED_PAUSED
)

423 
	`mem˝y
(
XBuf
, 
XBackBuf
, 256*256);

424 *
pXBuf
 = 
XBuf
;

425 *
SoundBuf
 = 
WaveFöÆ
;

426 *
SoundBufSize
 = 0;

431 
	`FCEU_Upd©eI≈ut
();

433 
	`FCEUPPU_Lo›
(
skù
);

435 i‡(
skù
 !2Ë
ssize
 = 
	`FlushEmuœãSound
();

437 
time°ampba£
 +
time°amp
;

438 
time°amp
 = 0;

439 
soundtime°amp
 = 0;

441 *
pXBuf
 = 
skù
 ? 0 : 
XBuf
;

442 i‡(
skù
 == 2) {

443 *
SoundBuf
 = 0;

444 *
SoundBufSize
 = 0;

446 *
SoundBuf
 = 
WaveFöÆ
;

447 *
SoundBufSize
 = 
ssize
;

450 i‡((
Emuœti⁄Pau£d
 & 
EMULATIONPAUSED_FA
Ë&& (!
‰ameAdv™˚LagSkù
))

454 
Emuœti⁄Pau£d
 = 
EMULATIONPAUSED_PAUSED
;

456 
	}
}

458 
	$FCEUI_Clo£Game
() {

459 
	`FCEU_Clo£Game
();

460 
	}
}

462 
	$Re£tNES
() {

463 i‡(!
GameInfo
) ;

464 
	`GameI¡îÁ˚
(
GI_RESETM2
);

465 
	`FCEUSND_Re£t
();

466 
	`FCEUPPU_Re£t
();

467 
	`X6502_Re£t
();

470 
uöt8
 *
XBackBuf
;

471 
	`mem£t
(
XBackBuf
, 0, 256 * 256);

473 
	`FCEU_Di•Mesßge
("Reset");

474 
	}
}

476 
u64
 
	$x‹oshúo128∂us_√xt
() {

478 
	}
}

480 
	$FCEU_Mem‹yR™d
(
uöt8
 *
±r
, 
uöt32
 
size
, 
boﬁ
 
deÁu…_zîo
) {

481 
	}
}

483 
	$PowîNES
() {

484 i‡(!
GameInfo
) ;

491 
	`FCEU_Mem‹yR™d
(
RAM
, 0x800);

493 
	`SëRódH™dÀr
(0x0000, 0xFFFF, 
ANuŒ
);

494 
	`SëWrôeH™dÀr
(0x0000, 0xFFFF, 
BNuŒ
);

496 
	`SëRódH™dÀr
(0, 0x7FF, 
ARAML
);

497 
	`SëWrôeH™dÀr
(0, 0x7FF, 
BRAML
);

499 
	`SëRódH™dÀr
(0x800, 0x1FFF, 
ARAMH
);

500 
	`SëWrôeH™dÀr
(0x800, 0x1FFF, 
BRAMH
);

502 
	`InôülizeI≈ut
();

503 
	`FCEUSND_Powî
();

504 
	`FCEUPPU_Powî
();

507 
	`GameI¡îÁ˚
(
GI_POWER
);

509 
time°ampba£
 = 0;

510 
	`X6502_Powî
();

512 
uöt8
 *
XBackBuf
;

513 
	`mem£t
(
XBackBuf
, 0, 256 * 256);

515 
	`FCEU_Di•Mesßge
("Power on");

516 
	}
}

518 
	$FCEU_Re£tVidSys
() {

519 
w
;

521 i‡(
GameInfo
->
vidsys
 =
GIV_NTSC
)

522 
w
 = 0;

523 i‡(
GameInfo
->
vidsys
 =
GIV_PAL
) {

524 
w
 = 1;

525 
dídy
 = 0;

527 
w
 = 
FSëtögs
.
PAL
;

529 
PAL
 = 
w
 ? 1 : 0;

531 i‡(
PAL
)

532 
dídy
 = 0;

534 i‡(
√wµu
)

535 
ovî˛ock_íabÀd
 = 0;

537 
n‹mÆsˇ∆öes
 = (
dídy
 ? 290 : 240)+
√wµu
;

538 
tŸÆsˇ∆öes
 = 
n‹mÆsˇ∆öes
 + (
ovî˛ock_íabÀd
 ? 
po°ªndîsˇ∆öes
 : 0);

539 
	`FCEUPPU_SëVideoSy°em
(
w
 || 
dídy
);

540 
	`SëSoundV¨übÀs
();

541 
	}
}

543 
FCEUS
 
	gFSëtögs
;

545 
	$FCEUI_SëRídîedLöes
(
¡scf
, 
¡s˛
, 
∑lf
, 
∑Œ
) {

546 
FSëtögs
.
U§Fú°SLöe
[0] = 
¡scf
;

547 
FSëtögs
.
U§La°SLöe
[0] = 
¡s˛
;

548 
FSëtögs
.
U§Fú°SLöe
[1] = 
∑lf
;

549 
FSëtögs
.
U§La°SLöe
[1] = 
∑Œ
;

550 i‡(
PAL
 || 
dídy
) {

551 
FSëtögs
.
Fú°SLöe
 = FSëtögs.
U§Fú°SLöe
[1];

552 
FSëtögs
.
La°SLöe
 = FSëtögs.
U§La°SLöe
[1];

554 
FSëtögs
.
Fú°SLöe
 = FSëtögs.
U§Fú°SLöe
[0];

555 
FSëtögs
.
La°SLöe
 = FSëtögs.
U§La°SLöe
[0];

557 
	}
}

559 
	$FCEUI_SëVidSy°em
(
a
) {

560 
FSëtögs
.
PAL
 = 
a
 ? 1 : 0;

561 i‡(
GameInfo
) {

562 
	`FCEU_Re£tVidSys
();

563 
	`FCEU_Re£tPÆëã
();

564 
	`FCEUD_VideoCh™ged
();

566 
	}
}

568 
	$FCEUI_GëCuºítVidSy°em
(*
¶°¨t
, *
¶íd
) {

569 i‡(
¶°¨t
)

570 *
¶°¨t
 = 
FSëtögs
.
Fú°SLöe
;

571 i‡(
¶íd
)

572 *
¶íd
 = 
FSëtögs
.
La°SLöe
;

573 (
PAL
);

574 
	}
}

576 
	$FCEUI_SëRegi⁄
(
ªgi⁄
, 
nŸify
) {

577 
ªgi⁄
) {

579 
n‹mÆsˇ∆öes
 = 240;

580 
∑l_emuœti⁄
 = 0;

581 
dídy
 = 0;

585 
n‹mÆsˇ∆öes
 = 240;

586 
∑l_emuœti⁄
 = 1;

587 
dídy
 = 0;

590 
n‹mÆsˇ∆öes
 = 290;

591 
∑l_emuœti⁄
 = 0;

592 
dídy
 = 1;

595 
n‹mÆsˇ∆öes
 +
√wµu
;

596 
tŸÆsˇ∆öes
 = 
n‹mÆsˇ∆öes
 + (
ovî˛ock_íabÀd
 ? 
po°ªndîsˇ∆öes
 : 0);

597 
	`FCEUI_SëVidSy°em
(
∑l_emuœti⁄
);

598 
	`Re‰eshThrŸéeFPS
();

599 
	}
}

601 
öt32
 
	$FCEUI_GëDesúedFPS
() {

602 i‡(
PAL
 || 
dídy
)

606 
	}
}

608 
	$FCEUI_Emuœti⁄Pau£d
()

610  (
Emuœti⁄Pau£d
 & 
EMULATIONPAUSED_PAUSED
);

611 
	}
}

613 
	$FCEU_TextSˇ∆öeOff£t
(
y
) {

614  
FSëtögs
.
Fú°SLöe
 * 256;

615 
	}
}

616 
	$FCEU_TextSˇ∆öeOff£tFromBŸtom
(
y
) {

617  (
FSëtögs
.
La°SLöe
 - 
y
) * 256;

618 
	}
}

	@fceux-am/src/fceu.h

1 #i‚de‡
_FCEUH


2 
	#_FCEUH


	)

4 
	~"ty≥s.h
"

6 
f˚uödbg
;

7 
√wµu
;

8 
Re£tGameLﬂded
();

11 
boﬁ
 
ovî˛ock_íabÀd
;

12 
boﬁ
 
ovî˛ockög
;

13 
boﬁ
 
skù_7bô_ovî˛ockög
;

14 
n‹mÆsˇ∆öes
;

15 
tŸÆsˇ∆öes
;

16 
po°ªndîsˇ∆öes
;

17 
vbœnksˇ∆öes
;

19 
boﬁ
 
AutoResumePœy
;

20 
romNameWhíClosögEmuœt‹
[];

22 
	#DECLFR
(
x
Ë
uöt8
 
	`x
 (
uöt32
 
A
)

	)

23 
	#DECLFW
(
x
Ë
	`x
 (
uöt32
 
A
, 
uöt8
 
V
)

	)

25 
FCEU_Mem‹yR™d
(
uöt8
 *
±r
, 
uöt32
 
size
, 
boﬁ
 
deÁu…_zîo
=
Ál£
);

26 
SëRódH™dÀr
(
öt32
 
°¨t
, i¡32 
íd
, 
ªadfunc
 
func
);

27 
SëWrôeH™dÀr
(
öt32
 
°¨t
, i¡32 
íd
, 
wrôefunc
 
func
);

28 
wrôefunc
 
GëWrôeH™dÀr
(
öt32
 
a
);

29 
ªadfunc
 
GëRódH™dÀr
(
öt32
 
a
);

31 
AŒocGíõRW
();

32 
FlushGíõRW
();

34 
FCEU_Re£tVidSys
();

36 
Re£tM≠pög
();

37 
Re£tNES
();

38 
PowîNES
();

40 
SëAutoFúeOff£t
(
off£t
);

41 
SëAutoFúeP©ã∫
(
⁄‰ames
, 
off‰ames
);

42 
AutoFúe
();

43 
FCEUI_RewödToLa°Autoßve
();

46 *
FCEUI_GëAboutSåög
();

48 
uöt64
 
time°ampba£
;

51 
MMC5Hack
;

52 
uöt32
 
MMC5HackVROMMask
;

53 
uöt8
 *
MMC5HackExNTARAMPå
;

54 
uöt8
 *
MMC5HackVROMPTR
;

55 
uöt8
 
MMC5HackCHRMode
;

56 
uöt8
 
MMC5HackSPMode
;

57 
uöt8
 
MMC50x5130
;

58 
uöt8
 
MMC5HackSPS¸ﬁl
;

59 
uöt8
 
MMC5HackSPPage
;

61 
PEC586Hack
;

64 
QTAIHack
;

65 
uöt8
 
QTAINTRAM
[2048];

66 
uöt8
 
qèöåamªg
;

68 
	#GAME_MEM_BLOCK_SIZE
 131072

	)

70 
uöt8
 
RAM
[];

71 
Emuœti⁄Pau£d
;

73 
uöt8
 
FCEU_RódRomByã
(
uöt32
 
i
);

74 
FCEU_WrôeRomByã
(
uöt32
 
i
, 
uöt8
 
vÆue
);

76 
ªadfunc
 
ARód
[0x10000];

77 
wrôefunc
 
BWrôe
[0x10000];

79 
	eGI
 {

80 
	mGI_RESETM2
 =1,

81 
	mGI_POWER
 =2,

82 
	mGI_CLOSE
 =3,

83 
	mGI_RESETSAVE
 = 4

86 (*
GameI¡îÁ˚
)(
GI
 
h
);

87 (*
GameSèãRe°‹e
)(
vîsi⁄
);

90 
	~"gô.h
"

91 
FCEUGI
 *
GameInfo
;

92 
GameAâribuãs
;

94 
uöt8
 
PAL
;

95 
dídy
;

100 
PAL
;

101 
Nëw‹kPœy
;

102 
SoundVﬁume
;

103 
TrüngÀVﬁume
;

104 
Squ¨e1Vﬁume
;

105 
Squ¨e2Vﬁume
;

106 
Noi£Vﬁume
;

107 
PCMVﬁume
;

108 
boﬁ
 
GameGíõ
;

111 
Fú°SLöe
;

112 
La°SLöe
;

115 
	`TŸÆSˇ∆öes
(Ë{  
La°SLöe
 - 
Fú°SLöe
 + 1; }

119 
U§Fú°SLöe
[2];

120 
U§La°SLöe
[2];

124 
uöt32
 
SndR©e
;

125 
soundq
;

126 
low∑ss
;

127 } 
	tFCEUS
;

129 
	`FCEU_TextSˇ∆öeOff£t
(
y
);

130 
	`FCEU_TextSˇ∆öeOff£tFromBŸtom
(
y
);

132 
FCEUS
 
FSëtögs
;

134 
boﬁ
 
	`CheckFûeExi°s
(c⁄° * 
fûíame
);

136 
	`FCEU_ToggÀPPU
();

138 
	`SëNESDìmph_OldHacky
(
uöt8
 
d
, 
f‹˚
);

139 
	`DøwTextTøns
(
uöt8
 *
de°
, 
uöt32
 
width
, uöt8 *
ãxtmsg
, uöt8 
fgcﬁ‹
);

140 
	`FCEU_PutImage
();

141 #ifde‡
FRAMESKIP


142 
	`FCEU_PutImageDummy
();

145 
uöt8
 
Exô
;

146 
deÁu…_∑Àâe_£À˘i⁄
;

147 
uöt8
 
vsdù
;

151 
	#JOY_A
 1

	)

152 
	#JOY_B
 2

	)

153 
	#JOY_SELECT
 4

	)

154 
	#JOY_START
 8

	)

155 
	#JOY_UP
 0x10

	)

156 
	#JOY_DOWN
 0x20

	)

157 
	#JOY_LEFT
 0x40

	)

158 
	#JOY_RIGHT
 0x80

	)

161 
	#ARRAY_SIZE
(
a
Ë(◊)/◊[0]))

	)

163 
	#EMULATIONPAUSED_PAUSED
 1

	)

164 
	#EMULATIONPAUSED_FA
 2

	)

166 
	#FRAMEADVANCE_DELAY_DEFAULT
 10

	)

	@fceux-am/src/fcoeffs.h

1 
	#SQ2NCOEFFS
 1024

	)

3 c⁄° 
öt32
 
	gSQ2C44100NTSC
[
SQ2NCOEFFS
/2]=

5 
	~"fú/c44100¡sc.h
"

8 c⁄° 
öt32
 
	gSQ2C48000NTSC
[
SQ2NCOEFFS
/2]=

10 
	~"fú/c48000¡sc.h
"

13 c⁄° 
öt32
 
	gSQ2C96000NTSC
[
SQ2NCOEFFS
/2]=

15 
	~"fú/c96000¡sc.h
"

18 c⁄° 
öt32
 
	gSQ2C44100PAL
[
SQ2NCOEFFS
/2]=

20 
	~"fú/c44100∑l.h
"

23 c⁄° 
öt32
 
	gSQ2C48000PAL
[
SQ2NCOEFFS
/2]=

25 
	~"fú/c48000∑l.h
"

28 c⁄° 
öt32
 
	gSQ2C96000PAL
[
SQ2NCOEFFS
/2]=

30 
	~"fú/c96000∑l.h
"

33 
	#NCOEFFS
 484

	)

49 c⁄° 
öt32
 
	gC96000NTSC
[
NCOEFFS
/2]=

51  
°©ic_ˇ°
<
öt32
>(65536*16* -5.9950991853042605E-6)

52  , 
°©ic_ˇ°
<
öt32
>(65536*16* -3.0394382502604395E-6)

53  , 
°©ic_ˇ°
<
öt32
>(65536*16* -3.728403434239284E-6)

54  , 
°©ic_ˇ°
<
öt32
>(65536*16* -4.460351826790638E-6)

55  , 
°©ic_ˇ°
<
öt32
>(65536*16* -5.2164320385801135E-6)

56  , 
°©ic_ˇ°
<
öt32
>(65536*16* -5.9787071016806234E-6)

57  , 
°©ic_ˇ°
<
öt32
>(65536*16* -6.716463411023574E-6)

58  , 
°©ic_ˇ°
<
öt32
>(65536*16* -7.408551386580002E-6)

59  , 
°©ic_ˇ°
<
öt32
>(65536*16* -8.023491429829738E-6)

60  , 
°©ic_ˇ°
<
öt32
>(65536*16* -8.531232892238868E-6)

61  , 
°©ic_ˇ°
<
öt32
>(65536*16* -8.878741512154837E-6)

62  , 
°©ic_ˇ°
<
öt32
>(65536*16* -9.046773382992595E-6)

63  , 
°©ic_ˇ°
<
öt32
>(65536*16* -8.993971214348702E-6)

64  , 
°©ic_ˇ°
<
öt32
>(65536*16* -8.66944931521744E-6)

65  , 
°©ic_ˇ°
<
öt32
>(65536*16* -8.049348524459474E-6)

66  , 
°©ic_ˇ°
<
öt32
>(65536*16* -7.083238646482467E-6)

67  , 
°©ic_ˇ°
<
öt32
>(65536*16* -5.746762349938464E-6)

68  , 
°©ic_ˇ°
<
öt32
>(65536*16* -4.005753681691657E-6)

69  , 
°©ic_ˇ°
<
öt32
>(65536*16* -1.838018035195733E-6)

70  , 
°©ic_ˇ°
<
öt32
>(65536*16* 7.763983938828864E-7)

71  , 
°©ic_ˇ°
<
öt32
>(65536*16* 3.842232025916005E-6)

72  , 
°©ic_ˇ°
<
öt32
>(65536*16* 7.361161707034959E-6)

73  , 
°©ic_ˇ°
<
öt32
>(65536*16* 1.1325948767988128E-5)

74  , 
°©ic_ˇ°
<
öt32
>(65536*16* 1.5711486406341978E-5)

75  , 
°©ic_ˇ°
<
öt32
>(65536*16* 2.0488201424957098E-5)

76  , 
°©ic_ˇ°
<
öt32
>(65536*16* 2.5608402660083142E-5)

77  , 
°©ic_ˇ°
<
öt32
>(65536*16* 3.101231858515874E-5)

78  , 
°©ic_ˇ°
<
öt32
>(65536*16* 3.6630654060842745E-5)

79  , 
°©ic_ˇ°
<
öt32
>(65536*16* 4.2375439803123404E-5)

80  , 
°©ic_ˇ°
<
öt32
>(65536*16* 4.815060832963289E-5)

81  , 
°©ic_ˇ°
<
öt32
>(65536*16* 5.384626411548906E-5)

82  , 
°©ic_ˇ°
<
öt32
>(65536*16* 5.934549587237094E-5)

83  , 
°©ic_ˇ°
<
öt32
>(65536*16* 6.451785679907682E-5)

84  , 
°©ic_ˇ°
<
öt32
>(65536*16* 6.923065879553487E-5)

85  , 
°©ic_ˇ°
<
öt32
>(65536*16* 7.334304650233838E-5)

86  , 
°©ic_ˇ°
<
öt32
>(65536*16* 7.671308820252635E-5)

87  , 
°©ic_ˇ°
<
öt32
>(65536*16* 7.920112989696133E-5)

88  , 
°©ic_ˇ°
<
öt32
>(65536*16* 8.066793124218096E-5)

89  , 
°©ic_ˇ°
<
öt32
>(65536*16* 8.098382483962539E-5)

90  , 
°©ic_ˇ°
<
öt32
>(65536*16* 8.002921154479775E-5)

91  , 
°©ic_ˇ°
<
öt32
>(65536*16* 7.769789869215064E-5)

92  , 
°©ic_ˇ°
<
öt32
>(65536*16* 7.390152475899438E-5)

93  , 
°©ic_ˇ°
<
öt32
>(65536*16* 6.857231550142758E-5)

94  , 
°©ic_ˇ°
<
öt32
>(65536*16* 6.16673817460573E-5)

95  , 
°©ic_ˇ°
<
öt32
>(65536*16* 5.3169767940001464E-5)

96  , 
°©ic_ˇ°
<
öt32
>(65536*16* 4.309495398773014E-5)

97  , 
°©ic_ˇ°
<
öt32
>(65536*16* 3.148737405995964E-5)

98  , 
°©ic_ˇ°
<
öt32
>(65536*16* 1.8428415219696232E-5)

99  , 
°©ic_ˇ°
<
öt32
>(65536*16* 4.0337781533928895E-6)

100  , 
°©ic_ˇ°
<
öt32
>(65536*16* -1.154525373085283E-5)

101  , 
°©ic_ˇ°
<
öt32
>(65536*16* -2.8120750949316567E-5)

102  , 
°©ic_ˇ°
<
öt32
>(65536*16* -4.5470242422149815E-5)

103  , 
°©ic_ˇ°
<
öt32
>(65536*16* -6.333736379615692E-5)

104  , 
°©ic_ˇ°
<
öt32
>(65536*16* -8.143489509942166E-5)

105  , 
°©ic_ˇ°
<
öt32
>(65536*16* -9.94475640226242E-5)

106  , 
°©ic_ˇ°
<
öt32
>(65536*16* -1.1703729468742291E-4)

107  , 
°©ic_ˇ°
<
öt32
>(65536*16* -1.3384679191408508E-4)

108  , 
°©ic_ˇ°
<
öt32
>(65536*16* -1.4950548598267213E-4)

109  , 
°©ic_ˇ°
<
öt32
>(65536*16* -1.6363792959068823E-4)

110  , 
°©ic_ˇ°
<
öt32
>(65536*16* -1.7586732627086947E-4)

111  , 
°©ic_ˇ°
<
öt32
>(65536*16* -1.858264971517669E-4)

112  , 
°©ic_ˇ°
<
öt32
>(65536*16* -1.9316312487547242E-4)

113  , 
°©ic_ˇ°
<
öt32
>(65536*16* -1.975494021862538E-4)

114  , 
°©ic_ˇ°
<
öt32
>(65536*16* -1.9868977868165154E-4)

115  , 
°©ic_ˇ°
<
öt32
>(65536*16* -1.963293865814053E-4)

116  , 
°©ic_ˇ°
<
öt32
>(65536*16* -1.9026146175876417E-4)

117  , 
°©ic_ˇ°
<
öt32
>(65536*16* -1.803352078962109E-4)

118  , 
°©ic_ˇ°
<
öt32
>(65536*16* -1.66463443436789E-4)

119  , 
°©ic_ˇ°
<
öt32
>(65536*16* -1.4862710934868261E-4)

120  , 
°©ic_ˇ°
<
öt32
>(65536*16* -1.2688200452566298E-4)

121  , 
°©ic_ˇ°
<
öt32
>(65536*16* -1.0136212853169677E-4)

122  , 
°©ic_ˇ°
<
öt32
>(65536*16* -7.228199463954364E-5)

123  , 
°©ic_ˇ°
<
öt32
>(65536*16* -3.9939461621236575E-5)

124  , 
°©ic_ˇ°
<
öt32
>(65536*16* -4.7134932934724E-6)

125  , 
°©ic_ˇ°
<
öt32
>(65536*16* 3.2936215273699675E-5)

126  , 
°©ic_ˇ°
<
öt32
>(65536*16* 7.247384833064696E-5)

127  , 
°©ic_ˇ°
<
öt32
>(65536*16* 1.1329187082792405E-4)

128  , 
°©ic_ˇ°
<
öt32
>(65536*16* 1.5471948843725746E-4)

129  , 
°©ic_ˇ°
<
öt32
>(65536*16* 1.9603027714808286E-4)

130  , 
°©ic_ˇ°
<
öt32
>(65536*16* 2.364532958813608E-4)

131  , 
°©ic_ˇ°
<
öt32
>(65536*16* 2.751853212246927E-4)

132  , 
°©ic_ˇ°
<
öt32
>(65536*16* 3.114033208188799E-4)

133  , 
°©ic_ˇ°
<
öt32
>(65536*16* 3.442804841775461E-4)

134  , 
°©ic_ˇ°
<
öt32
>(65536*16* 3.7300098840546946E-4)

135  , 
°©ic_ˇ°
<
öt32
>(65536*16* 3.967764136715296E-4)

136  , 
°©ic_ˇ°
<
öt32
>(65536*16* 4.148631617351676E-4)

137  , 
°©ic_ˇ°
<
öt32
>(65536*16* 4.265789297533608E-4)

138  , 
°©ic_ˇ°
<
öt32
>(65536*16* 4.3132002526188114E-4)

139  , 
°©ic_ˇ°
<
öt32
>(65536*16* 4.2857701618443636E-4)

140  , 
°©ic_ˇ°
<
öt32
>(65536*16* 4.179510914969621E-4)

141  , 
°©ic_ˇ°
<
öt32
>(65536*16* 3.991670037587729E-4)

142  , 
°©ic_ˇ°
<
öt32
>(65536*16* 3.720870989970653E-4)

143  , 
°©ic_ˇ°
<
öt32
>(65536*16* 3.367209236003282E-4)

144  , 
°©ic_ˇ°
<
öt32
>(65536*16* 2.932338231303312E-4)

145  , 
°©ic_ˇ°
<
öt32
>(65536*16* 2.419533571940393E-4)

146  , 
°©ic_ˇ°
<
öt32
>(65536*16* 1.8337169647749448E-4)

147  , 
°©ic_ˇ°
<
öt32
>(65536*16* 1.1814612711310299E-4)

148  , 
°©ic_ˇ°
<
öt32
>(65536*16* 4.709567952563025E-5)

149  , 
°©ic_ˇ°
<
öt32
>(65536*16* -2.880519351052945E-5)

150  , 
°©ic_ˇ°
<
öt32
>(65536*16* -1.08436462295612E-4)

151  , 
°©ic_ˇ°
<
öt32
>(65536*16* -1.905455293630124E-4)

152  , 
°©ic_ˇ°
<
öt32
>(65536*16* -2.7376362665015007E-4)

153  , 
°©ic_ˇ°
<
öt32
>(65536*16* -3.566259161939277E-4)

154  , 
°©ic_ˇ°
<
öt32
>(65536*16* -4.375928024937683E-4)

155  , 
°©ic_ˇ°
<
öt32
>(65536*16* -5.150762555847844E-4)

156  , 
°©ic_ˇ°
<
öt32
>(65536*16* -5.874662774920191E-4)

157  , 
°©ic_ˇ°
<
öt32
>(65536*16* -6.531605887419429E-4)

158  , 
°©ic_ˇ°
<
öt32
>(65536*16* -7.105951946653638E-4)

159  , 
°©ic_ˇ°
<
öt32
>(65536*16* -7.582757639600853E-4)

160  , 
°©ic_ˇ°
<
öt32
>(65536*16* -7.948096207059845E-4)

161  , 
°©ic_ˇ°
<
öt32
>(65536*16* -8.189373133065186E-4)

162  , 
°©ic_ˇ°
<
öt32
>(65536*16* -8.295634640890689E-4)

163  , 
°©ic_ˇ°
<
öt32
>(65536*16* -8.257854455404298E-4)

164  , 
°©ic_ˇ°
<
öt32
>(65536*16* -8.069208861135825E-4)

165  , 
°©ic_ˇ°
<
öt32
>(65536*16* -7.725316214556066E-4)

166  , 
°©ic_ˇ°
<
öt32
>(65536*16* -7.224442067331338E-4)

167  , 
°©ic_ˇ°
<
öt32
>(65536*16* -6.567673177902021E-4)

168  , 
°©ic_ˇ°
<
öt32
>(65536*16* -5.759031970767677E-4)

169  , 
°©ic_ˇ°
<
öt32
>(65536*16* -4.8055576975832975E-4)

170  , 
°©ic_ˇ°
<
öt32
>(65536*16* -3.7173219275304865E-4)

171  , 
°©ic_ˇ°
<
öt32
>(65536*16* -2.507394811359122E-4)

172  , 
°©ic_ˇ°
<
öt32
>(65536*16* -1.191747608775131E-4)

173  , 
°©ic_ˇ°
<
öt32
>(65536*16* 2.1089774143064154E-5)

174  , 
°©ic_ˇ°
<
öt32
>(65536*16* 1.6792832047168277E-4)

175  , 
°©ic_ˇ°
<
öt32
>(65536*16* 3.189887341095747E-4)

176  , 
°©ic_ˇ°
<
öt32
>(65536*16* 4.7172479984555337E-4)

177  , 
°©ic_ˇ°
<
öt32
>(65536*16* 6.234346495766704E-4)

178  , 
°©ic_ˇ°
<
öt32
>(65536*16* 7.713029674040095E-4)

179  , 
°©ic_ˇ°
<
öt32
>(65536*16* 9.124478381058291E-4)

180  , 
°©ic_ˇ°
<
öt32
>(65536*16* 0.0010439713492973299)

181  , 
°©ic_ˇ°
<
öt32
>(65536*16* 0.0011630121060354824)

182  , 
°©ic_ˇ°
<
öt32
>(65536*16* 0.0012668003330792172)

183  , 
°©ic_ˇ°
<
öt32
>(65536*16* 0.0013527131638668246)

184  , 
°©ic_ˇ°
<
öt32
>(65536*16* 0.0014183305230994348)

185  , 
°©ic_ˇ°
<
öt32
>(65536*16* 0.0014614889365474647)

186  , 
°©ic_ˇ°
<
öt32
>(65536*16* 0.0014803340336415063)

187  , 
°©ic_ˇ°
<
öt32
>(65536*16* 0.0014733688575452508)

188  , 
°©ic_ˇ°
<
öt32
>(65536*16* 0.001439498243826639)

189  , 
°©ic_ˇ°
<
öt32
>(65536*16* 0.0013780680098511918)

190  , 
°©ic_ˇ°
<
öt32
>(65536*16* 0.0012888970057146566)

191  , 
°©ic_ˇ°
<
öt32
>(65536*16* 0.0011723026532406624)

192  , 
°©ic_ˇ°
<
öt32
>(65536*16* 0.0010291180003947405)

193  , 
°©ic_ˇ°
<
öt32
>(65536*16* 8.607001658653358E-4)

194  , 
°©ic_ˇ°
<
öt32
>(65536*16* 6.689295599970792E-4)

195  , 
°©ic_ˇ°
<
öt32
>(65536*16* 4.5619928199453885E-4)

196  , 
°©ic_ˇ°
<
öt32
>(65536*16* 2.253948582736753E-4)

197  , 
°©ic_ˇ°
<
öt32
>(65536*16* -2.0136349562764177E-5)

198  , 
°©ic_ˇ°
<
öt32
>(65536*16* -2.766248035657636E-4)

199  , 
°©ic_ˇ°
<
öt32
>(65536*16* -5.399290507797791E-4)

200  , 
°©ic_ˇ°
<
öt32
>(65536*16* -8.055939397996815E-4)

201  , 
°©ic_ˇ°
<
öt32
>(65536*16* -0.0010689177291287714)

202  , 
°©ic_ˇ°
<
öt32
>(65536*16* -0.0013250265370767429)

203  , 
°©ic_ˇ°
<
öt32
>(65536*16* -0.0015689549600474482)

204  , 
°©ic_ˇ°
<
öt32
>(65536*16* -0.0017957322527663085)

205  , 
°©ic_ˇ°
<
öt32
>(65536*16* -0.002000472024117418)

206  , 
°©ic_ˇ°
<
öt32
>(65536*16* -0.0021784645223266222)

207  , 
°©ic_ˇ°
<
öt32
>(65536*16* -0.0023252695222818146)

208  , 
°©ic_ˇ°
<
öt32
>(65536*16* -0.0024368087083972345)

209  , 
°©ic_ˇ°
<
öt32
>(65536*16* -0.002509455241851095)

210  , 
°©ic_ˇ°
<
öt32
>(65536*16* -0.0025401189567937766)

211  , 
°©ic_ˇ°
<
öt32
>(65536*16* -0.0025263261450844377)

212  , 
°©ic_ˇ°
<
öt32
>(65536*16* -0.0024662908754217406)

213  , 
°©ic_ˇ°
<
öt32
>(65536*16* -0.002358977944127433)

214  , 
°©ic_ˇ°
<
öt32
>(65536*16* -0.002204154401342649)

215  , 
°©ic_ˇ°
<
öt32
>(65536*16* -0.002002429343138771)

216  , 
°©ic_ˇ°
<
öt32
>(65536*16* -0.0017552803385372808)

217  , 
°©ic_ˇ°
<
öt32
>(65536*16* -0.0014650656045065488)

218  , 
°©ic_ˇ°
<
öt32
>(65536*16* -0.001135021049166992)

219  , 
°©ic_ˇ°
<
öt32
>(65536*16* -7.692415547098649E-4)

220  , 
°©ic_ˇ°
<
öt32
>(65536*16* -3.7264671522013244E-4)

221  , 
°©ic_ˇ°
<
öt32
>(65536*16* 4.906989195928291E-5)

222  , 
°©ic_ˇ°
<
öt32
>(65536*16* 4.895067103339711E-4)

223  , 
°©ic_ˇ°
<
öt32
>(65536*16* 9.416355837269647E-4)

224  , 
°©ic_ˇ°
<
öt32
>(65536*16* 0.001397897684142057)

225  , 
°©ic_ˇ°
<
öt32
>(65536*16* 0.0018503121614766558)

226  , 
°©ic_ˇ°
<
öt32
>(65536*16* 0.002290597319733804)

227  , 
°©ic_ˇ°
<
öt32
>(65536*16* 0.0027103015920374113)

228  , 
°©ic_ˇ°
<
öt32
>(65536*16* 0.0031009433327120863)

229  , 
°©ic_ˇ°
<
öt32
>(65536*16* 0.0034541565687980116)

230  , 
°©ic_ˇ°
<
öt32
>(65536*16* 0.0037618412630103333)

231  , 
°©ic_ˇ°
<
öt32
>(65536*16* 0.004016315066649496)

232  , 
°©ic_ˇ°
<
öt32
>(65536*16* 0.004210464374744574)

233  , 
°©ic_ˇ°
<
öt32
>(65536*16* 0.004337892288164658)

234  , 
°©ic_ˇ°
<
öt32
>(65536*16* 0.004393060165490985)

235  , 
°©ic_ˇ°
<
öt32
>(65536*16* 0.004371421226297046)

236  , 
°©ic_ˇ°
<
öt32
>(65536*16* 0.004269542847715132)

237  , 
°©ic_ˇ°
<
öt32
>(65536*16* 0.00408521543517564)

238  , 
°©ic_ˇ°
<
öt32
>(65536*16* 0.0038175457430583526)

239  , 
°©ic_ˇ°
<
öt32
>(65536*16* 0.00346703221076496)

240  , 
°©ic_ˇ°
<
öt32
>(65536*16* 0.0030356209846777236)

241  , 
°©ic_ˇ°
<
öt32
>(65536*16* 0.002526740400739804)

242  , 
°©ic_ˇ°
<
öt32
>(65536*16* 0.0019453134428630866)

243  , 
°©ic_ˇ°
<
öt32
>(65536*16* 0.0012977462825954304)

244  , 
°©ic_ˇ°
<
öt32
>(65536*16* 5.918933555500828E-4)

245  , 
°©ic_ˇ°
<
öt32
>(65536*16* -1.6300197379338156E-4)

246  , 
°©ic_ˇ°
<
öt32
>(65536*16* -9.563908629597664E-4)

247  , 
°©ic_ˇ°
<
öt32
>(65536*16* -0.0017765255338228524)

248  , 
°©ic_ˇ°
<
öt32
>(65536*16* -0.0026105886000394158)

249  , 
°©ic_ˇ°
<
öt32
>(65536*16* -0.003444843158936217)

250  , 
°©ic_ˇ°
<
öt32
>(65536*16* -0.004264802433556331)

251  , 
°©ic_ˇ°
<
öt32
>(65536*16* -0.00505541655658742)

252  , 
°©ic_ˇ°
<
öt32
>(65536*16* -0.005801274223045036)

253  , 
°©ic_ˇ°
<
öt32
>(65536*16* -0.0064868164183708756)

254  , 
°©ic_ˇ°
<
öt32
>(65536*16* -0.007096559102022994)

255  , 
°©ic_ˇ°
<
öt32
>(65536*16* -0.007615322236172286)

256  , 
°©ic_ˇ°
<
öt32
>(65536*16* -0.008028460796606074)

257  , 
°©ic_ˇ°
<
öt32
>(65536*16* -0.008322095341268461)

258  , 
°©ic_ˇ°
<
öt32
>(65536*16* -0.008483337773170242)

259  , 
°©ic_ˇ°
<
öt32
>(65536*16* -0.008500509194641638)

260  , 
°©ic_ˇ°
<
öt32
>(65536*16* -0.008363346317351387)

261  , 
°©ic_ˇ°
<
öt32
>(65536*16* -0.008063192746297233)

262  , 
°©ic_ˇ°
<
öt32
>(65536*16* -0.007593172286363423)

263  , 
°©ic_ˇ°
<
öt32
>(65536*16* -0.0069483408893122045)

264  , 
°©ic_ˇ°
<
öt32
>(65536*16* -0.006125814985695579)

265  , 
°©ic_ˇ°
<
öt32
>(65536*16* -0.005124873148956596)

266  , 
°©ic_ˇ°
<
öt32
>(65536*16* -0.003947029569132915)

267  , 
°©ic_ˇ°
<
öt32
>(65536*16* -0.002596077508306772)

268  , 
°©ic_ˇ°
<
öt32
>(65536*16* -0.0010781012650798818)

269  , 
°©ic_ˇ°
<
öt32
>(65536*16* 5.985434770618447E-4)

270  , 
°©ic_ˇ°
<
öt32
>(65536*16* 0.0024232820773754)

271  , 
°©ic_ˇ°
<
öt32
>(65536*16* 0.004383405101533075)

272  , 
°©ic_ˇ°
<
öt32
>(65536*16* 0.006464184070028333)

273  , 
°©ic_ˇ°
<
öt32
>(65536*16* 0.008649017282842432)

274  , 
°©ic_ˇ°
<
öt32
>(65536*16* 0.010919604285452066)

275  , 
°©ic_ˇ°
<
öt32
>(65536*16* 0.013256146772932903)

276  , 
°©ic_ˇ°
<
öt32
>(65536*16* 0.015637573164024095)

277  , 
°©ic_ˇ°
<
öt32
>(65536*16* 0.018041784432073237)

278  , 
°©ic_ˇ°
<
öt32
>(65536*16* 0.020445917198990023)

279  , 
°©ic_ˇ°
<
öt32
>(65536*16* 0.022826621253151515)

280  , 
°©ic_ˇ°
<
öt32
>(65536*16* 0.025160347111354456)

281  , 
°©ic_ˇ°
<
öt32
>(65536*16* 0.02742363969736895)

282  , 
°©ic_ˇ°
<
öt32
>(65536*16* 0.02959343430076011)

283  , 
°©ic_ˇ°
<
öt32
>(65536*16* 0.03164735012116834)

284  , 
°©ic_ˇ°
<
öt32
>(65536*16* 0.03356397767681876)

285  , 
°©ic_ˇ°
<
öt32
>(65536*16* 0.035323155364389396)

286  , 
°©ic_ˇ°
<
öt32
>(65536*16* 0.03690623176571385)

287  , 
°©ic_ˇ°
<
öt32
>(65536*16* 0.03829630932788767)

288  , 
°©ic_ˇ°
<
öt32
>(65536*16* 0.03947846623700253)

289  , 
°©ic_ˇ°
<
öt32
>(65536*16* 0.040439953107911)

290  , 
°©ic_ˇ°
<
öt32
>(65536*16* 0.0411703612762271)

291  , 
°©ic_ˇ°
<
öt32
>(65536*16* 0.04166176091370756)

292  , 
°©ic_ˇ°
<
öt32
>(65536*16* 0.041908806136461134)

308 c⁄° 
öt32
 
	gC96000PAL
[
NCOEFFS
/2]=

310  
°©ic_ˇ°
<
öt32
>(65536*16* 3.850781559466991E-7)

311  , 
°©ic_ˇ°
<
öt32
>(65536*16* -1.280019401722687E-6)

312  , 
°©ic_ˇ°
<
öt32
>(65536*16* -1.3004583488088965E-6)

313  , 
°©ic_ˇ°
<
öt32
>(65536*16* -1.7523167437749452E-6)

314  , 
°©ic_ˇ°
<
öt32
>(65536*16* -2.410249470764872E-6)

315  , 
°©ic_ˇ°
<
öt32
>(65536*16* -3.2346426554155092E-6)

316  , 
°©ic_ˇ°
<
öt32
>(65536*16* -4.227271662321092E-6)

317  , 
°©ic_ˇ°
<
öt32
>(65536*16* -5.3971678027414914E-6)

318  , 
°©ic_ˇ°
<
öt32
>(65536*16* -6.753444785567694E-6)

319  , 
°©ic_ˇ°
<
öt32
>(65536*16* -8.302128790766257E-6)

320  , 
°©ic_ˇ°
<
öt32
>(65536*16* -1.0045896006160685E-5)

321  , 
°©ic_ˇ°
<
öt32
>(65536*16* -1.1982368218542129E-5)

322  , 
°©ic_ˇ°
<
öt32
>(65536*16* -1.4104296519058353E-5)

323  , 
°©ic_ˇ°
<
öt32
>(65536*16* -1.6397945806910793E-5)

324  , 
°©ic_ˇ°
<
öt32
>(65536*16* -1.8843550708827064E-5)

325  , 
°©ic_ˇ°
<
öt32
>(65536*16* -2.1413952016264175E-5)

326  , 
°©ic_ˇ°
<
öt32
>(65536*16* -2.407540699773165E-5)

327  , 
°©ic_ˇ°
<
öt32
>(65536*16* -2.6786418491045868E-5)

328  , 
°©ic_ˇ°
<
öt32
>(65536*16* -2.949883620881563E-5)

329  , 
°©ic_ˇ°
<
öt32
>(65536*16* -3.215685693993941E-5)

330  , 
°©ic_ˇ°
<
öt32
>(65536*16* -3.4698621200866915E-5)

331  , 
°©ic_ˇ°
<
öt32
>(65536*16* -3.7055635055088747E-5)

332  , 
°©ic_ˇ°
<
öt32
>(65536*16* -3.915516367387583E-5)

333  , 
°©ic_ˇ°
<
öt32
>(65536*16* -4.092005046973106E-5)

334  , 
°©ic_ˇ°
<
öt32
>(65536*16* -4.227173792151256E-5)

335  , 
°©ic_ˇ°
<
öt32
>(65536*16* -4.313002076491602E-5)

336  , 
°©ic_ˇ°
<
öt32
>(65536*16* -4.3416606424857764E-5)

337  , 
°©ic_ˇ°
<
öt32
>(65536*16* -4.3054793786740716E-5)

338  , 
°©ic_ˇ°
<
öt32
>(65536*16* -4.1974462257106624E-5)

339  , 
°©ic_ˇ°
<
öt32
>(65536*16* -4.011236719136458E-5)

340  , 
°©ic_ˇ°
<
öt32
>(65536*16* -3.7415159397597796E-5)

341  , 
°©ic_ˇ°
<
öt32
>(65536*16* -3.3846213818414235E-5)

342  , 
°©ic_ˇ°
<
öt32
>(65536*16* -2.9372757531099172E-5)

343  , 
°©ic_ˇ°
<
öt32
>(65536*16* -2.3989695934591954E-5)

344  , 
°©ic_ˇ°
<
öt32
>(65536*16* -1.7705989252101064E-5)

345  , 
°©ic_ˇ°
<
öt32
>(65536*16* -1.0551320217411096E-5)

346  , 
°©ic_ˇ°
<
öt32
>(65536*16* -2.5775325043216536E-6)

347  , 
°©ic_ˇ°
<
öt32
>(65536*16* 6.139645766572715E-6)

348  , 
°©ic_ˇ°
<
öt32
>(65536*16* 1.5501423038008354E-5)

349  , 
°©ic_ˇ°
<
öt32
>(65536*16* 2.5384753820737575E-5)

350  , 
°©ic_ˇ°
<
öt32
>(65536*16* 3.5643398684518664E-5)

351  , 
°©ic_ˇ°
<
öt32
>(65536*16* 4.6108393091574726E-5)

352  , 
°©ic_ˇ°
<
öt32
>(65536*16* 5.659011526249589E-5)

353  , 
°©ic_ˇ°
<
öt32
>(65536*16* 6.68803323899828E-5)

354  , 
°©ic_ˇ°
<
öt32
>(65536*16* 7.675537622878941E-5)

355  , 
°©ic_ˇ°
<
öt32
>(65536*16* 8.597960059720824E-5)

356  , 
°©ic_ˇ°
<
öt32
>(65536*16* 9.430960279897814E-5)

357  , 
°©ic_ˇ°
<
öt32
>(65536*16* 1.0149893801465577E-4)

358  , 
°©ic_ˇ°
<
öt32
>(65536*16* 1.0730328189856642E-4)

359  , 
°©ic_ˇ°
<
öt32
>(65536*16* 1.1148622997923174E-4)

360  , 
°©ic_ˇ°
<
öt32
>(65536*16* 1.1382511217545132E-4)

361  , 
°©ic_ˇ°
<
öt32
>(65536*16* 1.141174295909343E-4)

362  , 
°©ic_ˇ°
<
öt32
>(65536*16* 1.1218671460549208E-4)

363  , 
°©ic_ˇ°
<
öt32
>(65536*16* 1.078890398041802E-4)

364  , 
°©ic_ˇ°
<
öt32
>(65536*16* 1.0111839925160891E-4)

365  , 
°©ic_ˇ°
<
öt32
>(65536*16* 9.181292532691402E-5)

366  , 
°©ic_ˇ°
<
öt32
>(65536*16* 7.995923739813694E-5)

367  , 
°©ic_ˇ°
<
öt32
>(65536*16* 6.559772591687974E-5)

368  , 
°©ic_ˇ°
<
öt32
>(65536*16* 4.882471526869663E-5)

369  , 
°©ic_ˇ°
<
öt32
>(65536*16* 2.9795861807919456E-5)

370  , 
°©ic_ˇ°
<
öt32
>(65536*16* 8.727003235393024E-6)

371  , 
°©ic_ˇ°
<
öt32
>(65536*16* -1.4106777294769694E-5)

372  , 
°©ic_ˇ°
<
öt32
>(65536*16* -3.836880959229582E-5)

373  , 
°©ic_ˇ°
<
öt32
>(65536*16* -6.366921149307032E-5)

374  , 
°©ic_ˇ°
<
öt32
>(65536*16* -8.956481187350594E-5)

375  , 
°©ic_ˇ°
<
öt32
>(65536*16* -1.1556632861786434E-4)

376  , 
°©ic_ˇ°
<
öt32
>(65536*16* -1.411455941949306E-4)

377  , 
°©ic_ˇ°
<
öt32
>(65536*16* -1.657445386231986E-4)

378  , 
°©ic_ˇ°
<
öt32
>(65536*16* -1.8878427001863077E-4)

379  , 
°©ic_ˇ°
<
öt32
>(65536*16* -2.0967688285495866E-4)

380  , 
°©ic_ˇ°
<
öt32
>(65536*16* -2.2783715638612827E-4)

381  , 
°©ic_ˇ°
<
öt32
>(65536*16* -2.4269587549180196E-4)

382  , 
°©ic_ˇ°
<
öt32
>(65536*16* -2.5371305459897316E-4)

383  , 
°©ic_ˇ°
<
öt32
>(65536*16* -2.603919787720978E-4)

384  , 
°©ic_ˇ°
<
öt32
>(65536*16* -2.6229284265917287E-4)

385  , 
°©ic_ˇ°
<
öt32
>(65536*16* -2.59046413963889E-4)

386  , 
°©ic_ˇ°
<
öt32
>(65536*16* -2.503668396740634E-4)

387  , 
°©ic_ˇ°
<
öt32
>(65536*16* -2.3606367328604213E-4)

388  , 
°©ic_ˇ°
<
öt32
>(65536*16* -2.160524966650091E-4)

389  , 
°©ic_ˇ°
<
öt32
>(65536*16* -1.903639226156617E-4)

390  , 
°©ic_ˇ°
<
öt32
>(65536*16* -1.59150691014015E-4)

391  , 
°©ic_ˇ°
<
öt32
>(65536*16* -1.2269241610349266E-4)

392  , 
°©ic_ˇ°
<
öt32
>(65536*16* -8.139812226735764E-5)

393  , 
°©ic_ˇ°
<
öt32
>(65536*16* -3.5805772732231955E-5)

394  , 
°©ic_ˇ°
<
öt32
>(65536*16* 1.3420603339835859E-5)

395  , 
°©ic_ˇ°
<
öt32
>(65536*16* 6.549742374431074E-5)

396  , 
°©ic_ˇ°
<
öt32
>(65536*16* 1.1953033076822495E-4)

397  , 
°©ic_ˇ°
<
öt32
>(65536*16* 1.745269622757623E-4)

398  , 
°©ic_ˇ°
<
öt32
>(65536*16* 2.2941123586808386E-4)

399  , 
°©ic_ˇ°
<
öt32
>(65536*16* 2.830419125977025E-4)

400  , 
°©ic_ˇ°
<
öt32
>(65536*16* 3.3423267917052983E-4)

401  , 
°©ic_ˇ°
<
öt32
>(65536*16* 3.81774499172079E-4)

402  , 
°©ic_ˇ°
<
öt32
>(65536*16* 4.244616654237554E-4)

403  , 
°©ic_ˇ°
<
öt32
>(65536*16* 4.611154134679936E-4)

404  , 
°©ic_ˇ°
<
öt32
>(65536*16* 4.906128810250551E-4)

405  , 
°©ic_ˇ°
<
öt32
>(65536*16* 5.119138315653597E-4)

406  , 
°©ic_ˇ°
<
öt32
>(65536*16* 5.240878477917174E-4)

407  , 
°©ic_ˇ°
<
öt32
>(65536*16* 5.263406012974186E-4)

408  , 
°©ic_ˇ°
<
öt32
>(65536*16* 5.180395272684202E-4)

409  , 
°©ic_ˇ°
<
öt32
>(65536*16* 4.987363674123535E-4)

410  , 
°©ic_ˇ°
<
öt32
>(65536*16* 4.681879119879578E-4)

411  , 
°©ic_ˇ°
<
öt32
>(65536*16* 4.263728836819278E-4)

412  , 
°©ic_ˇ°
<
öt32
>(65536*16* 3.735054898141368E-4)

413  , 
°©ic_ˇ°
<
öt32
>(65536*16* 3.1004425441119956E-4)

414  , 
°©ic_ˇ°
<
öt32
>(65536*16* 2.3669640454159868E-4)

415  , 
°©ic_ˇ°
<
öt32
>(65536*16* 1.5441686754990788E-4)

416  , 
°©ic_ˇ°
<
öt32
>(65536*16* 6.440207419421148E-5)

417  , 
°©ic_ˇ°
<
öt32
>(65536*16* -3.192198333335273E-5)

418  , 
°©ic_ˇ°
<
öt32
>(65536*16* -1.3291717686663037E-4)

419  , 
°©ic_ˇ°
<
öt32
>(65536*16* -2.3675627296534203E-4)

420  , 
°©ic_ˇ°
<
öt32
>(65536*16* -3.414512496033162E-4)

421  , 
°©ic_ˇ°
<
öt32
>(65536*16* -4.4488659997924806E-4)

422  , 
°©ic_ˇ°
<
öt32
>(65536*16* -5.44857304239037E-4)

423  , 
°©ic_ˇ°
<
öt32
>(65536*16* -6.391106241040588E-4)

424  , 
°©ic_ˇ°
<
öt32
>(65536*16* -7.253914361418537E-4)

425  , 
°©ic_ˇ°
<
öt32
>(65536*16* -8.0148962040363E-4)

426  , 
°©ic_ˇ°
<
öt32
>(65536*16* -8.652895191393541E-4)

427  , 
°©ic_ˇ°
<
öt32
>(65536*16* -9.148193159968953E-4)

428  , 
°©ic_ˇ°
<
öt32
>(65536*16* -9.483009583169883E-4)

429  , 
°©ic_ˇ°
<
öt32
>(65536*16* -9.64197392644944E-4)

430  , 
°©ic_ˇ°
<
öt32
>(65536*16* -9.612579850877552E-4)

431  , 
°©ic_ˇ°
<
öt32
>(65536*16* -9.385600118624972E-4)

432  , 
°©ic_ˇ°
<
öt32
>(65536*16* -8.955444281498081E-4)

433  , 
°©ic_ˇ°
<
öt32
>(65536*16* -8.320477398703453E-4)

434  , 
°©ic_ˇ°
<
öt32
>(65536*16* -7.483247067952744E-4)

435  , 
°©ic_ˇ°
<
öt32
>(65536*16* -6.450648142040654E-4)

436  , 
°©ic_ˇ°
<
öt32
>(65536*16* -5.234000259248345E-4)

437  , 
°©ic_ˇ°
<
öt32
>(65536*16* -3.8490357943433983E-4)

438  , 
°©ic_ˇ°
<
öt32
>(65536*16* -2.3157879639504726E-4)

439  , 
°©ic_ˇ°
<
öt32
>(65536*16* -6.583909529283622E-5)

440  , 
°©ic_ˇ°
<
öt32
>(65536*16* 1.0952239530879758E-4)

441  , 
°©ic_ˇ°
<
öt32
>(65536*16* 2.9137227027685464E-4)

442  , 
°©ic_ˇ°
<
öt32
>(65536*16* 4.76285797012954E-4)

443  , 
°©ic_ˇ°
<
öt32
>(65536*16* 6.606041066674581E-4)

444  , 
°©ic_ˇ°
<
öt32
>(65536*16* 8.404993785845289E-4)

445  , 
°©ic_ˇ°
<
öt32
>(65536*16* 0.0010120465600366754)

446  , 
°©ic_ˇ°
<
öt32
>(65536*16* 0.00117130077980147)

447  , 
°©ic_ˇ°
<
öt32
>(65536*16* 0.0013143787565297594)

448  , 
°©ic_ˇ°
<
öt32
>(65536*16* 0.0014375429397231808)

449  , 
°©ic_ˇ°
<
öt32
>(65536*16* 0.0015372865339524395)

450  , 
°©ic_ˇ°
<
öt32
>(65536*16* 0.0016104178085955662)

451  , 
°©ic_ˇ°
<
öt32
>(65536*16* 0.0016541417860661317)

452  , 
°©ic_ˇ°
<
öt32
>(65536*16* 0.0016661374441763997)

453  , 
°©ic_ˇ°
<
öt32
>(65536*16* 0.0016446287155235182)

454  , 
°©ic_ˇ°
<
öt32
>(65536*16* 0.0015884472759871292)

455  , 
°©ic_ˇ°
<
öt32
>(65536*16* 0.0014970858621845143)

456  , 
°©ic_ˇ°
<
öt32
>(65536*16* 0.0013707399310406382)

457  , 
°©ic_ˇ°
<
öt32
>(65536*16* 0.0012103371052757787)

458  , 
°©ic_ˇ°
<
öt32
>(65536*16* 0.0010175519857289184)

459  , 
°©ic_ˇ°
<
öt32
>(65536*16* 7.94807053668863E-4)

460  , 
°©ic_ˇ°
<
öt32
>(65536*16* 5.452573395422002E-4)

461  , 
°©ic_ˇ°
<
öt32
>(65536*16* 2.727594075846488E-4)

462  , 
°©ic_ˇ°
<
öt32
>(65536*16* -1.8175144027827955E-5)

463  , 
°©ic_ˇ°
<
öt32
>(65536*16* -3.2244298920455907E-4)

464  , 
°©ic_ˇ°
<
öt32
>(65536*16* -6.344261333752713E-4)

465  , 
°©ic_ˇ°
<
öt32
>(65536*16* -9.480839637356165E-4)

466  , 
°©ic_ˇ°
<
öt32
>(65536*16* -0.001257058056943197)

467  , 
°©ic_ˇ°
<
öt32
>(65536*16* -0.001554788246611654)

468  , 
°©ic_ˇ°
<
öt32
>(65536*16* -0.001834637661184569)

469  , 
°©ic_ˇ°
<
öt32
>(65536*16* -0.0020900256934556468)

470  , 
°©ic_ˇ°
<
öt32
>(65536*16* -0.0023145651572872143)

471  , 
°©ic_ˇ°
<
öt32
>(65536*16* -0.0025022020560114683)

472  , 
°©ic_ˇ°
<
öt32
>(65536*16* -0.002647354498854991)

473  , 
°©ic_ˇ°
<
öt32
>(65536*16* -0.002745048447695108)

474  , 
°©ic_ˇ°
<
öt32
>(65536*16* -0.0027910469441460657)

475  , 
°©ic_ˇ°
<
öt32
>(65536*16* -0.002781970255972488)

476  , 
°©ic_ˇ°
<
öt32
>(65536*16* -0.0027154038464012363)

477  , 
°©ic_ˇ°
<
öt32
>(65536*16* -0.002589991713387623)

478  , 
°©ic_ˇ°
<
öt32
>(65536*16* -0.0024055123883779776)

479  , 
°©ic_ˇ°
<
öt32
>(65536*16* -0.0021629354924022053)

480  , 
°©ic_ˇ°
<
öt32
>(65536*16* -0.0018644567566629092)

481  , 
°©ic_ˇ°
<
öt32
>(65536*16* -0.0015135100031795994)

482  , 
°©ic_ˇ°
<
öt32
>(65536*16* -0.0011147548631940517)

483  , 
°©ic_ˇ°
<
öt32
>(65536*16* -6.740394224166433E-4)

484  , 
°©ic_ˇ°
<
öt32
>(65536*16* -1.9833762845333352E-4)

485  , 
°©ic_ˇ°
<
öt32
>(65536*16* 3.043386309556266E-4)

486  , 
°©ic_ˇ°
<
öt32
>(65536*16* 8.250516255359581E-4)

487  , 
°©ic_ˇ°
<
öt32
>(65536*16* 0.0013540734762851313)

488  , 
°©ic_ˇ°
<
öt32
>(65536*16* 0.0018810427835111666)

489  , 
°©ic_ˇ°
<
öt32
>(65536*16* 0.002395141352428365)

490  , 
°©ic_ˇ°
<
öt32
>(65536*16* 0.002885286937512414)

491  , 
°©ic_ˇ°
<
öt32
>(65536*16* 0.0033403397957704442)

492  , 
°©ic_ˇ°
<
öt32
>(65536*16* 0.003749319662913449)

493  , 
°©ic_ˇ°
<
öt32
>(65536*16* 0.00410162844368435)

494  , 
°©ic_ˇ°
<
öt32
>(65536*16* 0.00438727601255591)

495  , 
°©ic_ˇ°
<
öt32
>(65536*16* 0.004597103692808949)

496  , 
°©ic_ˇ°
<
öt32
>(65536*16* 0.004723001540295747)

497  , 
°©ic_ˇ°
<
öt32
>(65536*16* 0.004758115147888017)

498  , 
°©ic_ˇ°
<
öt32
>(65536*16* 0.0046970379302800494)

499  , 
°©ic_ˇ°
<
öt32
>(65536*16* 0.0045359837766146575)

500  , 
°©ic_ˇ°
<
öt32
>(65536*16* 0.004272937350956345)

501  , 
°©ic_ˇ°
<
öt32
>(65536*16* 0.003907777448988567)

502  , 
°©ic_ˇ°
<
öt32
>(65536*16* 0.0034423707924944227)

503  , 
°©ic_ˇ°
<
öt32
>(65536*16* 0.0028806330094231125)

504  , 
°©ic_ˇ°
<
öt32
>(65536*16* 0.0022285548928660825)

505  , 
°©ic_ˇ°
<
öt32
>(65536*16* 0.0014941919971143964)

506  , 
°©ic_ˇ°
<
öt32
>(65536*16* 6.876167025638233E-4)

507  , 
°©ic_ˇ°
<
öt32
>(65536*16* -1.7916781098860902E-4)

508  , 
°©ic_ˇ°
<
öt32
>(65536*16* -0.001092351250031068)

509  , 
°©ic_ˇ°
<
öt32
>(65536*16* -0.002036476651580642)

510  , 
°©ic_ˇ°
<
öt32
>(65536*16* -0.002994635788760751)

511  , 
°©ic_ˇ°
<
öt32
>(65536*16* -0.003948697212655613)

512  , 
°©ic_ˇ°
<
öt32
>(65536*16* -0.004879563858611486)

513  , 
°©ic_ˇ°
<
öt32
>(65536*16* -0.005767456511229176)

514  , 
°©ic_ˇ°
<
öt32
>(65536*16* -0.006592218979894068)

515  , 
°©ic_ˇ°
<
öt32
>(65536*16* -0.007333640031607341)

516  , 
°©ic_ˇ°
<
öt32
>(65536*16* -0.007971787269457032)

517  , 
°©ic_ˇ°
<
öt32
>(65536*16* -0.008487346947516187)

518  , 
°©ic_ˇ°
<
öt32
>(65536*16* -0.008861964740105959)

519  , 
°©ic_ˇ°
<
öt32
>(65536*16* -0.009078580419089913)

520  , 
°©ic_ˇ°
<
öt32
>(65536*16* -0.009121751784315056)

521  , 
°©ic_ˇ°
<
öt32
>(65536*16* -0.008977961157199062)

522  , 
°©ic_ˇ°
<
öt32
>(65536*16* -0.008635898786325313)

523  , 
°©ic_ˇ°
<
öt32
>(65536*16* -0.008086718339557295)

524  , 
°©ic_ˇ°
<
öt32
>(65536*16* -0.007324258683042848)

525  , 
°©ic_ˇ°
<
öt32
>(65536*16* -0.0063452279676933475)

526  , 
°©ic_ˇ°
<
öt32
>(65536*16* -0.005149346015761238)

527  , 
°©ic_ˇ°
<
öt32
>(65536*16* -0.0037394415039958702)

528  , 
°©ic_ˇ°
<
öt32
>(65536*16* -0.0021215012056140783)

529  , 
°©ic_ˇ°
<
öt32
>(65536*16* -3.046703636518387E-4)

530  , 
°©ic_ˇ°
<
öt32
>(65536*16* 0.0016987979320526618)

531  , 
°©ic_ˇ°
<
öt32
>(65536*16* 0.0038736435001752246)

532  , 
°©ic_ˇ°
<
öt32
>(65536*16* 0.006201749792159754)

533  , 
°©ic_ˇ°
<
öt32
>(65536*16* 0.00866234250983842)

534  , 
°©ic_ˇ°
<
öt32
>(65536*16* 0.011232233932071251)

535  , 
°©ic_ˇ°
<
öt32
>(65536*16* 0.013886109426908738)

536  , 
°©ic_ˇ°
<
öt32
>(65536*16* 0.016596852190097027)

537  , 
°©ic_ˇ°
<
öt32
>(65536*16* 0.01933590131308301)

538  , 
°©ic_ˇ°
<
öt32
>(65536*16* 0.022073637826085922)

539  , 
°©ic_ˇ°
<
öt32
>(65536*16* 0.024779792715016697)

540  , 
°©ic_ˇ°
<
öt32
>(65536*16* 0.027423870545765342)

541  , 
°©ic_ˇ°
<
öt32
>(65536*16* 0.029975581949125456)

542  , 
°©ic_ˇ°
<
öt32
>(65536*16* 0.03240527801144671)

543  , 
°©ic_ˇ°
<
öt32
>(65536*16* 0.034684379593278115)

544  , 
°©ic_ˇ°
<
öt32
>(65536*16* 0.03678579448103684)

545  , 
°©ic_ˇ°
<
öt32
>(65536*16* 0.03868431571442653)

546  , 
°©ic_ˇ°
<
öt32
>(65536*16* 0.04035699420925718)

547  , 
°©ic_ˇ°
<
öt32
>(65536*16* 0.041783479941480954)

548  , 
°©ic_ˇ°
<
öt32
>(65536*16* 0.04294632536294341)

549  , 
°©ic_ˇ°
<
öt32
>(65536*16* 0.043831247006285705)

550  , 
°©ic_ˇ°
<
öt32
>(65536*16* 0.044427339714649856)

551  , 
°©ic_ˇ°
<
öt32
>(65536*16* 0.04472724072106236)

564 c⁄° 
öt32
 
	gC48000NTSC
[
NCOEFFS
/2]=

566  
°©ic_ˇ°
<
öt32
>( 65536*16* -1.2211019733097893E-4)

567  , 
°©ic_ˇ°
<
öt32
>(65536*16* 5.374660789759626E-4)

568  , 
°©ic_ˇ°
<
öt32
>(65536*16* 1.9882723274804067E-4)

569  , 
°©ic_ˇ°
<
öt32
>(65536*16* 1.3631041618360223E-4)

570  , 
°©ic_ˇ°
<
öt32
>(65536*16* 1.3153691128499229E-4)

571  , 
°©ic_ˇ°
<
öt32
>(65536*16* 1.3886281724158703E-4)

572  , 
°©ic_ˇ°
<
öt32
>(65536*16* 1.4887278966773673E-4)

573  , 
°©ic_ˇ°
<
öt32
>(65536*16* 1.5943890243162037E-4)

574  , 
°©ic_ˇ°
<
öt32
>(65536*16* 1.7020639605259616E-4)

575  , 
°©ic_ˇ°
<
öt32
>(65536*16* 1.809192079749018E-4)

576  , 
°©ic_ˇ°
<
öt32
>(65536*16* 1.9162093203709557E-4)

577  , 
°©ic_ˇ°
<
öt32
>(65536*16* 2.02127312351196E-4)

578  , 
°©ic_ˇ°
<
öt32
>(65536*16* 2.1249848894399555E-4)

579  , 
°©ic_ˇ°
<
öt32
>(65536*16* 2.2254095363111247E-4)

580  , 
°©ic_ˇ°
<
öt32
>(65536*16* 2.323202963851337E-4)

581  , 
°©ic_ˇ°
<
öt32
>(65536*16* 2.4163344759163413E-4)

582  , 
°©ic_ˇ°
<
öt32
>(65536*16* 2.505472122265602E-4)

583  , 
°©ic_ˇ°
<
öt32
>(65536*16* 2.5885306226458603E-4)

584  , 
°©ic_ˇ°
<
öt32
>(65536*16* 2.6660828860384193E-4)

585  , 
°©ic_ˇ°
<
öt32
>(65536*16* 2.736061193417779E-4)

586  , 
°©ic_ˇ°
<
öt32
>(65536*16* 2.79907587492226E-4)

587  , 
°©ic_ˇ°
<
öt32
>(65536*16* 2.852884076207648E-4)

588  , 
°©ic_ˇ°
<
öt32
>(65536*16* 2.898305905338908E-4)

589  , 
°©ic_ˇ°
<
öt32
>(65536*16* 2.93305922863925E-4)

590  , 
°©ic_ˇ°
<
öt32
>(65536*16* 2.958004341042564E-4)

591  , 
°©ic_ˇ°
<
öt32
>(65536*16* 2.9706939623100196E-4)

592  , 
°©ic_ˇ°
<
öt32
>(65536*16* 2.972508466837626E-4)

593  , 
°©ic_ˇ°
<
öt32
>(65536*16* 2.960684730022295E-4)

594  , 
°©ic_ˇ°
<
öt32
>(65536*16* 2.937123123731801E-4)

595  , 
°©ic_ˇ°
<
öt32
>(65536*16* 2.898634667442807E-4)

596  , 
°©ic_ˇ°
<
öt32
>(65536*16* 2.8478700978604426E-4)

597  , 
°©ic_ˇ°
<
öt32
>(65536*16* 2.7808505097364714E-4)

598  , 
°©ic_ˇ°
<
öt32
>(65536*16* 2.7016032300539216E-4)

599  , 
°©ic_ˇ°
<
öt32
>(65536*16* 2.6042025835357706E-4)

600  , 
°©ic_ˇ°
<
öt32
>(65536*16* 2.496053090718662E-4)

601  , 
°©ic_ˇ°
<
öt32
>(65536*16* 2.3660011363209167E-4)

602  , 
°©ic_ˇ°
<
öt32
>(65536*16* 2.228827056917728E-4)

603  , 
°©ic_ˇ°
<
öt32
>(65536*16* 2.0662381151599093E-4)

604  , 
°©ic_ˇ°
<
öt32
>(65536*16* 1.8946729340692708E-4)

605  , 
°©ic_ˇ°
<
öt32
>(65536*16* 1.707894290302382E-4)

606  , 
°©ic_ˇ°
<
öt32
>(65536*16* 1.4964075656329285E-4)

607  , 
°©ic_ˇ°
<
öt32
>(65536*16* 1.2806315562352013E-4)

608  , 
°©ic_ˇ°
<
öt32
>(65536*16* 1.0470129333132878E-4)

609  , 
°©ic_ˇ°
<
öt32
>(65536*16* 7.952742687952367E-5)

610  , 
°©ic_ˇ°
<
öt32
>(65536*16* 5.3080519892589936E-5)

611  , 
°©ic_ˇ°
<
öt32
>(65536*16* 2.5960680465529317E-5)

612  , 
°©ic_ˇ°
<
öt32
>(65536*16* -2.5651586484338896E-6)

613  , 
°©ic_ˇ°
<
öt32
>(65536*16* -3.248840068536756E-5)

614  , 
°©ic_ˇ°
<
öt32
>(65536*16* -6.374045088088799E-5)

615  , 
°©ic_ˇ°
<
öt32
>(65536*16* -9.575401529845337E-5)

616  , 
°©ic_ˇ°
<
öt32
>(65536*16* -1.2853435644071695E-4)

617  , 
°©ic_ˇ°
<
öt32
>(65536*16* -1.6188456243132127E-4)

618  , 
°©ic_ˇ°
<
öt32
>(65536*16* -1.9591394048834482E-4)

619  , 
°©ic_ˇ°
<
öt32
>(65536*16* -2.3037663947407175E-4)

620  , 
°©ic_ˇ°
<
öt32
>(65536*16* -2.6523734278928246E-4)

621  , 
°©ic_ˇ°
<
öt32
>(65536*16* -3.0020331327926296E-4)

622  , 
°©ic_ˇ°
<
öt32
>(65536*16* -3.352268879856044E-4)

623  , 
°©ic_ˇ°
<
öt32
>(65536*16* -3.700260022275662E-4)

624  , 
°©ic_ˇ°
<
öt32
>(65536*16* -4.045571559416333E-4)

625  , 
°©ic_ˇ°
<
öt32
>(65536*16* -4.38534577720557E-4)

626  , 
°©ic_ˇ°
<
öt32
>(65536*16* -4.718927645081437E-4)

627  , 
°©ic_ˇ°
<
öt32
>(65536*16* -5.043317033789757E-4)

628  , 
°©ic_ˇ°
<
öt32
>(65536*16* -5.357994753678582E-4)

629  , 
°©ic_ˇ°
<
öt32
>(65536*16* -5.659671580788766E-4)

630  , 
°©ic_ˇ°
<
öt32
>(65536*16* -5.947897013020397E-4)

631  , 
°©ic_ˇ°
<
öt32
>(65536*16* -6.219384666963997E-4)

632  , 
°©ic_ˇ°
<
öt32
>(65536*16* -6.473787936195385E-4)

633  , 
°©ic_ˇ°
<
öt32
>(65536*16* -6.707514595741775E-4)

634  , 
°©ic_ˇ°
<
öt32
>(65536*16* -6.920680579893526E-4)

635  , 
°©ic_ˇ°
<
öt32
>(65536*16* -7.109402066802999E-4)

636  , 
°©ic_ˇ°
<
öt32
>(65536*16* -7.274298271538291E-4)

637  , 
°©ic_ˇ°
<
öt32
>(65536*16* -7.411375648954899E-4)

638  , 
°©ic_ˇ°
<
öt32
>(65536*16* -7.520788343347275E-4)

639  , 
°©ic_ˇ°
<
öt32
>(65536*16* -7.600510659768832E-4)

640  , 
°©ic_ˇ°
<
öt32
>(65536*16* -7.647430899316486E-4)

641  , 
°©ic_ˇ°
<
öt32
>(65536*16* -7.664294191482773E-4)

642  , 
°©ic_ˇ°
<
öt32
>(65536*16* -7.644147173692687E-4)

643  , 
°©ic_ˇ°
<
öt32
>(65536*16* -7.590920613362674E-4)

644  , 
°©ic_ˇ°
<
öt32
>(65536*16* -7.501459543641885E-4)

645  , 
°©ic_ˇ°
<
öt32
>(65536*16* -7.373621082253133E-4)

646  , 
°©ic_ˇ°
<
öt32
>(65536*16* -7.208964561671388E-4)

647  , 
°©ic_ˇ°
<
öt32
>(65536*16* -7.006901755632023E-4)

648  , 
°©ic_ˇ°
<
öt32
>(65536*16* -6.764591748580997E-4)

649  , 
°©ic_ˇ°
<
öt32
>(65536*16* -6.483697284795448E-4)

650  , 
°©ic_ˇ°
<
öt32
>(65536*16* -6.164929718400197E-4)

651  , 
°©ic_ˇ°
<
öt32
>(65536*16* -5.806918766677904E-4)

652  , 
°©ic_ˇ°
<
öt32
>(65536*16* -5.409344735839229E-4)

653  , 
°©ic_ˇ°
<
öt32
>(65536*16* -4.97405373620265E-4)

654  , 
°©ic_ˇ°
<
öt32
>(65536*16* -4.502086002815554E-4)

655  , 
°©ic_ˇ°
<
öt32
>(65536*16* -3.9932330033988294E-4)

656  , 
°©ic_ˇ°
<
öt32
>(65536*16* -3.448028565721092E-4)

657  , 
°©ic_ˇ°
<
öt32
>(65536*16* -2.8685420307046736E-4)

658  , 
°©ic_ˇ°
<
öt32
>(65536*16* -2.256958038579715E-4)

659  , 
°©ic_ˇ°
<
öt32
>(65536*16* -1.615040528190604E-4)

660  , 
°©ic_ˇ°
<
öt32
>(65536*16* -9.438524808984473E-5)

661  , 
°©ic_ˇ°
<
öt32
>(65536*16* -2.4519303584370608E-5)

662  , 
°©ic_ˇ°
<
öt32
>(65536*16* 4.786961616483501E-5)

663  , 
°©ic_ˇ°
<
öt32
>(65536*16* 1.2248011782462745E-4)

664  , 
°©ic_ˇ°
<
öt32
>(65536*16* 1.990534978611127E-4)

665  , 
°©ic_ˇ°
<
öt32
>(65536*16* 2.7728245405517893E-4)

666  , 
°©ic_ˇ°
<
öt32
>(65536*16* 3.5690342407690407E-4)

667  , 
°©ic_ˇ°
<
öt32
>(65536*16* 4.376002679601721E-4)

668  , 
°©ic_ˇ°
<
öt32
>(65536*16* 5.19047629492113E-4)

669  , 
°©ic_ˇ°
<
öt32
>(65536*16* 6.008846564336277E-4)

670  , 
°©ic_ˇ°
<
öt32
>(65536*16* 6.827617063818499E-4)

671  , 
°©ic_ˇ°
<
öt32
>(65536*16* 7.643160551093983E-4)

672  , 
°©ic_ˇ°
<
öt32
>(65536*16* 8.451272011819538E-4)

673  , 
°©ic_ˇ°
<
öt32
>(65536*16* 9.248890776355356E-4)

674  , 
°©ic_ˇ°
<
öt32
>(65536*16* 0.001003072355955673)

675  , 
°©ic_ˇ°
<
öt32
>(65536*16* 0.0010794672777372975)

676  , 
°©ic_ˇ°
<
öt32
>(65536*16* 0.0011534276232606116)

677  , 
°©ic_ˇ°
<
öt32
>(65536*16* 0.0012247823207262698)

678  , 
°©ic_ˇ°
<
öt32
>(65536*16* 0.0012929541324917778)

679  , 
°©ic_ˇ°
<
öt32
>(65536*16* 0.001357585199795128)

680  , 
°©ic_ˇ°
<
öt32
>(65536*16* 0.001418338397346014)

681  , 
°©ic_ˇ°
<
öt32
>(65536*16* 0.0014746734285279383)

682  , 
°©ic_ˇ°
<
öt32
>(65536*16* 0.0015262884930771822)

683  , 
°©ic_ˇ°
<
öt32
>(65536*16* 0.0015728226550844923)

684  , 
°©ic_ˇ°
<
öt32
>(65536*16* 0.00161379655898045)

685  , 
°©ic_ˇ°
<
öt32
>(65536*16* 0.001648915948444658)

686  , 
°©ic_ˇ°
<
öt32
>(65536*16* 0.0016778840108713717)

687  , 
°©ic_ˇ°
<
öt32
>(65536*16* 0.0017002560629258679)

688  , 
°©ic_ˇ°
<
öt32
>(65536*16* 0.0017157641984855009)

689  , 
°©ic_ˇ°
<
öt32
>(65536*16* 0.0017241805985007432)

690  , 
°©ic_ˇ°
<
öt32
>(65536*16* 0.001725182645995729)

691  , 
°©ic_ˇ°
<
öt32
>(65536*16* 0.0017184841648036691)

692  , 
°©ic_ˇ°
<
öt32
>(65536*16* 0.0017039216808435336)

693  , 
°©ic_ˇ°
<
öt32
>(65536*16* 0.001681334520841587)

694  , 
°©ic_ˇ°
<
öt32
>(65536*16* 0.0016504918660173195)

695  , 
°©ic_ˇ°
<
öt32
>(65536*16* 0.0016112687597971862)

696  , 
°©ic_ˇ°
<
öt32
>(65536*16* 0.0015636063248128528)

697  , 
°©ic_ˇ°
<
öt32
>(65536*16* 0.0015074624593932396)

698  , 
°©ic_ˇ°
<
öt32
>(65536*16* 0.0014427699009003175)

699  , 
°©ic_ˇ°
<
öt32
>(65536*16* 0.001369527394628539)

700  , 
°©ic_ˇ°
<
öt32
>(65536*16* 0.0012878043567412672)

701  , 
°©ic_ˇ°
<
öt32
>(65536*16* 0.0011977101442406943)

702  , 
°©ic_ˇ°
<
öt32
>(65536*16* 0.0010993686954177168)

703  , 
°©ic_ˇ°
<
öt32
>(65536*16* 9.928872878864818E-4)

704  , 
°©ic_ˇ°
<
öt32
>(65536*16* 8.784941174786496E-4)

705  , 
°©ic_ˇ°
<
öt32
>(65536*16* 7.564288883294911E-4)

706  , 
°©ic_ˇ°
<
öt32
>(65536*16* 6.270372159510238E-4)

707  , 
°©ic_ˇ°
<
öt32
>(65536*16* 4.905983779660314E-4)

708  , 
°©ic_ˇ°
<
öt32
>(65536*16* 3.4754116793679786E-4)

709  , 
°©ic_ˇ°
<
öt32
>(65536*16* 1.9816162887093084E-4)

710  , 
°©ic_ˇ°
<
öt32
>(65536*16* 4.300342678121075E-5)

711  , 
°©ic_ˇ°
<
öt32
>(65536*16* -1.1751370467978956E-4)

712  , 
°©ic_ˇ°
<
öt32
>(65536*16* -2.8280605795854083E-4)

713  , 
°©ic_ˇ°
<
öt32
>(65536*16* -4.523173545514795E-4)

714  , 
°©ic_ˇ°
<
öt32
>(65536*16* -6.255041797790695E-4)

715  , 
°©ic_ˇ°
<
öt32
>(65536*16* -8.016355996557292E-4)

716  , 
°©ic_ˇ°
<
öt32
>(65536*16* -9.801573426762404E-4)

717  , 
°©ic_ˇ°
<
öt32
>(65536*16* -0.0011602954820678437)

718  , 
°©ic_ˇ°
<
öt32
>(65536*16* -0.001341343986206184)

719  , 
°©ic_ˇ°
<
öt32
>(65536*16* -0.001522571621631356)

720  , 
°©ic_ˇ°
<
öt32
>(65536*16* -0.001703172768158951)

721  , 
°©ic_ˇ°
<
öt32
>(65536*16* -0.0018823360844618293)

722  , 
°©ic_ˇ°
<
öt32
>(65536*16* -0.00205930337901632)

723  , 
°©ic_ˇ°
<
öt32
>(65536*16* -0.0022331579230920632)

724  , 
°©ic_ˇ°
<
öt32
>(65536*16* -0.002403069015327)

725  , 
°©ic_ˇ°
<
öt32
>(65536*16* -0.0025682175666884455)

726  , 
°©ic_ˇ°
<
öt32
>(65536*16* -0.002727682820990084)

727  , 
°©ic_ˇ°
<
öt32
>(65536*16* -0.002880584481539458)

728  , 
°©ic_ˇ°
<
öt32
>(65536*16* -0.003026077683940661)

729  , 
°©ic_ˇ°
<
öt32
>(65536*16* -0.00316326704154516)

730  , 
°©ic_ˇ°
<
öt32
>(65536*16* -0.003291235176827385)

731  , 
°©ic_ˇ°
<
öt32
>(65536*16* -0.0034091436232751705)

732  , 
°©ic_ˇ°
<
öt32
>(65536*16* -0.0035161624262765347)

733  , 
°©ic_ˇ°
<
öt32
>(65536*16* -0.00361139707788214)

734  , 
°©ic_ˇ°
<
öt32
>(65536*16* -0.0036940241232429707)

735  , 
°©ic_ˇ°
<
öt32
>(65536*16* -0.003763249197925811)

736  , 
°©ic_ˇ°
<
öt32
>(65536*16* -0.0038183138554794805)

737  , 
°©ic_ˇ°
<
öt32
>(65536*16* -0.003858413648517434)

738  , 
°©ic_ˇ°
<
öt32
>(65536*16* -0.0038828565696081884)

739  , 
°©ic_ˇ°
<
öt32
>(65536*16* -0.0038909308779192654)

740  , 
°©ic_ˇ°
<
öt32
>(65536*16* -0.0038820231307916493)

741  , 
°©ic_ˇ°
<
öt32
>(65536*16* -0.0038554750792844325)

742  , 
°©ic_ˇ°
<
öt32
>(65536*16* -0.003810737282493679)

743  , 
°©ic_ˇ°
<
öt32
>(65536*16* -0.003747262375484652)

744  , 
°©ic_ˇ°
<
öt32
>(65536*16* -0.0036646285078894706)

745  , 
°©ic_ˇ°
<
öt32
>(65536*16* -0.0035623728689170597)

746  , 
°©ic_ˇ°
<
öt32
>(65536*16* -0.0034401218523635543)

747  , 
°©ic_ˇ°
<
öt32
>(65536*16* -0.003297594128579178)

748  , 
°©ic_ˇ°
<
öt32
>(65536*16* -0.0031344918897463427)

749  , 
°©ic_ˇ°
<
öt32
>(65536*16* -0.0029506999116335536)

750  , 
°©ic_ˇ°
<
öt32
>(65536*16* -0.002746012743503227)

751  , 
°©ic_ˇ°
<
öt32
>(65536*16* -0.0025204082871514897)

752  , 
°©ic_ˇ°
<
öt32
>(65536*16* -0.0022738407863853822)

753  , 
°©ic_ˇ°
<
öt32
>(65536*16* -0.0020063873037173175)

754  , 
°©ic_ˇ°
<
öt32
>(65536*16* -0.0017182175415557032)

755  , 
°©ic_ˇ°
<
öt32
>(65536*16* -0.0014095092681882975)

756  , 
°©ic_ˇ°
<
öt32
>(65536*16* -0.0010805220633352567)

757  , 
°©ic_ˇ°
<
öt32
>(65536*16* -7.316077716348434E-4)

758  , 
°©ic_ˇ°
<
öt32
>(65536*16* -3.631468249678417E-4)

759  , 
°©ic_ˇ°
<
öt32
>(65536*16* 2.438177178474359E-5)

760  , 
°©ic_ˇ°
<
öt32
>(65536*16* 4.3040711526763105E-4)

761  , 
°©ic_ˇ°
<
öt32
>(65536*16* 8.543758511240976E-4)

762  , 
°©ic_ˇ°
<
öt32
>(65536*16* 0.0012955688715509065)

763  , 
°©ic_ˇ°
<
öt32
>(65536*16* 0.0017532574138845757)

764  , 
°©ic_ˇ°
<
öt32
>(65536*16* 0.0022266720975588176)

765  , 
°©ic_ˇ°
<
öt32
>(65536*16* 0.0027149312534676365)

766  , 
°©ic_ˇ°
<
öt32
>(65536*16* 0.003217102703811305)

767  , 
°©ic_ˇ°
<
öt32
>(65536*16* 0.0037322302087511496)

768  , 
°©ic_ˇ°
<
öt32
>(65536*16* 0.004259307964559864)

769  , 
°©ic_ˇ°
<
öt32
>(65536*16* 0.004797205731205993)

770  , 
°©ic_ˇ°
<
öt32
>(65536*16* 0.00534482556712745)

771  , 
°©ic_ˇ°
<
öt32
>(65536*16* 0.00590099232932727)

772  , 
°©ic_ˇ°
<
öt32
>(65536*16* 0.0064644836497811)

773  , 
°©ic_ˇ°
<
öt32
>(65536*16* 0.007034017389280477)

774  , 
°©ic_ˇ°
<
öt32
>(65536*16* 0.007608353016621833)

775  , 
°©ic_ˇ°
<
öt32
>(65536*16* 0.008186157965561618)

776  , 
°©ic_ˇ°
<
öt32
>(65536*16* 0.008766068964147668)

777  , 
°©ic_ˇ°
<
öt32
>(65536*16* 0.009346716260147759)

778  , 
°©ic_ˇ°
<
öt32
>(65536*16* 0.009926718862388615)

779  , 
°©ic_ˇ°
<
öt32
>(65536*16* 0.010504681043184161)

780  , 
°©ic_ˇ°
<
öt32
>(65536*16* 0.01107917387309342)

781  , 
°©ic_ˇ°
<
öt32
>(65536*16* 0.011648797102049465)

782  , 
°©ic_ˇ°
<
öt32
>(65536*16* 0.012212089485935572)

783  , 
°©ic_ˇ°
<
öt32
>(65536*16* 0.012767702033610684)

784  , 
°©ic_ˇ°
<
öt32
>(65536*16* 0.01331416222058608)

785  , 
°©ic_ˇ°
<
öt32
>(65536*16* 0.013850107485964188)

786  , 
°©ic_ˇ°
<
öt32
>(65536*16* 0.01437415626494087)

787  , 
°©ic_ˇ°
<
öt32
>(65536*16* 0.01488494484218882)

788  , 
°©ic_ˇ°
<
öt32
>(65536*16* 0.015381157046388828)

789  , 
°©ic_ˇ°
<
öt32
>(65536*16* 0.015861470914555698)

790  , 
°©ic_ˇ°
<
öt32
>(65536*16* 0.016324639468324405)

791  , 
°©ic_ˇ°
<
öt32
>(65536*16* 0.01676942738258265)

792  , 
°©ic_ˇ°
<
öt32
>(65536*16* 0.017194657140859698)

793  , 
°©ic_ˇ°
<
öt32
>(65536*16* 0.01759919326505855)

794  , 
°©ic_ˇ°
<
öt32
>(65536*16* 0.01798195744932672)

795  , 
°©ic_ˇ°
<
öt32
>(65536*16* 0.018341882104229386)

796  , 
°©ic_ˇ°
<
öt32
>(65536*16* 0.018678046774501487)

797  , 
°©ic_ˇ°
<
öt32
>(65536*16* 0.018989525183852277)

798  , 
°©ic_ˇ°
<
öt32
>(65536*16* 0.019275463483745325)

799  , 
°©ic_ˇ°
<
öt32
>(65536*16* 0.019535099985330217)

800  , 
°©ic_ˇ°
<
öt32
>(65536*16* 0.019767681230128092)

801  , 
°©ic_ˇ°
<
öt32
>(65536*16* 0.019972616359274192)

802  , 
°©ic_ˇ°
<
öt32
>(65536*16* 0.02014933369102741)

803  , 
°©ic_ˇ°
<
öt32
>(65536*16* 0.020297350637687013)

804  , 
°©ic_ˇ°
<
öt32
>(65536*16* 0.020416241350314838)

805  , 
°©ic_ˇ°
<
öt32
>(65536*16* 0.020505719050281913)

806  , 
°©ic_ˇ°
<
öt32
>(65536*16* 0.020565502954380747)

807  , 
°©ic_ˇ°
<
öt32
>(65536*16* 0.02059542406883178)

825 c⁄° 
öt32
 
	gC44100NTSC
[
NCOEFFS
/2]=

827  
°©ic_ˇ°
<
öt32
>(65536 *16 * 2.7250584077004043E-4)

828  , 
°©ic_ˇ°
<
öt32
>(65536 *16 * -5.6651407794062126E-5)

829  , 
°©ic_ˇ°
<
öt32
>(65536 *16 * -5.387595203270082E-5)

830  , 
°©ic_ˇ°
<
öt32
>(65536 *16 * -5.3104114528112036E-5)

831  , 
°©ic_ˇ°
<
öt32
>(65536 *16 * -5.3927905431407917E-5)

832  , 
°©ic_ˇ°
<
öt32
>(65536 *16 * -5.624810531844495E-5)

833  , 
°©ic_ˇ°
<
öt32
>(65536 *16 * -5.9753966587005594E-5)

834  , 
°©ic_ˇ°
<
öt32
>(65536 *16 * -6.443298022976466E-5)

835  , 
°©ic_ˇ°
<
öt32
>(65536 *16 * -7.002861393823279E-5)

836  , 
°©ic_ˇ°
<
öt32
>(65536 *16 * -7.658937335809571E-5)

837  , 
°©ic_ˇ°
<
öt32
>(65536 *16 * -8.388337472693157E-5)

838  , 
°©ic_ˇ°
<
öt32
>(65536 *16 * -9.20081628039712E-5)

839  , 
°©ic_ˇ°
<
öt32
>(65536 *16 * -1.007311169050114E-4)

840  , 
°©ic_ˇ°
<
öt32
>(65536 *16 * -1.1019992230503533E-4)

841  , 
°©ic_ˇ°
<
öt32
>(65536 *16 * -1.2014773803429516E-4)

842  , 
°©ic_ˇ°
<
öt32
>(65536 *16 * -1.3080398984366903E-4)

843  , 
°©ic_ˇ°
<
öt32
>(65536 *16 * -1.4175865072457003E-4)

844  , 
°©ic_ˇ°
<
öt32
>(65536 *16 * -1.536527853404198E-4)

845  , 
°©ic_ˇ°
<
öt32
>(65536 *16 * -1.6517054562524376E-4)

846  , 
°©ic_ˇ°
<
öt32
>(65536 *16 * -1.7797585116596963E-4)

847  , 
°©ic_ˇ°
<
öt32
>(65536 *16 * -1.909845496405445E-4)

848  , 
°©ic_ˇ°
<
öt32
>(65536 *16 * -2.0389566936141008E-4)

849  , 
°©ic_ˇ°
<
öt32
>(65536 *16 * -2.1726846302640957E-4)

850  , 
°©ic_ˇ°
<
öt32
>(65536 *16 * -2.310008165840215E-4)

851  , 
°©ic_ˇ°
<
öt32
>(65536 *16 * -2.4506881863360544E-4)

852  , 
°©ic_ˇ°
<
öt32
>(65536 *16 * -2.5926465655995895E-4)

853  , 
°©ic_ˇ°
<
öt32
>(65536 *16 * -2.735381275272462E-4)

854  , 
°©ic_ˇ°
<
öt32
>(65536 *16 * -2.878190904612406E-4)

855  , 
°©ic_ˇ°
<
öt32
>(65536 *16 * -3.0209388781875723E-4)

856  , 
°©ic_ˇ°
<
öt32
>(65536 *16 * -3.163448868528516E-4)

857  , 
°©ic_ˇ°
<
öt32
>(65536 *16 * -3.30514980542584E-4)

858  , 
°©ic_ˇ°
<
öt32
>(65536 *16 * -3.4458721564408845E-4)

859  , 
°©ic_ˇ°
<
öt32
>(65536 *16 * -3.5843761692424506E-4)

860  , 
°©ic_ˇ°
<
öt32
>(65536 *16 * -3.720823326733447E-4)

861  , 
°©ic_ˇ°
<
öt32
>(65536 *16 * -3.8529611278848583E-4)

862  , 
°©ic_ˇ°
<
öt32
>(65536 *16 * -3.982435971141635E-4)

863  , 
°©ic_ˇ°
<
öt32
>(65536 *16 * -4.1054225307421383E-4)

864  , 
°©ic_ˇ°
<
öt32
>(65536 *16 * -4.223385042208698E-4)

865  , 
°©ic_ˇ°
<
öt32
>(65536 *16 * -4.3363210365443626E-4)

866  , 
°©ic_ˇ°
<
öt32
>(65536 *16 * -4.440451096331875E-4)

867  , 
°©ic_ˇ°
<
öt32
>(65536 *16 * -4.537334227294333E-4)

868  , 
°©ic_ˇ°
<
öt32
>(65536 *16 * -4.6260960194346025E-4)

869  , 
°©ic_ˇ°
<
öt32
>(65536 *16 * -4.706224417116799E-4)

870  , 
°©ic_ˇ°
<
öt32
>(65536 *16 * -4.776010427698281E-4)

871  , 
°©ic_ˇ°
<
öt32
>(65536 *16 * -4.8350610346281614E-4)

872  , 
°©ic_ˇ°
<
öt32
>(65536 *16 * -4.8826489934975626E-4)

873  , 
°©ic_ˇ°
<
öt32
>(65536 *16 * -4.918511387810396E-4)

874  , 
°©ic_ˇ°
<
öt32
>(65536 *16 * -4.941839548845786E-4)

875  , 
°©ic_ˇ°
<
öt32
>(65536 *16 * -4.95186572618022E-4)

876  , 
°©ic_ˇ°
<
öt32
>(65536 *16 * -4.947817087436606E-4)

877  , 
°©ic_ˇ°
<
öt32
>(65536 *16 * -4.928828353341973E-4)

878  , 
°©ic_ˇ°
<
öt32
>(65536 *16 * -4.894676199661217E-4)

879  , 
°©ic_ˇ°
<
öt32
>(65536 *16 * -4.8443244774343773E-4)

880  , 
°©ic_ˇ°
<
öt32
>(65536 *16 * -4.778002134883142E-4)

881  , 
°©ic_ˇ°
<
öt32
>(65536 *16 * -4.694896704084311E-4)

882  , 
°©ic_ˇ°
<
öt32
>(65536 *16 * -4.593928438902496E-4)

883  , 
°©ic_ˇ°
<
öt32
>(65536 *16 * -4.4763586771533415E-4)

884  , 
°©ic_ˇ°
<
öt32
>(65536 *16 * -4.3399559196764174E-4)

885  , 
°©ic_ˇ°
<
öt32
>(65536 *16 * -4.185187519793231E-4)

886  , 
°©ic_ˇ°
<
öt32
>(65536 *16 * -4.0118338859945383E-4)

887  , 
°©ic_ˇ°
<
öt32
>(65536 *16 * -3.820043675631783E-4)

888  , 
°©ic_ˇ°
<
öt32
>(65536 *16 * -3.6090543967085524E-4)

889  , 
°©ic_ˇ°
<
öt32
>(65536 *16 * -3.379128204177913E-4)

890  , 
°©ic_ˇ°
<
öt32
>(65536 *16 * -3.130247503897743E-4)

891  , 
°©ic_ˇ°
<
öt32
>(65536 *16 * -2.8628759491904673E-4)

892  , 
°©ic_ˇ°
<
öt32
>(65536 *16 * -2.5769205396918157E-4)

893  , 
°©ic_ˇ°
<
öt32
>(65536 *16 * -2.2726228845123853E-4)

894  , 
°©ic_ˇ°
<
öt32
>(65536 *16 * -1.9501222414998665E-4)

895  , 
°©ic_ˇ°
<
öt32
>(65536 *16 * -1.609903786128509E-4)

896  , 
°©ic_ˇ°
<
öt32
>(65536 *16 * -1.2525258280646142E-4)

897  , 
°©ic_ˇ°
<
öt32
>(65536 *16 * -8.786088130641809E-5)

898  , 
°©ic_ˇ°
<
öt32
>(65536 *16 * -4.885883411475722E-5)

899  , 
°©ic_ˇ°
<
öt32
>(65536 *16 * -8.373566315346232E-6)

900  , 
°©ic_ˇ°
<
öt32
>(65536 *16 * 3.362843819360238E-5)

901  , 
°©ic_ˇ°
<
öt32
>(65536 *16 * 7.69302822233031E-5)

902  , 
°©ic_ˇ°
<
öt32
>(65536 *16 * 1.2151249228835434E-4)

903  , 
°©ic_ˇ°
<
öt32
>(65536 *16 * 1.6724878315058612E-4)

904  , 
°©ic_ˇ°
<
öt32
>(65536 *16 * 2.1402171363813576E-4)

905  , 
°©ic_ˇ°
<
öt32
>(65536 *16 * 2.6167305946436103E-4)

906  , 
°©ic_ˇ°
<
öt32
>(65536 *16 * 3.10122854445744E-4)

907  , 
°©ic_ˇ°
<
öt32
>(65536 *16 * 3.5921866691687363E-4)

908  , 
°©ic_ˇ°
<
öt32
>(65536 *16 * 4.0882826181233784E-4)

909  , 
°©ic_ˇ°
<
öt32
>(65536 *16 * 4.5876834733749337E-4)

910  , 
°©ic_ˇ°
<
öt32
>(65536 *16 * 5.089048509923103E-4)

911  , 
°©ic_ˇ°
<
öt32
>(65536 *16 * 5.590621717784201E-4)

912  , 
°©ic_ˇ°
<
öt32
>(65536 *16 * 6.090870406928206E-4)

913  , 
°©ic_ˇ°
<
öt32
>(65536 *16 * 6.587768488216395E-4)

914  , 
°©ic_ˇ°
<
öt32
>(65536 *16 * 7.079653533691067E-4)

915  , 
°©ic_ˇ°
<
öt32
>(65536 *16 * 7.56434905175643E-4)

916  , 
°©ic_ˇ°
<
öt32
>(65536 *16 * 8.040537989021466E-4)

917  , 
°©ic_ˇ°
<
öt32
>(65536 *16 * 8.505576158388297E-4)

918  , 
°©ic_ˇ°
<
öt32
>(65536 *16 * 8.958345533585908E-4)

919  , 
°©ic_ˇ°
<
öt32
>(65536 *16 * 9.396170235698547E-4)

920  , 
°©ic_ˇ°
<
öt32
>(65536 *16 * 9.817197600520506E-4)

921  , 
°©ic_ˇ°
<
öt32
>(65536 *16 * 0.0010219440113723856)

922  , 
°©ic_ˇ°
<
öt32
>(65536 *16 * 0.0010600976395277468)

923  , 
°©ic_ˇ°
<
öt32
>(65536 *16 * 0.0010959465933076378)

924  , 
°©ic_ˇ°
<
öt32
>(65536 *16 * 0.0011293213059753442)

925  , 
°©ic_ˇ°
<
öt32
>(65536 *16 * 0.001160012212002378)

926  , 
°©ic_ˇ°
<
öt32
>(65536 *16 * 0.0011878334518393636)

927  , 
°©ic_ˇ°
<
öt32
>(65536 *16 * 0.0012125633172564833)

928  , 
°©ic_ˇ°
<
öt32
>(65536 *16 * 0.0012340340153475305)

929  , 
°©ic_ˇ°
<
öt32
>(65536 *16 * 0.0012520523486154733)

930  , 
°©ic_ˇ°
<
öt32
>(65536 *16 * 0.001266464375255462)

931  , 
°©ic_ˇ°
<
öt32
>(65536 *16 * 0.001277070934117742)

932  , 
°©ic_ˇ°
<
öt32
>(65536 *16 * 0.0012837351142488396)

933  , 
°©ic_ˇ°
<
öt32
>(65536 *16 * 0.0012862625405968798)

934  , 
°©ic_ˇ°
<
öt32
>(65536 *16 * 0.0012845614834936406)

935  , 
°©ic_ˇ°
<
öt32
>(65536 *16 * 0.0012784420593778636)

936  , 
°©ic_ˇ°
<
öt32
>(65536 *16 * 0.0012678178114382621)

937  , 
°©ic_ˇ°
<
öt32
>(65536 *16 * 0.0012525556826375537)

938  , 
°©ic_ˇ°
<
öt32
>(65536 *16 * 0.0012325473943852084)

939  , 
°©ic_ˇ°
<
öt32
>(65536 *16 * 0.0012077126268838676)

940  , 
°©ic_ˇ°
<
öt32
>(65536 *16 * 0.0011779966448355029)

941  , 
°©ic_ˇ°
<
öt32
>(65536 *16 * 0.0011433146771737655)

942  , 
°©ic_ˇ°
<
öt32
>(65536 *16 * 0.0011036347058885887)

943  , 
°©ic_ˇ°
<
öt32
>(65536 *16 * 0.0010589202139950945)

944  , 
°©ic_ˇ°
<
öt32
>(65536 *16 * 0.0010091683044254098)

945  , 
°©ic_ˇ°
<
öt32
>(65536 *16 * 9.543624468571229E-4)

946  , 
°©ic_ˇ°
<
öt32
>(65536 *16 * 8.945398819399117E-4)

947  , 
°©ic_ˇ°
<
öt32
>(65536 *16 * 8.297313883125644E-4)

948  , 
°©ic_ˇ°
<
öt32
>(65536 *16 * 7.600155199968718E-4)

949  , 
°©ic_ˇ°
<
öt32
>(65536 *16 * 6.854405952299358E-4)

950  , 
°©ic_ˇ°
<
öt32
>(65536 *16 * 6.061236114458317E-4)

951  , 
°©ic_ˇ°
<
öt32
>(65536 *16 * 5.221478191516476E-4)

952  , 
°©ic_ˇ°
<
öt32
>(65536 *16 * 4.336813620599164E-4)

953  , 
°©ic_ˇ°
<
öt32
>(65536 *16 * 3.408549526515998E-4)

954  , 
°©ic_ˇ°
<
öt32
>(65536 *16 * 2.438450825114285E-4)

955  , 
°©ic_ˇ°
<
öt32
>(65536 *16 * 1.428494911857926E-4)

956  , 
°©ic_ˇ°
<
öt32
>(65536 *16 * 3.8067640594361634E-5)

957  , 
°©ic_ˇ°
<
öt32
>(65536 *16 * -7.027035111775681E-5)

958  , 
°©ic_ˇ°
<
öt32
>(65536 *16 * -1.818984143827126E-4)

959  , 
°©ic_ˇ°
<
öt32
>(65536 *16 * -2.9656343184630157E-4)

960  , 
°©ic_ˇ°
<
öt32
>(65536 *16 * -4.1397802421901906E-4)

961  , 
°©ic_ˇ°
<
öt32
>(65536 *16 * -5.33838500742085E-4)

962  , 
°©ic_ˇ°
<
öt32
>(65536 *16 * -6.558110253978588E-4)

963  , 
°©ic_ˇ°
<
öt32
>(65536 *16 * -7.795655816897978E-4)

964  , 
°©ic_ˇ°
<
öt32
>(65536 *16 * -9.047371821667003E-4)

965  , 
°©ic_ˇ°
<
öt32
>(65536 *16 * -0.001030961345825847)

966  , 
°©ic_ˇ°
<
öt32
>(65536 *16 * -0.0011578367988084777)

967  , 
°©ic_ˇ°
<
öt32
>(65536 *16 * -0.0012849810572319298)

968  , 
°©ic_ˇ°
<
öt32
>(65536 *16 * -0.0014119662266064482)

969  , 
°©ic_ˇ°
<
öt32
>(65536 *16 * -0.0015383759515758101)

970  , 
°©ic_ˇ°
<
öt32
>(65536 *16 * -0.001663756794188296)

971  , 
°©ic_ˇ°
<
öt32
>(65536 *16 * -0.0017876541594460456)

972  , 
°©ic_ˇ°
<
öt32
>(65536 *16 * -0.001909621722046808)

973  , 
°©ic_ˇ°
<
öt32
>(65536 *16 * -0.0020291786719378088)

974  , 
°©ic_ˇ°
<
öt32
>(65536 *16 * -0.002145855089743562)

975  , 
°©ic_ˇ°
<
öt32
>(65536 *16 * -0.002259171910476534)

976  , 
°©ic_ˇ°
<
öt32
>(65536 *16 * -0.0023686314802222655)

977  , 
°©ic_ˇ°
<
öt32
>(65536 *16 * -0.002473745572697707)

978  , 
°©ic_ˇ°
<
öt32
>(65536 *16 * -0.0025740277587192853)

979  , 
°©ic_ˇ°
<
öt32
>(65536 *16 * -0.0026689831666099955)

980  , 
°©ic_ˇ°
<
öt32
>(65536 *16 * -0.0027581124255643377)

981  , 
°©ic_ˇ°
<
öt32
>(65536 *16 * -0.0028409282136656177)

982  , 
°©ic_ˇ°
<
öt32
>(65536 *16 * -0.0029169432593640367)

983  , 
°©ic_ˇ°
<
öt32
>(65536 *16 * -0.002985680612410139)

984  , 
°©ic_ˇ°
<
öt32
>(65536 *16 * -0.003046658228485494)

985  , 
°©ic_ˇ°
<
öt32
>(65536 *16 * -0.003099414222252269)

986  , 
°©ic_ˇ°
<
öt32
>(65536 *16 * -0.0031434902530511595)

987  , 
°©ic_ˇ°
<
öt32
>(65536 *16 * -0.003178436798255356)

988  , 
°©ic_ˇ°
<
öt32
>(65536 *16 * -0.0032038260756887147)

989  , 
°©ic_ˇ°
<
öt32
>(65536 *16 * -0.003219225355080285)

990  , 
°©ic_ˇ°
<
öt32
>(65536 *16 * -0.0032242502222488744)

991  , 
°©ic_ˇ°
<
öt32
>(65536 *16 * -0.003218506103318342)

992  , 
°©ic_ˇ°
<
öt32
>(65536 *16 * -0.003201625222636992)

993  , 
°©ic_ˇ°
<
öt32
>(65536 *16 * -0.003173259488065382)

994  , 
°©ic_ˇ°
<
öt32
>(65536 *16 * -0.0031330803817718332)

995  , 
°©ic_ˇ°
<
öt32
>(65536 *16 * -0.0030807779128908526)

996  , 
°©ic_ˇ°
<
öt32
>(65536 *16 * -0.0030160821637947783)

997  , 
°©ic_ˇ°
<
öt32
>(65536 *16 * -0.0029387362752889335)

998  , 
°©ic_ˇ°
<
öt32
>(65536 *16 * -0.002848510131379585)

999  , 
°©ic_ˇ°
<
öt32
>(65536 *16 * -0.0027451998188029363)

1000  , 
°©ic_ˇ°
<
öt32
>(65536 *16 * -0.00262863682904045)

1001  , 
°©ic_ˇ°
<
öt32
>(65536 *16 * -0.0024986780420415064)

1002  , 
°©ic_ˇ°
<
öt32
>(65536 *16 * -0.0023552114528323513)

1003  , 
°©ic_ˇ°
<
öt32
>(65536 *16 * -0.0021981491527779964)

1004  , 
°©ic_ˇ°
<
öt32
>(65536 *16 * -0.0020274504745732714)

1005  , 
°©ic_ˇ°
<
öt32
>(65536 *16 * -0.0018430877753141852)

1006  , 
°©ic_ˇ°
<
öt32
>(65536 *16 * -0.0016450910502005863)

1007  , 
°©ic_ˇ°
<
öt32
>(65536 *16 * -0.0014334955802048866)

1008  , 
°©ic_ˇ°
<
öt32
>(65536 *16 * -0.0012083983821827642)

1009  , 
°©ic_ˇ°
<
öt32
>(65536 *16 * -9.699135443572468E-4)

1010  , 
°©ic_ˇ°
<
öt32
>(65536 *16 * -7.181935207475589E-4)

1011  , 
°©ic_ˇ°
<
öt32
>(65536 *16 * -4.534224887286362E-4)

1012  , 
°©ic_ˇ°
<
öt32
>(65536 *16 * -1.758311300125605E-4)

1013  , 
°©ic_ˇ°
<
öt32
>(65536 *16 * 1.1433027008948132E-4)

1014  , 
°©ic_ˇ°
<
öt32
>(65536 *16 * 4.1675921199616097E-4)

1015  , 
°©ic_ˇ°
<
öt32
>(65536 *16 * 7.311320710094336E-4)

1016  , 
°©ic_ˇ°
<
öt32
>(65536 *16 * 0.0010570872458505827)

1017  , 
°©ic_ˇ°
<
öt32
>(65536 *16 * 0.0013942372682560795)

1018  , 
°©ic_ˇ°
<
öt32
>(65536 *16 * 0.001742148094642797)

1019  , 
°©ic_ˇ°
<
öt32
>(65536 *16 * 0.002100362793433286)

1020  , 
°©ic_ˇ°
<
öt32
>(65536 *16 * 0.0024683818857210646)

1021  , 
°©ic_ˇ°
<
öt32
>(65536 *16 * 0.002845695057494279)

1022  , 
°©ic_ˇ°
<
öt32
>(65536 *16 * 0.0032317385772924275)

1023  , 
°©ic_ˇ°
<
öt32
>(65536 *16 * 0.0036259433326630884)

1024  , 
°©ic_ˇ°
<
öt32
>(65536 *16 * 0.0040276894120370626)

1025  , 
°©ic_ˇ°
<
öt32
>(65536 *16 * 0.004436353627556968)

1026  , 
°©ic_ˇ°
<
öt32
>(65536 *16 * 0.004851271439526238)

1027  , 
°©ic_ˇ°
<
öt32
>(65536 *16 * 0.005271762758295799)

1028  , 
°©ic_ˇ°
<
öt32
>(65536 *16 * 0.005697120565601845)

1029  , 
°©ic_ˇ°
<
öt32
>(65536 *16 * 0.006126626859240469)

1030  , 
°©ic_ˇ°
<
öt32
>(65536 *16 * 0.006559527746778011)

1031  , 
°©ic_ˇ°
<
öt32
>(65536 *16 * 0.0069950693344747504)

1032  , 
°©ic_ˇ°
<
öt32
>(65536 *16 * 0.007432470090915211)

1033  , 
°©ic_ˇ°
<
öt32
>(65536 *16 * 0.007870944336430185)

1034  , 
°©ic_ˇ°
<
öt32
>(65536 *16 * 0.008309688701943495)

1035  , 
°©ic_ˇ°
<
öt32
>(65536 *16 * 0.008747898549370043)

1036  , 
°©ic_ˇ°
<
öt32
>(65536 *16 * 0.009184747205291654)

1037  , 
°©ic_ˇ°
<
öt32
>(65536 *16 * 0.009619414724898365)

1038  , 
°©ic_ˇ°
<
öt32
>(65536 *16 * 0.010051063453485451)

1039  , 
°©ic_ˇ°
<
öt32
>(65536 *16 * 0.010478876316671397)

1040  , 
°©ic_ˇ°
<
öt32
>(65536 *16 * 0.010902016899039163)

1041  , 
°©ic_ˇ°
<
öt32
>(65536 *16 * 0.011319665474466693)

1042  , 
°©ic_ˇ°
<
öt32
>(65536 *16 * 0.011730992134403782)

1043  , 
°©ic_ˇ°
<
öt32
>(65536 *16 * 0.012135186113163639)

1044  , 
°©ic_ˇ°
<
öt32
>(65536 *16 * 0.01253143889871197)

1045  , 
°©ic_ˇ°
<
öt32
>(65536 *16 * 0.012918956981226547)

1046  , 
°©ic_ˇ°
<
öt32
>(65536 *16 * 0.013296952886747157)

1047  , 
°©ic_ˇ°
<
öt32
>(65536 *16 * 0.013664665893392403)

1048  , 
°©ic_ˇ°
<
öt32
>(65536 *16 * 0.014021339353548561)

1049  , 
°©ic_ˇ°
<
öt32
>(65536 *16 * 0.014366244972764902)

1050  , 
°©ic_ˇ°
<
öt32
>(65536 *16 * 0.014698670942210527)

1051  , 
°©ic_ˇ°
<
öt32
>(65536 *16 * 0.015017930945351435)

1052  , 
°©ic_ˇ°
<
öt32
>(65536 *16 * 0.015323359168800435)

1053  , 
°©ic_ˇ°
<
öt32
>(65536 *16 * 0.015614322198635518)

1054  , 
°©ic_ˇ°
<
öt32
>(65536 *16 * 0.015890204972590742)

1055  , 
°©ic_ˇ°
<
öt32
>(65536 *16 * 0.016150433344740527)

1056  , 
°©ic_ˇ°
<
öt32
>(65536 *16 * 0.01639445378257351)

1057  , 
°©ic_ˇ°
<
öt32
>(65536 *16 * 0.016621758349582072)

1058  , 
°©ic_ˇ°
<
öt32
>(65536 *16 * 0.01683186471138077)

1059  , 
°©ic_ˇ°
<
öt32
>(65536 *16 * 0.01702432745775747)

1060  , 
°©ic_ˇ°
<
öt32
>(65536 *16 * 0.017198732908190056)

1061  , 
°©ic_ˇ°
<
öt32
>(65536 *16 * 0.017354710361561963)

1062  , 
°©ic_ˇ°
<
öt32
>(65536 *16 * 0.017491928210652433)

1063  , 
°©ic_ˇ°
<
öt32
>(65536 *16 * 0.017610096156964024)

1064  , 
°©ic_ˇ°
<
öt32
>(65536 *16 * 0.017708958417438553)

1065  , 
°©ic_ˇ°
<
öt32
>(65536 *16 * 0.017788304726419644)

1066  , 
°©ic_ˇ°
<
öt32
>(65536 *16 * 0.01784796484627723)

1067  , 
°©ic_ˇ°
<
öt32
>(65536 *16 * 0.017887808513528385)

1068  , 
°©ic_ˇ°
<
öt32
>(65536 *16 * 0.01790775243433271)

1083 c⁄° 
öt32
 
	gC48000PAL
[
NCOEFFS
/2]=

1085  
°©ic_ˇ°
<
öt32
>(65536 *16 * -4.8720337170268194E-4)

1086  , 
°©ic_ˇ°
<
öt32
>(65536 *16 * 7.629902642634879E-7)

1087  , 
°©ic_ˇ°
<
öt32
>(65536 *16 * 2.1378369687164975E-6)

1088  , 
°©ic_ˇ°
<
öt32
>(65536 *16 * 4.2506426520122444E-6)

1089  , 
°©ic_ˇ°
<
öt32
>(65536 *16 * 7.369889860416342E-6)

1090  , 
°©ic_ˇ°
<
öt32
>(65536 *16 * 1.1216062943011637E-5)

1091  , 
°©ic_ˇ°
<
öt32
>(65536 *16 * 1.6073843505677063E-5)

1092  , 
°©ic_ˇ°
<
öt32
>(65536 *16 * 2.1633099120040373E-5)

1093  , 
°©ic_ˇ°
<
öt32
>(65536 *16 * 2.8206508485377597E-5)

1094  , 
°©ic_ˇ°
<
öt32
>(65536 *16 * 3.543629776593455E-5)

1095  , 
°©ic_ˇ°
<
öt32
>(65536 *16 * 4.368764327716006E-5)

1096  , 
°©ic_ˇ°
<
öt32
>(65536 *16 * 5.2518982409171E-5)

1097  , 
°©ic_ˇ°
<
öt32
>(65536 *16 * 6.239757141317561E-5)

1098  , 
°©ic_ˇ°
<
öt32
>(65536 *16 * 7.27096511997309E-5)

1099  , 
°©ic_ˇ°
<
öt32
>(65536 *16 * 8.417180660805913E-5)

1100  , 
°©ic_ˇ°
<
öt32
>(65536 *16 * 9.556951705928003E-5)

1101  , 
°©ic_ˇ°
<
öt32
>(65536 *16 * 1.0902571193097876E-4)

1102  , 
°©ic_ˇ°
<
öt32
>(65536 *16 * 1.227237340685471E-4)

1103  , 
°©ic_ˇ°
<
öt32
>(65536 *16 * 1.3608963828565135E-4)

1104  , 
°©ic_ˇ°
<
öt32
>(65536 *16 * 1.5074291732163737E-4)

1105  , 
°©ic_ˇ°
<
öt32
>(65536 *16 * 1.654957671774518E-4)

1106  , 
°©ic_ˇ°
<
öt32
>(65536 *16 * 1.8094544537755017E-4)

1107  , 
°©ic_ˇ°
<
öt32
>(65536 *16 * 1.9650254639058925E-4)

1108  , 
°©ic_ˇ°
<
öt32
>(65536 *16 * 2.124977005396817E-4)

1109  , 
°©ic_ˇ°
<
öt32
>(65536 *16 * 2.2850169154416925E-4)

1110  , 
°©ic_ˇ°
<
öt32
>(65536 *16 * 2.447269340662641E-4)

1111  , 
°©ic_ˇ°
<
öt32
>(65536 *16 * 2.60813097374866E-4)

1112  , 
°©ic_ˇ°
<
öt32
>(65536 *16 * 2.769089011403406E-4)

1113  , 
°©ic_ˇ°
<
öt32
>(65536 *16 * 2.926838284872595E-4)

1114  , 
°©ic_ˇ°
<
öt32
>(65536 *16 * 3.082587328683191E-4)

1115  , 
°©ic_ˇ°
<
öt32
>(65536 *16 * 3.233018169377691E-4)

1116  , 
°©ic_ˇ°
<
öt32
>(65536 *16 * 3.379664790017549E-4)

1117  , 
°©ic_ˇ°
<
öt32
>(65536 *16 * 3.520147829064225E-4)

1118  , 
°©ic_ˇ°
<
öt32
>(65536 *16 * 3.6489502104188965E-4)

1119  , 
°©ic_ˇ°
<
öt32
>(65536 *16 * 3.771837837785839E-4)

1120  , 
°©ic_ˇ°
<
öt32
>(65536 *16 * 3.8841744550992556E-4)

1121  , 
°©ic_ˇ°
<
öt32
>(65536 *16 * 3.985152578693797E-4)

1122  , 
°©ic_ˇ°
<
öt32
>(65536 *16 * 4.0737410559796126E-4)

1123  , 
°©ic_ˇ°
<
öt32
>(65536 *16 * 4.1485052511765913E-4)

1124  , 
°©ic_ˇ°
<
öt32
>(65536 *16 * 4.2087321591616255E-4)

1125  , 
°©ic_ˇ°
<
öt32
>(65536 *16 * 4.252880030529943E-4)

1126  , 
°©ic_ˇ°
<
öt32
>(65536 *16 * 4.2804175098790727E-4)

1127  , 
°©ic_ˇ°
<
öt32
>(65536 *16 * 4.289792011350111E-4)

1128  , 
°©ic_ˇ°
<
öt32
>(65536 *16 * 4.280677040429387E-4)

1129  , 
°©ic_ˇ°
<
öt32
>(65536 *16 * 4.251526022872329E-4)

1130  , 
°©ic_ˇ°
<
öt32
>(65536 *16 * 4.202312572840644E-4)

1131  , 
°©ic_ˇ°
<
öt32
>(65536 *16 * 4.1313629237647344E-4)

1132  , 
°©ic_ˇ°
<
öt32
>(65536 *16 * 4.0393669855985745E-4)

1133  , 
°©ic_ˇ°
<
öt32
>(65536 *16 * 3.9229544134295797E-4)

1134  , 
°©ic_ˇ°
<
öt32
>(65536 *16 * 3.785081882385653E-4)

1135  , 
°©ic_ˇ°
<
öt32
>(65536 *16 * 3.624387298611128E-4)

1136  , 
°©ic_ˇ°
<
öt32
>(65536 *16 * 3.439609793120755E-4)

1137  , 
°©ic_ˇ°
<
öt32
>(65536 *16 * 3.2317107312926493E-4)

1138  , 
°©ic_ˇ°
<
öt32
>(65536 *16 * 3.0001522643985015E-4)

1139  , 
°©ic_ˇ°
<
öt32
>(65536 *16 * 2.7456037312211196E-4)

1140  , 
°©ic_ˇ°
<
öt32
>(65536 *16 * 2.468022375847908E-4)

1141  , 
°©ic_ˇ°
<
öt32
>(65536 *16 * 2.1682011116032351E-4)

1142  , 
°©ic_ˇ°
<
öt32
>(65536 *16 * 1.846463359087917E-4)

1143  , 
°©ic_ˇ°
<
öt32
>(65536 *16 * 1.5038519581308458E-4)

1144  , 
°©ic_ˇ°
<
öt32
>(65536 *16 * 1.1409999503195986E-4)

1145  , 
°©ic_ˇ°
<
öt32
>(65536 *16 * 7.592602477010921E-5)

1146  , 
°©ic_ˇ°
<
öt32
>(65536 *16 * 3.594949037485983E-5)

1147  , 
°©ic_ˇ°
<
öt32
>(65536 *16 * -5.654205953473915E-6)

1148  , 
°©ic_ˇ°
<
öt32
>(65536 *16 * -4.8796158887641113E-5)

1149  , 
°©ic_ˇ°
<
öt32
>(65536 *16 * -9.324450907374415E-5)

1150  , 
°©ic_ˇ°
<
öt32
>(65536 *16 * -1.3875102646747199E-4)

1151  , 
°©ic_ˇ°
<
öt32
>(65536 *16 * -1.853099936736042E-4)

1152  , 
°©ic_ˇ°
<
öt32
>(65536 *16 * -2.3256519878196182E-4)

1153  , 
°©ic_ˇ°
<
öt32
>(65536 *16 * -2.803629983423417E-4)

1154  , 
°©ic_ˇ°
<
öt32
>(65536 *16 * -3.284299717573991E-4)

1155  , 
°©ic_ˇ°
<
öt32
>(65536 *16 * -3.7655572805983734E-4)

1156  , 
°©ic_ˇ°
<
öt32
>(65536 *16 * -4.244648731259925E-4)

1157  , 
°©ic_ˇ°
<
öt32
>(65536 *16 * -4.7191652130487173E-4)

1158  , 
°©ic_ˇ°
<
öt32
>(65536 *16 * -5.18626812434502E-4)

1159  , 
°©ic_ˇ°
<
öt32
>(65536 *16 * -5.64334322901072E-4)

1160  , 
°©ic_ˇ°
<
öt32
>(65536 *16 * -6.087503654593899E-4)

1161  , 
°©ic_ˇ°
<
öt32
>(65536 *16 * -6.515995849807032E-4)

1162  , 
°©ic_ˇ°
<
öt32
>(65536 *16 * -6.925935510204477E-4)

1163  , 
°©ic_ˇ°
<
öt32
>(65536 *16 * -7.314432865833455E-4)

1164  , 
°©ic_ˇ°
<
öt32
>(65536 *16 * -7.678735923848921E-4)

1165  , 
°©ic_ˇ°
<
öt32
>(65536 *16 * -8.015359919770463E-4)

1166  , 
°©ic_ˇ°
<
öt32
>(65536 *16 * -8.322768680565776E-4)

1167  , 
°©ic_ˇ°
<
öt32
>(65536 *16 * -8.597539203190856E-4)

1168  , 
°©ic_ˇ°
<
öt32
>(65536 *16 * -8.836879776280238E-4)

1169  , 
°©ic_ˇ°
<
öt32
>(65536 *16 * -9.038629010388075E-4)

1170  , 
°©ic_ˇ°
<
öt32
>(65536 *16 * -9.200080217158554E-4)

1171  , 
°©ic_ˇ°
<
öt32
>(65536 *16 * -9.319235257639778E-4)

1172  , 
°©ic_ˇ°
<
öt32
>(65536 *16 * -9.393690949611698E-4)

1173  , 
°©ic_ˇ°
<
öt32
>(65536 *16 * -9.421725179420662E-4)

1174  , 
°©ic_ˇ°
<
öt32
>(65536 *16 * -9.401299048871544E-4)

1175  , 
°©ic_ˇ°
<
öt32
>(65536 *16 * -9.33106896645869E-4)

1176  , 
°©ic_ˇ°
<
öt32
>(65536 *16 * -9.209400636174311E-4)

1177  , 
°©ic_ˇ°
<
öt32
>(65536 *16 * -9.035401279622776E-4)

1178  , 
°©ic_ˇ°
<
öt32
>(65536 *16 * -8.807854817776823E-4)

1179  , 
°©ic_ˇ°
<
öt32
>(65536 *16 * -8.526430615286829E-4)

1180  , 
°©ic_ˇ°
<
öt32
>(65536 *16 * -8.190296190822509E-4)

1181  , 
°©ic_ˇ°
<
öt32
>(65536 *16 * -7.799980167439345E-4)

1182  , 
°©ic_ˇ°
<
öt32
>(65536 *16 * -7.355478199155667E-4)

1183  , 
°©ic_ˇ°
<
öt32
>(65536 *16 * -6.8567697874281E-4)

1184  , 
°©ic_ˇ°
<
öt32
>(65536 *16 * -6.305240657493408E-4)

1185  , 
°©ic_ˇ°
<
öt32
>(65536 *16 * -5.701694385732142E-4)

1186  , 
°©ic_ˇ°
<
öt32
>(65536 *16 * -5.047740591296687E-4)

1187  , 
°©ic_ˇ°
<
öt32
>(65536 *16 * -4.344980221283718E-4)

1188  , 
°©ic_ˇ°
<
öt32
>(65536 *16 * -3.595556715693896E-4)

1189  , 
°©ic_ˇ°
<
öt32
>(65536 *16 * -2.8017864491759883E-4)

1190  , 
°©ic_ˇ°
<
öt32
>(65536 *16 * -1.9664106446578853E-4)

1191  , 
°©ic_ˇ°
<
öt32
>(65536 *16 * -1.0924056590418239E-4)

1192  , 
°©ic_ˇ°
<
öt32
>(65536 *16 * -1.831009861307028E-5)

1193  , 
°©ic_ˇ°
<
öt32
>(65536 *16 * 7.579029921420169E-5)

1194  , 
°©ic_ˇ°
<
öt32
>(65536 *16 * 1.726696848384902E-4)

1195  , 
°©ic_ˇ°
<
öt32
>(65536 *16 * 2.719067221880469E-4)

1196  , 
°©ic_ˇ°
<
öt32
>(65536 *16 * 3.7305728261123155E-4)

1197  , 
°©ic_ˇ°
<
öt32
>(65536 *16 * 4.7562651195605295E-4)

1198  , 
°©ic_ˇ°
<
öt32
>(65536 *16 * 5.791888527128953E-4)

1199  , 
°©ic_ˇ°
<
öt32
>(65536 *16 * 6.831673135667645E-4)

1200  , 
°©ic_ˇ°
<
öt32
>(65536 *16 * 7.870493762901182E-4)

1201  , 
°©ic_ˇ°
<
öt32
>(65536 *16 * 8.902822670362451E-4)

1202  , 
°©ic_ˇ°
<
öt32
>(65536 *16 * 9.923024258505538E-4)

1203  , 
°©ic_ˇ°
<
öt32
>(65536 *16 * 0.0010925350458368308)

1204  , 
°©ic_ˇ°
<
öt32
>(65536 *16 * 0.0011903898503065698)

1205  , 
°©ic_ˇ°
<
öt32
>(65536 *16 * 0.0012852771482304163)

1206  , 
°©ic_ˇ°
<
öt32
>(65536 *16 * 0.0013765956662458894)

1207  , 
°©ic_ˇ°
<
öt32
>(65536 *16 * 0.001463753120426749)

1208  , 
°©ic_ˇ°
<
öt32
>(65536 *16 * 0.001546148019165285)

1209  , 
°©ic_ˇ°
<
öt32
>(65536 *16 * 0.0016231971391851225)

1210  , 
°©ic_ˇ°
<
öt32
>(65536 *16 * 0.0016943089588603764)

1211  , 
°©ic_ˇ°
<
öt32
>(65536 *16 * 0.0017589264521182184)

1212  , 
°©ic_ˇ°
<
öt32
>(65536 *16 * 0.001816477825843157)

1213  , 
°©ic_ˇ°
<
öt32
>(65536 *16 * 0.001866465750234791)

1214  , 
°©ic_ˇ°
<
öt32
>(65536 *16 * 0.001908351881851273)

1215  , 
°©ic_ˇ°
<
öt32
>(65536 *16 * 0.0019416355874888774)

1216  , 
°©ic_ˇ°
<
öt32
>(65536 *16 * 0.0019658912100497094)

1217  , 
°©ic_ˇ°
<
öt32
>(65536 *16 * 0.0019806705540431754)

1218  , 
°©ic_ˇ°
<
öt32
>(65536 *16 * 0.001985602463070219)

1219  , 
°©ic_ˇ°
<
öt32
>(65536 *16 * 0.0019803173347810094)

1220  , 
°©ic_ˇ°
<
öt32
>(65536 *16 * 0.001964518487218229)

1221  , 
°©ic_ˇ°
<
öt32
>(65536 *16 * 0.00193792749109128)

1222  , 
°©ic_ˇ°
<
öt32
>(65536 *16 * 0.0019003361153152295)

1223  , 
°©ic_ˇ°
<
öt32
>(65536 *16 * 0.0018515636696845045)

1224  , 
°©ic_ˇ°
<
öt32
>(65536 *16 * 0.0017915008584460717)

1225  , 
°©ic_ˇ°
<
öt32
>(65536 *16 * 0.0017200735452676211)

1226  , 
°©ic_ˇ°
<
öt32
>(65536 *16 * 0.0016372830430278298)

1227  , 
°©ic_ˇ°
<
öt32
>(65536 *16 * 0.0015431709906056357)

1228  , 
°©ic_ˇ°
<
öt32
>(65536 *16 * 0.0014378573929982352)

1229  , 
°©ic_ˇ°
<
öt32
>(65536 *16 * 0.0013215084987890104)

1230  , 
°©ic_ˇ°
<
öt32
>(65536 *16 * 0.001194328283068528)

1231  , 
°©ic_ˇ°
<
öt32
>(65536 *16 * 0.0010566468386934231)

1232  , 
°©ic_ˇ°
<
öt32
>(65536 *16 * 9.088002025373218E-4)

1233  , 
°©ic_ˇ°
<
öt32
>(65536 *16 * 7.512135584215806E-4)

1234  , 
°©ic_ˇ°
<
öt32
>(65536 *16 * 5.843621536328689E-4)

1235  , 
°©ic_ˇ°
<
öt32
>(65536 *16 * 4.087894375795271E-4)

1236  , 
°©ic_ˇ°
<
öt32
>(65536 *16 * 2.2510227575334467E-4)

1237  , 
°©ic_ˇ°
<
öt32
>(65536 *16 * 3.396239791846655E-5)

1238  , 
°©ic_ˇ°
<
öt32
>(65536 *16 * -1.6390294871759475E-4)

1239  , 
°©ic_ˇ°
<
öt32
>(65536 *16 * -3.6771789280231503E-4)

1240  , 
°©ic_ˇ°
<
öt32
>(65536 *16 * -5.766405458635558E-4)

1241  , 
°©ic_ˇ°
<
öt32
>(65536 *16 * -7.897872933737203E-4)

1242  , 
°©ic_ˇ°
<
öt32
>(65536 *16 * -0.001006209757480115)

1243  , 
°©ic_ˇ°
<
öt32
>(65536 *16 * -0.0012249304977170316)

1244  , 
°©ic_ˇ°
<
öt32
>(65536 *16 * -0.0014449054341312839)

1245  , 
°©ic_ˇ°
<
öt32
>(65536 *16 * -0.0016650898600315796)

1246  , 
°©ic_ˇ°
<
öt32
>(65536 *16 * -0.001884343774622382)

1247  , 
°©ic_ˇ°
<
öt32
>(65536 *16 * -0.0021015342465919864)

1248  , 
°©ic_ˇ°
<
öt32
>(65536 *16 * -0.0023154975831354337)

1249  , 
°©ic_ˇ°
<
öt32
>(65536 *16 * -0.0025250324219407566)

1250  , 
°©ic_ˇ°
<
öt32
>(65536 *16 * -0.0027289312457094736)

1251  , 
°©ic_ˇ°
<
öt32
>(65536 *16 * -0.0029259546931934967)

1252  , 
°©ic_ˇ°
<
öt32
>(65536 *16 * -0.003114871201398419)

1253  , 
°©ic_ˇ°
<
öt32
>(65536 *16 * -0.003294430723892981)

1254  , 
°©ic_ˇ°
<
öt32
>(65536 *16 * -0.003463396424710959)

1255  , 
°©ic_ˇ°
<
öt32
>(65536 *16 * -0.003620525188769811)

1256  , 
°©ic_ˇ°
<
öt32
>(65536 *16 * -0.0037645967189351955)

1257  , 
°©ic_ˇ°
<
öt32
>(65536 *16 * -0.003894396916361478)

1258  , 
°©ic_ˇ°
<
öt32
>(65536 *16 * -0.00400874728567525)

1259  , 
°©ic_ˇ°
<
öt32
>(65536 *16 * -0.004106485394068385)

1260  , 
°©ic_ˇ°
<
öt32
>(65536 *16 * -0.004186497692846864)

1261  , 
°©ic_ˇ°
<
öt32
>(65536 *16 * -0.004247692032125654)

1262  , 
°©ic_ˇ°
<
öt32
>(65536 *16 * -0.004289020763525844)

1263  , 
°©ic_ˇ°
<
öt32
>(65536 *16 * -0.0043095197889136795)

1264  , 
°©ic_ˇ°
<
öt32
>(65536 *16 * -0.004308238489219152)

1265  , 
°©ic_ˇ°
<
öt32
>(65536 *16 * -0.004284317631022625)

1266  , 
°©ic_ˇ°
<
öt32
>(65536 *16 * -0.0042369380515990835)

1267  , 
°©ic_ˇ°
<
öt32
>(65536 *16 * -0.004165372803509635)

1268  , 
°©ic_ˇ°
<
öt32
>(65536 *16 * -0.004068956516951112)

1269  , 
°©ic_ˇ°
<
öt32
>(65536 *16 * -0.003947110543306579)

1270  , 
°©ic_ˇ°
<
öt32
>(65536 *16 * -0.003799332887739826)

1271  , 
°©ic_ˇ°
<
öt32
>(65536 *16 * -0.0036252122359255057)

1272  , 
°©ic_ˇ°
<
öt32
>(65536 *16 * -0.0034244255727248728)

1273  , 
°©ic_ˇ°
<
öt32
>(65536 *16 * -0.0031967441992062605)

1274  , 
°©ic_ˇ°
<
öt32
>(65536 *16 * -0.0029420359603045624)

1275  , 
°©ic_ˇ°
<
öt32
>(65536 *16 * -0.002660262473612329)

1276  , 
°©ic_ˇ°
<
öt32
>(65536 *16 * -0.0023514913391939015)

1277  , 
°©ic_ˇ°
<
öt32
>(65536 *16 * -0.002015874218170038)

1278  , 
°©ic_ˇ°
<
öt32
>(65536 *16 * -0.0016537021922741356)

1279  , 
°©ic_ˇ°
<
öt32
>(65536 *16 * -0.0012653326032471951)

1280  , 
°©ic_ˇ°
<
öt32
>(65536 *16 * -8.512425489658283E-4)

1281  , 
°©ic_ˇ°
<
öt32
>(65536 *16 * -4.12008134196091E-4)

1282  , 
°©ic_ˇ°
<
öt32
>(65536 *16 * 5.169160678832697E-5)

1283  , 
°©ic_ˇ°
<
öt32
>(65536 *16 * 5.3906734093252E-4)

1284  , 
°©ic_ˇ°
<
öt32
>(65536 *16 * 0.0010492444783799305)

1285  , 
°©ic_ˇ°
<
öt32
>(65536 *16 * 0.0015812369440962736)

1286  , 
°©ic_ˇ°
<
öt32
>(65536 *16 * 0.002133975437656693)

1287  , 
°©ic_ˇ°
<
öt32
>(65536 *16 * 0.002706284295633396)

1288  , 
°©ic_ˇ°
<
öt32
>(65536 *16 * 0.003296910987472264)

1289  , 
°©ic_ˇ°
<
öt32
>(65536 *16 * 0.0039045040922850343)

1290  , 
°©ic_ˇ°
<
öt32
>(65536 *16 * 0.004527645156076457)

1291  , 
°©ic_ˇ°
<
öt32
>(65536 *16 * 0.005164822580527953)

1292  , 
°©ic_ˇ°
<
öt32
>(65536 *16 * 0.00581446977998051)

1293  , 
°©ic_ˇ°
<
öt32
>(65536 *16 * 0.00647492818678252)

1294  , 
°©ic_ˇ°
<
öt32
>(65536 *16 * 0.007144495527005753)

1295  , 
°©ic_ˇ°
<
öt32
>(65536 *16 * 0.007821417135435386)

1296  , 
°©ic_ˇ°
<
öt32
>(65536 *16 * 0.008503870707064397)

1297  , 
°©ic_ˇ°
<
öt32
>(65536 *16 * 0.00919000676302643)

1298  , 
°©ic_ˇ°
<
öt32
>(65536 *16 * 0.009877917856582038)

1299  , 
°©ic_ˇ°
<
öt32
>(65536 *16 * 0.010565689475867907)

1300  , 
°©ic_ˇ°
<
öt32
>(65536 *16 * 0.011251366750588049)

1301  , 
°©ic_ˇ°
<
öt32
>(65536 *16 * 0.01193298816023733)

1302  , 
°©ic_ˇ°
<
öt32
>(65536 *16 * 0.012608574497468706)

1303  , 
°©ic_ˇ°
<
öt32
>(65536 *16 * 0.013276151008399953)

1304  , 
°©ic_ˇ°
<
öt32
>(65536 *16 * 0.013933744269275995)

1305  , 
°©ic_ˇ°
<
öt32
>(65536 *16 * 0.014579397589755912)

1306  , 
°©ic_ˇ°
<
öt32
>(65536 *16 * 0.015211171751139368)

1307  , 
°©ic_ˇ°
<
öt32
>(65536 *16 * 0.015827155422328678)

1308  , 
°©ic_ˇ°
<
öt32
>(65536 *16 * 0.01642547256780349)

1309  , 
°©ic_ˇ°
<
öt32
>(65536 *16 * 0.01700428326907068)

1310  , 
°©ic_ˇ°
<
öt32
>(65536 *16 * 0.017561819587529177)

1311  , 
°©ic_ˇ°
<
öt32
>(65536 *16 * 0.018096338432718698)

1312  , 
°©ic_ˇ°
<
öt32
>(65536 *16 * 0.018606183762999433)

1313  , 
°©ic_ˇ°
<
öt32
>(65536 *16 * 0.019089749497960648)

1314  , 
°©ic_ˇ°
<
öt32
>(65536 *16 * 0.019545523698532997)

1315  , 
°©ic_ˇ°
<
öt32
>(65536 *16 * 0.019972069058400564)

1316  , 
°©ic_ˇ°
<
öt32
>(65536 *16 * 0.02036803110561515)

1317  , 
°©ic_ˇ°
<
öt32
>(65536 *16 * 0.020732154475618856)

1318  , 
°©ic_ˇ°
<
öt32
>(65536 *16 * 0.021063275458886234)

1319  , 
°©ic_ˇ°
<
öt32
>(65536 *16 * 0.021360340738775345)

1320  , 
°©ic_ˇ°
<
öt32
>(65536 *16 * 0.02162239534537267)

1321  , 
°©ic_ˇ°
<
öt32
>(65536 *16 * 0.021848603142668337)

1322  , 
°©ic_ˇ°
<
öt32
>(65536 *16 * 0.02203823092181804)

1323  , 
°©ic_ˇ°
<
öt32
>(65536 *16 * 0.022190674411724294)

1324  , 
°©ic_ˇ°
<
öt32
>(65536 *16 * 0.022305434241445123)

1325  , 
°©ic_ˇ°
<
öt32
>(65536 *16 * 0.022382153728111424)

1326  , 
°©ic_ˇ°
<
öt32
>(65536 *16 * 0.022420574751016616)

1341 c⁄° 
öt32
 
	gC44100PAL
[
NCOEFFS
/2]=

1343  
°©ic_ˇ°
<
öt32
>(65536 *16 * 5.793783958720019E-4)

1344  , 
°©ic_ˇ°
<
öt32
>(65536 *16 * 1.0571291666629312E-4)

1345  , 
°©ic_ˇ°
<
öt32
>(65536 *16 * 1.1459085882755871E-4)

1346  , 
°©ic_ˇ°
<
öt32
>(65536 *16 * 1.2371675029136968E-4)

1347  , 
°©ic_ˇ°
<
öt32
>(65536 *16 * 1.3275170325031607E-4)

1348  , 
°©ic_ˇ°
<
öt32
>(65536 *16 * 1.4207721167879995E-4)

1349  , 
°©ic_ˇ°
<
öt32
>(65536 *16 * 1.5130497600100568E-4)

1350  , 
°©ic_ˇ°
<
öt32
>(65536 *16 * 1.6077227873948047E-4)

1351  , 
°©ic_ˇ°
<
öt32
>(65536 *16 * 1.6990814771316866E-4)

1352  , 
°©ic_ˇ°
<
öt32
>(65536 *16 * 1.79005024990367E-4)

1353  , 
°©ic_ˇ°
<
öt32
>(65536 *16 * 1.8739246068939436E-4)

1354  , 
°©ic_ˇ°
<
öt32
>(65536 *16 * 1.9572039600801667E-4)

1355  , 
°©ic_ˇ°
<
öt32
>(65536 *16 * 2.0352846914404956E-4)

1356  , 
°©ic_ˇ°
<
öt32
>(65536 *16 * 2.1201116607443127E-4)

1357  , 
°©ic_ˇ°
<
öt32
>(65536 *16 * 2.188838839136502E-4)

1358  , 
°©ic_ˇ°
<
öt32
>(65536 *16 * 2.2495686284733203E-4)

1359  , 
°©ic_ˇ°
<
öt32
>(65536 *16 * 2.3149812422937834E-4)

1360  , 
°©ic_ˇ°
<
öt32
>(65536 *16 * 2.363635497444841E-4)

1361  , 
°©ic_ˇ°
<
öt32
>(65536 *16 * 2.410054979130104E-4)

1362  , 
°©ic_ˇ°
<
öt32
>(65536 *16 * 2.445286108284421E-4)

1363  , 
°©ic_ˇ°
<
öt32
>(65536 *16 * 2.474675828550653E-4)

1364  , 
°©ic_ˇ°
<
öt32
>(65536 *16 * 2.4934815214903343E-4)

1365  , 
°©ic_ˇ°
<
öt32
>(65536 *16 * 2.50372333906785E-4)

1366  , 
°©ic_ˇ°
<
öt32
>(65536 *16 * 2.501665763315339E-4)

1367  , 
°©ic_ˇ°
<
öt32
>(65536 *16 * 2.488750795254978E-4)

1368  , 
°©ic_ˇ°
<
öt32
>(65536 *16 * 2.4640153199411455E-4)

1369  , 
°©ic_ˇ°
<
öt32
>(65536 *16 * 2.428720291968876E-4)

1370  , 
°©ic_ˇ°
<
öt32
>(65536 *16 * 2.3801309032826844E-4)

1371  , 
°©ic_ˇ°
<
öt32
>(65536 *16 * 2.3160240772113682E-4)

1372  , 
°©ic_ˇ°
<
öt32
>(65536 *16 * 2.2423402291517938E-4)

1373  , 
°©ic_ˇ°
<
öt32
>(65536 *16 * 2.152856501527123E-4)

1374  , 
°©ic_ˇ°
<
öt32
>(65536 *16 * 2.0488674543318888E-4)

1375  , 
°©ic_ˇ°
<
öt32
>(65536 *16 * 1.9317919544163198E-4)

1376  , 
°©ic_ˇ°
<
öt32
>(65536 *16 * 1.7994016398005858E-4)

1377  , 
°©ic_ˇ°
<
öt32
>(65536 *16 * 1.6541109383681028E-4)

1378  , 
°©ic_ˇ°
<
öt32
>(65536 *16 * 1.4938382649739635E-4)

1379  , 
°©ic_ˇ°
<
öt32
>(65536 *16 * 1.3200975730094075E-4)

1380  , 
°©ic_ˇ°
<
öt32
>(65536 *16 * 1.1313240842725184E-4)

1381  , 
°©ic_ˇ°
<
öt32
>(65536 *16 * 9.296992728984174E-5)

1382  , 
°©ic_ˇ°
<
öt32
>(65536 *16 * 7.143010735440594E-5)

1383  , 
°©ic_ˇ°
<
öt32
>(65536 *16 * 4.8632764324109725E-5)

1384  , 
°©ic_ˇ°
<
öt32
>(65536 *16 * 2.443073549738759E-5)

1385  , 
°©ic_ˇ°
<
öt32
>(65536 *16 * -8.284349612349981E-7)

1386  , 
°©ic_ˇ°
<
öt32
>(65536 *16 * -2.7227387247375577E-5)

1387  , 
°©ic_ˇ°
<
öt32
>(65536 *16 * -5.4818038895146106E-5)

1388  , 
°©ic_ˇ°
<
öt32
>(65536 *16 * -8.330005435111118E-5)

1389  , 
°©ic_ˇ°
<
öt32
>(65536 *16 * -1.1275737974091186E-4)

1390  , 
°©ic_ˇ°
<
öt32
>(65536 *16 * -1.4298620796919756E-4)

1391  , 
°©ic_ˇ°
<
öt32
>(65536 *16 * -1.7390785487074508E-4)

1392  , 
°©ic_ˇ°
<
öt32
>(65536 *16 * -2.054308580401118E-4)

1393  , 
°©ic_ˇ°
<
öt32
>(65536 *16 * -2.37415521983132E-4)

1394  , 
°©ic_ˇ°
<
öt32
>(65536 *16 * -2.697456782629617E-4)

1395  , 
°©ic_ˇ°
<
öt32
>(65536 *16 * -3.022375619849705E-4)

1396  , 
°©ic_ˇ°
<
öt32
>(65536 *16 * -3.348339660959209E-4)

1397  , 
°©ic_ˇ°
<
öt32
>(65536 *16 * -3.673583086741243E-4)

1398  , 
°©ic_ˇ°
<
öt32
>(65536 *16 * -3.996554197363865E-4)

1399  , 
°©ic_ˇ°
<
öt32
>(65536 *16 * -4.3147108191834185E-4)

1400  , 
°©ic_ˇ°
<
öt32
>(65536 *16 * -4.6285023012872966E-4)

1401  , 
°©ic_ˇ°
<
öt32
>(65536 *16 * -4.934440989261961E-4)

1402  , 
°©ic_ˇ°
<
öt32
>(65536 *16 * -5.231720978150925E-4)

1403  , 
°©ic_ˇ°
<
öt32
>(65536 *16 * -5.518656107257292E-4)

1404  , 
°©ic_ˇ°
<
öt32
>(65536 *16 * -5.793049560550073E-4)

1405  , 
°©ic_ˇ°
<
öt32
>(65536 *16 * -6.053792205725333E-4)

1406  , 
°©ic_ˇ°
<
öt32
>(65536 *16 * -6.298765704841736E-4)

1407  , 
°©ic_ˇ°
<
öt32
>(65536 *16 * -6.526402738994988E-4)

1408  , 
°©ic_ˇ°
<
öt32
>(65536 *16 * -6.734722964365358E-4)

1409  , 
°©ic_ˇ°
<
öt32
>(65536 *16 * -6.922485843472661E-4)

1410  , 
°©ic_ˇ°
<
öt32
>(65536 *16 * -7.088111930758961E-4)

1411  , 
°©ic_ˇ°
<
öt32
>(65536 *16 * -7.229789042068006E-4)

1412  , 
°©ic_ˇ°
<
öt32
>(65536 *16 * -7.34572975483669E-4)

1413  , 
°©ic_ˇ°
<
öt32
>(65536 *16 * -7.435049180176613E-4)

1414  , 
°©ic_ˇ°
<
öt32
>(65536 *16 * -7.496258178311876E-4)

1415  , 
°©ic_ˇ°
<
öt32
>(65536 *16 * -7.527294926570751E-4)

1416  , 
°©ic_ˇ°
<
öt32
>(65536 *16 * -7.528075552986548E-4)

1417  , 
°©ic_ˇ°
<
öt32
>(65536 *16 * -7.496410435428715E-4)

1418  , 
°©ic_ˇ°
<
öt32
>(65536 *16 * -7.432054606042111E-4)

1419  , 
°©ic_ˇ°
<
öt32
>(65536 *16 * -7.33375741493331E-4)

1420  , 
°©ic_ˇ°
<
öt32
>(65536 *16 * -7.200753858529672E-4)

1421  , 
°©ic_ˇ°
<
öt32
>(65536 *16 * -7.03226653737734E-4)

1422  , 
°©ic_ˇ°
<
öt32
>(65536 *16 * -6.827921676621563E-4)

1423  , 
°©ic_ˇ°
<
öt32
>(65536 *16 * -6.58752773848678E-4)

1424  , 
°©ic_ˇ°
<
öt32
>(65536 *16 * -6.31061807229375E-4)

1425  , 
°©ic_ˇ°
<
öt32
>(65536 *16 * -5.997124150992168E-4)

1426  , 
°©ic_ˇ°
<
öt32
>(65536 *16 * -5.647352645065657E-4)

1427  , 
°©ic_ˇ°
<
öt32
>(65536 *16 * -5.261799041455252E-4)

1428  , 
°©ic_ˇ°
<
öt32
>(65536 *16 * -4.8402880277824417E-4)

1429  , 
°©ic_ˇ°
<
öt32
>(65536 *16 * -4.3840329475572E-4)

1430  , 
°©ic_ˇ°
<
öt32
>(65536 *16 * -3.893672279202991E-4)

1431  , 
°©ic_ˇ°
<
öt32
>(65536 *16 * -3.37002579326518E-4)

1432  , 
°©ic_ˇ°
<
öt32
>(65536 *16 * -2.8148278838384204E-4)

1433  , 
°©ic_ˇ°
<
öt32
>(65536 *16 * -2.2288467365854118E-4)

1434  , 
°©ic_ˇ°
<
öt32
>(65536 *16 * -1.6140368454103024E-4)

1435  , 
°©ic_ˇ°
<
öt32
>(65536 *16 * -9.718648150744015E-5)

1436  , 
°©ic_ˇ°
<
öt32
>(65536 *16 * -3.046343268277719E-5)

1437  , 
°©ic_ˇ°
<
öt32
>(65536 *16 * 3.859234051837562E-5)

1438  , 
°©ic_ˇ°
<
öt32
>(65536 *16 * 1.0974328274324426E-4)

1439  , 
°©ic_ˇ°
<
öt32
>(65536 *16 * 1.8273974279995372E-4)

1440  , 
°©ic_ˇ°
<
öt32
>(65536 *16 * 2.5730055402762935E-4)

1441  , 
°©ic_ˇ°
<
öt32
>(65536 *16 * 3.3318458939353874E-4)

1442  , 
°©ic_ˇ°
<
öt32
>(65536 *16 * 4.100891270013777E-4)

1443  , 
°©ic_ˇ°
<
öt32
>(65536 *16 * 4.876860015464126E-4)

1444  , 
°©ic_ˇ°
<
öt32
>(65536 *16 * 5.657011755504638E-4)

1445  , 
°©ic_ˇ°
<
öt32
>(65536 *16 * 6.437547403393535E-4)

1446  , 
°©ic_ˇ°
<
öt32
>(65536 *16 * 7.215350856659516E-4)

1447  , 
°©ic_ˇ°
<
öt32
>(65536 *16 * 7.986901321007353E-4)

1448  , 
°©ic_ˇ°
<
öt32
>(65536 *16 * 8.748424228508639E-4)

1449  , 
°©ic_ˇ°
<
öt32
>(65536 *16 * 9.496338070297501E-4)

1450  , 
°©ic_ˇ°
<
öt32
>(65536 *16 * 0.0010226804298925178)

1451  , 
°©ic_ˇ°
<
öt32
>(65536 *16 * 0.001093633836878271)

1452  , 
°©ic_ˇ°
<
öt32
>(65536 *16 * 0.0011620773771650913)

1453  , 
°©ic_ˇ°
<
öt32
>(65536 *16 * 0.001227641045409496)

1454  , 
°©ic_ˇ°
<
öt32
>(65536 *16 * 0.0012899374110895208)

1455  , 
°©ic_ˇ°
<
öt32
>(65536 *16 * 0.001348607725415767)

1456  , 
°©ic_ˇ°
<
öt32
>(65536 *16 * 0.001403236086962171)

1457  , 
°©ic_ˇ°
<
öt32
>(65536 *16 * 0.0014534904370406968)

1458  , 
°©ic_ˇ°
<
öt32
>(65536 *16 * 0.0014989864777827345)

1459  , 
°©ic_ˇ°
<
öt32
>(65536 *16 * 0.0015393672007052272)

1460  , 
°©ic_ˇ°
<
öt32
>(65536 *16 * 0.0015743174329729173)

1461  , 
°©ic_ˇ°
<
öt32
>(65536 *16 * 0.0016034756800234508)

1462  , 
°©ic_ˇ°
<
öt32
>(65536 *16 * 0.0016265420570988364)

1463  , 
°©ic_ˇ°
<
öt32
>(65536 *16 * 0.0016432110467175217)

1464  , 
°©ic_ˇ°
<
öt32
>(65536 *16 * 0.0016532197970121178)

1465  , 
°©ic_ˇ°
<
öt32
>(65536 *16 * 0.0016562968359550962)

1466  , 
°©ic_ˇ°
<
öt32
>(65536 *16 * 0.0016521969919585549)

1467  , 
°©ic_ˇ°
<
öt32
>(65536 *16 * 0.001640721606064916)

1468  , 
°©ic_ˇ°
<
öt32
>(65536 *16 * 0.001621678045313759)

1469  , 
°©ic_ˇ°
<
öt32
>(65536 *16 * 0.0015948992297934834)

1470  , 
°©ic_ˇ°
<
öt32
>(65536 *16 * 0.0015602457924787695)

1471  , 
°©ic_ˇ°
<
öt32
>(65536 *16 * 0.0015176354451292787)

1472  , 
°©ic_ˇ°
<
öt32
>(65536 *16 * 0.0014669598890367775)

1473  , 
°©ic_ˇ°
<
öt32
>(65536 *16 * 0.001408218899058892)

1474  , 
°©ic_ˇ°
<
öt32
>(65536 *16 * 0.001341376545671481)

1475  , 
°©ic_ˇ°
<
öt32
>(65536 *16 * 0.0012664621369705463)

1476  , 
°©ic_ˇ°
<
öt32
>(65536 *16 * 0.0011835425953369801)

1477  , 
°©ic_ˇ°
<
öt32
>(65536 *16 * 0.0010927146027981068)

1478  , 
°©ic_ˇ°
<
öt32
>(65536 *16 * 9.941150953832762E-4)

1479  , 
°©ic_ˇ°
<
öt32
>(65536 *16 * 8.878982163088053E-4)

1480  , 
°©ic_ˇ°
<
öt32
>(65536 *16 * 7.742911468907501E-4)

1481  , 
°©ic_ˇ°
<
öt32
>(65536 *16 * 6.535350381595103E-4)

1482  , 
°©ic_ˇ°
<
öt32
>(65536 *16 * 5.259114487251054E-4)

1483  , 
°©ic_ˇ°
<
öt32
>(65536 *16 * 3.9173611703422796E-4)

1484  , 
°©ic_ˇ°
<
öt32
>(65536 *16 * 2.513813444320677E-4)

1485  , 
°©ic_ˇ°
<
öt32
>(65536 *16 * 1.0522988594595334E-4)

1486  , 
°©ic_ˇ°
<
öt32
>(65536 *16 * -4.627799877161863E-5)

1487  , 
°©ic_ˇ°
<
öt32
>(65536 *16 * -2.0266153878465397E-4)

1488  , 
°©ic_ˇ°
<
öt32
>(65536 *16 * -3.6344539072942917E-4)

1489  , 
°©ic_ˇ°
<
öt32
>(65536 *16 * -5.28061484912101E-4)

1490  , 
°©ic_ˇ°
<
öt32
>(65536 *16 * -6.959549845043866E-4)

1491  , 
°©ic_ˇ°
<
öt32
>(65536 *16 * -8.665108935058429E-4)

1492  , 
°©ic_ˇ°
<
öt32
>(65536 *16 * -0.0010391137133997624)

1493  , 
°©ic_ˇ°
<
öt32
>(65536 *16 * -0.001213088248571412)

1494  , 
°©ic_ˇ°
<
öt32
>(65536 *16 * -0.0013877438142645866)

1495  , 
°©ic_ˇ°
<
öt32
>(65536 *16 * -0.0015623746142961936)

1496  , 
°©ic_ˇ°
<
öt32
>(65536 *16 * -0.001736242850147973)

1497  , 
°©ic_ˇ°
<
öt32
>(65536 *16 * -0.0019085899496564314)

1498  , 
°©ic_ˇ°
<
öt32
>(65536 *16 * -0.002078639823528187)

1499  , 
°©ic_ˇ°
<
öt32
>(65536 *16 * -0.0022456104279907118)

1500  , 
°©ic_ˇ°
<
öt32
>(65536 *16 * -0.002408678368623706)

1501  , 
°©ic_ˇ°
<
öt32
>(65536 *16 * -0.002567052121352872)

1502  , 
°©ic_ˇ°
<
öt32
>(65536 *16 * -0.0027198956481072887)

1503  , 
°©ic_ˇ°
<
öt32
>(65536 *16 * -0.0028663750213148488)

1504  , 
°©ic_ˇ°
<
öt32
>(65536 *16 * -0.0030056713494924794)

1505  , 
°©ic_ˇ°
<
öt32
>(65536 *16 * -0.0031369487365098063)

1506  , 
°©ic_ˇ°
<
öt32
>(65536 *16 * -0.0032593909953083865)

1507  , 
°©ic_ˇ°
<
öt32
>(65536 *16 * -0.0033721594370116153)

1508  , 
°©ic_ˇ°
<
öt32
>(65536 *16 * -0.0034744643621211356)

1509  , 
°©ic_ˇ°
<
öt32
>(65536 *16 * -0.0035654990231207963)

1510  , 
°©ic_ˇ°
<
öt32
>(65536 *16 * -0.003644488024347632)

1511  , 
°©ic_ˇ°
<
öt32
>(65536 *16 * -0.0037106644342197828)

1512  , 
°©ic_ˇ°
<
öt32
>(65536 *16 * -0.0037632989436418352)

1513  , 
°©ic_ˇ°
<
öt32
>(65536 *16 * -0.00380166827783197)

1514  , 
°©ic_ˇ°
<
öt32
>(65536 *16 * -0.0038250950477227447)

1515  , 
°©ic_ˇ°
<
öt32
>(65536 *16 * -0.0038329329853570827)

1516  , 
°©ic_ˇ°
<
öt32
>(65536 *16 * -0.0038245430145814447)

1517  , 
°©ic_ˇ°
<
öt32
>(65536 *16 * -0.0037993625516763766)

1518  , 
°©ic_ˇ°
<
öt32
>(65536 *16 * -0.003756842883124589)

1519  , 
°©ic_ˇ°
<
öt32
>(65536 *16 * -0.0036964913119694686)

1520  , 
°©ic_ˇ°
<
öt32
>(65536 *16 * -0.0036178458358447655)

1521  , 
°©ic_ˇ°
<
öt32
>(65536 *16 * -0.00352050628243193)

1522  , 
°©ic_ˇ°
<
öt32
>(65536 *16 * -0.003404123578517079)

1523  , 
°©ic_ˇ°
<
öt32
>(65536 *16 * -0.003268383375473133)

1524  , 
°©ic_ˇ°
<
öt32
>(65536 *16 * -0.0031130454148921446)

1525  , 
°©ic_ˇ°
<
öt32
>(65536 *16 * -0.002937909773123352)

1526  , 
°©ic_ˇ°
<
öt32
>(65536 *16 * -0.0027428475146560275)

1527  , 
°©ic_ˇ°
<
öt32
>(65536 *16 * -0.0025277729297779944)

1528  , 
°©ic_ˇ°
<
öt32
>(65536 *16 * -0.0022926869206439508)

1529  , 
°©ic_ˇ°
<
öt32
>(65536 *16 * -0.0020376141174133374)

1530  , 
°©ic_ˇ°
<
öt32
>(65536 *16 * -0.0017626719756025908)

1531  , 
°©ic_ˇ°
<
öt32
>(65536 *16 * -0.0014680351622130402)

1532  , 
°©ic_ˇ°
<
öt32
>(65536 *16 * -0.0011539297872750212)

1533  , 
°©ic_ˇ°
<
öt32
>(65536 *16 * -8.206567501069872E-4)

1534  , 
°©ic_ˇ°
<
öt32
>(65536 *16 * -4.685710694984321E-4)

1535  , 
°©ic_ˇ°
<
öt32
>(65536 *16 * -9.811116382477182E-5)

1536  , 
°©ic_ˇ°
<
öt32
>(65536 *16 * 2.902488429495873E-4)

1537  , 
°©ic_ˇ°
<
öt32
>(65536 *16 * 6.959516881166062E-4)

1538  , 
°©ic_ˇ°
<
öt32
>(65536 *16 * 0.0011183883405789612)

1539  , 
°©ic_ˇ°
<
öt32
>(65536 *16 * 0.0015568865209671754)

1540  , 
°©ic_ˇ°
<
öt32
>(65536 *16 * 0.0020107155705137744)

1541  , 
°©ic_ˇ°
<
öt32
>(65536 *16 * 0.002479084293281152)

1542  , 
°©ic_ˇ°
<
öt32
>(65536 *16 * 0.002961149037985776)

1543  , 
°©ic_ˇ°
<
öt32
>(65536 *16 * 0.0034560223628435746)

1544  , 
°©ic_ˇ°
<
öt32
>(65536 *16 * 0.0039627343373741354)

1545  , 
°©ic_ˇ°
<
öt32
>(65536 *16 * 0.0044803036416812955)

1546  , 
°©ic_ˇ°
<
öt32
>(65536 *16 * 0.005007678185806692)

1547  , 
°©ic_ˇ°
<
öt32
>(65536 *16 * 0.00554377521563058)

1548  , 
°©ic_ˇ°
<
öt32
>(65536 *16 * 0.006087456836491167)

1549  , 
°©ic_ˇ°
<
öt32
>(65536 *16 * 0.006637561024809676)

1550  , 
°©ic_ˇ°
<
öt32
>(65536 *16 * 0.007192890398414245)

1551  , 
°©ic_ˇ°
<
öt32
>(65536 *16 * 0.0077522050201042055)

1552  , 
°©ic_ˇ°
<
öt32
>(65536 *16 * 0.008314254820045306)

1553  , 
°©ic_ˇ°
<
öt32
>(65536 *16 * 0.008877749982246051)

1554  , 
°©ic_ˇ°
<
öt32
>(65536 *16 * 0.009441393781470539)

1555  , 
°©ic_ˇ°
<
öt32
>(65536 *16 * 0.010003862886118781)

1556  , 
°©ic_ˇ°
<
öt32
>(65536 *16 * 0.01056383933598836)

1557  , 
°©ic_ˇ°
<
öt32
>(65536 *16 * 0.011119972235266088)

1558  , 
°©ic_ˇ°
<
öt32
>(65536 *16 * 0.011670924253482212)

1559  , 
°©ic_ˇ°
<
öt32
>(65536 *16 * 0.012215363764388693)

1560  , 
°©ic_ˇ°
<
öt32
>(65536 *16 * 0.012751945584822125)

1561  , 
°©ic_ˇ°
<
öt32
>(65536 *16 * 0.013279348664168343)

1562  , 
°©ic_ˇ°
<
öt32
>(65536 *16 * 0.013796251849197938)

1563  , 
°©ic_ˇ°
<
öt32
>(65536 *16 * 0.0143013718962506)

1564  , 
°©ic_ˇ°
<
öt32
>(65536 *16 * 0.014793420656675483)

1565  , 
°©ic_ˇ°
<
öt32
>(65536 *16 * 0.015271157641252524)

1566  , 
°©ic_ˇ°
<
öt32
>(65536 *16 * 0.015733358657288442)

1567  , 
°©ic_ˇ°
<
öt32
>(65536 *16 * 0.016178837288118402)

1568  , 
°©ic_ˇ°
<
öt32
>(65536 *16 * 0.016606446422463023)

1569  , 
°©ic_ˇ°
<
öt32
>(65536 *16 * 0.01701507865820779)

1570  , 
°©ic_ˇ°
<
öt32
>(65536 *16 * 0.017403671672970734)

1571  , 
°©ic_ˇ°
<
öt32
>(65536 *16 * 0.01777119975394863)

1572  , 
°©ic_ˇ°
<
öt32
>(65536 *16 * 0.018116717572056962)

1573  , 
°©ic_ˇ°
<
öt32
>(65536 *16 * 0.01843930362202181)

1574  , 
°©ic_ˇ°
<
öt32
>(65536 *16 * 0.01873811058717855)

1575  , 
°©ic_ˇ°
<
öt32
>(65536 *16 * 0.01901234584784063)

1576  , 
°©ic_ˇ°
<
öt32
>(65536 *16 * 0.019261287195027194)

1577  , 
°©ic_ˇ°
<
öt32
>(65536 *16 * 0.019484271195397335)

1578  , 
°©ic_ˇ°
<
öt32
>(65536 *16 * 0.0196806998422779)

1579  , 
°©ic_ˇ°
<
öt32
>(65536 *16 * 0.019850058102456474)

1580  , 
°©ic_ˇ°
<
öt32
>(65536 *16 * 0.019991882444368586)

1581  , 
°©ic_ˇ°
<
öt32
>(65536 *16 * 0.0201058042761605)

1582  , 
°©ic_ˇ°
<
öt32
>(65536 *16 * 0.02019151207246131)

1583  , 
°©ic_ˇ°
<
öt32
>(65536 *16 * 0.02024878178965319)

1584  , 
°©ic_ˇ°
<
öt32
>(65536 *16 * 0.020277449712345474)

	@fceux-am/src/file.cpp

21 
	~"ty≥s.h
"

22 
	~"fûe.h
"

23 
	~"utûs/mem‹y.h
"

24 
	~"utûs/md5.h
"

25 
	~"drivî.h
"

26 
	~"ty≥s.h
"

27 
	~"f˚u.h
"

28 
	~"°©e.h
"

29 
	~"drivî.h
"

31 
usög
 
«me•a˚
 
	g°d
;

33 
FCEUFILE
 * 
	$FCEU_f›í
(c⁄° *
∑th
, c⁄° *
ùs‚
, c⁄° *
mode
, *
ext
, 
ödex
, c⁄° ** 
exãnsi⁄s
, * 
u£rC™˚l
)

35 
FCEUFILE
 *
f˚uÂ
=0;

37 
	`as£π
(
ùs‚
 =
NULL
);

39 
boﬁ
 
ªad
 = !
	`°rcmp
(
mode
, "rb");

40 
boﬁ
 
wrôe
 = !
	`°rcmp
(
mode
, "wb");

41 if((
ªad
 && 
wrôe
) || (!read && !write))

43 
	`FCEU_PrötEº‹
("invalid file open mode specified (only wbándÑbáre supported)");

47 if(
ªad
)

51 
EMUFILE_FILE
* 
Â
 = 
	`FCEUD_UTF8_f°ªam
(
∑th
,
mode
);

52 if(!
Â
)

54 i‡(!
Â
->
	`is_›í
())

57 
	`‰ì
(
Â
);

62 
f˚uÂ
 = (
FCEUFILE
 *)
	`mÆloc
((FCEUFILE));

63 
f˚uÂ
->
¨chiveIndex
 = -1;

64 
f˚uÂ
->
¨chiveCou¡
 = -1;

65 
f˚uÂ
->
°ªam
 = 
Â
;

66 
	`FCEU_f£ek
(
f˚uÂ
,0,
SEEK_END
);

67 
f˚uÂ
->
size
 = 
	`FCEU_·ñl
(fceufp);

68 
	`FCEU_f£ek
(
f˚uÂ
,0,
SEEK_SET
);

70  
f˚uÂ
;

73 
	}
}

75 
	$FCEU_f˛o£
(
FCEUFILE
 *
Â
)

77 
Â
->~
	`FCEUFILE
();

78 
	`‰ì
(
Â
);

80 
	}
}

82 
uöt64
 
	$FCEU_‰ód
(*
±r
, 
size_t
 
size
, size_à
nmemb
, 
FCEUFILE
 *
Â
)

84  
Â
->
°ªam
->
	`_‰ód
((*)
±r
,
size
*
nmemb
);

85 
	}
}

87 
	$FCEU_f£ek
(
FCEUFILE
 *
Â
, 
off£t
, 
whí˚
)

89 
Â
->
°ªam
->
	`f£ek
(
off£t
,
whí˚
);

91  
	`FCEU_·ñl
(
Â
);

92 
	}
}

94 
uöt64
 
	$FCEU_·ñl
(
FCEUFILE
 *
Â
)

96  
Â
->
°ªam
->
	`·ñl
();

97 
	}
}

	@fceux-am/src/file.h

1 #i‚de‡
_FCEU_FILE_H_


2 
	#_FCEU_FILE_H_


	)

4 
	#MAX_MOVIEFILENAME_LEN
 80

	)

6 
	~"ty≥s.h
"

7 
	~"emufûe.h
"

9 
boﬁ
 
bödSave°©e
;

11 
	sFCEUFILE
 {

14 
EMUFILE_FILE
 *
	m°ªam
;

17 
	m¨chiveCou¡
;

20 
	m¨chiveIndex
;

23 
	msize
;

26 
boﬁ
 
isArchive
(Ë{  
	m¨chiveCou¡
 > 0; }

28 
FCEUFILE
() {}

30 ~
FCEUFILE
()

32 if(
	m°ªam
) {

33 
	m°ªam
->~
EMUFILE_FILE
();

34 
‰ì
(
°ªam
);

39 
	mREAD
, 
	mWRITE
, 
	mREADWRITE


40 } 
	mmode
;

43 
	sArchiveSˇnRec‹d


45 
ArchiveSˇnRec‹d
()

46 : 
ty≥
(-1)

47 , 
numFûesInArchive
(0)

49 
ArchiveSˇnRec‹d
(
_ty≥
, 
_numFûes
)

51 
	mty≥
 = 
_ty≥
;

52 
	mnumFûesInArchive
 = 
_numFûes
;

54 
	mty≥
;

58 
	mnumFûesInArchive
;

60 
boﬁ
 
isArchive
(Ë{  
	mty≥
 != -1; }

64 
FCEUFILE
 *
FCEU_f›í
(c⁄° *
∑th
, c⁄° *
ùs‚
, c⁄° *
mode
, *
ext
, 
ödex
=-1, c⁄° ** 
exãnsi⁄s
 = 0, * 
u£rC™˚l
 = 0);

65 
boﬁ
 
FCEU_isFûeInArchive
(c⁄° *
∑th
);

66 
FCEU_f˛o£
(
FCEUFILE
*);

67 
uöt64
 
FCEU_‰ód
(*
±r
, 
size_t
 
size
, size_à
nmemb
, 
FCEUFILE
*);

68 
uöt64
 
FCEU_fwrôe
(*
±r
, 
size_t
 
size
, size_à
nmemb
, 
FCEUFILE
*);

69 
FCEU_f£ek
(
FCEUFILE
*, 
off£t
, 
whí˚
);

70 
uöt64
 
FCEU_·ñl
(
FCEUFILE
*);

71 
FCEU_ªad32À
(
uöt32
 *
Bufo
, 
FCEUFILE
*);

72 
FCEU_ªad16À
(
uöt16
 *
Bufo
, 
FCEUFILE
*);

73 
FCEU_fgëc
(
FCEUFILE
*);

74 
uöt64
 
FCEU_fgësize
(
FCEUFILE
*);

75 
FCEU_fißrchive
(
FCEUFILE
*);

78 
GëFûeBa£
(c⁄° *
f
);

80 
	#FCEUMKF_STATE
 1

	)

81 
	#FCEUMKF_SNAP
 2

	)

82 
	#FCEUMKF_SAV
 3

	)

83 
	#FCEUMKF_CHEAT
 4

	)

84 
	#FCEUMKF_FDSROM
 5

	)

85 
	#FCEUMKF_PALETTE
 6

	)

86 
	#FCEUMKF_GGROM
 7

	)

87 
	#FCEUMKF_IPS
 8

	)

88 
	#FCEUMKF_FDS
 9

	)

89 
	#FCEUMKF_MOVIE
 10

	)

91 
	#FCEUMKF_MOVIEGLOB
 12

	)

92 
	#FCEUMKF_STATEGLOB
 13

	)

93 
	#FCEUMKF_MOVIEGLOB2
 14

	)

94 
	#FCEUMKF_AUTOSTATE
 15

	)

95 
	#FCEUMKF_MEMW
 16

	)

96 
	#FCEUMKF_BBOT
 17

	)

97 
	#FCEUMKF_ROMS
 18

	)

98 
	#FCEUMKF_INPUT
 19

	)

99 
	#FCEUMKF_LUA
 20

	)

100 
	#FCEUMKF_AVI
 21

	)

101 
	#FCEUMKF_TASEDITOR
 22

	)

102 
	#FCEUMKF_RESUMESTATE
 23

	)

	@fceux-am/src/filter.cpp

4 
	~"ty≥s.h
"

6 
	~"sound.h
"

7 
	~"x6502.h
"

8 
	~"f˚u.h
"

9 
	~"fûãr.h
"

11 
	~"fc€ffs.h
"

13 
öt32
 
	gsq2c€ffs
[
SQ2NCOEFFS
];

14 
öt32
 
	gc€ffs
[
NCOEFFS
];

16 
uöt32
 
	gmrödex
;

17 
uöt32
 
	gmº©io
;

19 
	$SexyFûãr2
(
öt32
 *
ö
, i¡32 
cou¡
)

21 #ifde‡
moo


22 
öt64
 
acc
=0;

23 
x
,
p
;

24 
öt64
 
c
;

26 
x
=2*
M_PI
*6000/
FSëtögs
.
SndR©e
;

27 
p
=(()2-
	`cos
(
x
)Ë- 
	`sqπ
(
	`pow
(()2-cos(x),2) -1 );

29 
c
=
p
*0x100000;

32 
öt64
 
acc
=0;

34 
cou¡
--)

36 
öt64
 
dr›cuºít
;

37 
dr›cuºít
=((*
ö
<<16)-
acc
)>>3;

39 
acc
+=
dr›cuºít
;

40 *
ö
=
acc
>>16;

41 
ö
++;

46 
	}
}

48 
	$SexyFûãr
(
öt32
 *
ö
, i¡32 *
out
, i¡32 
cou¡
)

50 
öt64
 
acc1
=0,
acc2
=0;

51 
öt32
 
mul1
,
mul2
,
vmul
;

53 
mul1
=(94<<16)/
FSëtögs
.
SndR©e
;

54 
mul2
=(24<<16)/
FSëtögs
.
SndR©e
;

55 
vmul
=(
FSëtögs
.
SoundVﬁume
<<16)*3/4/100;

58 if(
FSëtögs
.
soundq
Ë
vmul
/=4;

59 
vmul
*=2;

61 
cou¡
)

63 
öt64
 
öo
=(öt64)*
ö
*
vmul
;

64 
acc1
+=((
öo
-acc1)*
mul1
)>>16;

65 
acc2
+=((
öo
-
acc1
-acc2)*
mul2
)>>16;

67 *
ö
=0;

69 
öt32
 
t
=(
acc1
-
öo
+
acc2
)>>16;

71 if(
t
>32767)Å=32767;

72 if(
t
<-32768)Å=-32768;

73 *
out
=
t
;

75 
ö
++;

76 
out
++;

77 
cou¡
--;

79 
	}
}

93 
öt32
 
	$NeoFûãrSound
(
öt32
 *
ö
, i¡32 *
out
, 
uöt32
 
öÀn
, i¡32 *
À·ovî
)

95 
uöt32
 
x
;

96 
uöt32
 
max
;

97 
öt32
 *
outßve
=
out
;

98 
öt32
 
cou¡
=0;

104 
max
=(
öÀn
-1)<<16;

106 if(
FSëtögs
.
soundq
==2)

107 
x
=
mrödex
;x<
max
;x+=
mº©io
)

109 
öt32
 
acc
=0,
acc2
=0;

110 
c
;

111 
öt32
 *
S
,*
D
;

113 
c
=
SQ2NCOEFFS
,
S
=&
ö
[(
x
>>16)-SQ2NCOEFFS],
D
=
sq2c€ffs
;c;c--,D++)

115 
acc
+=(
S
[
c
]**
D
)>>6;

116 
acc2
+=(
S
[1+
c
]**
D
)>>6;

119 
acc
=((
öt64
Ôcc*(65536-(
x
&65535))+(öt64)
acc2
*(x&65535))>>(16+11);

120 *
out
=
acc
;

121 
out
++;

122 
cou¡
++;

125 
x
=
mrödex
;x<
max
;x+=
mº©io
)

127 
öt32
 
acc
=0,
acc2
=0;

128 
c
;

129 c⁄° 
öt32
 *
S
,*
D
;

131 
c
=
NCOEFFS
,
S
=&
ö
[(
x
>>16)-NCOEFFS],
D
=
c€ffs
;c;c--,D++)

133 
acc
+=(
S
[
c
]**
D
)>>6;

134 
acc2
+=(
S
[1+
c
]**
D
)>>6;

137 
acc
=((
öt64
Ôcc*(65536-(
x
&65535))+(öt64)
acc2
*(x&65535))>>(16+11);

138 *
out
=
acc
;

139 
out
++;

140 
cou¡
++;

143 
mrödex
=
x
-
max
;

145 if(
FSëtögs
.
soundq
==2)

147 
mrödex
+=
SQ2NCOEFFS
*65536;

148 *
À·ovî
=
SQ2NCOEFFS
+1;

152 
mrödex
+=
NCOEFFS
*65536;

153 *
À·ovî
=
NCOEFFS
+1;

156 if(
GameExpSound
.
NeoFûl
)

157 
GameExpSound
.
	`NeoFûl
(
outßve
,
cou¡
);

159 
	`SexyFûãr
(
outßve
,outßve,
cou¡
);

160 if(
FSëtögs
.
low∑ss
)

161 
	`SexyFûãr2
(
outßve
,
cou¡
);

162 (
cou¡
);

163 
	}
}

165 
	$MakeFûãrs
(
öt32
 
øã
)

167 c⁄° 
öt32
 *
èbs
[6]={
C44100NTSC
,
C44100PAL
,
C48000NTSC
,
C48000PAL
,
C96000NTSC
,

168 
C96000PAL
};

169 c⁄° 
öt32
 *
sq2èbs
[6]={
SQ2C44100NTSC
,
SQ2C44100PAL
,
SQ2C48000NTSC
,
SQ2C48000PAL
,

170 
SQ2C96000NTSC
,
SQ2C96000PAL
};

172 c⁄° 
öt32
 *
tmp
;

173 
öt32
 
x
;

174 
uöt32
 
nco
;

176 if(
FSëtögs
.
soundq
==2)

177 
nco
=
SQ2NCOEFFS
;

179 
nco
=
NCOEFFS
;

181 
mrödex
=(
nco
+1)<<16;

182 
mº©io
=(
PAL
?(
öt64
)(
PAL_CPU
*65536):(öt64)(
NTSC_CPU
*65536))/
øã
;

184 if(
FSëtögs
.
soundq
==2)

185 
tmp
=
sq2èbs
[(
PAL
?1:0)|(
øã
==48000?2:0)|(rate==96000?4:0)];

187 
tmp
=
èbs
[(
PAL
?1:0)|(
øã
==48000?2:0)|(rate==96000?4:0)];

189 if(
FSëtögs
.
soundq
==2)

190 
x
=0;x<
SQ2NCOEFFS
>>1;x++)

191 
sq2c€ffs
[
x
]=sq2c€ffs[
SQ2NCOEFFS
-1-x]=
tmp
[x];

193 
x
=0;x<
NCOEFFS
>>1;x++)

194 
c€ffs
[
x
]=c€ffs[
NCOEFFS
-1-x]=
tmp
[x];

196 #ifde‡
MOO


199 
öt64
 
acc
=0;

200 
x
;

201 
x
=0;x<
SQ2NCOEFFS
;x++)

202 
acc
+=(
öt64
)32767*
sq2c€ffs
[
x
];

203 
	`¥ötf
("Foo: %Œd\n",
acc
);

206 
	}
}

	@fceux-am/src/filter.h

1 
öt32
 
NeoFûãrSound
(öt32 *
ö
, i¡32 *
out
, 
uöt32
 
öÀn
, i¡32 *
À·ovî
);

2 
MakeFûãrs
(
öt32
 
øã
);

3 
SexyFûãr
(
öt32
 *
ö
, i¡32 *
out
, i¡32 
cou¡
);

	@fceux-am/src/fir/c44100ntsc.h

	@fceux-am/src/fir/c44100pal.h

	@fceux-am/src/fir/c48000ntsc.h

	@fceux-am/src/fir/c48000pal.h

	@fceux-am/src/fir/c96000ntsc.h

	@fceux-am/src/fir/c96000pal.h

	@fceux-am/src/git.h

1 #i‚de‡
__FCEU_GIT


2 
	#__FCEU_GIT


	)

4 
	eEGIT


6 
	mGIT_CART
 = 0,

7 
	mGIT_VSUNI
 = 1,

8 
	mGIT_FDS
 = 2,

9 
	mGIT_NSF
 = 3,

12 
	eEGIV


14 
	mGIV_NTSC
 = 0,

15 
	mGIV_PAL
 = 1,

16 
	mGIV_USER
 = 2,

19 
	eESIS


21 
	mSIS_NONE
 = 0,

22 
	mSIS_DATACH
 = 1,

23 
	mSIS_NWC
 = 2,

24 
	mSIS_VSUNISYSTEM
 = 3,

25 
	mSIS_NSF
 = 4,

29 
	eESI


31 
	mSI_UNSET
 = -1,

32 
	mSI_NONE
 = 0,

33 
	mSI_GAMEPAD
 = 1,

34 
	mSI_ZAPPER
 = 2,

35 
	mSI_POWERPADA
 = 3,

36 
	mSI_POWERPADB
 = 4,

37 
	mSI_ARKANOID
 = 5,

38 
	mSI_MOUSE
 = 6,

39 
	mSI_SNES
 = 7,

40 
	mSI_SNES_MOUSE
 = 8,

42 
	mSI_COUNT
 = 
SI_SNES_MOUSE


45 
ölöe
 c⁄° * 
	$ESI_Name
(
ESI
 
esi
)

47 c⁄° * c⁄° 
«mes
[] =

60 if(
esi
 >
SI_NONE
 &&Ésò<
SI_COUNT
)

61  
«mes
[
esi
];

63 
	}
}

67 
	eESIFC


69 
	mSIFC_UNSET
 = -1,

70 
	mSIFC_NONE
 = 0,

71 
	mSIFC_ARKANOID
 = 1,

72 
	mSIFC_SHADOW
 = 2,

73 
	mSIFC_4PLAYER
 = 3,

74 
	mSIFC_FKB
 = 4,

75 
	mSIFC_SUBORKB
 = 5,

76 
	mSIFC_PEC586KB
 = 6,

77 
	mSIFC_HYPERSHOT
 = 7,

78 
	mSIFC_MAHJONG
 = 8,

79 
	mSIFC_QUIZKING
 = 9,

80 
	mSIFC_FTRAINERA
 = 10,

81 
	mSIFC_FTRAINERB
 = 11,

82 
	mSIFC_OEKAKIDS
 = 12,

83 
	mSIFC_BWORLD
 = 13,

84 
	mSIFC_TOPRIDER
 = 14,

86 
	mSIFC_COUNT
 = 
SIFC_TOPRIDER


90 
ölöe
 c⁄° * 
	$ESIFC_Name
(
ESIFC
 
esifc
)

92 c⁄° * c⁄° 
«mes
[] =

111 if(
esifc
 >
SIFC_NONE
 &&Ésif¯<
SIFC_COUNT
)

112  
«mes
[
esifc
];

114 
	}
}

117 
	~"utûs/md5.h
"

119 
	sFCEUGI


121 
FCEUGI
();

122 ~
FCEUGI
();

124 
uöt8
 *
	m«me
;

125 
	mm≠≥∫um
;

127 
EGIT
 
	mty≥
;

128 
EGIV
 
	mvidsys
;

129 
ESI
 
	möput
[2];

130 
ESIFC
 
	möputfc
;

131 
ESIS
 
	mc•ecül
;

133 
MD5DATA
 
	mMD5
;

136 
	msoundøã
;

137 
	msoundch™
;

139 
	m¨chiveCou¡
;

	@fceux-am/src/ines-bad.h

1 { 0xecf78d8a13a030a6ULL, "AòSí£ònÿOshõã", 
	gINESB_HACKED
 },

2 { 0x4712856d3e12f21fULL, "Akumajou Dí£tsu", 
	gINESB_HACKED
 },

3 { 0x10f90ba5bd55c22eULL, "Alõ¿Syndrome", 
	gINESB_HACKED
 },

4 { 0x0d69ab3ad28ad1c2ULL, "B™™a", 
	gINESB_INCOMPLETE
 },

5 { 0x85d2c348a161cdbfULL, "BiÿSíshòD™", 
	gINESB_HACKED
 },

6 { 0x18fdb7c16Ø8cb5cULL, "Bucky O'H¨e", 
	gINESB_CORRUPT
 },

7 { 0xe27c48302108d11bULL, "ChibòM¨ukÿCh™", 
	gINESB_HACKED
 },

8 { 0x9d1f505c6ba507bfULL, "C⁄åa", 
	gINESB_HACKED
 },

9 { 0x60936436d3ó0ab6ULL, "Crisi†F‹˚", 
	gINESB_HACKED
 },

10 { 0xcf31097ddbb03c5dULL, "Cry°Æi†(PrŸŸy≥)", 
	gINESB_CORRUPT
 },

11 { 0x92080a8˚94200óULL, "DigôÆ Devû St‹y II", 
	gINESB_HACKED
 },

12 { 0x6c2a2f95c2„4b6eULL, "Døg⁄ BÆl", 
	gINESB_HACKED
 },

13 { 0x767Øff62963c58fULL, "Døg⁄ BÆl", 
	gINESB_HACKED
 },

14 { 0x97f133d8bc1c28dbULL, "Døg⁄ BÆl", 
	gINESB_HACKED
 },

15 { 0x500b267abb323005ULL, "Døg⁄ W¨ri‹ 4", 
	gINESB_CORRUPT
 },

16 { 0x02bdcf375704784bULL, "Erik®tÿS©‹uÇÿYumêBoukí", 
	gINESB_HACKED
 },

17 { 0xd4„a9d2633b9186ULL, "Fami°®91", 
	gINESB_HACKED
 },

18 { 0xfdf8c812839b61f0ULL, "Fami°®92", 
	gINESB_HACKED
 },

19 { 0xb5bb1d0fb47d0850ULL, "Fami°®93", 
	gINESB_HACKED
 },

20 { 0x30471e773f7cdc89ULL, "Fami°®94", 
	gINESB_HACKED
 },

21 { 0x76c5c44ffb4a0bd7ULL, "F™èsy Z⁄e", 
	gINESB_HACKED
 },

22 { 0xb470bfb90e2b1049ULL, "FúêEmbÀm Gaidí", 
	gINESB_HACKED
 },

23 { 0x27da2b0c500dc346ULL, "FúêEmbÀm", 
	gINESB_HACKED
 },

24 { 0x23214„456fba2˚ULL, "G™b¨êG€m⁄ 2", 
	gINESB_HACKED
 },

25 { 0xbf8b22524e8329d9ULL, "G™b¨êG€m⁄ Gaidí", 
	gINESB_HACKED
 },

26 { 0xa97041c3da0134e3ULL, "GegegênÿKô¨ou 2", 
	gINESB_INCOMPLETE
 },

27 { 0x805db49a86db5449ULL, "Go⁄õs", 
	gINESB_HACKED
 },

28 { 0xc5abdØ65ac49b6bULL, "Gødiu†2", 
	gINESB_HACKED
 },

29 { 0x04aÁe4ad480c11cULL, "Gødiu†2", 
	gINESB_HACKED
 },

30 { 0x9b4bad37b5498992ULL, "Gødiu†2", 
	gINESB_HACKED
 },

31 { 0xb068d4ac10ef848eULL, "Highway Sèr", 
	gINESB_HACKED
 },

32 { 0xbf5175271e5019c3ULL, "Kaikësu Y™cham¨u 3", 
	gINESB_HACKED
 },

33 { 0x81c1de64550a1531ULL, "Nobu«g®nÿYabou Zíkokub™", 
	gINESB_HACKED
 },

34 { 0xfb4b508a236bbba3ULL, "SÆam™dî", 
	gINESB_HACKED
 },

35 { 0x1895afc6ìf26c7dULL, "Su≥∏M¨iÿBros.", 
	gINESB_HACKED
 },

36 { 0x3716c4bebf885344ULL, "Su≥∏M¨iÿBros.", 
	gINESB_HACKED
 },

37 { 0xfffda4407d80885aULL, "SwìàHome", 
	gINESB_CORRUPT
 },

38 { 0x103fc85d978b861bULL, "SwìàHome", 
	gINESB_CORRUPT
 },

39 { 0x7979dc51da86f19fULL, "110-ö-1", 
	gINESB_CORRUPT
 },

40 { 0x001c0bb9c358252aULL, "110-ö-1", 
	gINESB_CORRUPT
 },

	@fceux-am/src/ines-correct.h

	@fceux-am/src/ines.cpp

22 
	~"ty≥s.h
"

23 
	~"x6502.h
"

24 
	~"f˚u.h
"

25 
	~"ˇπ.h
"

26 
	~"µu.h
"

28 
	~"öes.h
"

29 
	~"unif.h
"

30 
	~"°©e.h
"

31 
	~"fûe.h
"

32 
	~"utûs/gíîÆ.h
"

33 
	~"utûs/mem‹y.h
"

34 
	~"utûs/md5.h
"

35 
	~"drivî.h
"

38 
uöt8
 *
	gåaöîpoo
 = 
NULL
;

39 
uöt8
 *
	gROM
 = 
NULL
;

40 
uöt8
 *
	gVROM
 = 
NULL
;

41 
uöt8
 *
	gExåaNTARAM
 = 
NULL
;

42 
iNES_HEADER
 
	ghód
;

44 
C¨tInfo
 
	giNESC¨t
;

46 
uöt8
 
	gMúr‹ög
 = 0;

47 
uöt32
 
	gROM_size
 = 0;

48 
uöt32
 
	gVROM_size
 = 0;

49 
	gLﬂdedRomFName
[2048];

51 
	gCHRRAMSize
 = -1;

52 
iNES_Inô
(
num
);

54 
	gM≠≥rNo
 = 0;

56 
	giNES2
 = 0;

58 
	$DECLFR
(
TøöîRód
) {

59 (
åaöîpoo
[
A
 & 0x1FF]);

60 
	}
}

62 
	$iNES_ExecPowî
() {

63 i‡(
CHRRAMSize
 != -1)

64 
	`FCEU_Mem‹yR™d
(
VROM
, 
CHRRAMSize
);

66 i‡(
iNESC¨t
.
Powî
)

67 
iNESC¨t
.
	`Powî
();

69 i‡(
åaöîpoo
) {

70 
x
;

71 
x
 = 0; x < 512; x++) {

72 
	`X6502_DMW
(0x7000 + 
x
, 
åaöîpoo
[x]);

73 i‡(
	`X6502_DMR
(0x7000 + 
x
Ë!
åaöîpoo
[x]) {

74 
	`SëRódH™dÀr
(0x7000, 0x71FF, 
TøöîRód
);

79 
	}
}

81 
	$iNESGI
(
GI
 
h
) {

82 
h
) {

83 
GI_RESETSAVE
:

86 
GI_RESETM2
:

87 i‡(
iNESC¨t
.
Re£t
)

88 
iNESC¨t
.
	`Re£t
();

90 
GI_POWER
:

91 
	`iNES_ExecPowî
();

93 
GI_CLOSE
:

95 i‡(
iNESC¨t
.
Clo£
)

96 
iNESC¨t
.
	`Clo£
();

97 i‡(
ROM
) {

98 
	`‰ì
(
ROM
);

99 
ROM
 = 
NULL
;

101 i‡(
VROM
) {

102 
	`‰ì
(
VROM
);

103 
VROM
 = 
NULL
;

105 i‡(
åaöîpoo
) {

106 
	`‰ì
(
åaöîpoo
);

107 
åaöîpoo
 = 
NULL
;

109 i‡(
ExåaNTARAM
) {

110 
	`‰ì
(
ExåaNTARAM
);

111 
ExåaNTARAM
 = 
NULL
;

116 
	}
}

118 
uöt32
 
	giNESGameCRC32
 = 0;

120 
	sINPSEL
 {

121 
uöt32
 
	m¸c32
;

122 
ESI
 
	möput1
;

123 
ESI
 
	möput2
;

124 
ESIFC
 
	möputfc
;

127 
	$SëI≈ut
() {

128 
INPSEL
 
moo
[] =

130 {0x19b0a9f1, 
SI_GAMEPAD
, 
SI_ZAPPER
, 
SIFC_NONE
 },

131 {0x29de87af, 
SI_GAMEPAD
, SI_GAMEPAD, 
SIFC_FTRAINERB
 },

132 {0xd89e5a67, 
SI_UNSET
, SI_UNSET, 
SIFC_ARKANOID
 },

133 {0x0f141525, 
SI_UNSET
, SI_UNSET, 
SIFC_ARKANOID
 },

134 {0x32fb0583, 
SI_UNSET
, 
SI_ARKANOID
, 
SIFC_NONE
 },

135 {0x60ad090a, 
SI_GAMEPAD
, SI_GAMEPAD, 
SIFC_FTRAINERA
 },

136 {0x48ˇ0ì1, 
SI_GAMEPAD
, SI_GAMEPAD, 
SIFC_BWORLD
 },

137 {0x4318a2f8, 
SI_UNSET
, 
SI_ZAPPER
, 
SIFC_NONE
 },

138 {0x6cˇ1c1f, 
SI_GAMEPAD
, SI_GAMEPAD, 
SIFC_FTRAINERB
 },

139 {0x24598791, 
SI_UNSET
, 
SI_ZAPPER
, 
SIFC_NONE
 },

140 {0xd5d6óc4, 
SI_UNSET
, SI_UNSET, 
SIFC_SUBORKB
 },

141 {0xe9a7„9e, 
SI_UNSET
, 
SI_MOUSE
, 
SIFC_NONE
 },

142 {0x8f7b1669, 
SI_UNSET
, SI_UNSET, 
SIFC_SUBORKB
 },

143 {0xf7606810, 
SI_UNSET
, SI_UNSET, 
SIFC_FKB
 },

144 {0x895037bc, 
SI_UNSET
, SI_UNSET, 
SIFC_FKB
 },

145 {0xb2530afc, 
SI_UNSET
, SI_UNSET, 
SIFC_FKB
 },

146 {0xó90f3e2, 
SI_GAMEPAD
, SI_GAMEPAD, 
SIFC_FTRAINERB
 },

147 {0xbba58be5, 
SI_GAMEPAD
, SI_GAMEPAD, 
SIFC_FTRAINERB
 },

148 {0x3e58a87e, 
SI_UNSET
, 
SI_ZAPPER
, 
SIFC_NONE
 },

149 {0xd9f45be9, 
SI_GAMEPAD
, SI_GAMEPAD, 
SIFC_QUIZKING
 },

150 {0x1545bd13, 
SI_GAMEPAD
, SI_GAMEPAD, 
SIFC_QUIZKING
 },

151 {0x4e959173, 
SI_UNSET
, 
SI_ZAPPER
, 
SIFC_NONE
 },

152 {0xbeb8ab01, 
SI_UNSET
, 
SI_ZAPPER
, 
SIFC_NONE
 },

153 {0xff24d794, 
SI_UNSET
, 
SI_ZAPPER
, 
SIFC_NONE
 },

154 {0x21f85681, 
SI_GAMEPAD
, SI_GAMEPAD, 
SIFC_HYPERSHOT
 },

155 {0x980be936, 
SI_GAMEPAD
, SI_GAMEPAD, 
SIFC_HYPERSHOT
 },

156 {0x915a53a7, 
SI_GAMEPAD
, SI_GAMEPAD, 
SIFC_HYPERSHOT
 },

157 {0x9Áe4d46, 
SI_GAMEPAD
, SI_GAMEPAD, 
SIFC_MAHJONG
 },

158 {0x7b44fb2a, 
SI_GAMEPAD
, SI_GAMEPAD, 
SIFC_MAHJONG
 },

159 {0x2f128512, 
SI_GAMEPAD
, SI_GAMEPAD, 
SIFC_FTRAINERA
 },

160 {0xbb33196f, 
SI_UNSET
, SI_UNSET, 
SIFC_FKB
 },

161 {0x8587ì00, 
SI_UNSET
, SI_UNSET, 
SIFC_FKB
 },

162 {0x543ab532, 
SI_UNSET
, SI_UNSET, 
SIFC_SUBORKB
 },

163 {0x368c19a8, 
SI_UNSET
, SI_UNSET, 
SIFC_SUBORKB
 },

164 {0x5ì6008e, 
SI_UNSET
, 
SI_ZAPPER
, 
SIFC_NONE
 },

165 {0x370˚b65, 
SI_GAMEPAD
, SI_GAMEPAD, 
SIFC_FTRAINERB
 },

166 {0x3a1694f9, 
SI_GAMEPAD
, SI_GAMEPAD, 
SIFC_4PLAYER
 },

167 {0x9d048ó4, 
SI_GAMEPAD
, SI_GAMEPAD, 
SIFC_OEKAKIDS
 },

168 {0x2a6559a1, 
SI_UNSET
, 
SI_ZAPPER
, 
SIFC_NONE
 },

169 {0xedc3662b, 
SI_UNSET
, 
SI_ZAPPER
, 
SIFC_NONE
 },

170 {0x912989dc, 
SI_UNSET
, SI_UNSET, 
SIFC_FKB
 },

171 {0x9044550e, 
SI_GAMEPAD
, SI_GAMEPAD, 
SIFC_FTRAINERA
 },

172 {0xó90f3e2, 
SI_GAMEPAD
, SI_GAMEPAD, 
SIFC_FTRAINERB
 },

173 {0x851eb9be, 
SI_GAMEPAD
, 
SI_ZAPPER
, 
SIFC_NONE
 },

174 {0x6435c095, 
SI_GAMEPAD
, 
SI_POWERPADB
, 
SIFC_UNSET
 },

175 {0xc043a8df, 
SI_UNSET
, 
SI_MOUSE
, 
SIFC_NONE
 },

176 {0x2cf5db05, 
SI_UNSET
, 
SI_MOUSE
, 
SIFC_NONE
 },

177 {0xad9c63e2, 
SI_GAMEPAD
, 
SI_UNSET
, 
SIFC_SHADOW
 },

178 {0x61d86167, 
SI_GAMEPAD
, 
SI_POWERPADB
, 
SIFC_UNSET
 },

179 {0xabb2f974, 
SI_UNSET
, SI_UNSET, 
SIFC_SUBORKB
 },

180 {0x41ef9ac4, 
SI_UNSET
, SI_UNSET, 
SIFC_SUBORKB
 },

181 {0x8b265862, 
SI_UNSET
, SI_UNSET, 
SIFC_SUBORKB
 },

182 {0x82f1fb96, 
SI_UNSET
, SI_UNSET, 
SIFC_SUBORKB
 },

183 {0x9f8f200a, 
SI_GAMEPAD
, SI_GAMEPAD, 
SIFC_FTRAINERA
 },

184 {0xd74b2719, 
SI_GAMEPAD
, 
SI_POWERPADB
, 
SIFC_UNSET
 },

185 {0x74bó652, 
SI_GAMEPAD
, 
SI_ZAPPER
, 
SIFC_NONE
 },

186 {0x5e073a1b, 
SI_UNSET
, SI_UNSET, 
SIFC_SUBORKB
 },

187 {0x589b6b0d, 
SI_UNSET
, SI_UNSET, 
SIFC_SUBORKB
 },

188 {0x41401c6d, 
SI_UNSET
, SI_UNSET, 
SIFC_SUBORKB
 },

189 {0x23d17f5e, 
SI_GAMEPAD
, 
SI_ZAPPER
, 
SIFC_NONE
 },

190 {0xc3c0811d, 
SI_GAMEPAD
, SI_GAMEPAD, 
SIFC_OEKAKIDS
 },

191 {0xde8fd935, 
SI_UNSET
, 
SI_ZAPPER
, 
SIFC_NONE
 },

192 {0x47232739, 
SI_GAMEPAD
, SI_GAMEPAD, 
SIFC_TOPRIDER
 },

193 {0x8a12a7d9, 
SI_GAMEPAD
, SI_GAMEPAD, 
SIFC_FTRAINERB
 },

194 {0xb8b9aˇ3, 
SI_UNSET
, 
SI_ZAPPER
, 
SIFC_NONE
 },

195 {0x5112dc21, 
SI_UNSET
, 
SI_ZAPPER
, 
SIFC_NONE
 },

196 {0xaf4010ó, 
SI_GAMEPAD
, 
SI_POWERPADB
, 
SIFC_UNSET
 },

197 {0x00000000, 
SI_UNSET
, SI_UNSET, 
SIFC_UNSET
 }

199 
x
 = 0;

201 
moo
[
x
].
öput1
 >0 || moo[x].
öput2
 >0 || moo[x].
öputfc
 >= 0) {

202 i‡(
moo
[
x
].
¸c32
 =
iNESGameCRC32
) {

203 
GameInfo
->
öput
[0] = 
moo
[
x
].
öput1
;

204 
GameInfo
->
öput
[1] = 
moo
[
x
].
öput2
;

205 
GameInfo
->
öputfc
 = 
moo
[
x
].inputfc;

208 
x
++;

210 
	}
}

212 
	#INESB_INCOMPLETE
 1

	)

213 
	#INESB_CORRUPT
 2

	)

214 
	#INESB_HACKED
 4

	)

216 
	sBADINF
 {

217 
uöt64
 
	mmd5∑πül
;

218 c⁄° *
	m«me
;

219 
uöt32
 
	mty≥
;

222 
BADINF
 
	gBadROMImages
[] =

224 
	~"öes-bad.h
"

227 
	$CheckBad
(
uöt64
 
md5∑πül
) {

228 
öt32
 
x
 = 0;

229 
BadROMImages
[
x
].
«me
) {

230 i‡(
BadROMImages
[
x
].
md5∑πül
 == md5partial) {

231 
	`FCEU_PrötEº‹
("Thêc›y gamêyou havêlﬂded, \"%s\", i†bad,ánd wû»nŸ w‹kÖr›îly i¿FCEUX.", 
BadROMImages
[
x
].
«me
);

234 
x
++;

236 
	}
}

239 
	sCHINF
 {

240 
uöt32
 
	m¸c32
;

241 
öt32
 
	mm≠≥r
;

242 
öt32
 
	mmúr‹
;

243 c⁄° * 
	m∑øms
;

246 c⁄° 
TMa°îRomInfo
 
	gsMa°îRomInfo
[] = {

257 c⁄° 
TMa°îRomInfo
* 
	gMa°îRomInfo
;

259 
	$CheckHInfo
() {

267 
uöt64
 
ßvõ
[] =

304 
CHINF
 
moo
[] =

306 
	~"öes-c‹ª˘.h
"

308 
öt32
 
tofix
 = 0, 
x
, 
mask
;

309 
uöt64
 
∑πülmd5
 = 0;

311 
x
 = 0; x < 8; x++)

312 
∑πülmd5
 |(
uöt64
)
iNESC¨t
.
MD5
[15 - 
x
] << (x * 8);

313 
	`CheckBad
(
∑πülmd5
);

315 
Ma°îRomInfo
 = 
NULL
;

316 
i
 = 0; i < ()
	`ARRAY_SIZE
(
sMa°îRomInfo
); i++) {

317 c⁄° 
TMa°îRomInfo
& 
öfo
 = 
sMa°îRomInfo
[
i
];

318 i‡(
öfo
.
md5lowî
 !
∑πülmd5
)

321 
Ma°îRomInfo
 = &
öfo
;

322 i‡(!
öfo
.
∑øms
) ;

332 
x
 = 0;

334 i‡(
moo
[
x
].
¸c32
 =
iNESGameCRC32
) {

335 i‡(
moo
[
x
].
m≠≥r
 >= 0) {

336 i‡(
moo
[
x
].
m≠≥r
 & 0x800 && 
VROM_size
) {

337 
VROM_size
 = 0;

338 
	`‰ì
(
VROM
);

339 
VROM
 = 
NULL
;

340 
tofix
 |= 8;

342 i‡(
moo
[
x
].
m≠≥r
 & 0x1000)

343 
mask
 = 0xFFF;

345 
mask
 = 0xFF;

346 i‡(
M≠≥rNo
 !(
moo
[
x
].
m≠≥r
 & 
mask
)) {

347 
tofix
 |= 1;

348 
M≠≥rNo
 = 
moo
[
x
].
m≠≥r
 & 
mask
;

351 i‡(
moo
[
x
].
múr‹
 >= 0) {

352 i‡(
moo
[
x
].
múr‹
 == 8) {

353 i‡(
Múr‹ög
 == 2) {

354 
tofix
 |= 2;

355 
Múr‹ög
 = 0;

357 } i‡(
Múr‹ög
 !
moo
[
x
].
múr‹
) {

358 i‡(
Múr‹ög
 !(
moo
[
x
].
múr‹
 & ~4))

359 i‡((
moo
[
x
].
múr‹
 & ~4) <= 2)

363 
tofix
 |= 2;

364 
Múr‹ög
 = 
moo
[
x
].
múr‹
;

369 
x
++;

370 } 
moo
[
x
].
múr‹
 >0 || moo[x].
m≠≥r
 >= 0);

372 
x
 = 0;

373 
ßvõ
[
x
] != 0) {

374 i‡(
ßvõ
[
x
] =
∑πülmd5
) {

375 i‡(!(
hód
.
ROM_ty≥
 & 2)) {

376 
tofix
 |= 4;

377 
hód
.
ROM_ty≥
 |= 2;

380 
x
++;

386 i‡((
M≠≥rNo
 =118 || M≠≥rNÿ=24 || M≠≥rNÿ=26Ë&& (
Múr‹ög
 == 2)) {

387 
Múr‹ög
 = 0;

388 
tofix
 |= 2;

392 i‡(
M≠≥rNo
 == 99)

393 
Múr‹ög
 = 2;

395 i‡(
tofix
) {

396 
giga°r
[768];

397 
	`°r˝y
(
giga°r
, "The iNES header contains incorrect information. ForÇow,Åhe information will be corrected in RAM. ");

398 i‡(
tofix
 & 1)

399 
	`•rötf
(
giga°r
 + 
	`°æí
(giga°r), "Thêm≠≥∏numbî should bê£àtÿ%d. ", 
M≠≥rNo
);

400 i‡(
tofix
 & 2) {

401 c⁄° *
m°r
[3] = { "Horizontal", "Vertical", "Four-screen" };

402 
	`•rötf
(
giga°r
 + 
	`°æí
(giga°r), "Múr‹ög should bê£àtÿ\"%s\". ", 
m°r
[
Múr‹ög
 & 3]);

404 i‡(
tofix
 & 4)

405 
	`°rˇt
(
giga°r
, "The battery-backed bit should be set. ");

406 i‡(
tofix
 & 8)

407 
	`°rˇt
(
giga°r
, "This game shouldÇot haveány CHR ROM. ");

408 
	`°rˇt
(
giga°r
, "\n");

409 
	`FCEU_¥ötf
("%s", 
giga°r
);

411 
	}
}

426 
	gnŸ_powî2
[] =

431 
BMAPPINGLoˇl
 
	gbm≠
[] = {

432 {"NROM", 0, 
NROM_Inô
},

433 {"MMC1", 1, 
M≠≥r1_Inô
},

434 {"UNROM", 2, 
UNROM_Inô
},

435 {"CNROM", 3, 
CNROM_Inô
},

436 {"MMC3", 4, 
M≠≥r4_Inô
},

437 {"MMC5", 5, 
M≠≥r5_Inô
},

438 {"FFE Rev. A", 6, 
M≠≥r6_Inô
},

439 {"ANROM", 7, 
ANROM_Inô
},

440 {"", 8, 
M≠≥r8_Inô
},

441 {"MMC2", 9, 
M≠≥r9_Inô
},

442 {"MMC4", 10, 
M≠≥r10_Inô
},

443 {"Cﬁ‹ Dªams", 11, 
M≠≥r11_Inô
},

444 {"REX DBZ 5", 12, 
M≠≥r12_Inô
},

445 {"CPROM", 13, 
CPROM_Inô
},

446 {"REX SL-1632", 14, 
UNLSL1632_Inô
},

447 {"100-ö-1", 15, 
M≠≥r15_Inô
},

448 {"BANDAI 24C02", 16, 
M≠≥r16_Inô
},

449 {"FFE Rev. B", 17, 
M≠≥r17_Inô
},

450 {"JALECO SS880006", 18, 
M≠≥r18_Inô
},

451 {"NamcŸ 106", 19, 
M≠≥r19_Inô
},

453 {"K⁄amòVRC2/VRC4 A", 21, 
M≠≥r21_Inô
},

454 {"K⁄amòVRC2/VRC4 B", 22, 
M≠≥r22_Inô
},

455 {"K⁄amòVRC2/VRC4 C", 23, 
M≠≥r23_Inô
},

456 {"K⁄amòVRC6 Rev. A", 24, 
M≠≥r24_Inô
},

457 {"K⁄amòVRC2/VRC4 D", 25, 
M≠≥r25_Inô
},

458 {"K⁄amòVRC6 Rev. B", 26, 
M≠≥r26_Inô
},

459 {"CC-21 MI HUN CHE", 27, 
UNLCC21_Inô
},

460 {"", 28, 
M≠≥r28_Inô
},

461 {"RET-CUFROM", 29, 
M≠≥r29_Inô
},

462 {"UNROM 512", 30, 
UNROM512_Inô
},

463 {"öföôíe¶ives-NSF", 31, 
M≠≥r31_Inô
},

464 {"IREM G-101", 32, 
M≠≥r32_Inô
},

465 {"TC0190FMC/TC0350FMR", 33, 
M≠≥r33_Inô
},

466 {"IREM I-IM/BNROM", 34, 
M≠≥r34_Inô
},

467 {"W¨iÿL™d 2", 35, 
UNLSC127_Inô
},

468 {"TXC Pﬁi˚m™", 36, 
M≠≥r36_Inô
},

469 {"PAL-ZZ SMB/TETRIS/NWC",37, 
M≠≥r37_Inô
},

470 {"Bô C‹p.", 38, 
M≠≥r38_Inô
},

472 {"SMB2j FDS", 40, 
M≠≥r40_Inô
},

473 {"CALTRON 6-ö-1", 41, 
M≠≥r41_Inô
},

474 {"BIO MIRACLE FDS", 42, 
M≠≥r42_Inô
},

475 {"FDS SMB2j LF36", 43, 
M≠≥r43_Inô
},

476 {"MMC3 BMC PIRATE A", 44, 
M≠≥r44_Inô
},

477 {"MMC3 BMC PIRATE B", 45, 
M≠≥r45_Inô
},

478 {"RUMBLESTATION 15-ö-1",46, 
M≠≥r46_Inô
},

479 {"NES-QJ SSVB/NWC", 47, 
M≠≥r47_Inô
},

480 {"TAITO TCxxx", 48, 
M≠≥r48_Inô
},

481 {"MMC3 BMC PIRATE C", 49, 
M≠≥r49_Inô
},

482 {"SMB2j FDS Rev. A", 50, 
M≠≥r50_Inô
},

483 {"11-ö-1 BALL SERIES", 51, 
M≠≥r51_Inô
},

484 {"MMC3 BMC PIRATE D", 52, 
M≠≥r52_Inô
},

485 {"SUPERVISION 16-ö-1", 53, 
Su≥rvisi⁄16_Inô
},

489 {"SIMBPLE BMC PIRATE A", 57, 
M≠≥r57_Inô
},

490 {"SIMBPLE BMC PIRATE B", 58, 
BMCGK192_Inô
},

491 {"", 59, 
M≠≥r59_Inô
},

492 {"SIMBPLE BMC PIRATE C", 60, 
BMCD1038_Inô
},

493 {"20-ö-1 KAISER Rev. A",61, 
M≠≥r61_Inô
},

494 {"700-ö-1", 62, 
M≠≥r62_Inô
},

496 {"TENGEN RAMBO1", 64, 
M≠≥r64_Inô
},

497 {"IREM-H3001", 65, 
M≠≥r65_Inô
},

498 {"MHROM", 66, 
MHROM_Inô
},

499 {"SUNSOFT-FZII", 67, 
M≠≥r67_Inô
},

500 {"Sunso· M≠≥∏#4", 68, 
M≠≥r68_Inô
},

501 {"SUNSOFT-5/FME-7", 69, 
M≠≥r69_Inô
},

502 {"BA KAMEN DISCRETE", 70, 
M≠≥r70_Inô
},

503 {"CAMERICA BF9093", 71, 
M≠≥r71_Inô
},

504 {"JALECO JF-17", 72, 
M≠≥r72_Inô
},

505 {"KONAMI VRC3", 73, 
M≠≥r73_Inô
},

506 {"TW MMC3+VRAM Rev. A", 74, 
M≠≥r74_Inô
},

507 {"KONAMI VRC1", 75, 
M≠≥r75_Inô
},

508 {"NAMCOT 108 Rev. A", 76, 
M≠≥r76_Inô
},

509 {"IREM LROG017", 77, 
M≠≥r77_Inô
},

510 {"Iªm 74HC161/32", 78, 
M≠≥r78_Inô
},

511 {"AVE/C&E/TXC BOARD", 79, 
M≠≥r79_Inô
},

512 {"TAITO X1-005 Rev. A", 80, 
M≠≥r80_Inô
},

514 {"TAITO X1-017", 82, 
M≠≥r82_Inô
},

515 {"YOKO VRC Rev. B", 83, 
M≠≥r83_Inô
},

517 {"KONAMI VRC7", 85, 
M≠≥r85_Inô
},

518 {"JALECO JF-13", 86, 
M≠≥r86_Inô
},

519 {"74*139/74 DISCRETE", 87, 
M≠≥r87_Inô
},

520 {"NAMCO 3433", 88, 
M≠≥r88_Inô
},

521 {"SUNSOFT-3", 89, 
M≠≥r89_Inô
},

522 {"HUMMER/JY BOARD", 90, 
M≠≥r90_Inô
},

523 {"EARLY HUMMER/JY BOARD",91, 
M≠≥r91_Inô
},

524 {"JALECO JF-19", 92, 
M≠≥r92_Inô
},

525 {"SUNSOFT-3R", 93, 
SUNSOFT_UNROM_Inô
},

526 {"HVC-UN1ROM", 94, 
M≠≥r94_Inô
},

527 {"NAMCOT 108 Rev. B", 95, 
M≠≥r95_Inô
},

528 {"BANDAI OEKAKIDS", 96, 
M≠≥r96_Inô
},

529 {"IREM TAM-S1", 97, 
M≠≥r97_Inô
},

531 {"VS Uni/DuÆ- sy°em", 99, 
M≠≥r99_Inô
},

533 {"", 101, 
M≠≥r101_Inô
},

535 {"FDS DOKIDOKI FULL", 103, 
M≠≥r103_Inô
},

537 {"NES-EVENT NWC1990", 105, 
M≠≥r105_Inô
},

538 {"SMB3 PIRATE A", 106, 
M≠≥r106_Inô
},

539 {"MAGIC CORP A", 107, 
M≠≥r107_Inô
},

540 {"FDS UNROM BOARD", 108, 
M≠≥r108_Inô
},

543 {"Chópoˇbø", 111, 
M≠≥r111_Inô
},

544 {"ASDER/NTDEC BOARD", 112, 
M≠≥r112_Inô
},

545 {"HACKER/SACHEN BOARD", 113, 
M≠≥r113_Inô
},

546 {"MMC3 SG PROT. A", 114, 
M≠≥r114_Inô
},

547 {"MMC3 PIRATE A", 115, 
M≠≥r115_Inô
},

548 {"MMC1/MMC3/VRC PIRATE",116, 
UNLSL12_Inô
},

549 {"FUTURE MEDIA BOARD", 117, 
M≠≥r117_Inô
},

550 {"TSKROM", 118, 
TKSROM_Inô
},

551 {"NES-TQROM", 119, 
M≠≥r119_Inô
},

552 {"FDS TOBIDASE", 120, 
M≠≥r120_Inô
},

553 {"MMC3 PIRATE PROT. A", 121, 
M≠≥r121_Inô
},

555 {"MMC3 PIRATE H2288", 123, 
UNLH2288_Inô
},

557 {"FDS LH32", 125, 
LH32_Inô
},

564 {"TXC/MGENIUS 22111", 132, 
UNL22211_Inô
},

565 {"SA72008", 133, 
SA72008_Inô
},

566 {"MMC3 BMC PIRATE", 134, 
M≠≥r134_Inô
},

568 {"TCU02", 136, 
TCU02_Inô
},

569 {"S8259D", 137, 
S8259D_Inô
},

570 {"S8259B", 138, 
S8259B_Inô
},

571 {"S8259C", 139, 
S8259C_Inô
},

572 {"JALECO JF-11/14", 140, 
M≠≥r140_Inô
},

573 {"S8259A", 141, 
S8259A_Inô
},

574 {"UNLKS7032", 142, 
UNLKS7032_Inô
},

575 {"TCA01", 143, 
TCA01_Inô
},

576 {"AGCI 50282", 144, 
M≠≥r144_Inô
},

577 {"SA72007", 145, 
SA72007_Inô
},

578 {"SA0161M", 146, 
SA0161M_Inô
},

579 {"TCU01", 147, 
TCU01_Inô
},

580 {"SA0037", 148, 
SA0037_Inô
},

581 {"SA0036", 149, 
SA0036_Inô
},

582 {"S74LS374N", 150, 
S74LS374N_Inô
},

583 {"", 151, 
M≠≥r151_Inô
},

584 {"", 152, 
M≠≥r152_Inô
},

585 {"BANDAI SRAM", 153, 
M≠≥r153_Inô
},

586 {"", 154, 
M≠≥r154_Inô
},

587 {"", 155, 
M≠≥r155_Inô
},

588 {"", 156, 
M≠≥r156_Inô
},

589 {"BANDAI BARCODE", 157, 
M≠≥r157_Inô
},

591 {"BANDAI 24C01", 159, 
M≠≥r159_Inô
},

592 {"SA009", 160, 
SA009_Inô
},

594 {"", 162, 
UNLFS304_Inô
},

595 {"", 163, 
M≠≥r163_Inô
},

596 {"", 164, 
M≠≥r164_Inô
},

597 {"", 165, 
M≠≥r165_Inô
},

598 {"SUBOR Rev. A", 166, 
M≠≥r166_Inô
},

599 {"SUBOR Rev. B", 167, 
M≠≥r167_Inô
},

600 {"", 168, 
M≠≥r168_Inô
},

602 {"", 170, 
M≠≥r170_Inô
},

603 {"", 171, 
M≠≥r171_Inô
},

604 {"", 172, 
M≠≥r172_Inô
},

605 {"", 173, 
M≠≥r173_Inô
},

607 {"", 175, 
M≠≥r175_Inô
},

608 {"BMCFK23C", 176, 
BMCFK23C_Inô
},

609 {"", 177, 
M≠≥r177_Inô
},

610 {"", 178, 
M≠≥r178_Inô
},

612 {"", 180, 
M≠≥r180_Inô
},

613 {"", 181, 
M≠≥r181_Inô
},

615 {"", 183, 
M≠≥r183_Inô
},

616 {"", 184, 
M≠≥r184_Inô
},

617 {"", 185, 
M≠≥r185_Inô
},

618 {"", 186, 
M≠≥r186_Inô
},

619 {"", 187, 
M≠≥r187_Inô
},

620 {"", 188, 
M≠≥r188_Inô
},

621 {"", 189, 
M≠≥r189_Inô
},

622 {"", 190, 
M≠≥r190_Inô
},

623 {"", 191, 
M≠≥r191_Inô
},

624 {"TW MMC3+VRAM Rev. B", 192, 
M≠≥r192_Inô
},

625 {"NTDEC TC-112", 193, 
M≠≥r193_Inô
},

626 {"TW MMC3+VRAM Rev. C", 194, 
M≠≥r194_Inô
},

627 {"TW MMC3+VRAM Rev. D", 195, 
M≠≥r195_Inô
},

628 {"", 196, 
M≠≥r196_Inô
},

629 {"", 197, 
M≠≥r197_Inô
},

630 {"TW MMC3+VRAM Rev. E", 198, 
M≠≥r198_Inô
},

631 {"", 199, 
M≠≥r199_Inô
},

632 {"", 200, 
M≠≥r200_Inô
},

633 {"", 201, 
M≠≥r201_Inô
},

634 {"", 202, 
M≠≥r202_Inô
},

635 {"", 203, 
M≠≥r203_Inô
},

636 {"", 204, 
M≠≥r204_Inô
},

637 {"", 205, 
M≠≥r205_Inô
},

638 {"NAMCOT 108 Rev. C", 206, 
M≠≥r206_Inô
},

639 {"TAITO X1-005 Rev. B", 207, 
M≠≥r207_Inô
},

640 {"", 208, 
M≠≥r208_Inô
},

641 {"", 209, 
M≠≥r209_Inô
},

642 {"", 210, 
M≠≥r210_Inô
},

643 {"", 211, 
M≠≥r211_Inô
},

644 {"", 212, 
M≠≥r212_Inô
},

645 {"", 213, 
M≠≥r213_Inô
},

646 {"", 214, 
M≠≥r214_Inô
},

647 {"", 215, 
UNL8237_Inô
},

648 {"", 216, 
M≠≥r216_Inô
},

649 {"", 217, 
M≠≥r217_Inô
},

651 {"UNLA9746", 219, 
UNLA9746_Inô
},

652 {"Debug M≠≥r", 220, 
QTAi_Inô
},

653 {"UNLN625092", 221, 
UNLN625092_Inô
},

654 {"", 222, 
M≠≥r222_Inô
},

657 {"", 225, 
M≠≥r225_Inô
},

658 {"BMC 22+20-ö-1", 226, 
M≠≥r226_Inô
},

659 {"", 227, 
M≠≥r227_Inô
},

660 {"", 228, 
M≠≥r228_Inô
},

661 {"", 229, 
M≠≥r229_Inô
},

662 {"BMC C⁄åa+22-ö-1", 230, 
M≠≥r230_Inô
},

663 {"", 231, 
M≠≥r231_Inô
},

664 {"BMC QUATTRO", 232, 
M≠≥r232_Inô
},

665 {"BMC 22+20-ö-1 RST", 233, 
M≠≥r233_Inô
},

666 {"BMC MAXI", 234, 
M≠≥r234_Inô
},

667 {"", 235, 
M≠≥r235_Inô
},

670 {"UNL6035052", 238, 
UNL6035052_Inô
},

672 {"", 240, 
M≠≥r240_Inô
},

673 {"", 241, 
M≠≥r241_Inô
},

674 {"", 242, 
M≠≥r242_Inô
},

675 {"S74LS374NA", 243, 
S74LS374NA_Inô
},

676 {"DECATHLON", 244, 
M≠≥r244_Inô
},

677 {"", 245, 
M≠≥r245_Inô
},

678 {"FONG SHEN BANG", 246, 
M≠≥r246_Inô
},

681 {"", 249, 
M≠≥r249_Inô
},

682 {"", 250, 
M≠≥r250_Inô
},

684 {"SAN GUO ZHI PIRATE", 252, 
M≠≥r252_Inô
},

685 {"DRAGON BALL PIRATE", 253, 
M≠≥r253_Inô
},

686 {"", 254, 
M≠≥r254_Inô
},

698 {"ONE-BUS Sy°ems", 256, 
UNLO√Bus_Inô
},

699 {"PEC-586 Compuãr", 257, 
UNLPEC586Inô
},

700 {"158B PrŸ Bﬂrd", 258, 
UNL158B_Inô
},

701 {"F-15 MMC3 Ba£d", 259, 
BMCF15_Inô
},

702 {"HP10xx/H20xx Bﬂrds", 260, 
BMCHPxx_Inô
},

703 {"810544-CA-1", 261, 
BMC810544CA1_Inô
},

704 { "KONAMI QTAòBﬂrd", 547, 
QTAi_Inô
 },

706 {"", 0, 
NULL
}

709 
	$iNESLﬂd
(c⁄° *
«me
, 
FCEUFILE
 *
Â
, 
OvîwrôeVidMode
) {

710 
md5_c⁄ãxt
 
md5
;

712 i‡(
	`FCEU_‰ód
(&
hód
, 1, 16, 
Â
Ë!16 || 
	`memcmp
(&head, "NES\x1A", 4))

715 
hód
.
	`˛ónup
();

717 
	`mem£t
(&
iNESC¨t
, 0, (iNESCart));

719 
iNES2
 = ((
hód
.
ROM_ty≥2
 & 0x0C) == 0x08);

720 if(
iNES2
)

722 
iNESC¨t
.
öes2
 = 
åue
;

723 
iNESC¨t
.
wøm_size
 = (
hód
.
RAM_size
 & 0x0F)?(64 << (head.RAM_size & 0x0F)):0;

724 
iNESC¨t
.
b©ãry_wøm_size
 = (
hód
.
RAM_size
 & 0xF0)?(64 << ((head.RAM_size & 0xF0)>>4)):0;

725 
iNESC¨t
.
vøm_size
 = (
hód
.
VRAM_size
 & 0x0F)?(64 << (head.VRAM_size & 0x0F)):0;

726 
iNESC¨t
.
b©ãry_vøm_size
 = (
hód
.
VRAM_size
 & 0xF0)?(64 << ((head.VRAM_size & 0xF0)>>4)):0;

727 
iNESC¨t
.
subm≠≥r
 = 
hód
.
ROM_ty≥3
 >> 4;

730 
M≠≥rNo
 = (
hód
.
ROM_ty≥
 >> 4);

731 
M≠≥rNo
 |(
hód
.
ROM_ty≥2
 & 0xF0);

732 if(
iNES2
Ë
M≠≥rNo
 |((
hód
.
ROM_ty≥3
 & 0x0F) << 8);

734 i‡(
hód
.
ROM_ty≥
 & 8) {

735 
Múr‹ög
 = 2;

737 
Múr‹ög
 = (
hód
.
ROM_ty≥
 & 1);

739 
nŸ_round_size
 = 
hód
.
ROM_size
;

740 if(
iNES2
Ë
nŸ_round_size
 |((
hód
.
Uµî_ROM_VROM_size
 & 0x0F) << 8);

742 i‡(!
hód
.
ROM_size
 && !
iNES2
)

743 
ROM_size
 = 256;

745 
ROM_size
 = 
	`uµow2
(
nŸ_round_size
);

747 
VROM_size
 = 
	`uµow2
(
hód
.VROM_sizê| (
iNES2
?((hód.
Uµî_ROM_VROM_size
 & 0xF0)<<4):0));

749 
round
 = 
åue
;

750 
i
 = 0; i !(
nŸ_powî2
) / (not_power2[0]); ++i) {

756 i‡(
nŸ_powî2
[
i
] =
M≠≥rNo
) {

757 
round
 = 
Ál£
;

762 i‡((
ROM
 = (
uöt8
*)
	`FCEU_mÆloc
(
ROM_size
 << 14)Ë=
NULL
)

764 
	`mem£t
(
ROM
, 0xFF, 
ROM_size
 << 14);

766 i‡(
VROM_size
) {

767 i‡((
VROM
 = (
uöt8
*)
	`FCEU_mÆloc
(
VROM_size
 << 13)Ë=
NULL
) {

768 
	`‰ì
(
ROM
);

769 
ROM
 = 
NULL
;

772 
	`mem£t
(
VROM
, 0xFF, 
VROM_size
 << 13);

775 i‡(
hód
.
ROM_ty≥
 & 4) {

776 
åaöîpoo
 = (
uöt8
*)
	`FCEU_gmÆloc
(512);

777 
	`FCEU_‰ód
(
åaöîpoo
, 512, 1, 
Â
);

780 
	`Re£tC¨tM≠pög
();

783 
	`SëupC¨tPRGM≠pög
(0, 
ROM
, 
ROM_size
 << 14, 0);

785 
	`FCEU_‰ód
(
ROM
, 0x4000, (
round
Ë? 
ROM_size
 : 
nŸ_round_size
, 
Â
);

787 i‡(
VROM_size
)

788 
	`FCEU_‰ód
(
VROM
, 0x2000, 
VROM_size
, 
Â
);

790 
	`md5_°¨ts
(&
md5
);

791 
	`md5_upd©e
(&
md5
, 
ROM
, 
ROM_size
 << 14);

795 i‡(
VROM_size
) {

797 
	`md5_upd©e
(&
md5
, 
VROM
, 
VROM_size
 << 13);

799 
	`md5_föish
(&
md5
, 
iNESC¨t
.
MD5
);

800 
	`mem˝y
(&
GameInfo
->
MD5
, &
iNESC¨t
.MD5, (iNESCart.MD5));

804 
	`FCEU_¥ötf
(" PRG ROM: %3d x 16KiB\n", (
round
Ë? 
ROM_size
: 
nŸ_round_size
);

805 
	`FCEU_¥ötf
(" CHR ROM: %3d x 8KiB\n", 
hód
.
VROM_size
);

808 
x
;

809 
	`FCEU_¥ötf
(" ROM MD5: 0x");

810 
x
=0;x<16;x++)

811 
	`FCEU_¥ötf
("%02x",
iNESC¨t
.
MD5
[
x
]);

812 
	`FCEU_¥ötf
("\n");

815 c⁄° * 
m≠≥∫ame
 = "Not Listed";

817 
m≠≥πe°
 = 0; m≠≥πe° < ()( 
bm≠
 /  bmap[0]) - 1; mappertest++) {

818 i‡(
bm≠
[
m≠≥πe°
].
numbî
 =
M≠≥rNo
) {

819 
m≠≥∫ame
 = 
bm≠
[
m≠≥πe°
].
«me
;

824 
	`FCEU_¥ötf
(" M≠≥∏#: %d\n", 
M≠≥rNo
);

825 
	`FCEU_¥ötf
(" M≠≥∏«me: %s\n", 
m≠≥∫ame
);

826 
	`FCEU_¥ötf
(" Múr‹ög: %s\n", 
Múr‹ög
 == 2 ? "None (Four-screen)" : Mirroring ? "Vertical" : "Horizontal");

827 
	`FCEU_¥ötf
(" B©ãry-backed: %s\n", (
hód
.
ROM_ty≥
 & 2) ? "Yes" : "No");

828 
	`FCEU_¥ötf
(" Tøöed: %s\n", (
hód
.
ROM_ty≥
 & 4) ? "Yes" : "No");

829 if(
iNES2
)

831 
	`FCEU_¥ötf
(" NES2.0 Extensions\n");

832 
	`FCEU_¥ötf
(" Sub M≠≥∏#: %d\n", 
iNESC¨t
.
subm≠≥r
);

833 
	`FCEU_¥ötf
(" TŸÆ WRAM size: %d\n", 
iNESC¨t
.
wøm_size
 + iNESC¨t.
b©ãry_wøm_size
);

834 
	`FCEU_¥ötf
(" TŸÆ VRAM size: %d\n", 
iNESC¨t
.
vøm_size
 + iNESC¨t.
b©ãry_vøm_size
);

835 if(
hód
.
ROM_ty≥
 & 2)

837 
	`FCEU_¥ötf
(" WRAM backed by b©ãry: %d\n", 
iNESC¨t
.
b©ãry_wøm_size
);

838 
	`FCEU_¥ötf
(" VRAM backed by b©ãry: %d\n", 
iNESC¨t
.
b©ãry_vøm_size
);

842 
	`SëI≈ut
();

843 
	`CheckHInfo
();

845 
x
;

846 
uöt64
 
∑πülmd5
 = 0;

848 
x
 = 0; x < 8; x++) {

849 
∑πülmd5
 |(
uöt64
)
iNESC¨t
.
MD5
[7 - 
x
] << (x * 8);

855 i‡(
VROM_size
)

856 
	`SëupC¨tCHRM≠pög
(0, 
VROM
, 
VROM_size
 * 0x2000, 0);

858 i‡(
Múr‹ög
 == 2) {

859 
ExåaNTARAM
 = (
uöt8
*)
	`FCEU_gmÆloc
(2048);

860 
	`SëupC¨tMúr‹ög
(4, 1, 
ExåaNTARAM
);

861 } i‡(
Múr‹ög
 >= 0x10)

862 
	`SëupC¨tMúr‹ög
(2 + (
Múr‹ög
 & 1), 1, 0);

864 
	`SëupC¨tMúr‹ög
(
Múr‹ög
 & 1, (Mirroring & 4) >> 2, 0);

866 
iNESC¨t
.
b©ãry
 = (
hód
.
ROM_ty≥
 & 2) ? 1 : 0;

867 
iNESC¨t
.
múr‹
 = 
Múr‹ög
;

869 i‡(!
	`iNES_Inô
(
M≠≥rNo
))

870 
	`FCEU_PrötEº‹
("iNES m≠≥∏#%d i†nŸ suµ‹ãdáàÆl.", 
M≠≥rNo
);

872 
GameInfo
->
m≠≥∫um
 = 
M≠≥rNo
;

874 
	`°r˝y
(
LﬂdedRomFName
, 
«me
);

883 
GameI¡îÁ˚
 = 
iNESGI
;

884 
cuºC¨tInfo
 = &
iNESC¨t
;

885 
	`FCEU_¥ötf
("\n");

890 i‡(
iNES2
) {

891 
	`FCEUI_SëVidSy°em
(((
hód
.
TV_sy°em
 & 3) == 1) ? 1 : 0);

892 } i‡(
OvîwrôeVidMode
) {

901 
	`FCEUI_SëVidSy°em
(0);

904 
	}
}

906 
	$iNES_Inô
(
num
) {

907 
BMAPPINGLoˇl
 *
tmp
 = 
bm≠
;

909 
CHRRAMSize
 = -1;

911 
tmp
->
öô
) {

912 i‡(
num
 =
tmp
->
numbî
) {

913 
UNIFchºama
 = 0;

914 i‡(!
VROM_size
) {

915 if(!
iNESC¨t
.
öes2
)

917 
num
) {

918 13: 
CHRRAMSize
 = 16 * 1024; ;

923 96: 
CHRRAMSize
 = 32 * 1024; ;

924 176: 
CHRRAMSize
 = 128 * 1024; ;

925 : 
CHRRAMSize
 = 8 * 1024; ;

927 
iNESC¨t
.
vøm_size
 = 
CHRRAMSize
;

931 
CHRRAMSize
 = 
iNESC¨t
.
b©ãry_vøm_size
 + iNESC¨t.
vøm_size
;

933 i‡((
VROM
 = (
uöt8
*)
	`FCEU_dmÆloc
(
CHRRAMSize
)Ë=
NULL
)  0;

934 
	`FCEU_Mem‹yR™d
(
VROM
, 
CHRRAMSize
);

936 
UNIFchºama
 = 
VROM
;

937 if(
CHRRAMSize
 == 0)

946 
	`SëupC¨tCHRM≠pög
(0, 
VROM
, 
CHRRAMSize
, 1);

947 
	`AddExSèã
(
VROM
, 
CHRRAMSize
, 0, "CHRR");

950 i‡(
hód
.
ROM_ty≥
 & 8)

951 
	`AddExSèã
(
ExåaNTARAM
, 2048, 0, "EXNR");

952 
tmp
->
	`öô
(&
iNESC¨t
);

955 
tmp
++;

958 
	}
}

	@fceux-am/src/ines.h

22 #i‚de‡
_INES_H_


23 
	#_INES_H_


	)

25 
	~"ty≥s.h
"

27 
	sTMa°îRomInfo


29 
uöt64
 
	mmd5lowî
;

30 c⁄° * 
	m∑øms
;

34 
uöt8
 *
ROM
;

35 
uöt8
 *
VROM
;

36 
uöt32
 
VROM_size
;

37 
uöt32
 
ROM_size
;

38 
uöt8
 *
ExåaNTARAM
;

39 
iNesSave
();

40 
iNesSaveAs
(* 
«me
);

41 
LﬂdedRomFName
[2048];

42 c⁄° 
TMa°îRomInfo
* 
Ma°îRomInfo
;

45 
	siNES_HEADER
 {

46 
	mID
[4];

47 
uöt8
 
	mROM_size
;

48 
uöt8
 
	mVROM_size
;

49 
uöt8
 
	mROM_ty≥
;

50 
uöt8
 
	mROM_ty≥2
;

51 
uöt8
 
	mROM_ty≥3
;

52 
uöt8
 
	mUµî_ROM_VROM_size
;

53 
uöt8
 
	mRAM_size
;

54 
uöt8
 
	mVRAM_size
;

55 
uöt8
 
	mTV_sy°em
;

56 
uöt8
 
	mVS_h¨dw¨e
;

57 
uöt8
 
	mª£rved
[2];

59 
˛ónup
()

61 if(!
memcmp
((*)(
this
) + 0x7, "DiskDude", 8) || !memcmp((*)(this) + 0x7, "demiforce", 9))

62 
mem£t
((*)(
this
) + 0x7, 0, 0x9);

64 if(!
memcmp
((*)(
this
) + 0xA, "Ni03", 4))

66 if(!
memcmp
((*)(
this
) + 0x7, "Dis", 3))

67 
mem£t
((*)(
this
) + 0x7, 0, 0x9);

69 
mem£t
((*)(
this
) + 0xA, 0, 0x6);

74 
iNES_HEADER
 
hód
;

76 
NSFVRC6_Inô
();

77 
NSFMMC5_Inô
();

78 
NSFAY_Inô
();

79 
NSFN106_Inô
();

80 
NSFVRC7_Inô
();

82 
M≠≥r1_Inô
(
C¨tInfo
 *);

83 
M≠≥r4_Inô
(
C¨tInfo
 *);

84 
M≠≥r5_Inô
(
C¨tInfo
 *);

85 
M≠≥r6_Inô
(
C¨tInfo
 *);

86 
M≠≥r8_Inô
(
C¨tInfo
 *);

87 
M≠≥r9_Inô
(
C¨tInfo
 *);

88 
M≠≥r10_Inô
(
C¨tInfo
 *);

89 
M≠≥r11_Inô
(
C¨tInfo
 *);

90 
M≠≥r12_Inô
(
C¨tInfo
 *);

91 
M≠≥r15_Inô
(
C¨tInfo
 *);

92 
M≠≥r16_Inô
(
C¨tInfo
 *);

93 
M≠≥r17_Inô
(
C¨tInfo
 *);

94 
M≠≥r18_Inô
(
C¨tInfo
 *);

95 
M≠≥r19_Inô
(
C¨tInfo
 *);

96 
M≠≥r21_Inô
(
C¨tInfo
 *);

97 
M≠≥r22_Inô
(
C¨tInfo
 *);

98 
M≠≥r23_Inô
(
C¨tInfo
 *);

99 
M≠≥r24_Inô
(
C¨tInfo
 *);

100 
M≠≥r25_Inô
(
C¨tInfo
 *);

101 
M≠≥r26_Inô
(
C¨tInfo
 *);

102 
M≠≥r28_Inô
(
C¨tInfo
 *);

103 
M≠≥r29_Inô
(
C¨tInfo
 *);

104 
M≠≥r31_Inô
(
C¨tInfo
 *);

105 
M≠≥r32_Inô
(
C¨tInfo
 *);

106 
M≠≥r33_Inô
(
C¨tInfo
 *);

107 
M≠≥r34_Inô
(
C¨tInfo
 *);

108 
M≠≥r36_Inô
(
C¨tInfo
 *);

109 
M≠≥r37_Inô
(
C¨tInfo
 *);

110 
M≠≥r38_Inô
(
C¨tInfo
 *);

111 
M≠≥r40_Inô
(
C¨tInfo
 *);

112 
M≠≥r41_Inô
(
C¨tInfo
 *);

113 
M≠≥r42_Inô
(
C¨tInfo
 *);

114 
M≠≥r43_Inô
(
C¨tInfo
 *);

115 
M≠≥r44_Inô
(
C¨tInfo
 *);

116 
M≠≥r45_Inô
(
C¨tInfo
 *);

117 
M≠≥r46_Inô
(
C¨tInfo
 *);

118 
M≠≥r47_Inô
(
C¨tInfo
 *);

119 
M≠≥r48_Inô
(
C¨tInfo
 *);

120 
M≠≥r49_Inô
(
C¨tInfo
 *);

121 
M≠≥r50_Inô
(
C¨tInfo
 *);

122 
M≠≥r51_Inô
(
C¨tInfo
 *);

123 
M≠≥r52_Inô
(
C¨tInfo
 *);

124 
M≠≥r57_Inô
(
C¨tInfo
 *);

125 
M≠≥r59_Inô
(
C¨tInfo
 *);

126 
M≠≥r61_Inô
(
C¨tInfo
 *);

127 
M≠≥r62_Inô
(
C¨tInfo
 *);

128 
M≠≥r64_Inô
(
C¨tInfo
 *);

129 
M≠≥r65_Inô
(
C¨tInfo
 *);

130 
M≠≥r67_Inô
(
C¨tInfo
 *);

131 
M≠≥r68_Inô
(
C¨tInfo
 *);

132 
M≠≥r69_Inô
(
C¨tInfo
 *);

133 
M≠≥r70_Inô
(
C¨tInfo
 *);

134 
M≠≥r71_Inô
(
C¨tInfo
 *);

135 
M≠≥r72_Inô
(
C¨tInfo
 *);

136 
M≠≥r73_Inô
(
C¨tInfo
 *);

137 
M≠≥r74_Inô
(
C¨tInfo
 *);

138 
M≠≥r75_Inô
(
C¨tInfo
 *);

139 
M≠≥r76_Inô
(
C¨tInfo
 *);

140 
M≠≥r77_Inô
(
C¨tInfo
 *);

141 
M≠≥r78_Inô
(
C¨tInfo
 *);

142 
M≠≥r79_Inô
(
C¨tInfo
 *);

143 
M≠≥r80_Inô
(
C¨tInfo
 *);

144 
M≠≥r82_Inô
(
C¨tInfo
 *);

145 
M≠≥r83_Inô
(
C¨tInfo
 *);

146 
M≠≥r85_Inô
(
C¨tInfo
 *);

147 
M≠≥r86_Inô
(
C¨tInfo
 *);

148 
M≠≥r87_Inô
(
C¨tInfo
 *);

149 
M≠≥r88_Inô
(
C¨tInfo
 *);

150 
M≠≥r89_Inô
(
C¨tInfo
 *);

151 
M≠≥r90_Inô
(
C¨tInfo
 *);

152 
M≠≥r91_Inô
(
C¨tInfo
 *);

153 
M≠≥r92_Inô
(
C¨tInfo
 *);

154 
M≠≥r93_Inô
(
C¨tInfo
 *);

155 
M≠≥r94_Inô
(
C¨tInfo
 *);

156 
M≠≥r95_Inô
(
C¨tInfo
 *);

157 
M≠≥r96_Inô
(
C¨tInfo
 *);

158 
M≠≥r97_Inô
(
C¨tInfo
 *);

159 
M≠≥r99_Inô
(
C¨tInfo
 *);

160 
M≠≥r101_Inô
(
C¨tInfo
 *);

161 
M≠≥r103_Inô
(
C¨tInfo
 *);

162 
M≠≥r105_Inô
(
C¨tInfo
 *);

163 
M≠≥r106_Inô
(
C¨tInfo
 *);

164 
M≠≥r107_Inô
(
C¨tInfo
 *);

165 
M≠≥r108_Inô
(
C¨tInfo
 *);

166 
M≠≥r111_Inô
(
C¨tInfo
 *);

167 
M≠≥r112_Inô
(
C¨tInfo
 *);

168 
M≠≥r113_Inô
(
C¨tInfo
 *);

169 
M≠≥r114_Inô
(
C¨tInfo
 *);

170 
M≠≥r115_Inô
(
C¨tInfo
 *);

171 
M≠≥r117_Inô
(
C¨tInfo
 *);

172 
M≠≥r119_Inô
(
C¨tInfo
 *);

173 
M≠≥r120_Inô
(
C¨tInfo
 *);

174 
M≠≥r121_Inô
(
C¨tInfo
 *);

175 
M≠≥r125_Inô
(
C¨tInfo
 *);

176 
M≠≥r134_Inô
(
C¨tInfo
 *);

177 
M≠≥r140_Inô
(
C¨tInfo
 *);

178 
M≠≥r144_Inô
(
C¨tInfo
 *);

179 
M≠≥r151_Inô
(
C¨tInfo
 *);

180 
M≠≥r152_Inô
(
C¨tInfo
 *);

181 
M≠≥r153_Inô
(
C¨tInfo
 *);

182 
M≠≥r154_Inô
(
C¨tInfo
 *);

183 
M≠≥r155_Inô
(
C¨tInfo
 *);

184 
M≠≥r156_Inô
(
C¨tInfo
 *);

185 
M≠≥r157_Inô
(
C¨tInfo
 *);

186 
M≠≥r159_Inô
(
C¨tInfo
 *);

187 
M≠≥r163_Inô
(
C¨tInfo
 *);

188 
M≠≥r164_Inô
(
C¨tInfo
 *);

189 
M≠≥r165_Inô
(
C¨tInfo
 *);

190 
M≠≥r166_Inô
(
C¨tInfo
 *);

191 
M≠≥r167_Inô
(
C¨tInfo
 *);

192 
M≠≥r168_Inô
(
C¨tInfo
 *);

193 
M≠≥r170_Inô
(
C¨tInfo
 *);

194 
M≠≥r171_Inô
(
C¨tInfo
 *);

195 
M≠≥r172_Inô
(
C¨tInfo
 *);

196 
M≠≥r173_Inô
(
C¨tInfo
 *);

197 
M≠≥r175_Inô
(
C¨tInfo
 *);

198 
M≠≥r177_Inô
(
C¨tInfo
 *);

199 
M≠≥r178_Inô
(
C¨tInfo
 *);

200 
M≠≥r180_Inô
(
C¨tInfo
 *);

201 
M≠≥r181_Inô
(
C¨tInfo
 *);

202 
M≠≥r183_Inô
(
C¨tInfo
 *);

203 
M≠≥r184_Inô
(
C¨tInfo
 *);

204 
M≠≥r185_Inô
(
C¨tInfo
 *);

205 
M≠≥r186_Inô
(
C¨tInfo
 *);

206 
M≠≥r187_Inô
(
C¨tInfo
 *);

207 
M≠≥r188_Inô
(
C¨tInfo
 *);

208 
M≠≥r189_Inô
(
C¨tInfo
 *);

209 
M≠≥r190_Inô
(
C¨tInfo
 *);

210 
M≠≥r191_Inô
(
C¨tInfo
 *);

211 
M≠≥r192_Inô
(
C¨tInfo
 *);

212 
M≠≥r193_Inô
(
C¨tInfo
 *);

213 
M≠≥r194_Inô
(
C¨tInfo
 *);

214 
M≠≥r195_Inô
(
C¨tInfo
 *);

215 
M≠≥r196_Inô
(
C¨tInfo
 *);

216 
M≠≥r197_Inô
(
C¨tInfo
 *);

217 
M≠≥r198_Inô
(
C¨tInfo
 *);

218 
M≠≥r199_Inô
(
C¨tInfo
 *);

219 
M≠≥r200_Inô
(
C¨tInfo
 *);

220 
M≠≥r201_Inô
(
C¨tInfo
 *);

221 
M≠≥r202_Inô
(
C¨tInfo
 *);

222 
M≠≥r203_Inô
(
C¨tInfo
 *);

223 
M≠≥r204_Inô
(
C¨tInfo
 *);

224 
M≠≥r205_Inô
(
C¨tInfo
 *);

225 
M≠≥r206_Inô
(
C¨tInfo
 *);

226 
M≠≥r207_Inô
(
C¨tInfo
 *);

227 
M≠≥r208_Inô
(
C¨tInfo
 *);

228 
M≠≥r209_Inô
(
C¨tInfo
 *);

229 
M≠≥r210_Inô
(
C¨tInfo
 *);

230 
M≠≥r211_Inô
(
C¨tInfo
 *);

231 
M≠≥r212_Inô
(
C¨tInfo
 *);

232 
M≠≥r213_Inô
(
C¨tInfo
 *);

233 
M≠≥r214_Inô
(
C¨tInfo
 *);

234 
M≠≥r216_Inô
(
C¨tInfo
 *);

235 
M≠≥r217_Inô
(
C¨tInfo
 *);

236 
M≠≥r220_Inô
(
C¨tInfo
 *);

237 
M≠≥r222_Inô
(
C¨tInfo
 *);

238 
M≠≥r225_Inô
(
C¨tInfo
 *);

239 
M≠≥r226_Inô
(
C¨tInfo
 *);

240 
M≠≥r227_Inô
(
C¨tInfo
 *);

241 
M≠≥r228_Inô
(
C¨tInfo
 *);

242 
M≠≥r229_Inô
(
C¨tInfo
 *);

243 
M≠≥r230_Inô
(
C¨tInfo
 *);

244 
M≠≥r231_Inô
(
C¨tInfo
 *);

245 
M≠≥r232_Inô
(
C¨tInfo
 *);

246 
M≠≥r233_Inô
(
C¨tInfo
 *);

247 
M≠≥r234_Inô
(
C¨tInfo
 *);

248 
M≠≥r235_Inô
(
C¨tInfo
 *);

249 
M≠≥r236_Inô
(
C¨tInfo
 *);

250 
M≠≥r237_Inô
(
C¨tInfo
 *);

251 
M≠≥r240_Inô
(
C¨tInfo
 *);

252 
M≠≥r241_Inô
(
C¨tInfo
 *);

253 
M≠≥r242_Inô
(
C¨tInfo
 *);

254 
M≠≥r244_Inô
(
C¨tInfo
 *);

255 
M≠≥r245_Inô
(
C¨tInfo
 *);

256 
M≠≥r246_Inô
(
C¨tInfo
 *);

257 
M≠≥r249_Inô
(
C¨tInfo
 *);

258 
M≠≥r250_Inô
(
C¨tInfo
 *);

259 
M≠≥r252_Inô
(
C¨tInfo
 *);

260 
M≠≥r253_Inô
(
C¨tInfo
 *);

261 
M≠≥r254_Inô
(
C¨tInfo
 *);

264 c⁄° *
	m«me
;

265 
öt32
 
	mnumbî
;

266 (*
	möô
)(
	mC¨tInfo
 *);

267 } 
	tBMAPPINGLoˇl
;

	@fceux-am/src/input.cpp

22 
	~"ty≥s.h
"

23 
	~"x6502.h
"

25 
	~"f˚u.h
"

26 
	~"sound.h
"

27 
	~"°©e.h
"

28 
	~"öput.h
"

29 
	~"drivî.h
"

33 
uöt8
 
	gjoy_ªadbô
[2];

34 
uöt8
 
	gjoy
[4]={0,0,0,0};

35 
uöt16
 
	g¢esjoy
[4]={0,0,0,0};

36 
uöt8
 
	gLa°Såobe
;

37 
uöt8
 
	gRawReg4016
 = 0;

40 
uöt8
 
	$FCEU_GëJoyJoy
()

42 (
joy
[0]|joy[1]|joy[2]|joy[3]);

43 
	}
}

45 
uöt8
 
coö⁄
;

48 
boﬁ
 
	gFSAâached
 = 
Ál£
;

50 
JOYPORT
 
	gjoyp‹ts
[2] = { JOYPORT(0), JOYPORT(1) };

51 
FCPORT
 
	gp‹tFC
;

53 
	$DECLFR
(
JPRód
)

55 
uöt8
 
ªt
=0;

57 
ªt
|=
joyp‹ts
[
A
&1].
drivî
->
	`Ród
(A&1);

59 if(
p‹tFC
.
drivî
)

60 
ªt
 = 
p‹tFC
.
drivî
->
	`Ród
(
A
&1,ret);

62 
ªt
|=
X
.
DB
&0xC0;

64 (
ªt
);

65 
	}
}

67 
	$DECLFW
(
B4016
)

69 if(
p‹tFC
.
drivî
)

70 
p‹tFC
.
drivî
->
	`Wrôe
(
V
&7);

72 
i
=0;i<2;i++)

73 
joyp‹ts
[
i
].
drivî
->
	`Wrôe
(
V
&1);

75 if((
La°Såobe
&1Ë&& (!(
V
&1)))

86 
i
=0;i<2;i++)

87 
joyp‹ts
[
i
].
drivî
->
	`Såobe
(i);

88 if(
p‹tFC
.
drivî
)

89 
p‹tFC
.
drivî
->
	`Såobe
();

91 
La°Såobe
=
V
&0x1;

92 
RawReg4016
 = 
V
;

93 
	}
}

96 
INPUTC
 
	gDummyJP‹t
={0};

98 
INPUTCFC
 
	gDummyP‹tFC
={0};

103 
	$Upd©eGP
(
w
, *
d©a
, 
¨g
)

105 if(
w
==0)

107 
joy
[0] = *(
uöt32
 *)
joyp‹ts
[0].
±r
;;

108 
joy
[2] = *(
uöt32
 *)
joyp‹ts
[0].
±r
 >> 16;

112 
joy
[1] = *(
uöt32
 *)
joyp‹ts
[1].
±r
 >> 8;

113 
joy
[3] = *(
uöt32
 *)
joyp‹ts
[1].
±r
 >> 24;

116 
	}
}

119 
uöt8
 
	$RódGP
(
w
)

121 
uöt8
 
ªt
;

123 if(
joy_ªadbô
[
w
]>=8)

124 
ªt
 = ((
joy
[2+
w
]>>(
joy_ªadbô
[w]&7))&1);

126 
ªt
 = ((
joy
[
w
]>>(
joy_ªadbô
[w]))&1);

127 if(
joy_ªadbô
[
w
]>=16Ë
ªt
=0;

128 if(!
FSAâached
)

130 if(
joy_ªadbô
[
w
]>=8Ë
ªt
|=1;

134 if(
joy_ªadbô
[
w
]==19-wË
ªt
|=1;

136 if(!
f˚uödbg
)

137 
joy_ªadbô
[
w
]++;

138  
ªt
;

139 
	}
}

141 
	$SåobeGP
(
w
)

143 
joy_ªadbô
[
w
]=0;

144 
	}
}

149 
INPUTC
 
	gGPC
={
RódGP
,0,
SåobeGP
,
Upd©eGP
,0,0};

151 
	$FCEU_DøwI≈ut
(
uöt8
 *
buf
)

153 
∑d
=0;pad<2;pad++)

154 
joyp‹ts
[
∑d
].
drivî
->
	`Døw
’ad,
buf
,joyp‹ts[∑d].
©åib
);

155 if(
p‹tFC
.
drivî
)

156 
p‹tFC
.
drivî
->
	`Døw
(
buf
,p‹tFC.
©åib
);

157 
	}
}

160 
	$FCEU_Upd©eI≈ut
()

163 
p‹t
=0;port<2;port++){

164 
joyp‹ts
[
p‹t
].
drivî
->
	`Upd©e
’‹t,joyp‹ts[p‹t].
±r
,joyp‹ts[p‹t].
©åib
);

166 
p‹tFC
.
drivî
->
	`Upd©e
’‹tFC.
±r
,p‹tFC.
©åib
);

167 
	}
}

172 
	$I≈utSˇ∆öeHook
(
uöt8
 *
bg
, uöt8 *
•r
, 
uöt32
 
löës
, 
föÆ
)

174 
p‹t
=0;port<2;port++)

175 
joyp‹ts
[
p‹t
].
drivî
->
	`SLHook
’‹t,
bg
,
•r
,
löës
,
föÆ
);

176 
p‹tFC
.
drivî
->
	`SLHook
(
bg
,
•r
,
löës
,
föÆ
);

177 
	}
}

180 
	$SëI≈utStuff
(
p‹t
)

182 
joyp‹ts
[
p‹t
].
ty≥
)

185 
SI_GAMEPAD
:

186 
joyp‹ts
[
p‹t
].
drivî
&
GPC
;

188 
SI_NONE
:

189 
joyp‹ts
[
p‹t
].
drivî
=&
DummyJP‹t
;

192 
	}
}

194 
	$SëI≈utStuffFC
()

196 
p‹tFC
.
ty≥
)

199 
SIFC_NONE
:

200 
p‹tFC
.
drivî
=&
DummyP‹tFC
;

203 
	}
}

205 
	$FCEUI_SëI≈ut
(
p‹t
, 
ESI
 
ty≥
, *
±r
, 
©åib
)

207 
joyp‹ts
[
p‹t
].
©åib
 =áttrib;

208 
joyp‹ts
[
p‹t
].
ty≥
 =Åype;

209 
joyp‹ts
[
p‹t
].
±r
 =Ötr;

210 
	`SëI≈utStuff
(
p‹t
);

211 
	}
}

213 
	$FCEUI_SëI≈utFC
(
ESIFC
 
ty≥
, *
±r
, 
©åib
)

215 
p‹tFC
.
©åib
 =áttrib;

216 
p‹tFC
.
ty≥
 =Åype;

217 
p‹tFC
.
±r
 =Ötr;

218 
	`SëI≈utStuffFC
();

219 
	}
}

223 
	$InôülizeI≈ut
()

225 
	`mem£t
(
joy_ªadbô
,0,(joy_readbit));

226 
	`mem£t
(
joy
,0,(joy));

227 
La°Såobe
 = 0;

229 
	`SëRódH™dÀr
(0x4016,0x4017,
JPRód
);

231 
	`SëWrôeH™dÀr
(0x4016,0x4016,
B4016
);

234 
	`SëI≈utStuff
(0);

235 
	`SëI≈utStuff
(1);

236 
	`SëI≈utStuffFC
();

237 
	}
}

239 
	$FCEUI_SëI≈utFoursc‹e
(
boﬁ
 
©èchFoursc‹e
)

241 
FSAâached
 = 
©èchFoursc‹e
;

242 
	}
}

	@fceux-am/src/input.h

1 #i‚de‡
_INPUT_H_


2 
	#_INPUT_H_


	)

4 
	~"gô.h
"

6 
LagCou¡îToggÀ
();

11 
	sINPUTC


14 
uöt8
 
Ród
(
w
Ë{ if(
	m_Ród
Ë 
_Ród
(w);  0; }

15 
Wrôe
(
uöt8
 
w
Ë{ if(
	m_Wrôe
Ë
_Wrôe
(w); }

16 
Såobe
(
w
Ë{ if(
	m_Såobe
Ë
_Såobe
(w); }

17 
Upd©e
(
w
, *
d©a
, 
¨g
Ë{ if(
	m_Upd©e
Ë
_Upd©e
(w,data,arg); }

18 
SLHook
(
w
, 
uöt8
 *
bg
, uöt8 *
•r
, 
uöt32
 
löës
, 
föÆ
Ë{ if(
	m_SLHook
Ë
_SLHook
(w,bg,spr,linets,final); }

19 
Døw
(
w
, 
uöt8
 *
buf
, 
¨g
Ë{ if(
	m_Døw
Ë
_Døw
(w,buf,arg); }

21 
uöt8
 (*
_Ród
)(
	mw
);

22 (*
	m_Wrôe
)(
uöt8
 
	mv
);

23 (*
	m_Såobe
)(
	mw
);

25 (*
	m_Upd©e
)(
	mw
, *
	md©a
, 
	m¨g
);

26 (*
	m_SLHook
)(
	mw
, 
uöt8
 *
	mbg
, uöt8 *
	m•r
, 
uöt32
 
	mlöës
, 
	mföÆ
);

27 (*
	m_Døw
)(
	mw
, 
uöt8
 *
	mbuf
, 
	m¨g
);

31 
	sINPUTCFC


34 
uöt8
 
Ród
(
w
, uöt8 
ªt
Ë{ if(
	m_Ród
Ë 
_Ród
(w,ªt);  
	mªt
; }

35 
Wrôe
(
uöt8
 
v
Ë{ if(
	m_Wrôe
Ë
_Wrôe
(v); }

36 
Såobe
(Ë{ if(
	m_Såobe
Ë
_Såobe
(); }

37 
Upd©e
(*
d©a
, 
¨g
Ë{ if(
	m_Upd©e
Ë
_Upd©e
(data,arg); }

38 
SLHook
(
uöt8
 *
bg
, uöt8 *
•r
, 
uöt32
 
löës
, 
föÆ
Ë{ if(
	m_SLHook
Ë
_SLHook
(bg,spr,linets,final); }

39 
Døw
(
uöt8
 *
buf
, 
¨g
Ë{ if(
	m_Døw
Ë
_Døw
(buf,arg); }

41 
uöt8
 (*
_Ród
)(
	mw
, uöt8 
	mªt
);

42 (*
	m_Wrôe
)(
uöt8
 
	mv
);

43 (*
	m_Såobe
)();

45 (*
	m_Upd©e
)(*
	md©a
, 
	m¨g
);

46 (*
	m_SLHook
)(
uöt8
 *
	mbg
, uöt8 *
	m•r
, 
uöt32
 
	mlöës
, 
	mföÆ
);

47 (*
	m_Døw
)(
uöt8
 *
	mbuf
, 
	m¨g
);

50 
	sJOYPORT


52 
JOYPORT
(
_w
)

53 : 
w
(
_w
)

56 
w
;

57 
©åib
;

58 
ESI
 
ty≥
;

59 * 
±r
;

60 
INPUTC
* 
drivî
;

61 } 
joyp‹ts
[2];

63 
	sFCPORT


65 
©åib
;

66 
ESIFC
 
ty≥
;

67 * 
±r
;

68 
INPUTCFC
* 
drivî
;

69 } 
p‹tFC
;

72 
FCEU_DøwI≈ut
(
uöt8
 *
buf
);

73 
FCEU_Upd©eI≈ut
();

74 
InôülizeI≈ut
();

75 
FCEU_Upd©eBŸ
();

76 (*
PSåobe
[2])();

79 
	`I≈utSˇ∆öeHook
(
uöt8
 *
bg
, uöt8 *
•r
, 
uöt32
 
löës
, 
föÆ
);

81 
	`FCEU_DoSim∂eComm™d
(
cmd
);

83 
	eEMUCMD


85 
EMUCMD_POWER
=0,

86 
EMUCMD_RESET
,

87 
EMUCMD_PAUSE
,

88 
EMUCMD_FRAME_ADVANCE
,

89 
EMUCMD_SCREENSHOT
,

90 
EMUCMD_HIDE_MENU_TOGGLE
,

95 
EMUCMD_EXIT
,

97 
EMUCMD_SPEED_SLOWEST
,

98 
EMUCMD_SPEED_SLOWER
,

99 
EMUCMD_SPEED_NORMAL
,

100 
EMUCMD_SPEED_FASTER
,

101 
EMUCMD_SPEED_FASTEST
,

102 
EMUCMD_SPEED_TURBO
,

103 
EMUCMD_SPEED_TURBO_TOGGLE
,

105 
EMUCMD_SAVE_SLOT_0
,

106 
EMUCMD_SAVE_SLOT_1
,

107 
EMUCMD_SAVE_SLOT_2
,

108 
EMUCMD_SAVE_SLOT_3
,

109 
EMUCMD_SAVE_SLOT_4
,

110 
EMUCMD_SAVE_SLOT_5
,

111 
EMUCMD_SAVE_SLOT_6
,

112 
EMUCMD_SAVE_SLOT_7
,

113 
EMUCMD_SAVE_SLOT_8
,

114 
EMUCMD_SAVE_SLOT_9
,

115 
EMUCMD_SAVE_SLOT_NEXT
,

116 
EMUCMD_SAVE_SLOT_PREV
,

117 
EMUCMD_SAVE_STATE
,

118 
EMUCMD_SAVE_STATE_AS
,

119 
EMUCMD_SAVE_STATE_SLOT_0
,

120 
EMUCMD_SAVE_STATE_SLOT_1
,

121 
EMUCMD_SAVE_STATE_SLOT_2
,

122 
EMUCMD_SAVE_STATE_SLOT_3
,

123 
EMUCMD_SAVE_STATE_SLOT_4
,

124 
EMUCMD_SAVE_STATE_SLOT_5
,

125 
EMUCMD_SAVE_STATE_SLOT_6
,

126 
EMUCMD_SAVE_STATE_SLOT_7
,

127 
EMUCMD_SAVE_STATE_SLOT_8
,

128 
EMUCMD_SAVE_STATE_SLOT_9
,

129 
EMUCMD_LOAD_STATE
,

130 
EMUCMD_LOAD_STATE_FROM
,

131 
EMUCMD_LOAD_STATE_SLOT_0
,

132 
EMUCMD_LOAD_STATE_SLOT_1
,

133 
EMUCMD_LOAD_STATE_SLOT_2
,

134 
EMUCMD_LOAD_STATE_SLOT_3
,

135 
EMUCMD_LOAD_STATE_SLOT_4
,

136 
EMUCMD_LOAD_STATE_SLOT_5
,

137 
EMUCMD_LOAD_STATE_SLOT_6
,

138 
EMUCMD_LOAD_STATE_SLOT_7
,

139 
EMUCMD_LOAD_STATE_SLOT_8
,

140 
EMUCMD_LOAD_STATE_SLOT_9
,

142 
EMUCMD_MOVIE_RECORD_TO
,

143 
EMUCMD_MOVIE_REPLAY_FROM
,

144 
EMUCMD_MOVIE_PLAY_FROM_BEGINNING
,

145 
EMUCMD_MOVIE_STOP
,

146 
EMUCMD_MOVIE_READONLY_TOGGLE
,

147 
EMUCMD_MOVIE_FRAME_DISPLAY_TOGGLE
,

148 
EMUCMD_MOVIE_INPUT_DISPLAY_TOGGLE
,

149 
EMUCMD_MOVIE_ICON_DISPLAY_TOGGLE
,

151 
EMUCMD_SCRIPT_RELOAD
,

153 
EMUCMD_SOUND_TOGGLE
,

154 
EMUCMD_SOUND_VOLUME_UP
,

155 
EMUCMD_SOUND_VOLUME_DOWN
,

156 
EMUCMD_SOUND_VOLUME_NORMAL
,

158 
EMUCMD_AVI_RECORD_AS
,

159 
EMUCMD_AVI_STOP
,

161 
EMUCMD_FDS_EJECT_INSERT
,

162 
EMUCMD_FDS_SIDE_SELECT
,

164 
EMUCMD_VSUNI_COIN
,

165 
EMUCMD_VSUNI_TOGGLE_DIP_0
,

166 
EMUCMD_VSUNI_TOGGLE_DIP_1
,

167 
EMUCMD_VSUNI_TOGGLE_DIP_2
,

168 
EMUCMD_VSUNI_TOGGLE_DIP_3
,

169 
EMUCMD_VSUNI_TOGGLE_DIP_4
,

170 
EMUCMD_VSUNI_TOGGLE_DIP_5
,

171 
EMUCMD_VSUNI_TOGGLE_DIP_6
,

172 
EMUCMD_VSUNI_TOGGLE_DIP_7
,

173 
EMUCMD_VSUNI_TOGGLE_DIP_8
,

174 
EMUCMD_VSUNI_TOGGLE_DIP_9
,

175 
EMUCMD_MISC_AUTOSAVE
,

176 
EMUCMD_MISC_SHOWSTATES
,

177 
EMUCMD_MISC_USE_INPUT_PRESET_1
,

178 
EMUCMD_MISC_USE_INPUT_PRESET_2
,

179 
EMUCMD_MISC_USE_INPUT_PRESET_3
,

180 
EMUCMD_MISC_DISPLAY_BG_TOGGLE
,

181 
EMUCMD_MISC_DISPLAY_OBJ_TOGGLE
,

182 
EMUCMD_MISC_DISPLAY_LAGCOUNTER_TOGGLE
,

185 
EMUCMD_MISC_OPENTASEDITOR
,

186 
EMUCMD_TOOL_OPENMEMORYWATCH
,

187 
EMUCMD_TOOL_OPENCHEATS
,

188 
EMUCMD_TOOL_OPENDEBUGGER
,

189 
EMUCMD_TOOL_OPENHEX
,

190 
EMUCMD_TOOL_OPENPPU
,

191 
EMUCMD_TOOL_OPENTRACELOGGER
,

192 
EMUCMD_TOOL_OPENCDLOGGER
,

194 
EMUCMD_FRAMEADV_SKIPLAG
,

196 
EMUCMD_OPENROM
,

197 
EMUCMD_CLOSEROM
,

198 
EMUCMD_RELOAD
,

200 
EMUCMD_MISC_DISPLAY_MOVIESUBTITLES
,

201 
EMUCMD_MISC_UNDOREDOSAVESTATE
,

202 
EMUCMD_MISC_TOGGLEFULLSCREEN
,

203 
EMUCMD_TOOL_OPENRAMWATCH
,

204 
EMUCMD_TOOL_OPENRAMSEARCH
,

205 
EMUCMD_TOOL_RAMSEARCHLT
,

206 
EMUCMD_TOOL_RAMSEARCHGT
,

207 
EMUCMD_TOOL_RAMSEARCHLTE
,

208 
EMUCMD_TOOL_RAMSEARCHGTE
,

209 
EMUCMD_TOOL_RAMSEARCHEQ
,

210 
EMUCMD_TOOL_RAMSEARCHNE
,

211 
EMUCMD_TOOL_OPENNTVIEW
,

212 
EMUCMD_TASEDITOR_REWIND
,

213 
EMUCMD_RERECORD_DISPLAY_TOGGLE
,

214 
EMUCMD_TASEDITOR_RESTORE_PLAYBACK
,

215 
EMUCMD_TASEDITOR_CANCEL_SEEKING
,

216 
EMUCMD_TASEDITOR_SWITCH_AUTORESTORING
,

217 
EMUCMD_TASEDITOR_SWITCH_MULTITRACKING
,

218 
EMUCMD_TASEDITOR_RUN_MANUAL_LUA
,

221 
EMUCMD_FPS_DISPLAY_TOGGLE
,

222 
EMUCMD_TOOL_DEBUGSTEPINTO
,

224 
EMUCMD_MOVIE_TOGGLE_RECORDING
,

225 
EMUCMD_MOVIE_TRUNCATE
,

226 
EMUCMD_MOVIE_INSERT_1_FRAME
,

227 
EMUCMD_MOVIE_DELETE_1_FRAME
,

229 
EMUCMD_MOVIE_NEXT_RECORD_MODE
,

230 
EMUCMD_MOVIE_PREV_RECORD_MODE
,

231 
EMUCMD_MOVIE_RECORD_MODE_TRUNCATE
,

232 
EMUCMD_MOVIE_RECORD_MODE_OVERWRITE
,

233 
EMUCMD_MOVIE_RECORD_MODE_INSERT
,

235 
EMUCMD_MAX


238 
	eEMUCMDTYPE


240 
EMUCMDTYPE_MISC
=0,

241 
EMUCMDTYPE_SPEED
,

242 
EMUCMDTYPE_STATE
,

243 
EMUCMDTYPE_MOVIE
,

244 
EMUCMDTYPE_SOUND
,

245 
EMUCMDTYPE_AVI
,

246 
EMUCMDTYPE_FDS
,

247 
EMUCMDTYPE_VSUNI
,

248 
EMUCMDTYPE_TOOL
,

249 
EMUCMDTYPE_TASEDITOR
,

251 
EMUCMDTYPE_MAX


254 c⁄° * 
FCEUI_Comm™dTy≥Names
[];

256 
	tEMUCMDFN
();

258 
	eEMUCMDFLAG


260 
EMUCMDFLAG_NONE
 = 0,

261 
EMUCMDFLAG_TASEDITOR
 = 1,

264 
	sEMUCMDTABLE


266 
cmd
;

267 
ty≥
;

268 
EMUCMDFN
* 
‚_⁄
;

269 
EMUCMDFN
* 
‚_off
;

270 
°©e
;

271 c⁄° * 
«me
;

272 
Êags
;

275 
EMUCMDTABLE
 
FCEUI_Comm™dTabÀ
[];

277 
œgCou¡î
;

278 
boﬁ
 
œgCou¡îDi•œy
;

279 
œgFœg
;

280 
boﬁ
 
turbo
;

281 
	`LagCou¡îRe£t
();

	@fceux-am/src/palette.cpp

22 
	~"ty≥s.h
"

23 
	~"fûe.h
"

24 
	~"f˚u.h
"

25 
	~"drivî.h
"

26 
	~"bﬂrds/m≠öc.h
"

28 
	~"∑Àâe.h
"

29 
	~"∑Àâes/∑Àâes.h
"

31 #i‚de‡
M_PI


32 
	#M_PI
 3.14159265358979323846

	)

38 
	gdeÁu…_∑Àâe_£À˘i⁄
 = 0;

41 
∑l
 *
	gdeÁu…_∑Àâe
[8]=

43 
∑Àâe
,

44 
Ω2c04001
,

45 
Ω2c04002
,

46 
Ω2c04003
,

47 
Ω2c05004
,

50 
Choo£PÆëã
();

51 
WrôePÆëã
();

54 
∑l
 *
	g∑lo
;

56 
	#RGB_TO_YIQ
–
r
, 
g
, 
b
, 
y
, 
i
 ) (\

57 (
y
 = (
r
Ë* 0.299‡+ (
g
Ë* 0.587‡+ (
b
) * 0.114f),\

58 (
i
 = (
r
Ë* 0.596‡- (
g
Ë* 0.275‡- (
b
) * 0.321f),\

59 ((
r
Ë* 0.212‡- (
g
Ë* 0.523‡+ (
b
) * 0.311f)\

60 )

	)

62 
	#YIQ_TO_RGB
–
y
, 
i
, 
q
, 
to_rgb
, 
ty≥
, 
r
, 
g
 ) (\

63 
r
 = (
ty≥
Ë(
y
 + 
to_rgb
 [0] * 
i
 +Åo_rgb [1] * 
q
),\

64 
g
 = (
ty≥
Ë(
y
 + 
to_rgb
 [2] * 
i
 +Åo_rgb [3] * 
q
),\

65 (
ty≥
Ë(
y
 + 
to_rgb
 [4] * 
i
 +Åo_rgb [5] * 
q
)\

66 )

	)

69 
	$bisqwô_˛amp
(
v
Ë{  v<0 ? 0 : v>255 ? 255 : v; 
	}
}

72 
	$bisqwô_wave
(
p
, 
cﬁ‹
Ë{  (cﬁ‹+p+8)%12 < 6; 
	}
}

75 
	$AµlyDìmphasisBisqwô
(
íåy
, 
u8
& 
r
, u8& 
g
, u8& 
b
)

77 if(
íåy
<64) ;

78 
myr
 = 0, 
myg
 = 0, 
myb
 = 0;

85 
cﬁ‹
 = (
íåy
 & 0x0F), 
Àvñ
 = color<0xE ? (entry>>4) & 3 : 1;

88 c⁄° 
bœck
=.518f, 
whôe
=1.962f, 
©ãnu©i⁄
=.746f,

89 
Àvñs
[8] = {.350f, .518f, .962f,1.550f,

92 
lo_™d_hi
[2] = { 
Àvñs
[
Àvñ
 + 4 * (
cﬁ‹
 == 0x0)],

93 
Àvñs
[
Àvñ
 + 4 * (
cﬁ‹
 < 0xD)] };

102 
∑ss
=0;pass<2;pass++)

104 
y
=0.f, 
i
=0.f, 
q
=0.f, 
gamma
=1.8f;

105 
p
=0;Ö<12; ++p)

108 
•Ÿ
 = 
lo_™d_hi
[
	`bisqwô_wave
(
p
,
cﬁ‹
)];

111 if(
∑ss
==1)

113 if(((
íåy
 & 0x40Ë&& 
	`bisqwô_wave
(
p
,12))

114 || ((
íåy
 & 0x80Ë&& 
	`bisqwô_wave
(
p
, 4))

115 || ((
íåy
 &0x100Ë&& 
	`bisqwô_wave
(
p
, 8))Ë
•Ÿ
 *
©ãnu©i⁄
;

119 
v
 = (
•Ÿ
 - 
bœck
Ë/ (
whôe
-black) / 12.f;

122 
y
 +
v
;

123 
i
 +
v
 * 
°d
::
	`cos
(3.141592653 * 
p
 / 6);

124 
q
 +
v
 * 
°d
::
	`sö
(3.141592653 * 
p
 / 6);

131 
π
 = 
	`bisqwô_˛amp
(255 * 
	`bisqwô_gammafix
(
y
 + 0.946882f*
i
 + 0.623557f*
q
,
gamma
));

132 
gt
 = 
	`bisqwô_˛amp
(255 * 
	`bisqwô_gammafix
(
y
 + -0.274788f*
i
 + -0.635691f*
q
,
gamma
));

133 
bt
 = 
	`bisqwô_˛amp
(255 * 
	`bisqwô_gammafix
(
y
 + -1.108545f*
i
 + 1.709007f*
q
,
gamma
));

135 if(
∑ss
==0Ë
myr
 = 
π
, 
myg
 = 
gt
, 
myb
 = 
bt
;

138 
rsˇÀ
 = ()
π
 / 
myr
;

139 
gsˇÀ
 = ()
gt
 / 
myg
;

140 
bsˇÀ
 = ()
bt
 / 
myb
;

141 
	#BCLAMP
(
x
Ë((x)<0?0:((x)>255?255:(x)))

	)

142 if(
myr
!=0Ë
r
 = (
u8
)(
	`BCLAMP
‘*
rsˇÀ
));

143 if(
myg
!=0Ë
g
 = (
u8
)(
	`BCLAMP
(g*
gsˇÀ
));

144 if(
myb
!=0Ë
b
 = (
u8
)(
	`BCLAMP
(b*
bsˇÀ
));

150 
	}
}

152 
	$AµlyDìmphasisCom∂ëe
(
∑l
* 
∑l512
)

155 
i
=0,
idx
=0;i<8;i++)

158 
p
=0;p<64;p++,
idx
++)

160 
∑l512
[
idx
] =ÖÆ512[
p
];

161 
	`AµlyDìmphasisBisqwô
(
idx
,
∑l512
[idx].
r
,∑l512[idx].
g
,∑l512[idx].
b
);

164 
	}
}

167 
	$FCEU_LﬂdGamePÆëã
()

169 
	`FCEU_Re£tPÆëã
();

170 
	}
}

172 
	$FCEUI_SëNTSCTH
(
boﬁ
 
í
, 
töt
, 
hue
)

174 
	`FCEU_Re£tPÆëã
();

175 
	}
}

179 
uöt8
 
	gœ°d
=0;

180 
	$SëNESDìmph_OldHacky
(
uöt8
 
d
, 
f‹˚
)

182 
uöt16
 
πmul
[]={

183 
°©ic_ˇ°
<
uöt16
>(32768*1.239),

184 
°©ic_ˇ°
<
uöt16
>(32768*.794),

185 
°©ic_ˇ°
<
uöt16
>(32768*1.019),

186 
°©ic_ˇ°
<
uöt16
>(32768*.905),

187 
°©ic_ˇ°
<
uöt16
>(32768*1.023),

188 
°©ic_ˇ°
<
uöt16
>(32768*.741),

189 
°©ic_ˇ°
<
uöt16
>(32768*.75)

191 
uöt16
 
gtmul
[]={

192 
°©ic_ˇ°
<
uöt16
>(32768*.915),

193 
°©ic_ˇ°
<
uöt16
>(32768*1.086),

194 
°©ic_ˇ°
<
uöt16
>(32768*.98),

195 
°©ic_ˇ°
<
uöt16
>(32768*1.026),

196 
°©ic_ˇ°
<
uöt16
>(32768*.908),

197 
°©ic_ˇ°
<
uöt16
>(32768*.987),

198 
°©ic_ˇ°
<
uöt16
>(32768*.75)

200 
uöt16
 
btmul
[]={

201 
°©ic_ˇ°
<
uöt16
>(32768*.743),

202 
°©ic_ˇ°
<
uöt16
>(32768*.882),

203 
°©ic_ˇ°
<
uöt16
>(32768*.653),

204 
°©ic_ˇ°
<
uöt16
>(32768*1.277),

205 
°©ic_ˇ°
<
uöt16
>(32768*.979),

206 
°©ic_ˇ°
<
uöt16
>(32768*.101),

207 
°©ic_ˇ°
<
uöt16
>(32768*.75)

210 
uöt32
 
r
,
g
,
b
;

211 
x
;

216 if(!
f‹˚
)

218 if(
d
==
œ°d
)

223 
r
=
πmul
[6];

224 
g
=
πmul
[6];

225 
b
=
πmul
[6];

227 
x
=0;x<0x40;x++)

229 
uöt32
 
m
,
n
,
o
;

230 
m
=
∑lo
[
x
].
r
;

231 
n
=
∑lo
[
x
].
g
;

232 
o
=
∑lo
[
x
].
b
;

233 
m
=(m*
r
)>>15;

234 
n
=“*
g
)>>15;

235 
o
=(o*
b
)>>15;

236 if(
m
>0xff) m=0xff;

237 if(
n
>0xff)Ç=0xff;

238 if(
o
>0xff) o=0xff;

239 
	`FCEUD_SëPÆëã
(
x
|0xC0,
m
,
n
,
o
);

242 if(!
d
) ;

244 
r
=
πmul
[
d
-1];

245 
g
=
gtmul
[
d
-1];

246 
b
=
btmul
[
d
-1];

248 
x
=0;x<0x40;x++)

250 
uöt32
 
m
,
n
,
o
;

252 
m
=
∑lo
[
x
].
r
;

253 
n
=
∑lo
[
x
].
g
;

254 
o
=
∑lo
[
x
].
b
;

255 
m
=(m*
r
)>>15;

256 
n
=“*
g
)>>15;

257 
o
=(o*
b
)>>15;

258 if(
m
>0xff) m=0xff;

259 if(
n
>0xff)Ç=0xff;

260 if(
o
>0xff) o=0xff;

262 
	`FCEUD_SëPÆëã
(
x
|0x40,
m
,
n
,
o
);

265 
œ°d
=
d
;

266 
	}
}

268 
	$FCEU_Re£tPÆëã
()

270 if(
GameInfo
)

272 
	`Choo£PÆëã
();

273 
	`WrôePÆëã
();

275 
	}
}

277 
	$Choo£PÆëã
()

279 
∑lo
 = 
deÁu…_∑Àâe
[
deÁu…_∑Àâe_£À˘i⁄
];

282 
	}
}

284 
	$WrôePÆëã
()

286 
x
;

289 c⁄° 
unv¨õd
 = (
∑Àâe_unv¨yög
)/(palette_unvarying[0]);

290 
x
=0;x<
unv¨õd
;x++)

291 
	`FCEUD_SëPÆëã
(
x
,
∑Àâe_unv¨yög
[x].
r
,∑Àâe_unv¨yög[x].
g
,∑Àâe_unv¨yög[x].
b
);

296 
x
=
unv¨õd
;x<256;x++)

297 
	`FCEUD_SëPÆëã
(
x
,205,205,205);

300 
x
=0;x<64;x++)

301 
	`FCEUD_SëPÆëã
(128+
x
,
∑lo
[x].
r
,∑lo[x].
g
,∑lo[x].
b
);

302 
	`SëNESDìmph_OldHacky
(
œ°d
,1);

303 
	}
}

	@fceux-am/src/palette.h

2 
uöt8
 
	mr
,
	mg
,
	mb
;

3 } 
	t∑l
;

5 
∑l
 *
∑lo
;

6 
FCEU_Re£tPÆëã
();

8 
FCEU_Re£tPÆëã
();

9 
FCEU_LﬂdGamePÆëã
();

10 
FCEU_DøwNTSCC⁄åﬁB¨s
(
uöt8
 *
XBuf
);

	@fceux-am/src/palettes/palettes.h

1 
	#EMPTY_PALETTE_1
 {0,0,0},

	)

2 
	#EMPTY_PALETTE_4
 
EMPTY_PALETTE_1
 EMPTY_PALETTE_1 EMPTY_PALETTE_1 
	)
EMPTY_PALETTE_1

3 
	#EMPTY_PALETTE_16
 
EMPTY_PALETTE_4
 EMPTY_PALETTE_4 EMPTY_PALETTE_4 
	)
EMPTY_PALETTE_4

4 
	#EMPTY_PALETTE_64
 
EMPTY_PALETTE_16
 EMPTY_PALETTE_16 EMPTY_PALETTE_16 
	)
EMPTY_PALETTE_16

5 
	#EMPTY_PALETTE_DEEMPH_X_7
 
EMPTY_PALETTE_64
 EMPTY_PALETTE_64 EMPTY_PALETTE_64 EMPTY_PALETTE_64 EMPTY_PALETTE_64 EMPTY_PALETTE_64 
	)
EMPTY_PALETTE_64

7 
∑l
 
	gΩ2c04001
[512] = {

8 
	~"Ω2c04001.h
"

9 
EMPTY_PALETTE_DEEMPH_X_7


12 
∑l
 
	gΩ2c04002
[512] = {

13 
	~"Ω2c04002.h
"

14 
EMPTY_PALETTE_DEEMPH_X_7


17 
∑l
 
	gΩ2c04003
[512] = {

18 
	~"Ω2c04003.h
"

19 
EMPTY_PALETTE_DEEMPH_X_7


21 
∑l
 
	gΩ2c05004
[512] = {

22 
	~"Ω2c05004.h
"

23 
EMPTY_PALETTE_DEEMPH_X_7


27 
∑l
 
	g∑Àâe_unv¨yög
[] = {

56 
∑l
 
	g∑Àâe
[512] = {

323 
EMPTY_PALETTE_DEEMPH_X_7


	@fceux-am/src/palettes/rp2c04001.h

	@fceux-am/src/palettes/rp2c04002.h

	@fceux-am/src/palettes/rp2c04003.h

	@fceux-am/src/palettes/rp2c05004.h

	@fceux-am/src/ppu.cpp

22 
	~"ty≥s.h
"

23 
	~"x6502.h
"

24 
	~"f˚u.h
"

25 
	~"µu.h
"

26 
	~"sound.h
"

27 
	~"fûe.h
"

28 
	~"utûs/mem‹y.h
"

30 
	~"ˇπ.h
"

31 
	~"∑Àâe.h
"

32 
	~"°©e.h
"

33 
	~"video.h
"

34 
	~"öput.h
"

35 
	~"drivî.h
"

37 
	#debug_loggögCD
 
Ál£


	)

39 
	#VBœnkON
 (
PPU
[0] & 0x80)

40 
	#S¥ôe16
 (
PPU
[0] & 0x20)

41 
	#BGAdrHI
 (
PPU
[0] & 0x10)

42 
	#SpAdrHI
 (
PPU
[0] & 0x08)

43 
	#INC32
 (
PPU
[0] & 0x04)

44 

	)

45 
	#S¥ôeON
 (
PPU
[1] & 0x10)

46 
	#S¸ìnON
 (
PPU
[1] & 0x08)

47 
	#PPUON
 (
PPU
[1] & 0x18)

48 
	#GRAYSCALE
 (
PPU
[1] & 0x01)

49 

	)

50 
	#S¥ôeLe·8
 (
PPU
[1] & 0x04)

	)

51 
	#BGLe·8
 (
PPU
[1] & 0x02)

	)

53 
	#PPU_°©us
 (
PPU
[2])

	)

55 
	#READPAL
(
ofs
Ë(
PALRAM
[(ofs)] & (
GRAYSCALE
 ? 0x30 : 0xFF))

	)

56 
	#READUPAL
(
ofs
Ë(
UPALRAM
[(ofs)] & (
GRAYSCALE
 ? 0x30 : 0xFF))

	)

58 
FëchS¥ôeD©a
();

59 
Re‰eshLöe
(
œ°pixñ
);

60 
Re‰eshS¥ôes
();

61 
C›yS¥ôes
(
uöt8
 *
èrgë
);

63 
Fixô1
();

64 
uöt32
 
	gµulut1
[256];

65 
uöt32
 
	gµulut2
[256];

66 
uöt32
 
	gµulut3
[128];

68 
boﬁ
 
	g√w_µu_ª£t
 = 
Ál£
;

70 
	gã°
 = 0;

72 
	#_BITS
 8

	)

73 
	sBITREVLUT
 {

74 
uöt8
 
	mlut
 [1 << 
_BITS
];

75 
BITREVLUT
() {

76 
	mbôs
 = 
_BITS
;

77 
	mn
 = 1 << 
_BITS
;

79 
	mm
 = 1;

80 
	ma
 = 
n
 >> 1;

81 
	mj
 = 2;

83 
	mlut
[0] = 0;

84 
	mlut
[1] = 
a
;

86 --
	mbôs
) {

87 
	mm
 <<= 1;

88 
	ma
 >>= 1;

89 
	mi
 = 0; i < 
	mm
; i++)

90 
	mlut
[
j
++] = 
lut
[
i
] + 
a
;

94 
uöt8
 
	m›î©‹
[](
	mödex
) {

95  
	mlut
[
ödex
];

97 } 
	gbôªvlut
;

99 
	sPPUSTATUS
 {

100 
öt32
 
	m¶
;

101 
öt32
 
	mcy˛e
, 
	míd_cy˛e
;

104 
	sSPRITE_READ
 {

105 
öt32
 
	mnum
;

106 
öt32
 
	mcou¡
;

107 
öt32
 
	m„tch
;

108 
öt32
 
	mfound
;

109 
öt32
 
	mfound_pos
[8];

110 
öt32
 
	mªt
;

111 
öt32
 
	mœ°
;

112 
öt32
 
	mmode
;

114 
ª£t
() {

115 
	mnum
 = 
cou¡
 = 
„tch
 = 
found
 = 
ªt
 = 
œ°
 = 
mode
 = 0;

116 
	mfound_pos
[0] = 
found_pos
[1] = found_pos[2] = found_pos[3] = 0;

117 
	mfound_pos
[4] = 
found_pos
[5] = found_pos[6] = found_pos[7] = 0;

120 
°¨t_sˇ∆öe
() {

121 
	mnum
 = 1;

122 
	mfound
 = 0;

123 
	m„tch
 = 1;

124 
	mcou¡
 = 0;

125 
	mœ°
 = 64;

126 
	mmode
 = 0;

127 
	mfound_pos
[0] = 
found_pos
[1] = found_pos[2] = found_pos[3] = 0;

128 
	mfound_pos
[4] = 
found_pos
[5] = found_pos[6] = found_pos[7] = 0;

133 
PPUPHASE
 
	gµupha£
;

136 
SPRITE_READ
 
	g•r_ªad
;

139 
uöt8
 
	gidÀSynch
 = 1;

142 
	sPPUREGS
 {

144 
uöt32
 
	mfv
;

145 
uöt32
 
	mv
;

146 
uöt32
 
	mh
;

147 
uöt32
 
	mvt
;

148 
uöt32
 
	mht
;

151 
uöt32
 
	m_fv
, 
	m_v
, 
	m_h
, 
	m_vt
, 
	m_ht
;

154 
uöt32
 
	mfh
;

155 
uöt32
 
	ms
;

158 
uöt32
 
	m∑r
;

162 
PPUSTATUS
 
	m°©us
;

164 
ª£t
() {

165 
	mfv
 = 
v
 = 
h
 = 
vt
 = 
ht
 = 0;

166 
	mfh
 = 
∑r
 = 
s
 = 0;

167 
	m_fv
 = 
_v
 = 
_h
 = 
_vt
 = 
_ht
 = 0;

168 
	m°©us
.
	mcy˛e
 = 0;

169 
	m°©us
.
	míd_cy˛e
 = 341;

170 
	m°©us
.
	m¶
 = 241;

173 
ö°Æl_œtches
() {

174 
	mfv
 = 
_fv
;

175 
	mv
 = 
_v
;

176 
	mh
 = 
_h
;

177 
	mvt
 = 
_vt
;

178 
	mht
 = 
_ht
;

181 
ö°Æl_h_œtches
() {

182 
	mht
 = 
_ht
;

183 
	mh
 = 
_h
;

186 
˛ór_œtches
() {

187 
	m_fv
 = 
_v
 = 
_h
 = 
_vt
 = 
_ht
 = 0;

188 
	mfh
 = 0;

191 
ö¸emít_hsc
() {

195 
	mht
++;

196 
	mh
 +(
ht
 >> 5);

197 
	mht
 &= 31;

198 
	mh
 &= 1;

201 
ö¸emít_vs
() {

202 
	mfv
++;

203 
	mfv_ovîÊow
 = (
fv
 >> 3);

204 
	mvt
 +
fv_ovîÊow
;

205 
	mvt
 &= 31;

206 i‡(
	mvt
 =30 && 
fv_ovîÊow
 == 1) {

207 
v
++;

208 
	mvt
 = 0;

210 
	mfv
 &= 7;

211 
	mv
 &= 1;

214 
uöt32
 
gë_¡ªad
() {

215  0x2000 | (
	mv
 << 0xBË| (
	mh
 << 0xAË| (
	mvt
 << 5Ë| 
	mht
;

218 
uöt32
 
gë_2007ac˚ss
() {

219  ((
	mfv
 & 3Ë<< 0xCË| (
	mv
 << 0xBË| (
	mh
 << 0xAË| (
	mvt
 << 5Ë| 
	mht
;

228 
uöt32
 
gë_©ªad
() {

229  0x2000 | (
	mv
 << 0xBË| (
	mh
 << 0xAË| 0x3C0 | ((
	mvt
 & 0x1CË<< 1Ë| ((
	mht
 & 0x1C) >> 2);

233 
uöt32
 
gë_±ªad
() {

234  (
	ms
 << 0xCË| (
	m∑r
 << 0x4Ë| 
	mfv
;

237 
ö¸emít2007
(
boﬁ
 
ªndîög
, boﬁ 
by32
) {

239 i‡(
	mªndîög
)

245 
ö¸emít_vs
();

258 i‡(
	mby32
) {

259 
	mvt
++;

261 
	mht
++;

262 
	mvt
 +(
ht
 >> 5) & 1;

264 
	mh
 +(
vt
 >> 5);

265 
	mv
 +(
h
 >> 1);

266 
	mfv
 +(
v
 >> 1);

267 
	mht
 &= 31;

268 
	mvt
 &= 31;

269 
	mh
 &= 1;

270 
	mv
 &= 1;

271 
	mfv
 &= 7;

274 
debug_log
()

276 
FCEU_¥ötf
("µur: fv(%d), v(%d), h(%d), vt(%d), ht(%d)\n",
fv
,
v
,
h
,
vt
,
ht
);

277 
FCEU_¥ötf
(" _fv(%d), _v(%d), _h(%d), _vt(%d), _ht(%d)\n",
_fv
,
_v
,
_h
,
_vt
,
_ht
);

278 
FCEU_¥ötf
(" fh(%d), s(%d),Ö¨(%d)\n",
fh
,
s
,
∑r
);

279 
FCEU_¥ötf
(" .°©u†cy˛e(%d),Énd_cy˛e(%d), sl(%d)\n",
°©us
.
cy˛e
,°©us.
íd_cy˛e
,°©us.
¶
);

281 } 
	gµur
;

283 
	$√wµu_gë_sˇ∆öe
(Ë{  
µur
.
°©us
.
¶
; 
	}
}

284 
	$√wµu_gë_dŸ
(Ë{  
µur
.
°©us
.
cy˛e
; 
	}
}

285 
	$√wµu_hacky_emîgícy_ª£t
()

287 if(
µur
.
°©us
.
íd_cy˛e
 == 0)

288 
µur
.
	`ª£t
();

289 
	}
}

291 
	$makïpulut
() {

292 
x
;

293 
y
;

294 
cc
, 
xo
, 
pixñ
;

297 
x
 = 0; x < 256; x++) {

298 
µulut1
[
x
] = 0;

299 
y
 = 0; y < 8; y++)

300 
µulut1
[
x
] |((x >> (7 - 
y
)) & 1) << (y * 4);

301 
µulut2
[
x
] = 
µulut1
[x] << 1;

304 
cc
 = 0; cc < 16; cc++) {

305 
xo
 = 0; xo < 8; xo++) {

306 
µulut3
[
xo
 | (
cc
 << 3)] = 0;

307 
pixñ
 = 0;Öixel < 8;Öixel++) {

308 
shi·r
;

309 
shi·r
 = (
pixñ
 + 
xo
) / 8;

310 
shi·r
 *= 2;

311 
µulut3
[
xo
 | (
cc
 << 3)] |((c¯>> 
shi·r
Ë& 3Ë<< (2 + 
pixñ
 * 4);

315 
	}
}

317 
	gµudód
 = 1;

318 
	gkook
 = 0;

319 
	gf˚uödbg
 = 0;

324 
uöt8
 
	ggNoBGFûlCﬁ‹
 = 0xFF;

326 
	gMMC5Hack
 = 0;

327 
uöt32
 
	gMMC5HackVROMMask
 = 0;

328 
uöt8
 *
	gMMC5HackExNTARAMPå
 = 0;

329 
uöt8
 *
	gMMC5HackVROMPTR
 = 0;

330 
uöt8
 
	gMMC5HackCHRMode
 = 0;

331 
uöt8
 
	gMMC5HackSPMode
 = 0;

332 
uöt8
 
	gMMC50x5130
 = 0;

333 
uöt8
 
	gMMC5HackSPS¸ﬁl
 = 0;

334 
uöt8
 
	gMMC5HackSPPage
 = 0;

336 
	gPEC586Hack
 = 0;

338 
	gQTAIHack
 = 0;

339 
uöt8
 
	gQTAINTRAM
[2048];

340 
uöt8
 
	gqèöåamªg
;

342 
uöt8
 
	gVRAMBuf„r
 = 0, 
	gPPUGíL©ch
 = 0;

343 
uöt8
 *
	gv«∑ge
[4];

344 
uöt8
 
	gPPUNTARAM
 = 0;

345 
uöt8
 
	gPPUCHRRAM
 = 0;

348 
uöt8
 
	gdìmp
 = 0;

349 
	gdìmp˙t
[8];

351 (*
GameHBIRQHook
)(), (*
GameHBIRQHook2
)();

352 (*
PPU_hook
)(
uöt32
 
A
);

354 
uöt8
 
vtoggÀ
 = 0;

355 
uöt8
 
XOff£t
 = 0;

356 
uöt8
 
S¥ôeDMA
 = 0;

358 
uöt32
 
TempAddr
 = 0, 
Re‰eshAddr
 = 0, 
DummyRód
 = 0, 
NTRe‰eshAddr
 = 0;

360 
max•rôes
 = 8;

363 
sˇ∆öe
;

364 
g_ø°îpos
;

365 
uöt32
 
sˇ∆öes_≥r_‰ame
;

367 
uöt8
 
PPU
[4];

368 
uöt8
 
PPUSPL
;

369 
uöt8
 
NTARAM
[0x800], 
PALRAM
[0x20], 
SPRAM
[0x100], 
SPRBUF
[0x100];

370 
uöt8
 
UPALRAM
[0x03];

373 
uöt16
 
PALˇche
[256];

374 
PALˇche_outd©e
 = 0;

376 
	$upd©e_PALˇche
() {

377 i‡(!
PALˇche_outd©e
) ;

379 
PALRAM
[0] |= 64;

380 
PALRAM
[4] |= 64;

381 
PALRAM
[8] |= 64;

382 
PALRAM
[0xC] |= 64;

384 
x
, 
y
;

385 
i
 = 0;

386 
x
 = 0; x < 16; x ++) {

387 
y
 = 0; y < 16; y ++) {

388 
PALˇche
[
i
 ++] = (
PALRAM
[
x
] << 8Ë| PALRAM[
y
];

393 
PALRAM
[0] &= 63;

394 
PALRAM
[4] &= 63;

395 
PALRAM
[8] &= 63;

396 
PALRAM
[0xC] &= 63;

398 
PALˇche_outd©e
 = 0;

399 
	}
}

401 
	#MMC5SPRVRAMADR
(
V
Ë&
MMC5SPRVPage
[(VË>> 10][(V)]

	)

402 
	#VRAMADR
(
V
Ë&
VPage
[(VË>> 10][(V)]

	)

404 
uöt8
* 
MMC5BGVRAMADR
(
uöt32
 
A
);

406 
uöt8
 
	$READPAL_MOTHEROFALL
(
uöt32
 
A
)

408 if(!(
A
 & 3)) {

409 if(!(
A
 & 0xC))

410  
	`READPAL
(0x00);

412  
	`READUPAL
(((
A
 & 0xC) >> 2) - 1);

415  
	`READPAL
(
A
 & 0x1F);

416 
	}
}

422 
uöt8
* 
	$FCEUPPU_GëCHR
(
uöt32
 
vadr
, uöt32 
ª‰eshaddr
) {

423 i‡(
MMC5Hack
) {

424 i‡(
MMC5HackCHRMode
 == 1) {

425 
uöt8
 *
C
 = 
MMC5HackVROMPTR
;

426 
C
 +(((
MMC5HackExNTARAMPå
[
ª‰eshaddr
 & 0x3ff]Ë& 0x3‡& 
MMC5HackVROMMask
Ë<< 12Ë+ (
vadr
 & 0xfff);

427 
C
 +(
MMC50x5130
 & 0x3) << 18;

428  
C
;

430  
	`MMC5BGVRAMADR
(
vadr
);

432 }  
	`VRAMADR
(
vadr
);

433 
	}
}

436 
	$FCEUPPU_GëAâr
(
¡num
, 
xt
, 
yt
) {

437 
©åaddr
 = 0x3C0 + ((
yt
 >> 2Ë<< 3Ë+ (
xt
 >> 2);

438 
ãmp
 = (((
yt
 & 2Ë<< 1Ë+ (
xt
 & 2));

439 
ª‰eshaddr
 = 
xt
 + 
yt
 * 32;

440 i‡(
MMC5Hack
 && 
MMC5HackCHRMode
 == 1)

441  (
MMC5HackExNTARAMPå
[
ª‰eshaddr
 & 0x3ff] & 0xC0) >> 6;

443  (
v«∑ge
[
¡num
][
©åaddr
] & (3 << 
ãmp
)) >>Åemp;

444 
	}
}

447 
ölöe
 
	$FFCEUX_PPUWrôe_DeÁu…
(
uöt32
 
A
, 
uöt8
 
V
) {

448 
uöt32
 
tmp
 = 
A
;

450 i‡(
PPU_hook
Ë
	`PPU_hook
(
A
);

452 i‡(
tmp
 < 0x2000) {

453 i‡(
PPUCHRRAM
 & (1 << (
tmp
 >> 10)))

454 
VPage
[
tmp
 >> 10][tmp] = 
V
;

455 } i‡(
tmp
 < 0x3F00) {

456 i‡(
QTAIHack
 && (
qèöåamªg
 & 1)) {

457 
QTAINTRAM
[((((
tmp
 & 0xF00Ë>> 10Ë>> ((
qèöåamªg
 >> 1)Ë& 1Ë<< 10Ë| (tm∞& 0x3FF)] = 
V
;

459 i‡(
PPUNTARAM
 & (1 << ((
tmp
 & 0xF00) >> 10)))

460 
v«∑ge
[((
tmp
 & 0xF00Ë>> 10)][tm∞& 0x3FF] = 
V
;

463 i‡(!(
tmp
 & 3)) {

464 i‡(!(
tmp
 & 0xC)) {

465 
PALRAM
[0x00] = PALRAM[0x04] = PALRAM[0x08] = PALRAM[0x0C] = 
V
 & 0x3F;

466 
PALRAM
[0x10] = PALRAM[0x14] = PALRAM[0x18] = PALRAM[0x1C] = 
V
 & 0x3F;

467 
PALˇche_outd©e
 = 1;

470 
UPALRAM
[((
tmp
 & 0xCË>> 2Ë- 1] = 
V
 & 0x3F;

472 
PALRAM
[
tmp
 & 0x1F] = 
V
 & 0x3F;

473 
PALˇche_outd©e
 = 1;

476 
	}
}

478 vﬁ©ûê
	gªndîcou¡
, 
	gvromªadcou¡
, 
	gundeföedvromcou¡
, 
	gLogAddªss
 = -1;

479 *
	gcdloggîvd©a
 = 
NULL
;

480 
	gcdloggîVideoD©aSize
 = 0;

482 
	$GëCHRAddªss
(
A
) {

483 i‡(
cdloggîVideoD©aSize
) {

484 
ªsu…
 = &
VPage
[
A
 >> 10][A] - 
CHR±r
[0];

485 i‡((
ªsu…
 >0Ë&& (ªsu… < ()
cdloggîVideoD©aSize
))

486  
ªsu…
;

488 if(
A
 < 0x2000)  A;

490 
	}
}

492 
	$GëCHROff£t
(
uöt8
 *
±r
) {

493 
ªsu…
 = 
±r
 - 
CHR±r
[0];

494 i‡(
cdloggîVideoD©aSize
) {

495 i‡((
ªsu…
 >0Ë&& (ªsu… < ()
cdloggîVideoD©aSize
))

496  
ªsu…
;

498 i‡((
ªsu…
 >= 0) && (result < 0x2000))

499  
ªsu…
;

502 
	}
}

504 
	#RENDER_LOG
(
tmp
) { \

505 i‡(
debug_loggögCD
) \

507 
addr
 = 
	`GëCHRAddªss
(
tmp
); \

508 i‡(
addr
 != -1) \

510 i‡(!(
cdloggîvd©a
[
addr
] & 1)) \

512 
cdloggîvd©a
[
addr
] |= 1; \

513 if(
cdloggîVideoD©aSize
) { \

514 i‡(!(
cdloggîvd©a
[
addr
] & 2)Ë
undeföedvromcou¡
--; \

515 
ªndîcou¡
++; \

520 }

	)

522 
	#RENDER_LOGP
(
tmp
) { \

523 i‡(
debug_loggögCD
) \

525 
addr
 = 
	`GëCHROff£t
(
tmp
); \

526 i‡(
addr
 != -1) \

528 i‡(!(
cdloggîvd©a
[
addr
] & 1)) \

530 
cdloggîvd©a
[
addr
] |= 1; \

531 if(
cdloggîVideoD©aSize
) { \

532 i‡(!(
cdloggîvd©a
[
addr
] & 2)Ë
undeföedvromcou¡
--; \

533 
ªndîcou¡
++; \

538 }

	)

540 
uöt8
 
FASTCALL
 
	$FFCEUX_PPURód_DeÁu…
(
uöt32
 
A
) {

541 
uöt32
 
tmp
 = 
A
;

543 i‡(
PPU_hook
Ë
	`PPU_hook
(
A
);

545 i‡(
tmp
 < 0x2000) {

546  
VPage
[
tmp
 >> 10][tmp];

547 } i‡(
tmp
 < 0x3F00) {

548  
v«∑ge
[(
tmp
 >> 10) & 0x3][tmp & 0x3FF];

550 
uöt8
 
ªt
;

551 i‡(!(
tmp
 & 3)) {

552 i‡(!(
tmp
 & 0xC))

553 
ªt
 = 
	`READPAL
(0x00);

555 
ªt
 = 
	`READUPAL
(((
tmp
 & 0xC) >> 2) - 1);

557 
ªt
 = 
	`READPAL
(
tmp
 & 0x1F);

558  
ªt
;

560 
	}
}

563 
	$uöt8
 (
FASTCALL
 *
FFCEUX_PPURód
)(
uöt32
 
A
) = 0;

564 (*
FFCEUX_PPUWrôe
)(
uöt32
 
A
, 
uöt8
 
V
) = 0;

566 
	#CALL_PPUREAD
(
A
Ë(
	`FFCEUX_PPURód
(A))

	)

568 
	#CALL_PPUWRITE
(
A
, 
V
Ë(
FFCEUX_PPUWrôe
 ? 
	`FFCEUX_PPUWrôe
(A, VË: 
	`FFCEUX_PPUWrôe_DeÁu…
(A, V))

	)

571 
√wµu
 = 0;

573 
	$µu_gëS¸ﬁl
(&
xpos
, &
ypos
) {

574 i‡(
√wµu
) {

575 
ypos
 = 
µur
.
_vt
 * 8 +Öpur.
_fv
 +Öpur.
_v
 * 256;

576 
xpos
 = 
µur
.
_ht
 * 8 +Öpur.
fh
 +Öpur.
_h
 * 256;

578 
xpos
 = ((
Re‰eshAddr
 & 0x400Ë>> 2Ë| ((Re‰eshAdd∏& 0x1FË<< 3Ë| 
XOff£t
;

580 
ypos
 = ((
Re‰eshAddr
 & 0x3E0) >> 2) | ((RefreshAddr & 0x7000) >> 12);

581 i‡(
Re‰eshAddr
 & 0x800Ë
ypos
 += 240;

583 
	}
}

586 
	$DECLFR
(
A2002
) {

587 i‡(
√wµu
) {

593 
uöt8
 
ªt
;

595 
	`FCEUPPU_LöeUpd©e
();

596 
ªt
 = 
PPU_°©us
;

597 
ªt
 |
PPUGíL©ch
 & 0x1F;

600 
vtoggÀ
 = 0;

601 
PPU_°©us
 &= 0x7F;

602 
PPUGíL©ch
 = 
ªt
;

605  
ªt
;

606 
	}
}

608 
	$DECLFR
(
A2004
) {

609 i‡(
√wµu
) {

610 i‡((
µur
.
°©us
.
¶
 < 241Ë&& 
PPUON
) {

614 i‡(
µur
.
°©us
.
cy˛e
 < 64)

615  
•r_ªad
.
ªt
 = 0xFF;

617 
i
 = 
•r_ªad
.
œ°
;

618 
i
 !
µur
.
°©us
.
cy˛e
; ++i) {

619 i‡(
i
 < 256) {

620 
•r_ªad
.
mode
) {

622 i‡(
•r_ªad
.
cou¡
 < 2)

623 
•r_ªad
.
ªt
 = (
PPU
[3] & 0xF8Ë+ (•r_ªad.
cou¡
 << 2);

625 
•r_ªad
.
ªt
 = s¥_ªad.
cou¡
 << 2;

627 
•r_ªad
.
found_pos
[•r_ªad.
found
] = s¥_ªad.
ªt
;

628 
•r_ªad
.
ªt
 = 
SPRAM
[spr_read.ret];

630 i‡(
i
 & 1) {

633 i‡(!((
µur
.
°©us
.
¶
 - 1 - 
•r_ªad
.
ªt
Ë& ~(
S¥ôe16
 ? 0xF : 0x7))) {

634 ++
•r_ªad
.
found
;

635 
•r_ªad
.
„tch
 = 1;

636 
•r_ªad
.
mode
 = 1;

638 i‡(++
•r_ªad
.
cou¡
 == 64) {

639 
•r_ªad
.
mode
 = 4;

640 
•r_ªad
.
cou¡
 = 0;

641 } i‡(
•r_ªad
.
found
 == 8) {

642 
•r_ªad
.
„tch
 = 0;

643 
•r_ªad
.
mode
 = 2;

649 i‡(
i
 & 1) {

650 ++
•r_ªad
.
„tch
;

651 i‡(
•r_ªad
.
„tch
 == 4) {

652 
•r_ªad
.
„tch
 = 1;

653 i‡(++
•r_ªad
.
cou¡
 == 64) {

654 
•r_ªad
.
cou¡
 = 0;

655 
•r_ªad
.
mode
 = 4;

656 } i‡(
•r_ªad
.
found
 == 8) {

657 
•r_ªad
.
„tch
 = 0;

658 
•r_ªad
.
mode
 = 2;

660 
•r_ªad
.
mode
 = 0;

664 i‡(
•r_ªad
.
cou¡
 < 2)

665 
•r_ªad
.
ªt
 = (
PPU
[3] & 0xF8Ë+ (•r_ªad.
cou¡
 << 2);

667 
•r_ªad
.
ªt
 = s¥_ªad.
cou¡
 << 2;

669 
•r_ªad
.
ªt
 = 
SPRAM
[•r_ªad.ªà| s¥_ªad.
„tch
];

672 
•r_ªad
.
ªt
 = 
SPRAM
[(•r_ªad.
cou¡
 << 2Ë| s¥_ªad.
„tch
];

673 i‡(
i
 & 1) {

674 i‡(!((
µur
.
°©us
.
¶
 - 1 - 
SPRAM
[((
•r_ªad
.
cou¡
 << 2Ë| s¥_ªad.
„tch
)]Ë& ~((
S¥ôe16
) ? 0xF : 0x7))) {

675 
•r_ªad
.
„tch
 = 1;

676 
•r_ªad
.
mode
 = 3;

678 i‡(++
•r_ªad
.
cou¡
 == 64) {

679 
•r_ªad
.
cou¡
 = 0;

680 
•r_ªad
.
mode
 = 4;

682 
•r_ªad
.
„tch
 =

683 (
•r_ªad
.
„tch
 + 1) & 3;

686 
•r_ªad
.
ªt
 = s¥_ªad.
cou¡
;

689 
•r_ªad
.
ªt
 = 
SPRAM
[•r_ªad.
cou¡
 | s¥_ªad.
„tch
];

690 i‡(
i
 & 1) {

691 i‡(++
•r_ªad
.
„tch
 == 4) {

692 
•r_ªad
.
cou¡
 = (spr_read.count + 1) & 63;

693 
•r_ªad
.
mode
 = 4;

698 i‡(
i
 & 1)

699 
•r_ªad
.
cou¡
 = (spr_read.count + 1) & 63;

700 
•r_ªad
.
„tch
 = 0;

701 
•r_ªad
.
ªt
 = 
SPRAM
[•r_ªad.
cou¡
 << 2];

704 } i‡(
i
 < 320) {

705 
•r_ªad
.
ªt
 = (
i
 & 0x38) >> 3;

706 i‡(
•r_ªad
.
found
 < (•r_ªad.
ªt
 + 1)) {

707 i‡(
•r_ªad
.
num
) {

708 
•r_ªad
.
ªt
 = 
SPRAM
[252];

709 
•r_ªad
.
num
 = 0;

711 
•r_ªad
.
ªt
 = 0xFF;

712 } i‡((
i
 & 7) < 4) {

713 
•r_ªad
.
ªt
 =

714 
SPRAM
[
•r_ªad
.
found_pos
[•r_ªad.
ªt
] | s¥_ªad.
„tch
++];

715 i‡(
•r_ªad
.
„tch
 == 4)

716 
•r_ªad
.
„tch
 = 0;

718 
•r_ªad
.
ªt
 = 
SPRAM
[•r_ªad.
found_pos
 [spr_read.ret | 3]];

720 i‡(!
•r_ªad
.
found
)

721 
•r_ªad
.
ªt
 = 
SPRAM
[252];

723 
•r_ªad
.
ªt
 = 
SPRAM
[•r_ªad.
found_pos
[0]];

727 
•r_ªad
.
œ°
 = 
µur
.
°©us
.
cy˛e
;

728  
•r_ªad
.
ªt
;

731  
SPRAM
[
PPU
[3]];

733 
	`FCEUPPU_LöeUpd©e
();

734  
PPUGíL©ch
;

736 
	}
}

738 
	$DECLFR
(
A200x
) {

739 
	`FCEUPPU_LöeUpd©e
();

740  
PPUGíL©ch
;

741 
	}
}

743 
	$DECLFR
(
A2007
) {

744 
uöt8
 
ªt
;

745 
uöt32
 
tmp
 = 
Re‰eshAddr
 & 0x3FFF;

747 i‡(
debug_loggögCD
) {

748 i‡(!
DummyRód
 && (
LogAddªss
 != -1)) {

749 i‡(!(
cdloggîvd©a
[
LogAddªss
] & 2)) {

750 
cdloggîvd©a
[
LogAddªss
] |= 2;

751 i‡((!(
cdloggîvd©a
[
LogAddªss
] & 1)Ë&& 
cdloggîVideoD©aSize
Ë
undeföedvromcou¡
--;

752 
vromªadcou¡
++;

755 
DummyRód
 = 0;

758 i‡(
√wµu
) {

759 
ªt
 = 
VRAMBuf„r
;

760 
Re‰eshAddr
 = 
µur
.
	`gë_2007ac˚ss
() & 0x3FFF;

761 i‡((
Re‰eshAddr
 & 0x3F00) == 0x3F00) {

767 i‡(!(
tmp
 & 3)) {

768 i‡(!(
tmp
 & 0xC))

769 
ªt
 = 
	`READPAL
(0x00);

771 
ªt
 = 
	`READUPAL
(((
tmp
 & 0xC) >> 2) - 1);

773 
ªt
 = 
	`READPAL
(
tmp
 & 0x1F);

774 
VRAMBuf„r
 = 
	`CALL_PPUREAD
(
Re‰eshAddr
 - 0x1000);

776 i‡(
debug_loggögCD
 && (
Re‰eshAddr
 < 0x2000))

777 
LogAddªss
 = 
	`GëCHRAddªss
(
Re‰eshAddr
);

778 
VRAMBuf„r
 = 
	`CALL_PPUREAD
(
Re‰eshAddr
);

780 
µur
.
	`ö¸emít2007
’pur.
°©us
.
¶
 >0 &&Öpur.°©us.¶ < 241 && 
PPUON
, 
INC32
 != 0);

781 
Re‰eshAddr
 = 
µur
.
	`gë_2007ac˚ss
();

782  
ªt
;

786 
	`FCEUPPU_LöeUpd©e
();

788 i‡(
tmp
 >= 0x3F00) {

789 i‡(!(
tmp
 & 3)) {

790 i‡(!(
tmp
 & 0xC))

791 
ªt
 = 
	`READPAL
(0x00);

793 
ªt
 = 
	`READUPAL
(((
tmp
 & 0xC) >> 2) - 1);

795 
ªt
 = 
	`READPAL
(
tmp
 & 0x1F);

797 i‡((
tmp
 - 0x1000) < 0x2000)

798 
VRAMBuf„r
 = 
VPage
[(
tmp
 - 0x1000) >> 10][tmp - 0x1000];

800 
VRAMBuf„r
 = 
v«∑ge
[((
tmp
 - 0x1000) >> 10) & 0x3][(tmp - 0x1000) & 0x3FF];

801 i‡(
PPU_hook
Ë
	`PPU_hook
(
tmp
);

804 
ªt
 = 
VRAMBuf„r
;

806 i‡(
PPU_hook
Ë
	`PPU_hook
(
tmp
);

807 
PPUGíL©ch
 = 
VRAMBuf„r
;

808 i‡(
tmp
 < 0x2000) {

810 i‡(
debug_loggögCD
)

811 
LogAddªss
 = 
	`GëCHRAddªss
(
tmp
);

812 if(
MMC5Hack
 && 
√wµu
)

813 
VRAMBuf„r
 = *
	`MMC5BGVRAMADR
(
tmp
);

815 
VRAMBuf„r
 = 
VPage
[
tmp
 >> 10][tmp];

817 } i‡(
tmp
 < 0x3F00)

818 
VRAMBuf„r
 = 
v«∑ge
[(
tmp
 >> 10) & 0x3][tmp & 0x3FF];

823 i‡((
S¸ìnON
 || 
S¥ôeON
Ë&& (
sˇ∆öe
 < 240)) {

824 
uöt32
 
ød
 = 
Re‰eshAddr
;

825 i‡((
ød
 & 0x7000) == 0x7000) {

826 
ød
 ^= 0x7000;

827 i‡((
ød
 & 0x3E0) == 0x3A0)

828 
ød
 ^= 0xBA0;

829 i‡((
ød
 & 0x3E0) == 0x3e0)

830 
ød
 ^= 0x3e0;

832 
ød
 += 0x20;

834 
ød
 += 0x1000;

835 
Re‰eshAddr
 = 
ød
;

837 i‡(
INC32
)

838 
Re‰eshAddr
 += 32;

840 
Re‰eshAddr
++;

842 i‡(
PPU_hook
Ë
	`PPU_hook
(
Re‰eshAddr
 & 0x3fff);

844  
ªt
;

846 
	}
}

848 
	$DECLFW
(
B2000
) {

849 
	`FCEUPPU_LöeUpd©e
();

850 
PPUGíL©ch
 = 
V
;

852 i‡(!(
PPU
[0] & 0x80Ë&& (
V
 & 0x80Ë&& (
PPU_°©us
 & 0x80))

853 
	`TriggîNMI2
();

855 
PPU
[0] = 
V
;

856 
TempAddr
 &= 0xF3FF;

857 
TempAddr
 |(
V
 & 3) << 10;

859 
µur
.
_h
 = 
V
 & 1;

860 
µur
.
_v
 = (
V
 >> 1) & 1;

861 
µur
.
s
 = (
V
 >> 4) & 1;

862 
	}
}

864 
	$DECLFW
(
B2001
) {

865 
	`FCEUPPU_LöeUpd©e
();

866 i‡(
∑ldìmphsw≠
)

867 
V
 = (V&0x9F)|((V&0x40)>>1)|((V&0x20)<<1);

868 
PPUGíL©ch
 = 
V
;

869 
PPU
[1] = 
V
;

870 i‡(
V
 & 0xE0)

871 
dìmp
 = 
V
 >> 5;

872 
	}
}

874 
	$DECLFW
(
B2002
) {

875 
PPUGíL©ch
 = 
V
;

876 
	}
}

878 
	$DECLFW
(
B2003
) {

879 
PPUGíL©ch
 = 
V
;

880 
PPU
[3] = 
V
;

881 
PPUSPL
 = 
V
 & 0x7;

882 
	}
}

884 
	$DECLFW
(
B2004
) {

885 
PPUGíL©ch
 = 
V
;

886 i‡(
√wµu
) {

890 i‡((
PPU
[3] & 3) == 2)

891 
V
 &= 0xE3;

892 
SPRAM
[
PPU
[3]] = 
V
;

893 
PPU
[3] = (PPU[3] + 1) & 0xFF;

895 i‡(
PPUSPL
 >= 8) {

896 i‡(
PPU
[3] >= 8)

897 
SPRAM
[
PPU
[3]] = 
V
;

899 
SPRAM
[
PPUSPL
] = 
V
;

901 
PPU
[3]++;

902 
PPUSPL
++;

904 
	}
}

906 
	$DECLFW
(
B2005
) {

907 
uöt32
 
tmp
 = 
TempAddr
;

908 
	`FCEUPPU_LöeUpd©e
();

909 
PPUGíL©ch
 = 
V
;

910 i‡(!
vtoggÀ
) {

911 
tmp
 &= 0xFFE0;

912 
tmp
 |
V
 >> 3;

913 
XOff£t
 = 
V
 & 7;

914 
µur
.
_ht
 = 
V
 >> 3;

915 
µur
.
fh
 = 
V
 & 7;

917 
tmp
 &= 0x8C1F;

918 
tmp
 |((
V
 & ~0x7) << 2);

919 
tmp
 |(
V
 & 7) << 12;

920 
µur
.
_vt
 = 
V
 >> 3;

921 
µur
.
_fv
 = 
V
 & 7;

923 
TempAddr
 = 
tmp
;

924 
vtoggÀ
 ^= 1;

925 
	}
}

928 
	$DECLFW
(
B2006
) {

929 
	`FCEUPPU_LöeUpd©e
();

931 
PPUGíL©ch
 = 
V
;

932 i‡(!
vtoggÀ
) {

933 
TempAddr
 &= 0x00FF;

934 
TempAddr
 |(
V
 & 0x3f) << 8;

936 
µur
.
_vt
 &= 0x07;

937 
µur
.
_vt
 |(
V
 & 0x3) << 3;

938 
µur
.
_h
 = (
V
 >> 2) & 1;

939 
µur
.
_v
 = (
V
 >> 3) & 1;

940 
µur
.
_fv
 = (
V
 >> 4) & 3;

942 
TempAddr
 &= 0xFF00;

943 
TempAddr
 |
V
;

945 
Re‰eshAddr
 = 
TempAddr
;

946 
DummyRód
 = 1;

947 i‡(
PPU_hook
)

948 
	`PPU_hook
(
Re‰eshAddr
);

950 
µur
.
_vt
 &= 0x18;

951 
µur
.
_vt
 |(
V
 >> 5);

952 
µur
.
_ht
 = 
V
 & 31;

954 
µur
.
	`ö°Æl_œtches
();

957 
vtoggÀ
 ^= 1;

958 
	}
}

960 
	$DECLFW
(
B2007
) {

961 
uöt32
 
tmp
 = 
Re‰eshAddr
 & 0x3FFF;

963 i‡(
debug_loggögCD
) {

964 if(!
cdloggîVideoD©aSize
 && (
tmp
 < 0x2000))

965 
cdloggîvd©a
[
tmp
] = 0;

968 i‡(
√wµu
) {

969 
PPUGíL©ch
 = 
V
;

970 
Re‰eshAddr
 = 
µur
.
	`gë_2007ac˚ss
() & 0x3FFF;

971 
	`CALL_PPUWRITE
(
Re‰eshAddr
, 
V
);

972 
µur
.
	`ö¸emít2007
’pur.
°©us
.
¶
 >0 &&Öpur.°©us.¶ < 241 && 
PPUON
, 
INC32
 != 0);

973 
Re‰eshAddr
 = 
µur
.
	`gë_2007ac˚ss
();

975 
PPUGíL©ch
 = 
V
;

976 i‡(
tmp
 < 0x2000) {

977 i‡(
PPUCHRRAM
 & (1 << (
tmp
 >> 10)))

978 
VPage
[
tmp
 >> 10][tmp] = 
V
;

979 } i‡(
tmp
 < 0x3F00) {

980 i‡(
QTAIHack
 && (
qèöåamªg
 & 1)) {

981 
QTAINTRAM
[((((
tmp
 & 0xF00Ë>> 10Ë>> ((
qèöåamªg
 >> 1)Ë& 1Ë<< 10Ë| (tm∞& 0x3FF)] = 
V
;

983 i‡(
PPUNTARAM
 & (1 << ((
tmp
 & 0xF00) >> 10)))

984 
v«∑ge
[((
tmp
 & 0xF00Ë>> 10)][tm∞& 0x3FF] = 
V
;

987 i‡(!(
tmp
 & 3)) {

988 i‡(!(
tmp
 & 0xC)) {

989 
PALRAM
[0x00] = PALRAM[0x04] = PALRAM[0x08] = PALRAM[0x0C] = 
V
 & 0x3F;

990 
PALˇche_outd©e
 = 1;

993 
UPALRAM
[((
tmp
 & 0xCË>> 2Ë- 1] = 
V
 & 0x3F;

995 
PALRAM
[
tmp
 & 0x1F] = 
V
 & 0x3F;

996 
PALˇche_outd©e
 = 1;

999 i‡(
INC32
)

1000 
Re‰eshAddr
 += 32;

1002 
Re‰eshAddr
++;

1003 i‡(
PPU_hook
)

1004 
	`PPU_hook
(
Re‰eshAddr
 & 0x3fff);

1006 
	}
}

1008 
	$DECLFW
(
B4014
) {

1009 
uöt32
 
t
 = 
V
 << 8;

1010 
x
;

1012 
x
 = 0; x < 256; x++)

1013 
	`X6502_DMW
(0x2004, 
	`X6502_DMR
(
t
 + 
x
));

1014 
S¥ôeDMA
 = 
V
;

1015 
	}
}

1017 
	#PAL
(
c
Ë((cË+ 
cc
)

	)

1019 
	#GETLASTPIXEL
 (
PAL
 ? ((
time°amp
 * 48 - 
löe°¨âs
Ë/ 15Ë: (—ime°am∞* 48 -Üöe°¨âsË>> 4))

	)

1021 
uöt8
 *
	gPlöe
, *
	gPlöef
;

1022 
	gfú°tûe
;

1023 
	glöe°¨âs
;

1024 
	gtofix
 = 0;

1026 
	$Re£tRL
(
uöt8
 *
èrgë
) {

1027 
	`mem£t
(
èrgë
, 0xFF, 256);

1028 
Plöef
 = 
èrgë
;

1029 
Plöe
 = 
èrgë
;

1030 
fú°tûe
 = 0;

1031 
löe°¨âs
 = 
time°amp
 * 48 + 
X
.
cou¡
;

1032 
tofix
 = 0;

1033 
	`FCEUPPU_LöeUpd©e
();

1034 
tofix
 = 1;

1035 
	}
}

1037 
uöt8
 
	g•æöebuf
[256 + 8];

1039 
	$FCEUPPU_LöeUpd©e
() {

1040 i‡(
√wµu
)

1043 i‡(
Plöe
) {

1044 
l
 = 
GETLASTPIXEL
;

1045 
	`Re‰eshLöe
(
l
);

1047 
	}
}

1049 
boﬁ
 
	gªndî•rôes
 = 
åue
, 
	gªndîbg
 =Årue;

1051 
	$FCEUI_SëRídîPœ√s
(
boﬁ
 
•rôes
, boﬁ 
bg
) {

1052 
ªndî•rôes
 = 
•rôes
;

1053 
ªndîbg
 = 
bg
;

1054 
	}
}

1056 
	$FCEUI_GëRídîPœ√s
(
boﬁ
& 
•rôes
, boﬁ& 
bg
) {

1057 
•rôes
 = 
ªndî•rôes
;

1058 
bg
 = 
ªndîbg
;

1059 
	}
}

1061 
CheckS¥ôeHô
(
p
);

1063 
	$EndRL
() {

1064 
	`Re‰eshLöe
(272);

1065 i‡(
tofix
)

1066 
	`Fixô1
();

1067 
	`CheckS¥ôeHô
(272);

1068 
Plöe
 = 0;

1069 
	}
}

1071 
öt32
 
	g•hôx
;

1072 
uöt8
 
	g•hôd©a
;

1074 
	$CheckS¥ôeHô
(
p
) {

1075 
l
 = 
p
 - 16;

1076 
x
;

1078 i‡(
•hôx
 == 0x100) ;

1080 
x
 = 
•hôx
; x < (•hôx + 8Ë&& x < 
l
; x++) {

1081 i‡((
•hôd©a
 & (0x80 >> (
x
 - 
•hôx
))Ë&& !(
Plöef
[x] & 64) && x < 255) {

1082 
PPU_°©us
 |= 0x40;

1083 
•hôx
 = 0x100;

1087 
	}
}

1091 
	g•‹k
 = 0;

1094 
	$Re‰eshLöe
(
œ°pixñ
) {

1095 
uöt32
 
pshi·
[2];

1096 
uöt32
 
©œtch
;

1097 
uöt32
 
sm‹kus
 = 
Re‰eshAddr
;

1099 
	#Re‰eshAddr
 
sm‹kus


	)

1100 
uöt32
 
vofs
;

1101 
X1
;

1103 
uöt8
 *
P
 = 
Plöe
;

1104 
œ°tûe
 = 
œ°pixñ
 >> 3;

1105 
numtûes
;

1107 i‡(
•hôx
 !0x100 && !(
PPU_°©us
 & 0x40)) {

1108 i‡((
•hôx
 < (
œ°pixñ
 - 16)Ë&& !(•hôx < ((
œ°tûe
 - 2) * 8)))

1109 
œ°tûe
++;

1112 i‡(
œ°tûe
 > 34)Üasttile = 34;

1113 
numtûes
 = 
œ°tûe
 - 
fú°tûe
;

1115 i‡(
numtûes
 <= 0) ;

1117 
P
 = 
Plöe
;

1119 
	`as£π
(!
PPU_hook
);

1120 
	`as£π
(!
PEC586Hack
);

1121 
	`as£π
(!
MMC5Hack
);

1122 
	`as£π
(!
QTAIHack
);

1124 
vofs
 = ((
PPU
[0] & 0x10Ë<< 8Ë| ((
Re‰eshAddr
 >> 12) & 7);

1126 
uöt8_t
 
ãm8
 = 
	`READPAL
(0) | 0x40;

1127 i‡(!
S¸ìnON
 && !
S¥ôeON
) {

1128 
	`mem£t
(
Plöe
, 
ãm8
, 
numtûes
 * 8);

1129 
P
 +
numtûes
 * 8;

1130 
Plöe
 = 
P
;

1132 
fú°tûe
 = 
œ°tûe
;

1134 
	#TOFIXNUM
 (272 - 0x4)

	)

1135 i‡(
œ°pixñ
 >
TOFIXNUM
 && 
tofix
) {

1136 
tofix
 = 0;

1141 
	`upd©e_PALˇche
();

1142 
uöt32
 
cc
 = 0;

1143 
uöt8
 
cc2
;

1144 
uöt8
 *
C0
 = 
v«∑ge
[(
Re‰eshAddr
 >> 10) & 3];

1145 i‡(
Re‰eshAddr
 % 4 != 0) {

1146 
uöt8
 
zz
 = 
Re‰eshAddr
 >> 2;

1147 
cc
 = (
C0
[0x3c0 | (
zz
 & 0x7) | ((zz >> 2) & 0x38)] << 2) >> ((zz >> 2) & 0x4);

1149 
X1
 = 
fú°tûe
; X1 < 
œ°tûe
; X1++) {

1150 
	~"µutûe.öc
"

1153 #unde‡
Re‰eshAddr


1155 
Re‰eshAddr
 = 
sm‹kus
;

1156 i‡(
fú°tûe
 <2 && 2 < 
œ°tûe
 && !(
PPU
[1] & 2)) {

1157 
uöt32
 
ãm
 = 
ãm8
 | (tem8 << 8) | (tem8 << 16) | (tem8 << 24);

1158 *(
uöt32
*)
Plöef
 = *(uöt32*)(Plöe‡+ 4Ë
ãm
;

1161 i‡(!
S¸ìnON
) {

1162 
t°¨t
, 
tcou¡
;

1164 
tcou¡
 = 
œ°tûe
 - 
fú°tûe
;

1165 
t°¨t
 = 
fú°tûe
 - 2;

1166 i‡(
t°¨t
 < 0) {

1167 
tcou¡
 +
t°¨t
;

1168 
t°¨t
 = 0;

1170 i‡(
tcou¡
 > 0)

1171 
	`mem£t
(
Plöef
 + 
t°¨t
 * 8, 
ãm8
, 
tcou¡
 * 8);

1174 i‡(
œ°pixñ
 >
TOFIXNUM
 && 
tofix
) {

1175 
	`Fixô1
();

1176 
tofix
 = 0;

1180 
	`CheckS¥ôeHô
(
œ°pixñ
);

1182 
Plöe
 = 
P
;

1183 
fú°tûe
 = 
œ°tûe
;

1184 
	}
}

1186 
INLINE
 
	$Fixô2
() {

1187 i‡(
S¸ìnON
 || 
S¥ôeON
) {

1188 
uöt32
 
ød
 = 
Re‰eshAddr
;

1189 
ød
 &= 0xFBE0;

1190 
ød
 |
TempAddr
 & 0x041f;

1191 
Re‰eshAddr
 = 
ød
;

1193 
	}
}

1195 
	$Fixô1
() {

1196 i‡(
S¸ìnON
 || 
S¥ôeON
) {

1197 
uöt32
 
ød
 = 
Re‰eshAddr
;

1199 i‡((
ød
 & 0x7000) == 0x7000) {

1200 
ød
 ^= 0x7000;

1201 i‡((
ød
 & 0x3E0) == 0x3A0)

1202 
ød
 ^= 0xBA0;

1203 i‡((
ød
 & 0x3E0) == 0x3e0)

1204 
ød
 ^= 0x3e0;

1206 
ød
 += 0x20;

1208 
ød
 += 0x1000;

1209 
Re‰eshAddr
 = 
ød
;

1211 
	}
}

1213 
MMC5_hb
();

1214 
	$DoLöe
() {

1215 i‡(
sˇ∆öe
 >240 && sˇ∆öê!
tŸÆsˇ∆öes
) {

1216 
	`X6502_Run
(256 + 69);

1217 
sˇ∆öe
++;

1218 
	`X6502_Run
(16);

1222 
x
;

1223 
uöt32
 *
èrgë
 = (uöt32 *)(
XBuf
 + ((
sˇ∆öe
 < 240 ? scanline : 240) << 8));

1226 i‡(
MMC5Hack
Ë
	`MMC5_hb
(
sˇ∆öe
);

1228 
	`X6502_Run
(256);

1229 
	`EndRL
();

1231 i‡(!
ªndîbg
) {

1232 
uöt8
 
cﬁ
;

1233 i‡(
gNoBGFûlCﬁ‹
 == 0xFF)

1234 
cﬁ
 = 
	`READPAL
(0);

1235 
cﬁ
 = 
gNoBGFûlCﬁ‹
;

1236 
uöt8
 
ãm8
 = 
cﬁ
 | 0x40;

1237 
	`mem£t
(
èrgë
, 
ãm8
, 256);

1240 i‡(
S¥ôeON
)

1241 
	`C›yS¥ôes
((
uöt8
 *)
èrgë
);

1244 i‡(
S¸ìnON
 || 
S¥ôeON
)

1246 i‡(
PPU
[1] & 0x01) {

1247 
x
 = 63; x >= 0; x--)

1248 
èrgë
[
x
] &= 0x30303030;

1253 i‡((
PPU
[1] >> 5) == 0x7) {

1254 
x
 = 63; x >= 0; x--)

1255 
èrgë
[
x
] |= 0xc0c0c0c0;

1256 } i‡(
PPU
[1] & 0xE0)

1257 
x
 = 63; x >= 0; x--)

1258 
èrgë
[
x
] |= 0x40404040;

1260 
x
 = 63; x >= 0; x--)

1261 
èrgë
[
x
] = (target[x] & 0x3f3f3f3f) | 0x80808080;

1267 
•hôx
 = 0x100;

1269 i‡(
S¸ìnON
 || 
S¥ôeON
)

1270 
	`FëchS¥ôeD©a
();

1272 i‡(
GameHBIRQHook
 && (
S¸ìnON
 || 
S¥ôeON
Ë&& ((
PPU
[0] & 0x38) != 0x18)) {

1273 
	`X6502_Run
(6);

1274 
	`Fixô2
();

1275 
	`X6502_Run
(4);

1276 
	`GameHBIRQHook
();

1277 
	`X6502_Run
(85 - 16 - 10);

1279 
	`X6502_Run
(6);

1280 
	`Fixô2
();

1281 
	`X6502_Run
(85 - 6 - 16);

1284 i‡(
GameHBIRQHook
 && (
S¸ìnON
 || 
S¥ôeON
Ë&& ((
PPU
[0] & 0x38) != 0x18))

1285 
	`GameHBIRQHook
();

1288 
	`DEBUG
(
	`FCEUD_Upd©eNTVõw
(
sˇ∆öe
, 0));

1290 i‡(
S¥ôeON
)

1291 
	`Re‰eshS¥ôes
();

1292 i‡(
GameHBIRQHook2
 && (
S¸ìnON
 || 
S¥ôeON
))

1293 
	`GameHBIRQHook2
();

1294 
sˇ∆öe
++;

1295 i‡(
sˇ∆öe
 < 240) {

1296 
	`Re£tRL
(
XBuf
 + (
sˇ∆öe
 << 8));

1298 
	`X6502_Run
(16);

1299 
	}
}

1301 
	#V_FLIP
 0x80

	)

1302 
	#H_FLIP
 0x40

	)

1303 
	#SP_BACK
 0x20

	)

1306 
uöt8
 
	my
, 
	mno
, 
	m©r
, 
	mx
;

1307 } 
	tSPR
;

1310 
uöt8
 
	mˇ
[2], 
	m©r
, 
	mx
;

1311 } 
	tSPRB
;

1313 
	$FCEUI_DißbÀS¥ôeLimô©i⁄
(
a
) {

1314 
max•rôes
 = 
a
 ? 64 : 8;

1315 
	}
}

1317 
uöt8
 
	gnum•rôes
, 
	gS¥ôeBluΩ
;

1318 
	$FëchS¥ôeD©a
() {

1319 
uöt8
 
ns
, 
sb
;

1320 
SPR
 *
•r
;

1321 
uöt8
 
H
;

1322 
n
;

1323 
vofs
;

1324 
uöt8
 
P0
 = 
PPU
[0];

1326 
•r
 = (
SPR
*)
SPRAM
;

1327 
H
 = 8;

1329 
ns
 = 
sb
 = 0;

1331 
vofs
 = (
uöt32
)(
P0
 & 0x8 & (((P0 & 0x20) ^ 0x20) >> 2)) << 9;

1332 
H
 +(
P0
 & 0x20) >> 2;

1334 i‡(!
PPU_hook
)

1335 
n
 = 63;Ç >0;Ç--, 
•r
++) {

1336 i‡((
uöt32
)(
sˇ∆öe
 - 
•r
->
y
Ë>
H
) ;

1337 i‡(
ns
 < 
max•rôes
) {

1338 i‡(
n
 =63Ë
sb
 = 1;

1341 
SPRB
 
d°
;

1342 
uöt8
 *
C
;

1343 
t
;

1344 
uöt32
 
vadr
;

1346 
t
 = ()
sˇ∆öe
 - (
•r
->
y
);

1348 i‡(
S¥ôe16
)

1349 
vadr
 = ((
•r
->
no
 & 1) << 12) + ((spr->no & 0xFE) << 4);

1351 
vadr
 = (
•r
->
no
 << 4Ë+ 
vofs
;

1353 i‡(
•r
->
©r
 & 
V_FLIP
) {

1354 
vadr
 += 7;

1355 
vadr
 -
t
;

1356 
vadr
 +(
P0
 & 0x20) >> 1;

1357 
vadr
 -
t
 & 8;

1359 
vadr
 +
t
;

1360 
vadr
 +
t
 & 8;

1364 i‡(
MMC5Hack
 && 
gíõ°age
 != 1)

1365 
C
 = 
	`MMC5SPRVRAMADR
(
vadr
);

1367 
C
 = 
	`VRAMADR
(
vadr
);

1369 i‡(
S¥ôeON
)

1370 
	`RENDER_LOGP
(
C
);

1371 
d°
.
ˇ
[0] = 
C
[0];

1372 i‡(
S¥ôeON
)

1373 
	`RENDER_LOGP
(
C
 + 8);

1374 
d°
.
ˇ
[1] = 
C
[8];

1375 
d°
.
x
 = 
•r
->x;

1376 
d°
.
©r
 = 
•r
->atr;

1378 *(
uöt32
*)&
SPRBUF
[
ns
 << 2] = *(uöt32*)&
d°
;

1381 
ns
++;

1383 
PPU_°©us
 |= 0x20;

1388 
n
 = 63;Ç >0;Ç--, 
•r
++) {

1389 i‡((
uöt32
)(
sˇ∆öe
 - 
•r
->
y
Ë>
H
) ;

1391 i‡(
ns
 < 
max•rôes
) {

1392 i‡(
n
 =63Ë
sb
 = 1;

1395 
SPRB
 
d°
;

1396 
uöt8
 *
C
;

1397 
t
;

1398 
uöt32
 
vadr
;

1400 
t
 = ()
sˇ∆öe
 - (
•r
->
y
);

1402 i‡(
S¥ôe16
)

1403 
vadr
 = ((
•r
->
no
 & 1) << 12) + ((spr->no & 0xFE) << 4);

1405 
vadr
 = (
•r
->
no
 << 4Ë+ 
vofs
;

1407 i‡(
•r
->
©r
 & 
V_FLIP
) {

1408 
vadr
 += 7;

1409 
vadr
 -
t
;

1410 
vadr
 +(
P0
 & 0x20) >> 1;

1411 
vadr
 -
t
 & 8;

1413 
vadr
 +
t
;

1414 
vadr
 +
t
 & 8;

1417 i‡(
MMC5Hack
)

1418 
C
 = 
	`MMC5SPRVRAMADR
(
vadr
);

1420 
C
 = 
	`VRAMADR
(
vadr
);

1421 i‡(
S¥ôeON
)

1422 
	`RENDER_LOGP
(
C
);

1423 
d°
.
ˇ
[0] = 
C
[0];

1424 i‡(
ns
 < 8) {

1425 
	`PPU_hook
(0x2000);

1426 
	`PPU_hook
(
vadr
);

1428 i‡(
S¥ôeON
)

1429 
	`RENDER_LOGP
(
C
 + 8);

1430 
d°
.
ˇ
[1] = 
C
[8];

1431 
d°
.
x
 = 
•r
->x;

1432 
d°
.
©r
 = 
•r
->atr;

1435 *(
uöt32
*)&
SPRBUF
[
ns
 << 2] = *(uöt32*)&
d°
;

1438 
ns
++;

1440 
PPU_°©us
 |= 0x20;

1446 i‡(
ns
 > 8Ë
PPU_°©us
 |= 0x20;

1447 i‡(
PPU_hook
) {

1448 
n
 = 0;Ç < (8 - 
ns
);Ç++) {

1449 
	`PPU_hook
(0x2000);

1450 
	`PPU_hook
(
vofs
);

1453 
num•rôes
 = 
ns
;

1454 
S¥ôeBluΩ
 = 
sb
;

1455 
	}
}

1457 
	$Re‰eshS¥ôes
() {

1458 
n
;

1459 
SPRB
 *
•r
;

1461 
•‹k
 = 0;

1462 i‡(!
num•rôes
) ;

1464 
	`mem£t
(
•æöebuf
, 0x80, 256);

1465 
num•rôes
--;

1466 
•r
 = (
SPRB
*)
SPRBUF
 + 
num•rôes
;

1468 
n
 = 
num•rôes
;Ç >0;Ç--, 
•r
--) {

1469 
uöt32
 
pixd©a
;

1470 
uöt8
 
J
, 
©r
;

1472 
x
 = 
•r
->x;

1473 
uöt8
 *
C
;

1474 
VB
;

1476 
pixd©a
 = 
µulut1
[
•r
->
ˇ
[0]] | 
µulut2
[spr->ca[1]];

1477 
J
 = 
•r
->
ˇ
[0] | spr->ca[1];

1478 
©r
 = 
•r
->atr;

1480 i‡(
J
) {

1481 i‡(
n
 =0 && 
S¥ôeBluΩ
 && !(
PPU_°©us
 & 0x40)) {

1482 
•hôx
 = 
x
;

1483 
•hôd©a
 = 
J
;

1484 i‡(
©r
 & 
H_FLIP
)

1485 
•hôd©a
 = ((
J
 << 7) & 0x80) |

1486 ((
J
 << 5) & 0x40) |

1487 ((
J
 << 3) & 0x20) |

1488 ((
J
 << 1) & 0x10) |

1489 ((
J
 >> 1) & 0x08) |

1490 ((
J
 >> 3) & 0x04) |

1491 ((
J
 >> 5) & 0x02) |

1492 ((
J
 >> 7) & 0x01);

1495 
C
 = 
•æöebuf
 + 
x
;

1496 
VB
 = (0x10Ë+ ((
©r
 & 3) << 2);

1498 i‡(
©r
 & 
SP_BACK
) {

1499 i‡(
©r
 & 
H_FLIP
) {

1500 i‡(
J
 & 0x80Ë
C
[7] = 
	`READPAL
(
VB
 | (
pixd©a
 & 3)) | 0x40;

1501 
pixd©a
 >>= 4;

1502 i‡(
J
 & 0x40Ë
C
[6] = 
	`READPAL
(
VB
 | (
pixd©a
 & 3)) | 0x40;

1503 
pixd©a
 >>= 4;

1504 i‡(
J
 & 0x20Ë
C
[5] = 
	`READPAL
(
VB
 | (
pixd©a
 & 3)) | 0x40;

1505 
pixd©a
 >>= 4;

1506 i‡(
J
 & 0x10Ë
C
[4] = 
	`READPAL
(
VB
 | (
pixd©a
 & 3)) | 0x40;

1507 
pixd©a
 >>= 4;

1508 i‡(
J
 & 0x08Ë
C
[3] = 
	`READPAL
(
VB
 | (
pixd©a
 & 3)) | 0x40;

1509 
pixd©a
 >>= 4;

1510 i‡(
J
 & 0x04Ë
C
[2] = 
	`READPAL
(
VB
 | (
pixd©a
 & 3)) | 0x40;

1511 
pixd©a
 >>= 4;

1512 i‡(
J
 & 0x02Ë
C
[1] = 
	`READPAL
(
VB
 | (
pixd©a
 & 3)) | 0x40;

1513 
pixd©a
 >>= 4;

1514 i‡(
J
 & 0x01Ë
C
[0] = 
	`READPAL
(
VB
 | 
pixd©a
) | 0x40;

1516 i‡(
J
 & 0x80Ë
C
[0] = 
	`READPAL
(
VB
 | (
pixd©a
 & 3)) | 0x40;

1517 
pixd©a
 >>= 4;

1518 i‡(
J
 & 0x40Ë
C
[1] = 
	`READPAL
(
VB
 | (
pixd©a
 & 3)) | 0x40;

1519 
pixd©a
 >>= 4;

1520 i‡(
J
 & 0x20Ë
C
[2] = 
	`READPAL
(
VB
 | (
pixd©a
 & 3)) | 0x40;

1521 
pixd©a
 >>= 4;

1522 i‡(
J
 & 0x10Ë
C
[3] = 
	`READPAL
(
VB
 | (
pixd©a
 & 3)) | 0x40;

1523 
pixd©a
 >>= 4;

1524 i‡(
J
 & 0x08Ë
C
[4] = 
	`READPAL
(
VB
 | (
pixd©a
 & 3)) | 0x40;

1525 
pixd©a
 >>= 4;

1526 i‡(
J
 & 0x04Ë
C
[5] = 
	`READPAL
(
VB
 | (
pixd©a
 & 3)) | 0x40;

1527 
pixd©a
 >>= 4;

1528 i‡(
J
 & 0x02Ë
C
[6] = 
	`READPAL
(
VB
 | (
pixd©a
 & 3)) | 0x40;

1529 
pixd©a
 >>= 4;

1530 i‡(
J
 & 0x01Ë
C
[7] = 
	`READPAL
(
VB
 | 
pixd©a
) | 0x40;

1533 i‡(
©r
 & 
H_FLIP
) {

1534 i‡(
J
 & 0x80Ë
C
[7] = 
	`READPAL
(
VB
 | (
pixd©a
 & 3));

1535 
pixd©a
 >>= 4;

1536 i‡(
J
 & 0x40Ë
C
[6] = 
	`READPAL
(
VB
 | (
pixd©a
 & 3));

1537 
pixd©a
 >>= 4;

1538 i‡(
J
 & 0x20Ë
C
[5] = 
	`READPAL
(
VB
 | (
pixd©a
 & 3));

1539 
pixd©a
 >>= 4;

1540 i‡(
J
 & 0x10Ë
C
[4] = 
	`READPAL
(
VB
 | (
pixd©a
 & 3));

1541 
pixd©a
 >>= 4;

1542 i‡(
J
 & 0x08Ë
C
[3] = 
	`READPAL
(
VB
 | (
pixd©a
 & 3));

1543 
pixd©a
 >>= 4;

1544 i‡(
J
 & 0x04Ë
C
[2] = 
	`READPAL
(
VB
 | (
pixd©a
 & 3));

1545 
pixd©a
 >>= 4;

1546 i‡(
J
 & 0x02Ë
C
[1] = 
	`READPAL
(
VB
 | (
pixd©a
 & 3));

1547 
pixd©a
 >>= 4;

1548 i‡(
J
 & 0x01Ë
C
[0] = 
	`READPAL
(
VB
 | 
pixd©a
);

1550 i‡(
J
 & 0x80Ë
C
[0] = 
	`READPAL
(
VB
 | (
pixd©a
 & 3));

1551 
pixd©a
 >>= 4;

1552 i‡(
J
 & 0x40Ë
C
[1] = 
	`READPAL
(
VB
 | (
pixd©a
 & 3));

1553 
pixd©a
 >>= 4;

1554 i‡(
J
 & 0x20Ë
C
[2] = 
	`READPAL
(
VB
 | (
pixd©a
 & 3));

1555 
pixd©a
 >>= 4;

1556 i‡(
J
 & 0x10Ë
C
[3] = 
	`READPAL
(
VB
 | (
pixd©a
 & 3));

1557 
pixd©a
 >>= 4;

1558 i‡(
J
 & 0x08Ë
C
[4] = 
	`READPAL
(
VB
 | (
pixd©a
 & 3));

1559 
pixd©a
 >>= 4;

1560 i‡(
J
 & 0x04Ë
C
[5] = 
	`READPAL
(
VB
 | (
pixd©a
 & 3));

1561 
pixd©a
 >>= 4;

1562 i‡(
J
 & 0x02Ë
C
[6] = 
	`READPAL
(
VB
 | (
pixd©a
 & 3));

1563 
pixd©a
 >>= 4;

1564 i‡(
J
 & 0x01Ë
C
[7] = 
	`READPAL
(
VB
 | 
pixd©a
);

1569 
S¥ôeBluΩ
 = 0;

1570 
•‹k
 = 1;

1571 
	}
}

1573 
	$C›yS¥ôes
(
uöt8
 *
èrgë
) {

1574 
uöt8
 *
P
 = 
èrgë
;

1576 i‡(!
•‹k
) ;

1577 
•‹k
 = 0;

1579 i‡(!
ªndî•rôes
) ;

1581 if(!
S¥ôeON
) ;

1582 
i
=0;i<256;i++)

1584 
uöt8
 
t
 = 
•æöebuf
[
i
];

1585 if(!(
t
&0x80))

1586 i‡(!(
t
 & 0x40Ë|| (
P
[
i
] & 0x40))

1587 
P
[
i
] = 
t
;

1589 
	}
}

1591 
	$FCEUPPU_SëVideoSy°em
(
w
) {

1592 i‡(
w
) {

1593 
sˇ∆öes_≥r_‰ame
 = 
dídy
 ? 262: 312;

1594 
FSëtögs
.
Fú°SLöe
 = FSëtögs.
U§Fú°SLöe
[1];

1595 
FSëtögs
.
La°SLöe
 = FSëtögs.
U§La°SLöe
[1];

1598 
sˇ∆öes_≥r_‰ame
 = 262;

1599 
FSëtögs
.
Fú°SLöe
 = FSëtögs.
U§Fú°SLöe
[0];

1600 
FSëtögs
.
La°SLöe
 = FSëtögs.
U§La°SLöe
[0];

1603 
	}
}

1606 
	$FCEUPPU_Inô
() {

1607 
	`makïpulut
();

1608 
	}
}

1610 
	$PPU_Re£tHooks
() {

1611 
FFCEUX_PPURód
 = 
FFCEUX_PPURód_DeÁu…
;

1612 
	}
}

1614 
	$FCEUPPU_Re£t
() {

1615 
VRAMBuf„r
 = 
PPU
[0] = PPU[1] = 
PPU_°©us
 = PPU[3] = 0;

1616 
PPUSPL
 = 0;

1617 
PPUGíL©ch
 = 0;

1618 
Re‰eshAddr
 = 
TempAddr
 = 0;

1619 
vtoggÀ
 = 0;

1620 
µudód
 = 2;

1621 
kook
 = 0;

1622 
idÀSynch
 = 1;

1624 
√w_µu_ª£t
 = 
åue
;

1625 
	}
}

1627 
	$FCEUPPU_Powî
() {

1628 
x
;

1630 
	`mem£t
(
NTARAM
, 0x00, 0x800);

1631 
	`mem£t
(
PALRAM
, 0x00, 0x20);

1632 
	`mem£t
(
UPALRAM
, 0x00, 0x03);

1633 
	`mem£t
(
SPRAM
, 0x00, 0x100);

1634 
	`FCEUPPU_Re£t
();

1636 
x
 = 0x2000; x < 0x4000; x += 8) {

1637 
ARód
[
x
] = 
A200x
;

1638 
BWrôe
[
x
] = 
B2000
;

1639 
ARód
[
x
 + 1] = 
A200x
;

1640 
BWrôe
[
x
 + 1] = 
B2001
;

1641 
ARód
[
x
 + 2] = 
A2002
;

1642 
BWrôe
[
x
 + 2] = 
B2002
;

1643 
ARód
[
x
 + 3] = 
A200x
;

1644 
BWrôe
[
x
 + 3] = 
B2003
;

1645 
ARód
[
x
 + 4] = 
A2004
;

1646 
BWrôe
[
x
 + 4] = 
B2004
;

1647 
ARód
[
x
 + 5] = 
A200x
;

1648 
BWrôe
[
x
 + 5] = 
B2005
;

1649 
ARód
[
x
 + 6] = 
A200x
;

1650 
BWrôe
[
x
 + 6] = 
B2006
;

1651 
ARód
[
x
 + 7] = 
A2007
;

1652 
BWrôe
[
x
 + 7] = 
B2007
;

1654 
BWrôe
[0x4014] = 
B4014
;

1655 
	}
}

1657 
	$FCEUPPU_Lo›
(
skù
) {

1658 i‡((
√wµu
Ë&& (
GameInfo
->
ty≥
 !
GIT_NSF
)) {

1659 
	`FCEUX_PPU_Lo›
(
skù
);

1660  
	`FCEUX_PPU_Lo›
(
skù
);

1664 i‡(
µudód
) {

1665 
	`mem£t
(
XBuf
, 0x80, 256 * 240);

1666 
	`X6502_Run
(
sˇ∆öes_≥r_‰ame
 * (256 + 85));

1667 
µudód
--;

1669 
	`X6502_Run
(256 + 85);

1670 
PPU_°©us
 |= 0x80;

1675 
PPU
[3] = 
PPUSPL
 = 0;

1678 
	`X6502_Run
(12);

1679 i‡(
GameInfo
->
ty≥
 =
GIT_NSF
) {

1680 
	`as£π
(0);

1682 i‡(
VBœnkON
)

1683 
	`TriggîNMI
();

1685 
	`X6502_Run
((
sˇ∆öes_≥r_‰ame
 - 242) * (256 + 85) - 12);

1686 i‡(
ovî˛ock_íabÀd
 && 
vbœnksˇ∆öes
) {

1687 i‡(!
DMC_7bô
 || !
skù_7bô_ovî˛ockög
) {

1688 
ovî˛ockög
 = 1;

1689 
	`X6502_Run
(
vbœnksˇ∆öes
 * (256 + 85) - 12);

1690 
ovî˛ockög
 = 0;

1693 
PPU_°©us
 &= 0x1f;

1694 
	`X6502_Run
(256);

1697 
x
;

1699 i‡(
S¸ìnON
 || 
S¥ôeON
) {

1700 i‡(
GameHBIRQHook
 && ((
PPU
[0] & 0x38) != 0x18))

1701 
	`GameHBIRQHook
();

1702 i‡(
PPU_hook
)

1703 
x
 = 0; x < 42; x++) {

1704 
	`PPU_hook
(0x2000); PPU_hook(0);

1706 i‡(
GameHBIRQHook2
)

1707 
	`GameHBIRQHook2
();

1709 
	`X6502_Run
(85 - 16);

1710 i‡(
S¸ìnON
 || 
S¥ôeON
) {

1711 
Re‰eshAddr
 = 
TempAddr
;

1712 i‡(
PPU_hook
Ë
	`PPU_hook
(
Re‰eshAddr
 & 0x3fff);

1716 
•‹k
 = 
num•rôes
 = 0;

1717 
	`Re£tRL
(
XBuf
);

1719 
	`X6502_Run
(16 - 
kook
);

1720 
kook
 ^= 1;

1722 i‡(
GameInfo
->
ty≥
 =
GIT_NSF
)

1723 
	`X6502_Run
((256 + 85Ë* 
n‹mÆsˇ∆öes
);

1724 #ifde‡
FRAMESKIP


1725 i‡(
skù
) {

1726 
y
;

1728 
y
 = 
SPRAM
[0];

1729 
y
++;

1731 
PPU_°©us
 |= 0x20;

1732 i‡(
GameHBIRQHook
) {

1733 
	`X6502_Run
(256);

1734 
sˇ∆öe
 = 0; scanline < 240; scanline++) {

1735 i‡(
S¸ìnON
 || 
S¥ôeON
)

1736 
	`GameHBIRQHook
();

1737 i‡(
sˇ∆öe
 =
y
 && 
S¥ôeON
Ë
PPU_°©us
 |= 0x40;

1738 
	`X6502_Run
((
sˇ∆öe
 == 239) ? 85 : (256 + 85));

1740 } i‡(
y
 < 240) {

1741 
	`X6502_Run
((256 + 85Ë* 
y
);

1742 i‡(
S¥ôeON
Ë
PPU_°©us
 |= 0x40;

1743 
	`X6502_Run
((256 + 85Ë* (240 - 
y
));

1745 
	`X6502_Run
((256 + 85) * 240);

1749 
dìmp
 = 
PPU
[1] >> 5;

1752 i‡(
DMC_7bô
 && 
skù_7bô_ovî˛ockög
)

1753 
tŸÆsˇ∆öes
 = 
n‹mÆsˇ∆öes
;

1755 
tŸÆsˇ∆öes
 = 
n‹mÆsˇ∆öes
 + (
ovî˛ock_íabÀd
 ? 
po°ªndîsˇ∆öes
 : 0);

1757 
sˇ∆öe
 = 0; sˇ∆öê< 
tŸÆsˇ∆öes
; ) {

1758 
dìmp˙t
[
dìmp
]++;

1759 i‡(
sˇ∆öe
 < 240)

1760 
	`DEBUG
(
	`FCEUD_Upd©ePPUVõw
(
sˇ∆öe
, 1));

1761 
	`DoLöe
();

1763 i‡(
sˇ∆öe
 < 
n‹mÆsˇ∆öes
 || sˇ∆öê=
tŸÆsˇ∆öes
)

1764 
ovî˛ockög
 = 0;

1766 i‡(
DMC_7bô
 && 
skù_7bô_ovî˛ockög
)

1768 
ovî˛ockög
 = 1;

1771 
DMC_7bô
 = 0;

1773 i‡(
MMC5Hack
Ë
	`MMC5_hb
(
sˇ∆öe
);

1776 
maxªf
 = 0;

1777 
x
 = 1, 
max
 = 0; x < 7; x++) {

1778 i‡(
dìmp˙t
[
x
] > 
max
) {

1779 
max
 = 
dìmp˙t
[
x
];

1780 
maxªf
 = 
x
;

1782 
dìmp˙t
[
x
] = 0;

1784 
	`SëNESDìmph_OldHacky
(
maxªf
, 0);

1788 
	`ShowFPS
();

1789 #ifde‡
FRAMESKIP


1790 i‡(
skù
) {

1797 
	}
}

1799 (*
PPU_MASTER
)(
skù
Ë
FCEUPPU_Lo›
;

1801 
uöt16
 
TempAddrT
, 
Re‰eshAddrT
;

1803 
	$FCEUPPU_LﬂdSèã
(
vîsi⁄
) {

1804 
TempAddr
 = 
TempAddrT
;

1805 
Re‰eshAddr
 = 
Re‰eshAddrT
;

1806 
	}
}

1808 
SFORMAT
 
	gFCEUPPU_STATEINFO
[] = {

1809 { 
NTARAM
, 0x800, "NTAR" },

1810 { 
PALRAM
, 0x20, "PRAM" },

1811 { 
SPRAM
, 0x100, "SPRA" },

1812 { 
PPU
, 0x4, "PPUR" },

1813 { &
kook
, 1, "KOOK" },

1814 { &
µudód
, 1, "DEAD" },

1815 { &
PPUSPL
, 1, "PSPL" },

1816 { &
XOff£t
, 1, "XOFF" },

1817 { &
vtoggÀ
, 1, "VTGL" },

1818 { &
Re‰eshAddrT
, 2 | 
FCEUSTATE_RLSB
, "RADD" },

1819 { &
TempAddrT
, 2 | 
FCEUSTATE_RLSB
, "TADD" },

1820 { &
VRAMBuf„r
, 1, "VBUF" },

1821 { &
PPUGíL©ch
, 1, "PGEN" },

1825 
SFORMAT
 
	gFCEU_NEWPPU_STATEINFO
[] = {

1826 { &
idÀSynch
, 1, "IDLS" },

1827 { &
•r_ªad
.
num
, 4 | 
FCEUSTATE_RLSB
, "SR_0" },

1828 { &
•r_ªad
.
cou¡
, 4 | 
FCEUSTATE_RLSB
, "SR_1" },

1829 { &
•r_ªad
.
„tch
, 4 | 
FCEUSTATE_RLSB
, "SR_2" },

1830 { &
•r_ªad
.
found
, 4 | 
FCEUSTATE_RLSB
, "SR_3" },

1831 { &
•r_ªad
.
found_pos
[0], 4 | 
FCEUSTATE_RLSB
, "SRx0" },

1832 { &
•r_ªad
.
found_pos
[0], 4 | 
FCEUSTATE_RLSB
, "SRx1" },

1833 { &
•r_ªad
.
found_pos
[0], 4 | 
FCEUSTATE_RLSB
, "SRx2" },

1834 { &
•r_ªad
.
found_pos
[0], 4 | 
FCEUSTATE_RLSB
, "SRx3" },

1835 { &
•r_ªad
.
found_pos
[0], 4 | 
FCEUSTATE_RLSB
, "SRx4" },

1836 { &
•r_ªad
.
found_pos
[0], 4 | 
FCEUSTATE_RLSB
, "SRx5" },

1837 { &
•r_ªad
.
found_pos
[0], 4 | 
FCEUSTATE_RLSB
, "SRx6" },

1838 { &
•r_ªad
.
found_pos
[0], 4 | 
FCEUSTATE_RLSB
, "SRx7" },

1839 { &
•r_ªad
.
ªt
, 4 | 
FCEUSTATE_RLSB
, "SR_4" },

1840 { &
•r_ªad
.
œ°
, 4 | 
FCEUSTATE_RLSB
, "SR_5" },

1841 { &
•r_ªad
.
mode
, 4 | 
FCEUSTATE_RLSB
, "SR_6" },

1842 { &
µur
.
fv
, 4 | 
FCEUSTATE_RLSB
, "PFVx" },

1843 { &
µur
.
v
, 4 | 
FCEUSTATE_RLSB
, "PVxx" },

1844 { &
µur
.
h
, 4 | 
FCEUSTATE_RLSB
, "PHxx" },

1845 { &
µur
.
vt
, 4 | 
FCEUSTATE_RLSB
, "PVTx" },

1846 { &
µur
.
ht
, 4 | 
FCEUSTATE_RLSB
, "PHTx" },

1847 { &
µur
.
_fv
, 4 | 
FCEUSTATE_RLSB
, "P_FV" },

1848 { &
µur
.
_v
, 4 | 
FCEUSTATE_RLSB
, "P_Vx" },

1849 { &
µur
.
_h
, 4 | 
FCEUSTATE_RLSB
, "P_Hx" },

1850 { &
µur
.
_vt
, 4 | 
FCEUSTATE_RLSB
, "P_VT" },

1851 { &
µur
.
_ht
, 4 | 
FCEUSTATE_RLSB
, "P_HT" },

1852 { &
µur
.
fh
, 4 | 
FCEUSTATE_RLSB
, "PFHx" },

1853 { &
µur
.
s
, 4 | 
FCEUSTATE_RLSB
, "PSxx" },

1854 { &
µur
.
°©us
.
¶
, 4 | 
FCEUSTATE_RLSB
, "PST0" },

1855 { &
µur
.
°©us
.
cy˛e
, 4 | 
FCEUSTATE_RLSB
, "PST1" },

1856 { &
µur
.
°©us
.
íd_cy˛e
, 4 | 
FCEUSTATE_RLSB
, "PST2" },

1860 
	$FCEUPPU_SaveSèã
() {

1861 
TempAddrT
 = 
TempAddr
;

1862 
Re‰eshAddrT
 = 
Re‰eshAddr
;

1863 
	}
}

1865 
uöt32
 
	$FCEUPPU_PìkAddªss
()

1867 i‡(
√wµu
)

1869  
µur
.
	`gë_2007ac˚ss
() & 0x3FFF;

1872  
Re‰eshAddr
 & 0x3FFF;

1873 
	}
}

1876 
	gµutime
 = 0;

1877 
	gtŸµutime
 = 0;

1878 c⁄° 
	gkLöeTime
 = 341;

1879 c⁄° 
	gkFëchTime
 = 2;

1881 
	$ru≈pu
(
x
) {

1882 
µur
.
°©us
.
cy˛e
 = (µur.°©us.cy˛ê+ 
x
Ë%Öpur.°©us.
íd_cy˛e
;

1883 i‡(!
√w_µu_ª£t
)

1885 
	`X6502_Run
(
x
);

1887 
	}
}

1890 
	sBGD©a
 {

1891 
	sRec‹d
 {

1892 
uöt8
 
	m¡
, 
	m≥˙t
, 
	m©
, 
	m±
[2], 
	mqät
;

1894 
INLINE
 
Ród
() {

1895 
	mNTRe‰eshAddr
 = 
Re‰eshAddr
 = 
µur
.
gë_¡ªad
();

1896 i‡(
	mPEC586Hack
)

1897 
	mµur
.
	ms
 = (
Re‰eshAddr
 & 0x200) >> 9;

1898 i‡(
	mQTAIHack
) {

1899 
	mqät
 = 
QTAINTRAM
[((((
Re‰eshAddr
 >> 10Ë& 3Ë>> ((
qèöåamªg
 >> 1)) & 1) << 10) | (RefreshAddr & 0x3FF)];

1900 
	mµur
.
	ms
 = 
qät
 & 0x3F;

1902 
	m≥˙t
 = (
Re‰eshAddr
 & 1) << 3;

1903 
	m¡
 = 
CALL_PPUREAD
(
Re‰eshAddr
);

1904 
ru≈pu
(
kFëchTime
);

1906 
	mRe‰eshAddr
 = 
µur
.
gë_©ªad
();

1907 
	m©
 = 
CALL_PPUREAD
(
Re‰eshAddr
);

1910 i‡(
	mµur
.
	mvt
 & 2Ë
	m©
 >>= 4;

1911 i‡(
	mµur
.
	mht
 & 2Ë
	m©
 >>= 2;

1912 
	m©
 &= 0x03;

1913 
	m©
 <<= 2;

1916 
ru≈pu
(1);

1917 i‡(
	mPPUON
) {

1918 
	mµur
.
ö¸emít_hsc
();

1919 i‡(
	mµur
.
	m°©us
.
	mcy˛e
 == 251)

1920 
µur
.
ö¸emít_vs
();

1922 
ru≈pu
(1);

1924 
	mµur
.
	m∑r
 = 
¡
;

1925 
	mRe‰eshAddr
 = 
µur
.
gë_±ªad
();

1926 i‡(
	mPEC586Hack
) {

1927 
	m±
[0] = 
CALL_PPUREAD
(
Re‰eshAddr
 | 
≥˙t
);

1928 
ru≈pu
(
kFëchTime
);

1929 
	m±
[1] = 
CALL_PPUREAD
(
Re‰eshAddr
 | 
≥˙t
);

1930 
ru≈pu
(
kFëchTime
);

1931 } i‡(
	mQTAIHack
 && (
	mqät
 & 0x40)) {

1932 
	m±
[0] = *(
CHR±r
[0] + 
Re‰eshAddr
);

1933 
ru≈pu
(
kFëchTime
);

1934 
	mRe‰eshAddr
 |= 8;

1935 
	m±
[1] = *(
CHR±r
[0] + 
Re‰eshAddr
);

1936 
ru≈pu
(
kFëchTime
);

1938 i‡(
	mS¸ìnON
)

1939 
RENDER_LOG
(
Re‰eshAddr
);

1940 
	m±
[0] = 
CALL_PPUREAD
(
Re‰eshAddr
);

1941 
ru≈pu
(
kFëchTime
);

1942 
	mRe‰eshAddr
 |= 8;

1943 i‡(
	mS¸ìnON
)

1944 
RENDER_LOG
(
Re‰eshAddr
);

1945 
	m±
[1] = 
CALL_PPUREAD
(
Re‰eshAddr
);

1946 
ru≈pu
(
kFëchTime
);

1951 
Rec‹d
 
	mmaö
[34];

1952 } 
	gbgd©a
;

1954 
ölöe
 
	$PÆëãAdju°Pixñ
(
pixñ
) {

1955 i‡((
PPU
[1] >> 5) == 0x7)

1956  (
pixñ
 & 0x3f) | 0xc0;

1957 i‡(
PPU
[1] & 0xE0)

1958  
pixñ
 | 0x40;

1960  (
pixñ
 & 0x3F) | 0x80;

1961 
	}
}

1963 
	g‰ame˘r
 = 0;

1964 
	$FCEUX_PPU_Lo›
(
skù
) {

1966 i‡(
√w_µu_ª£t
)

1968 
µur
.
	`ª£t
();

1969 
•r_ªad
.
	`ª£t
();

1970 
√w_µu_ª£t
 = 
Ál£
;

1974 i‡(
µudód
) {

1980 
µur
.
°©us
.
¶
 = 241;

1981 i‡(
PAL
)

1982 
	`ru≈pu
(70 * 
kLöeTime
);

1984 
	`ru≈pu
(20 * 
kLöeTime
);

1985 
µur
.
°©us
.
¶
 = 0;

1986 
	`ru≈pu
(242 * 
kLöeTime
);

1987 --
µudód
;

1988 
föish
;

1992 
PPU_°©us
 |= 0x80;

1993 
µupha£
 = 
PPUPHASE_VBL
;

1998 
PPU
[3] = 
PPUSPL
 = 0;

1999 c⁄° 
dñay
 = 20;

2001 
µur
.
°©us
.
¶
 = 241;

2004 
dŸ
=0;dŸ<
dñay
;dot++)

2005 
	`ru≈pu
(1);

2007 i‡(
VBœnkON
Ë
	`TriggîNMI
();

2008 
¶todo
 = 
PAL
?70:20;

2011 
S
=0;S<
¶todo
;S++)

2013 
dŸ
=(
S
==0?
dñay
:0);dŸ<
kLöeTime
;dot++)

2014 
	`ru≈pu
(1);

2015 
µur
.
°©us
.
¶
++;

2019 
PPU_°©us
 = 0;

2032 
uöt8
 
ﬂms
[2][64][8];

2033 
ﬂmcou¡s
[2] = { 0, 0 };

2034 
ﬂm¶Ÿ
 = 0;

2035 
ﬂmcou¡
;

2041 
¶
 = 0; s»< 
n‹mÆsˇ∆öes
; sl++) {

2042 
•r_ªad
.
	`°¨t_sˇ∆öe
();

2044 
g_ø°îpos
 = 0;

2045 
µur
.
°©us
.
¶
 = sl;

2047 
löe°¨âs
 = 
time°amp
 * 48 + 
X
.
cou¡
;

2049 c⁄° 
yp
 = 
¶
 - 1;

2050 
µupha£
 = 
PPUPHASE_BG
;

2052 i‡(
¶
 != 0 && sl < 241) {

2053 
	`DEBUG
(
	`FCEUD_Upd©ePPUVõw
(
sˇ∆öe
 = 
yp
, 1));

2054 
	`DEBUG
(
	`FCEUD_Upd©eNTVõw
(
sˇ∆öe
 = 
yp
, 1));

2059 if(
¶
 != 0)

2060 i‡(
MMC5Hack
Ë
	`MMC5_hb
(
yp
);

2064 c⁄° 
sˇn¶Ÿ
 = 
ﬂm¶Ÿ
 ^ 1;

2065 c⁄° 
ªndî¶Ÿ
 = 
ﬂm¶Ÿ
;

2066 
ﬂm¶Ÿ
 ^= 1;

2068 
ﬂmcou¡
 = 
ﬂmcou¡s
[
ªndî¶Ÿ
];

2073 
xt
 = 0; xt < 32; xt++) {

2074 
bgd©a
.
maö
[
xt
 + 2].
	`Ród
();

2076 c⁄° 
uöt8
 
bœnk
 = (
gNoBGFûlCﬁ‹
 =0xFFË? 
	`READPAL
(0) : gNoBGFillColor;

2080 i‡(
¶
 != 0 && sl < 241) {

2081 
x°¨t
 = 
xt
 << 3;

2082 
ﬂmcou¡
 = 
ﬂmcou¡s
[
ªndî¶Ÿ
];

2083 
uöt8
 * c⁄° 
èrgë
 = 
XBuf
 + (
yp
 << 8Ë+ 
x°¨t
;

2084 
uöt8
 * c⁄° 
dèrgë
 = 
XDBuf
 + (
yp
 << 8Ë+ 
x°¨t
;

2085 
uöt8
 *
±r
 = 
èrgë
;

2086 
uöt8
 *
d±r
 = 
dèrgë
;

2087 
ø°îpos
 = 
x°¨t
;

2090 c⁄° 
boﬁ
 
ªndî•rôíow
 = 
S¥ôeON
 && (
xt
 > 0 || 
S¥ôeLe·8
);

2091 c⁄° 
boﬁ
 
ªndîbgnow
 = 
S¸ìnON
 && (
xt
 > 0 || 
BGLe·8
);

2092 
xp
 = 0; x∞< 8; xp++, 
ø°îpos
++, 
g_ø°îpos
++) {

2095 c⁄° 
bgpos
 = 
ø°îpos
 + 
µur
.
fh
;

2096 c⁄° 
bgpx
 = 
bgpos
 & 7;

2097 c⁄° 
bgtûe
 = 
bgpos
 >> 3;

2099 
uöt8
 
pixñ
 = 0;

2100 
uöt8
 
pixñcﬁ‹
 = 
bœnk
;

2103 i‡(!
S¸ìnON
 && !
S¥ôeON
)

2106 
addr
 = 
µur
.
	`gë_2007ac˚ss
();

2107 i‡((
addr
 & 0x3F00) == 0x3F00)

2109 
pixñ
 = 
addr
 & 0x1F;

2111 
pixñcﬁ‹
 = 
	`READPAL_MOTHEROFALL
(
pixñ
);

2115 i‡(
ªndîbgnow
) {

2116 
uöt8
* 
±
 = 
bgd©a
.
maö
[
bgtûe
].pt;

2117 
pixñ
 = ((
±
[0] >> (7 - 
bgpx
)Ë& 1Ë| ((’t[1] >> (7 - bgpx)Ë& 1Ë<< 1Ë| 
bgd©a
.
maö
[
bgtûe
].
©
;

2119 i‡(
ªndîbg
)

2120 
pixñcﬁ‹
 = 
	`READPAL
(
pixñ
);

2123 
boﬁ
 
havïixñ
 = 
Ál£
;

2124 
s
 = 0; s < 
ﬂmcou¡
; s++) {

2125 
uöt8
* 
ﬂm
 = 
ﬂms
[
ªndî¶Ÿ
][
s
];

2126 
x
 = 
ﬂm
[3];

2127 i‡(
ø°îpos
 >
x
 &&Ñasterpos < x + 8) {

2130 
uöt8
 
•ixñ
 = 
ﬂm
[4] & 1;

2131 
•ixñ
 |(
ﬂm
[5] & 1) << 1;

2134 
ﬂm
[4] >>= 1;

2135 
ﬂm
[5] >>= 1;

2137 i‡(!
ªndî•rôíow
) ;

2140 i‡(
havïixñ
) ;

2143 i‡(
•ixñ
 == 0) ;

2149 i‡(
ﬂm
[6] =0 && (
pixñ
 & 3) != 0 &&

2150 
ø°îpos
 < 255) {

2151 
PPU_°©us
 |= 0x40;

2153 
havïixñ
 = 
åue
;

2156 i‡(
ﬂm
[2] & 0x20) {

2158 i‡((
pixñ
 & 3) != 0) ;

2162 
•ixñ
 |(
ﬂm
[2] & 3) << 2;

2164 i‡(
ªndî•rôes
)

2165 
pixñcﬁ‹
 = 
	`READPAL
(0x10 + 
•ixñ
);

2169 *
±r
++ = 
	`PÆëãAdju°Pixñ
(
pixñcﬁ‹
);

2170 *
d±r
++
PPU
[1]>>5;

2176 
ﬂmcou¡s
[
sˇn¶Ÿ
] = 0;

2177 
ﬂmcou¡
 = 0;

2178 c⁄° 
•rôeHeight
 = 
S¥ôe16
 ? 16 : 8;

2179 
i
 = 0; i < 64; i++) {

2180 
ﬂms
[
sˇn¶Ÿ
][
ﬂmcou¡
][7] = 0;

2181 
uöt8
* 
•r
 = 
SPRAM
 + 
i
 * 4;

2182 i‡(
yp
 >
•r
[0] && y∞< s¥[0] + 
•rôeHeight
) {

2185 i‡(
ﬂmcou¡
 >8 && 
PPUON
) {

2186 
PPU_°©us
 |= 0x20;

2187 i‡(
max•rôes
 == 8)

2192 
j
 = 0; j < 4; j++)

2193 
ﬂms
[
sˇn¶Ÿ
][
ﬂmcou¡
][
j
] = 
•r
[j];

2194 
ﬂms
[
sˇn¶Ÿ
][
ﬂmcou¡
][7] = 1;

2198 
ﬂms
[
sˇn¶Ÿ
][
ﬂmcou¡
][6] = (
uöt8
)
i
;

2199 
ﬂmcou¡
++;

2202 
ﬂmcou¡s
[
sˇn¶Ÿ
] = 
ﬂmcou¡
;

2216 
µupha£
 = 
PPUPHASE_OBJ
;

2219 
s
 = 0; s < 
max•rôes
; s++) {

2221 i‡(
s
 =
ﬂmcou¡
 && s >= 8)

2228 c⁄° 
boﬁ
 
ªÆS¥ôe
 = (
s
 < 8);

2230 
uöt8
* c⁄° 
ﬂm
 = 
ﬂms
[
sˇn¶Ÿ
][
s
];

2231 
uöt32
 
löe
 = 
yp
 - 
ﬂm
[0];

2232 i‡(
ﬂm
[2] & 0x80)

2233 
löe
 = 
•rôeHeight
 -Üine - 1;

2235 
uöt32
 
∑âînNumbî
 = 
ﬂm
[1];

2236 
uöt32
 
∑âînAddªss
;

2239 i‡(!
ﬂm
[7]) {

2240 
∑âînNumbî
 = 0;

2241 
löe
 = 0;

2245 i‡(
S¥ôe16
) {

2246 
uöt32
 
b™k
 = (
∑âînNumbî
 & 1) << 12;

2247 
∑âînNumbî
 =ÖatternNumber & ~1;

2248 
∑âînNumbî
 |(
löe
 >> 3);

2249 
∑âînAddªss
 = (
∑âînNumbî
 << 4Ë| 
b™k
;

2251 
∑âînAddªss
 = (
∑âînNumbî
 << 4Ë| (
SpAdrHI
 << 9);

2257 
∑âînAddªss
 +
löe
 & 7;

2260 
g¨bage_todo
 = 2;

2261 i‡(
PPUON
)

2263 i‡(
¶
 =0 && 
µur
.
°©us
.
cy˛e
 == 304)

2265 
	`ru≈pu
(1);

2266 i‡(
PPUON
Ë
µur
.
	`ö°Æl_œtches
();

2267 
	`ru≈pu
(1);

2268 
g¨bage_todo
 = 0;

2270 i‡((
¶
 !0 && s»< 241Ë&& 
µur
.
°©us
.
cy˛e
 == 256)

2272 
	`ru≈pu
(1);

2274 i‡(
PPUON
Ë
µur
.
	`ö°Æl_h_œtches
();

2275 
	`ru≈pu
(1);

2276 
g¨bage_todo
 = 0;

2279 i‡(
ªÆS¥ôe
Ë
	`ru≈pu
(
g¨bage_todo
);

2285 i‡(((
PPU
[0] & 0x38Ë!0x18Ë&& 
s
 =2 && 
PPUON
) {

2292 i‡(
GameHBIRQHook
) {

2293 
	`GameHBIRQHook
();

2298 if(
s
 =2 && 
PPUON
)

2300 i‡(
GameHBIRQHook2
) {

2301 
	`GameHBIRQHook2
();

2305 i‡(
ªÆS¥ôe
Ë
	`ru≈pu
(
kFëchTime
);

2309 
Re‰eshAddr
 = 
∑âînAddªss
;

2310 i‡(
S¥ôeON
)

2311 
	`RENDER_LOG
(
Re‰eshAddr
);

2312 
ﬂm
[4] = 
	`CALL_PPUREAD
(
Re‰eshAddr
);

2313 i‡(
ªÆS¥ôe
Ë
	`ru≈pu
(
kFëchTime
);

2315 
Re‰eshAddr
 += 8;

2316 i‡(
S¥ôeON
)

2317 
	`RENDER_LOG
(
Re‰eshAddr
);

2318 
ﬂm
[5] = 
	`CALL_PPUREAD
(
Re‰eshAddr
);

2319 i‡(
ªÆS¥ôe
Ë
	`ru≈pu
(
kFëchTime
);

2322 i‡(!(
ﬂm
[2] & 0x40)) {

2323 
ﬂm
[4] = 
bôªvlut
[oam[4]];

2324 
ﬂm
[5] = 
bôªvlut
[oam[5]];

2328 
µupha£
 = 
PPUPHASE_BG
;

2331 
xt
 = 0; xt < 2; xt++)

2332 
bgd©a
.
maö
[
xt
].
	`Ród
();

2340 
	`ru≈pu
(
kFëchTime
);

2341 i‡(
¶
 == 0) {

2342 i‡(
idÀSynch
 && 
PPUON
 && !
PAL
)

2343 
µur
.
°©us
.
íd_cy˛e
 = 340;

2345 
µur
.
°©us
.
íd_cy˛e
 = 341;

2346 
idÀSynch
 ^= 1;

2348 
µur
.
°©us
.
íd_cy˛e
 = 341;

2349 
	`ru≈pu
(
kFëchTime
);

2355 i‡(
µur
.
°©us
.
íd_cy˛e
 == 341)

2356 
	`ru≈pu
(1);

2359 
DMC_7bô
 = 0;

2361 i‡(
MMC5Hack
Ë
	`MMC5_hb
(240);

2364 
	`ru≈pu
(
kLöeTime
);

2365 
‰ame˘r
++;

2368 
föish
:

2370 
	}
}

	@fceux-am/src/ppu.h

1 
FCEUPPU_Inô
();

2 
FCEUPPU_Re£t
();

3 
FCEUPPU_Powî
();

4 
FCEUPPU_Lo›
(
skù
);

6 
FCEUPPU_LöeUpd©e
();

7 
FCEUPPU_SëVideoSy°em
(
w
);

9 (*
PPU_hook
)(
uöt32
 
A
);

10 (*
GameHBIRQHook
)(), (*
GameHBIRQHook2
)();

12 
	`√wµu_gë_sˇ∆öe
();

13 
	`√wµu_gë_dŸ
();

14 
	`√wµu_hacky_emîgícy_ª£t
();

17 
uöt8
 
NTARAM
[0x800], *
v«∑ge
[4];

18 
uöt8
 
PPUNTARAM
;

19 
uöt8
 
PPUCHRRAM
;

21 
	`FCEUPPU_SaveSèã
();

22 
	`FCEUPPU_LﬂdSèã
(
vîsi⁄
);

23 
uöt32
 
	`FCEUPPU_PìkAddªss
();

24 
uöt8
* 
	`FCEUPPU_GëCHR
(
uöt32
 
vadr
, uöt32 
ª‰eshaddr
);

25 
	`FCEUPPU_GëAâr
(
¡num
, 
xt
, 
yt
);

26 
	`µu_gëS¸ﬁl
(&
xpos
, &
ypos
);

29 
	#FASTCALL


	)

31 
	`PPU_Re£tHooks
();

32 
	$uöt8
 (
FASTCALL
 *
FFCEUX_PPURód
)(
uöt32
 
A
);

33 (*
FFCEUX_PPUWrôe
)(
uöt32
 
A
, 
uöt8
 
V
);

34 
uöt8
 
FASTCALL
 
	`FFCEUX_PPURód_DeÁu…
(
uöt32
 
A
);

35 
	`FFCEUX_PPUWrôe_DeÁu…
(
uöt32
 
A
, 
uöt8
 
V
);

37 
g_ø°îpos
;

38 
uöt8
 
PPU
[4];

39 
boﬁ
 
DMC_7bô
;

40 
boﬁ
 
∑ldìmphsw≠
;

42 
	ePPUPHASE
 {

43 
PPUPHASE_VBL
, 
PPUPHASE_BG
, 
PPUPHASE_OBJ


46 
PPUPHASE
 
µupha£
;

	@fceux-am/src/sound.cpp

21 
	~"ty≥s.h
"

22 
	~"x6502.h
"

24 
	~"f˚u.h
"

25 
	~"sound.h
"

26 
	~"fûãr.h
"

27 
	~"°©e.h
"

28 
	~"c⁄fig.h
"

32 
uöt32
 
	gwlookup1
[32];

33 
uöt32
 
	gwlookup2
[203];

35 
öt32
 
	gWave
[2048+512];

36 
öt32
 
	gWaveHi
[40000];

37 
öt32
 
	gWaveFöÆ
[2048+512];

39 
EXPSOUND
 
	gGameExpSound
={0,0,0};

41  
uöt8
 
	gTriCou¡
=0;

42 
uöt8
 
	gTriMode
=0;

44 
öt32
 
	gåi°ï
=0;

46 
öt32
 
	gwlcou¡
[4]={0,0,0,0};

49 
uöt8
 
	gPSG
[0x10];

50 
uöt8
 
	gDMCF‹m©
=0;

51 
uöt8
 
	gRawDAL©ch
=0;

52 
uöt8
 
	gDMCAddªssL©ch
=0;

53 
uöt8
 
	gDMCSizeL©ch
=0;

54 
uöt8
 
	gE«bÀdCh™√ls
=0;

55 
uöt8
 
	gIRQFømeMode
=0;

57 
uöt8
 
	gInôülRawDAL©ch
=0;

58 
boﬁ
 
	gDMC_7bô
 = 0;

59 
ENVUNIT
 
	gEnvUnôs
[3];

61 c⁄° 
	gRe˘Dutõs
[4]={1,2,4,6};

63 
öt32
 
	gRe˘DutyCou¡
[2];

64 
uöt8
 
	gswìp⁄
[2];

65  
öt32
 
	gcur‰eq
[2];

66 
uöt8
 
	gSwìpCou¡
[2];

67 
uöt8
 
	gSwìpRñﬂd
[2];

69 
uöt16
 
	gƒeg
=0;

71 
uöt8
 
	gf˙t
=0;

72 
öt32
 
	gfh˙t
=0;

73 
öt32
 
	gfhöc
=0;

75 
uöt32
 
	gsoundtsoffs
=0;

78 
öt32
 
	g√söcsize
=0;

79 
uöt32
 
	gsoundtsöc
=0;

80 
uöt32
 
	gsoundtsi
=0;

81 
öt32
 
	gsqacc
[2];

84  
öt32
 
	gÀngthcou¡
[4];

85 c⁄° 
uöt8
 
	gÀngthèbÀ
[0x20]=

92 c⁄° 
uöt32
 
Noi£FªqTabÀNTSC
[0x10] =

98 c⁄° 
uöt32
 
Noi£FªqTabÀPAL
[0x10] =

105 c⁄° 
uöt32
 
	gNTSCDMCTabÀ
[0x10]=

117 c⁄° 
uöt32
 
	gPALDMCTabÀ
[0x10]=

123  
öt32
 
	gDMCacc
=1;

124  
öt32
 
	gDMCPîiod
=0;

125  
uöt8
 
	gDMCBôCou¡
=0;

127 
uöt32
 
	gDMCAddªss
=0;

128 
öt32
 
	gDMCSize
=0;

129 
uöt8
 
	gDMCShi·
=0;

130 
uöt8
 
	gSIRQSèt
=0;

132 
	gDMCHaveDMA
=0;

133 
uöt8
 
	gDMCDMABuf
=0;

134  
	gDMCHaveSam∂e
=0;

136 
	$Dummyfunc
(Ë{
	}
};

137 (*
DoNoi£
)()=
Dummyfunc
;

138 (*
DoTrüngÀ
)()=
Dummyfunc
;

139 (*
DoPCM
)()=
Dummyfunc
;

140 (*
DoSQ1
)()=
Dummyfunc
;

141 (*
DoSQ2
)()=
Dummyfunc
;

143 
uöt32
 
Ch™√lBC
[5];

146 
movõSyncHackOn
=0,
ª£tDMCacc
=0,
movõC⁄vîtOff£t1
,
movõC⁄vîtOff£t2
;

148 #ifde‡
WIN32


149 vﬁ©ûê
d©acou¡
, 
undeföedcou¡
;

150 
debug_loggögCD
;

151 *
cdloggîd©a
;

154 
	$LﬂdDMCPîiod
(
uöt8
 
V
)

156 if(
PAL
)

157 
DMCPîiod
=
PALDMCTabÀ
[
V
];

159 
DMCPîiod
=
NTSCDMCTabÀ
[
V
];

160 
	}
}

162 
	$PªpDPCM
()

164 
DMCAddªss
=0x4000+(
DMCAddªssL©ch
<<6);

165 
DMCSize
=(
DMCSizeL©ch
<<4)+1;

166 
	}
}

170  
	$CheckFªq
(
uöt32
 
cf
, 
uöt8
 
§
)

172 
uöt32
 
mod
;

173 if(!(
§
&0x8))

175 
mod
=
cf
>>(
§
&7);

176 if((
mod
+
cf
)&0x800)

180 
	}
}

182 
	$SQRñﬂd
(
x
, 
uöt8
 
V
)

184 if(
E«bÀdCh™√ls
&(1<<
x
))

185 
Àngthcou¡
[
x
]=
ÀngthèbÀ
[(
V
>>3)&0x1f];

190 
cur‰eq
[
x
]=(cur‰eq[x] & 0xff)|((
V
&7)<<8);

191 
Re˘DutyCou¡
[
x
]=7;

192 
EnvUnôs
[
x
].
ªlﬂddec
=1;

193 
	}
}

195 
	$DECLFW
(
Wrôe_PSG
)

197 
A
&=0x1F;

198 
A
)

201 
	`DoSQ1
();

202 
EnvUnôs
[0].
Mode
=(
V
&0x30)>>4;

203 
EnvUnôs
[0].
S≥ed
=(
V
&0xF);

204 i‡(
sw≠Duty
)

205 
V
 = (V&0x3F)|((V&0x80)>>1)|((V&0x40)<<1);

208 
	`DoSQ1
();

209 
swìp⁄
[0]=
V
&0x80;

210 
SwìpRñﬂd
[0]=1;

213 
	`DoSQ1
();

214 
cur‰eq
[0]&=0xFF00;

215 
cur‰eq
[0]|=
V
;

218 
	`DoSQ1
();

219 
	`SQRñﬂd
(0,
V
);

222 
	`DoSQ2
();

223 
EnvUnôs
[1].
Mode
=(
V
&0x30)>>4;

224 
EnvUnôs
[1].
S≥ed
=(
V
&0xF);

225 i‡(
sw≠Duty
)

226 
V
 = (V&0x3F)|((V&0x80)>>1)|((V&0x40)<<1);

229 
	`DoSQ2
();

230 
swìp⁄
[1]=
V
&0x80;

231 
SwìpRñﬂd
[1]=1;

234 
	`DoSQ2
();

235 
cur‰eq
[1]&=0xFF00;

236 
cur‰eq
[1]|=
V
;

239 
	`DoSQ2
();

240 
	`SQRñﬂd
(1,
V
);

243 
	`DoTrüngÀ
();

246 
	`DoTrüngÀ
();

247 if(
E«bÀdCh™√ls
&0x4)

248 
Àngthcou¡
[2]=
ÀngthèbÀ
[(
V
>>3)&0x1f];

249 
TriMode
=1;

252 
	`DoNoi£
();

253 
EnvUnôs
[2].
Mode
=(
V
&0x30)>>4;

254 
EnvUnôs
[2].
S≥ed
=(
V
&0xF);

257 
	`DoNoi£
();

260 
	`DoNoi£
();

261 if(
E«bÀdCh™√ls
&0x8)

262 
Àngthcou¡
[3]=
ÀngthèbÀ
[(
V
>>3)&0x1f];

263 
EnvUnôs
[2].
ªlﬂddec
=1;

266 
	`DoPCM
();

267 
	`LﬂdDMCPîiod
(
V
&0xF);

268 if(
SIRQSèt
&0x80)

270 if(!(
V
&0x80))

272 
	`X6502_IRQEnd
(
FCEU_IQDPCM
);

273 
SIRQSèt
&=~0x80;

275 
	`X6502_IRQBegö
(
FCEU_IQDPCM
);

279 
PSG
[
A
]=
V
;

280 
	}
}

282 
	$DECLFW
(
Wrôe_DMCRegs
)

284 
A
&=0xF;

286 
A
)

289 
	`DoPCM
();

290 
	`LﬂdDMCPîiod
(
V
&0xF);

292 if(
SIRQSèt
&0x80)

294 if(!(
V
&0x80))

296 
	`X6502_IRQEnd
(
FCEU_IQDPCM
);

297 
SIRQSèt
&=~0x80;

299 
	`X6502_IRQBegö
(
FCEU_IQDPCM
);

301 
DMCF‹m©
=
V
;

304 
	`DoPCM
();

305 
InôülRawDAL©ch
=
V
&0x7F;

306 
RawDAL©ch
=
InôülRawDAL©ch
;

307 i‡(
RawDAL©ch
)

308 
DMC_7bô
 = 1;

311 
DMCAddªssL©ch
=
V
;

312 i‡(
V
)

313 
DMC_7bô
 = 0;

316 
DMCSizeL©ch
=
V
;

317 i‡(
V
)

318 
DMC_7bô
 = 0;

321 
	}
}

323 
	$DECLFW
(
SètusWrôe
)

325 
x
;

327 
	`DoSQ1
();

328 
	`DoSQ2
();

329 
	`DoTrüngÀ
();

330 
	`DoNoi£
();

331 
	`DoPCM
();

333 
x
=0;x<4;x++)

334 if(!(
V
&(1<<
x
))Ë
Àngthcou¡
[x]=0;

336 if(
V
&0x10)

338 if(!
DMCSize
)

339 
	`PªpDPCM
();

343 
DMCSize
=0;

345 
SIRQSèt
&=~0x80;

346 
	`X6502_IRQEnd
(
FCEU_IQDPCM
);

347 
E«bÀdCh™√ls
=
V
&0x1F;

348 
	}
}

350 
	$DECLFR
(
SètusRód
)

352 
x
;

353 
uöt8
 
ªt
;

355 
ªt
=
SIRQSèt
;

357 
x
=0;x<4;x++Ë
ªt
|=
Àngthcou¡
[x]?(1<<x):0;

358 if(
DMCSize
Ë
ªt
|=0x10;

360 #ifde‡
FCEUDEF_DEBUGGER


361 if(!
f˚uödbg
)

364 
SIRQSèt
&=~0x40;

365 
	`X6502_IRQEnd
(
FCEU_IQFCOUNT
);

367  
ªt
;

368 
	}
}

370 
	$FømeSoundStuff
(
V
)

372 
P
;

374 
	`DoSQ1
();

375 
	`DoSQ2
();

376 
	`DoNoi£
();

377 
	`DoTrüngÀ
();

379 if(!(
V
&1))

381 if(!(
PSG
[8]&0x80))

382 if(
Àngthcou¡
[2]>0)

383 
Àngthcou¡
[2]--;

385 if(!(
PSG
[0xC]&0x20))

386 if(
Àngthcou¡
[3]>0)

387 
Àngthcou¡
[3]--;

389 
P
=0;P<2;P++)

391 if(!(
PSG
[
P
<<2]&0x20))

392 if(
Àngthcou¡
[
P
]>0)

393 
Àngthcou¡
[
P
]--;

400 i‡(
SwìpCou¡
[
P
] > 0) SweepCount[P]--;

401 i‡(
SwìpCou¡
[
P
] <= 0)

403 
swìpShi·
 = (
PSG
[(
P
 << 2) + 0x1] & 7);

404 i‡(
swìp⁄
[
P
] && 
swìpShi·
 && 
cur‰eq
[P] >= 8)

406 
öt32
 
mod
 = (
cur‰eq
[
P
] >> 
swìpShi·
);

407 i‡(
PSG
[(
P
 << 2) + 0x1] & 0x8)

408 
cur‰eq
[
P
] -(
mod
 + (P ^ 1));

409 i‡((
mod
 + 
cur‰eq
[
P
]) < 0x800)

410 
cur‰eq
[
P
] +
mod
;

413 
SwìpCou¡
[
P
] = (((
PSG
[(P << 2) + 0x1] >> 4) & 7) + 1);

416 i‡(
SwìpRñﬂd
[
P
])

418 
SwìpCou¡
[
P
] = (((
PSG
[(P << 2) + 0x1] >> 4) & 7) + 1);

419 
SwìpRñﬂd
[
P
] = 0;

426 if(
TriMode
)

427 
TriCou¡
=
PSG
[0x8]&0x7F;

428 if(
TriCou¡
)

429 
TriCou¡
--;

431 if(!(
PSG
[0x8]&0x80))

432 
TriMode
=0;

434 
P
=0;P<3;P++)

436 if(
EnvUnôs
[
P
].
ªlﬂddec
)

438 
EnvUnôs
[
P
].
decvﬁume
=0xF;

439 
EnvUnôs
[
P
].
DecCou¡To1
=EnvUnôs[P].
S≥ed
+1;

440 
EnvUnôs
[
P
].
ªlﬂddec
=0;

444 if(
EnvUnôs
[
P
].
DecCou¡To1
>0) EnvUnits[P].DecCountTo1--;

445 if(
EnvUnôs
[
P
].
DecCou¡To1
==0)

447 
EnvUnôs
[
P
].
DecCou¡To1
=EnvUnôs[P].
S≥ed
+1;

448 if(
EnvUnôs
[
P
].
decvﬁume
 || (EnvUnôs[P].
Mode
&0x2))

450 
EnvUnôs
[
P
].
decvﬁume
--;

451 
EnvUnôs
[
P
].
decvﬁume
&=0xF;

455 
	}
}

457 
	$FømeSoundUpd©e
()

462 if(!
f˙t
 && !(
IRQFømeMode
&0x3))

464 
SIRQSèt
|=0x40;

465 
	`X6502_IRQBegö
(
FCEU_IQFCOUNT
);

468 if(
f˙t
==3)

470 if(
IRQFømeMode
&0x2)

471 
fh˙t
+=
fhöc
;

473 
	`FømeSoundStuff
(
f˙t
);

474 
f˙t
=(fcnt+1)&3;

475 
	}
}

478 
INLINE
 
	$ã°î
()

480 if(
DMCBôCou¡
==0)

482 if(!
DMCHaveDMA
)

483 
DMCHaveSam∂e
=0;

486 
DMCHaveSam∂e
=1;

487 
DMCShi·
=
DMCDMABuf
;

488 
DMCHaveDMA
=0;

491 
	}
}

493 
INLINE
 
	$DMCDMA
()

495 if(
DMCSize
 && !
DMCHaveDMA
)

497 
	`X6502_DMR
(0x8000+
DMCAddªss
);

498 
	`X6502_DMR
(0x8000+
DMCAddªss
);

499 
	`X6502_DMR
(0x8000+
DMCAddªss
);

500 
DMCDMABuf
=
	`X6502_DMR
(0x8000+
DMCAddªss
);

501 
DMCHaveDMA
=1;

502 
DMCAddªss
=(DMCAddress+1)&0x7fff;

503 
DMCSize
--;

504 if(!
DMCSize
)

506 if(
DMCF‹m©
&0x40)

507 
	`PªpDPCM
();

510 
SIRQSèt
|=0x80;

511 if(
DMCF‹m©
&0x80)

512 
	`X6502_IRQBegö
(
FCEU_IQDPCM
);

516 
	}
}

518 
	$FCEU_SoundCPUHook
(
cy˛es
)

520 #i‡
SOUND_CONFIG
 !
SOUND_HQ


524 
fh˙t
-=
cy˛es
*48;

525 if(
fh˙t
<=0)

527 
	`FømeSoundUpd©e
();

528 
fh˙t
+=
fhöc
;

531 
	`DMCDMA
();

532 
DMCacc
-=
cy˛es
;

534 
DMCacc
<=0)

536 if(
DMCHaveSam∂e
)

538 
uöt8
 
bah
=
RawDAL©ch
;

539 
t
=((
DMCShi·
&1)<<2)-2;

542 if(
FSëtögs
.
SndR©e
)

544 
soundtsoffs
+=
DMCacc
;

545 
	`DoPCM
();

546 
soundtsoffs
-=
DMCacc
;

548 
RawDAL©ch
+=
t
;

549 if(
RawDAL©ch
&0x80)

550 
RawDAL©ch
=
bah
;

553 
DMCacc
+=
DMCPîiod
;

554 
DMCBôCou¡
=(DMCBitCount+1)&7;

555 
DMCShi·
>>=1;

556 
	`ã°î
();

558 
	}
}

560 
	$RDoPCM
()

562 
uöt32
 
V
;

564 
uöt32_t
 
vÆ
 = (((
RawDAL©ch
<<16)/256Ë* 
FSëtögs
.
PCMVﬁume
)&(~0xFFFF);

565 
V
=
Ch™√lBC
[4];V<
SOUNDTS
;V++)

566 
WaveHi
[
V
]+=
vÆ
;

567 
Ch™√lBC
[4]=
SOUNDTS
;

568 
	}
}

571 
INLINE
 
	$RDoSQ
(
x
)

573 
öt32
 
V
;

574 
öt32
 
amp
, 
ampx
;

575 
öt32
 
πhªsh
;

576 
öt32
 *
D
;

577 
öt32
 
cuºdc
;

578 
öt32
 
cf
;

579 
öt32
 
rc
;

581 if(
cur‰eq
[
x
]<8 || curfreq[x]>0x7ff)

582 
ídô
;

583 if(!
	`CheckFªq
(
cur‰eq
[
x
],
PSG
[(x<<2)|0x1]))

584 
ídô
;

585 if(!
Àngthcou¡
[
x
])

586 
ídô
;

588 if(
EnvUnôs
[
x
].
Mode
&0x1)

589 
amp
=
EnvUnôs
[
x
].
S≥ed
;

591 
amp
=
EnvUnôs
[
x
].
decvﬁume
;

595 
ampx
 = 
x
 ? 
FSëtögs
.
Squ¨e2Vﬁume
 : FSëtögs.
Squ¨e1Vﬁume
;

596 i‡(
ampx
 !256Ë
amp
 = (amp *ámpx) / 256;

598 
amp
<<=24;

600 
πhªsh
=
Re˘Dutõs
[(
PSG
[(
x
<<2)]&0xC0)>>6];

602 
D
=&
WaveHi
[
Ch™√lBC
[
x
]];

603 
V
=
SOUNDTS
-
Ch™√lBC
[
x
];

605 
cuºdc
=
Re˘DutyCou¡
[
x
];

606 
cf
=(
cur‰eq
[
x
]+1)*2;

607 
rc
=
wlcou¡
[
x
];

609 
V
>0)

611 if(
cuºdc
<
πhªsh
)

612 *
D
+=
amp
;

613 
rc
--;

614 if(!
rc
)

616 
rc
=
cf
;

617 
cuºdc
=(currdc+1)&7;

619 
V
--;

620 
D
++;

623 
Re˘DutyCou¡
[
x
]=
cuºdc
;

624 
wlcou¡
[
x
]=
rc
;

626 
ídô
:

627 
Ch™√lBC
[
x
]=
SOUNDTS
;

628 
	}
}

630 
	$RDoSQ1
()

632 
	`RDoSQ
(0);

633 
	}
}

635 
	$RDoSQ2
()

637 
	`RDoSQ
(1);

638 
	}
}

640 
	$RDoSQLQ
()

642 
öt32
 
°¨t
,
íd
;

643 
öt32
 
V
;

644 
öt32
 
amp
[2], 
ampx
;

645 
öt32
 
πhªsh
[2];

646 
öt32
 
‰eq
[2];

647 
x
;

648 
öt32
 
öõ
[2];

650 
öt32
 
âabÀ
[2][8];

651 
öt32
 
tŸÆout
;

653 
°¨t
=
Ch™√lBC
[0];

654 
íd
=(
SOUNDTS
<<16)/
soundtsöc
;

655 if(
íd
<=
°¨t
) ;

656 
Ch™√lBC
[0]=
íd
;

658 
x
=0;x<2;x++)

660 
y
;

662 
öõ
[
x
]=
√söcsize
;

663 if(
cur‰eq
[
x
]<8 || curfreq[x]>0x7ff)

664 
öõ
[
x
]=0;

665 if(!
	`CheckFªq
(
cur‰eq
[
x
],
PSG
[(x<<2)|0x1]))

666 
öõ
[
x
]=0;

667 if(!
Àngthcou¡
[
x
])

668 
öõ
[
x
]=0;

670 if(
EnvUnôs
[
x
].
Mode
&0x1)

671 
amp
[
x
]=
EnvUnôs
[x].
S≥ed
;

673 
amp
[
x
]=
EnvUnôs
[x].
decvﬁume
;

677 
ampx
 = 
x
 ? 
FSëtögs
.
Squ¨e1Vﬁume
 : FSëtögs.
Squ¨e2Vﬁume
;

678 i‡(
ampx
 !256Ë
amp
[
x
] = (amp[x] *ámpx) / 256;

680 if(!
öõ
[
x
]Ë
amp
[x]=0;

682 
πhªsh
[
x
]=
Re˘Dutõs
[(
PSG
[x*4]&0xC0)>>6];

684 
y
=0;y<8;y++)

686 if(
y
 < 
πhªsh
[
x
])

687 
âabÀ
[
x
][
y
] = 
amp
[x];

689 
âabÀ
[
x
][
y
] = 0;

691 
‰eq
[
x
]=(
cur‰eq
[x]+1)<<1;

692 
‰eq
[
x
]<<=17;

695 
tŸÆout
 = 
wlookup1
[ 
âabÀ
[0][
Re˘DutyCou¡
[0]] +Åtable[1][RectDutyCount[1]] ];

697 if(!
öõ
[0] && !inie[1])

699 
V
=
°¨t
;V<
íd
;V++)

700 
Wave
[
V
>>4]+=
tŸÆout
;

703 
V
=
°¨t
;V<
íd
;V++)

713 
Wave
[
V
>>4]+=
tŸÆout
;

715 
sqacc
[0]-=
öõ
[0];

716 
sqacc
[1]-=
öõ
[1];

718 if(
sqacc
[0]<=0)

720 
ªa
:

721 
sqacc
[0]+=
‰eq
[0];

722 
Re˘DutyCou¡
[0]=(RectDutyCount[0]+1)&7;

723 if(
sqacc
[0]<=0Ë
ªa
;

724 
tŸÆout
 = 
wlookup1
[ 
âabÀ
[0][
Re˘DutyCou¡
[0]] +Åtable[1][RectDutyCount[1]] ];

727 if(
sqacc
[1]<=0)

729 
ªa2
:

730 
sqacc
[1]+=
‰eq
[1];

731 
Re˘DutyCou¡
[1]=(RectDutyCount[1]+1)&7;

732 if(
sqacc
[1]<=0Ë
ªa2
;

733 
tŸÆout
 = 
wlookup1
[ 
âabÀ
[0][
Re˘DutyCou¡
[0]] +Åtable[1][RectDutyCount[1]] ];

736 
	}
}

738 
	$RDoTrüngÀ
()

740 
uöt32
 
V
;

741 
öt32
 
tcout
;

743 
tcout
=(
åi°ï
&0xF);

744 if(!(
åi°ï
&0x10)Ë
tcout
^=0xF;

745 
tcout
=(tcout*3) << 16;

747 if(!
Àngthcou¡
[2] || !
TriCou¡
)

757 
öt32
 
cout
 = (
tcout
/256*
FSëtögs
.
TrüngÀVﬁume
)&(~0xFFFF);

758 
V
=
Ch™√lBC
[2];V<
SOUNDTS
;V++)

759 
WaveHi
[
V
]+=
cout
;

762 
V
=
Ch™√lBC
[2];V<
SOUNDTS
;V++)

765 
WaveHi
[
V
]+=(
tcout
/256*
FSëtögs
.
TrüngÀVﬁume
)&(~0xFFFF);

766 
wlcou¡
[2]--;

767 if(!
wlcou¡
[2])

769 
wlcou¡
[2]=(
PSG
[0xa]|((PSG[0xb]&7)<<8))+1;

770 
åi°ï
++;

771 
tcout
=(
åi°ï
&0xF);

772 if(!(
åi°ï
&0x10)Ë
tcout
^=0xF;

773 
tcout
=(tcout*3) << 16;

777 
Ch™√lBC
[2]=
SOUNDTS
;

778 
	}
}

780 
	$RDoTrüngÀNoi£PCMLQ
()

782 
uöt32
 
tcout
=0;

783 
öt32
 
åücc
=0;

784 
öt32
 
noi£acc
=0;

786 
öt32
 
V
;

787 
öt32
 
°¨t
,
íd
;

788 
öt32
 
‰eq
[2];

789 
öt32
 
öõ
[2];

790 
uöt32
 
am±ab
[2];

791 
uöt32
 
noi£out
;

792 
nshi·
;

794 
öt32
 
tŸÆout
;

796 
°¨t
=
Ch™√lBC
[2];

797 
íd
=(
SOUNDTS
<<16)/
soundtsöc
;

798 if(
íd
<=
°¨t
) ;

799 
Ch™√lBC
[2]=
íd
;

801 
öõ
[0]=öõ[1]=
√söcsize
;

803 
‰eq
[0]=(((
PSG
[0xa]|((PSG[0xb]&7)<<8))+1));

805 if(!
Àngthcou¡
[2] || !
TriCou¡
 || 
‰eq
[0]<=4)

806 
öõ
[0]=0;

808 
‰eq
[0]<<=17;

809 if(
EnvUnôs
[2].
Mode
&0x1)

810 
am±ab
[0]=
EnvUnôs
[2].
S≥ed
;

812 
am±ab
[0]=
EnvUnôs
[2].
decvﬁume
;

816 i‡(
FSëtögs
.
TrüngÀVﬁume
 !256Ë
am±ab
[0] = (amptab[0] * FSettings.TriangleVolume) / 256;

818 
am±ab
[1]=0;

819 
am±ab
[0]<<=1;

821 if(!
Àngthcou¡
[3])

822 
am±ab
[0]=
öõ
[1]=0;

824 
noi£out
=
am±ab
[(
ƒeg
>>0xe)&1];

826 if(
PSG
[0xE]&0x80)

827 
nshi·
=8;

829 
nshi·
=13;

832 
tŸÆout
 = 
wlookup2
[
tcout
+
noi£out
+
RawDAL©ch
];

834 if(
öõ
[0] && inie[1])

836 
V
=
°¨t
;V<
íd
;V++)

838 
Wave
[
V
>>4]+=
tŸÆout
;

840 
åücc
-=
öõ
[0];

841 
noi£acc
-=
öõ
[1];

843 if(
åücc
<=0)

845 
ªa
:

846 
åücc
+=
‰eq
[0];

847 
åi°ï
=(tristep+1)&0x1F;

848 if(
åücc
<=0Ë
ªa
;

849 
tcout
=(
åi°ï
&0xF);

850 if(!(
åi°ï
&0x10)Ë
tcout
^=0xF;

851 
tcout
=tcout*3;

852 
tŸÆout
 = 
wlookup2
[
tcout
+
noi£out
+
RawDAL©ch
];

855 if(
noi£acc
<=0)

857 
ªa2
:

860 if(
PAL
)

861 
noi£acc
+=
Noi£FªqTabÀPAL
[
PSG
[0xE]&0xF]<<(16+1);

863 
noi£acc
+=
Noi£FªqTabÀNTSC
[
PSG
[0xE]&0xF]<<(16+1);

864 
ƒeg
=“ªg<<1)+((“ªg>>
nshi·
)^(nreg>>14))&1);

865 
ƒeg
&=0x7fff;

866 
noi£out
=
am±ab
[(
ƒeg
>>0xe)&1];

867 if(
noi£acc
<=0Ë
ªa2
;

868 
tŸÆout
 = 
wlookup2
[
tcout
+
noi£out
+
RawDAL©ch
];

872 if(
öõ
[0])

874 
V
=
°¨t
;V<
íd
;V++)

876 
Wave
[
V
>>4]+=
tŸÆout
;

878 
åücc
-=
öõ
[0];

880 if(
åücc
<=0)

882 
¨ó
:

883 
åücc
+=
‰eq
[0];

884 
åi°ï
=(tristep+1)&0x1F;

885 if(
åücc
<=0Ë
¨ó
;

886 
tcout
=(
åi°ï
&0xF);

887 if(!(
åi°ï
&0x10)Ë
tcout
^=0xF;

888 
tcout
=tcout*3;

889 
tŸÆout
 = 
wlookup2
[
tcout
+
noi£out
+
RawDAL©ch
];

893 if(
öõ
[1])

895 
V
=
°¨t
;V<
íd
;V++)

897 
Wave
[
V
>>4]+=
tŸÆout
;

898 
noi£acc
-=
öõ
[1];

899 if(
noi£acc
<=0)

901 
¨ó2
:

904 if(
PAL
)

905 
noi£acc
+=
Noi£FªqTabÀPAL
[
PSG
[0xE]&0xF]<<(16+1);

907 
noi£acc
+=
Noi£FªqTabÀNTSC
[
PSG
[0xE]&0xF]<<(16+1);

908 
ƒeg
=“ªg<<1)+((“ªg>>
nshi·
)^(nreg>>14))&1);

909 
ƒeg
&=0x7fff;

910 
noi£out
=
am±ab
[(
ƒeg
>>0xe)&1];

911 if(
noi£acc
<=0Ë
¨ó2
;

912 
tŸÆout
 = 
wlookup2
[
tcout
+
noi£out
+
RawDAL©ch
];

918 
V
=
°¨t
;V<
íd
;V++)

919 
Wave
[
V
>>4]+=
tŸÆout
;

921 
	}
}

924 
	$RDoNoi£
()

926 
uöt32
 
V
;

927 
öt32
 
outo
;

928 
uöt32
 
am±ab
[2];

930 if(
EnvUnôs
[2].
Mode
&0x1)

931 
am±ab
[0]=
EnvUnôs
[2].
S≥ed
;

933 
am±ab
[0]=
EnvUnôs
[2].
decvﬁume
;

937 i‡(
FSëtögs
.
Noi£Vﬁume
 !256Ë
am±ab
[0] = (amptab[0] * FSettings.NoiseVolume) / 256;

938 
am±ab
[0]<<=16;

939 
am±ab
[1]=0;

941 
am±ab
[0]<<=1;

943 
outo
=
am±ab
[(
ƒeg
>>0xe)&1];

945 if(!
Àngthcou¡
[3])

947 
outo
=
am±ab
[0]=0;

950 if(
PSG
[0xE]&0x80)

951 
V
=
Ch™√lBC
[3];V<
SOUNDTS
;V++)

953 
WaveHi
[
V
]+=
outo
;

954 
wlcou¡
[3]--;

955 if(!
wlcou¡
[3])

957 
uöt8
 
„edback
;

958 if(
PAL
)

959 
wlcou¡
[3]=
Noi£FªqTabÀPAL
[
PSG
[0xE]&0xF];

961 
wlcou¡
[3]=
Noi£FªqTabÀNTSC
[
PSG
[0xE]&0xF];

962 
„edback
=((
ƒeg
>>8)&1)^((nreg>>14)&1);

963 
ƒeg
=“ªg<<1)+
„edback
;

964 
ƒeg
&=0x7fff;

965 
outo
=
am±ab
[(
ƒeg
>>0xe)&1];

969 
V
=
Ch™√lBC
[3];V<
SOUNDTS
;V++)

971 
WaveHi
[
V
]+=
outo
;

972 
wlcou¡
[3]--;

973 if(!
wlcou¡
[3])

975 
uöt8
 
„edback
;

976 if(
PAL
)

977 
wlcou¡
[3]=
Noi£FªqTabÀPAL
[
PSG
[0xE]&0xF];

979 
wlcou¡
[3]=
Noi£FªqTabÀNTSC
[
PSG
[0xE]&0xF];

980 
„edback
=((
ƒeg
>>13)&1)^((nreg>>14)&1);

981 
ƒeg
=“ªg<<1)+
„edback
;

982 
ƒeg
&=0x7fff;

983 
outo
=
am±ab
[(
ƒeg
>>0xe)&1];

986 
Ch™√lBC
[3]=
SOUNDTS
;

987 
	}
}

989 
	$DECLFW
(
Wrôe_IRQFM
)

991 
V
=(V&0xC0)>>6;

992 
f˙t
=0;

993 if(
V
&0x2)

994 
	`FømeSoundUpd©e
();

995 
f˙t
=1;

996 
fh˙t
=
fhöc
;

997 
	`X6502_IRQEnd
(
FCEU_IQFCOUNT
);

998 
SIRQSèt
&=~0x40;

999 
IRQFømeMode
=
V
;

1000 
	}
}

1002 
	$SëNESSoundM≠
()

1004 
	`SëWrôeH™dÀr
(0x4000,0x400F,
Wrôe_PSG
);

1005 
	`SëWrôeH™dÀr
(0x4010,0x4013,
Wrôe_DMCRegs
);

1006 
	`SëWrôeH™dÀr
(0x4017,0x4017,
Wrôe_IRQFM
);

1008 
	`SëWrôeH™dÀr
(0x4015,0x4015,
SètusWrôe
);

1009 
	`SëRódH™dÀr
(0x4015,0x4015,
SètusRód
);

1010 
	}
}

1012 
öt32
 
	göbuf
=0;

1013 
	$FlushEmuœãSound
()

1015 #i‡
SOUND_CONFIG
 =
SOUND_NONE


1019 
x
;

1020 
öt32
 
íd
,
À·
;

1022 if(!
soundtime°amp
) (0);

1024 if(!
FSëtögs
.
SndR©e
)

1026 
À·
=0;

1027 
íd
=0;

1028 
nosoundo
;

1031 
	`DoSQ1
();

1032 
	`DoSQ2
();

1033 
	`DoTrüngÀ
();

1034 
	`DoNoi£
();

1035 
	`DoPCM
();

1037 if(
FSëtögs
.
soundq
>=1)

1039 
öt32
 *
tmpo
=&
WaveHi
[
soundtsoffs
];

1041 if(
GameExpSound
.
HiFûl
ËGameExpSound.
	`HiFûl
();

1043 
x
=
soundtime°amp
;x;x--)

1045 
uöt32
 
b
=*
tmpo
;

1046 *
tmpo
=(
b
&65535)+
wlookup2
[(b>>16)&255]+
wlookup1
[b>>24];

1047 
tmpo
++;

1049 
íd
=
	`NeoFûãrSound
(
WaveHi
,
WaveFöÆ
,
SOUNDTS
,&
À·
);

1051 
	`memmove
(
WaveHi
,WaveHi+
SOUNDTS
-
À·
,À·*(
uöt32
));

1052 
	`mem£t
(
WaveHi
+
À·
,0,(WaveHi)-À·*(
uöt32
));

1054 if(
GameExpSound
.
HiSync
ËGameExpSound.
	`HiSync
(
À·
);

1055 
x
=0;x<5;x++)

1056 
Ch™√lBC
[
x
]=
À·
;

1060 
íd
=(
SOUNDTS
<<16)/
soundtsöc
;

1061 if(
GameExpSound
.
Fûl
)

1062 
GameExpSound
.
	`Fûl
(
íd
&0xF);

1064 
	`SexyFûãr
(
Wave
,
WaveFöÆ
,
íd
>>4);

1068 if(
íd
&0xF)

1069 
Wave
[0]=Wave[(
íd
>>4)];

1070 
Wave
[
íd
>>4]=0;

1072 
nosoundo
:

1074 if(
FSëtögs
.
soundq
>=1)

1076 
soundtsoffs
=
À·
;

1080 
x
=0;x<5;x++)

1081 
Ch™√lBC
[
x
]=
íd
&0xF;

1082 
soundtsoffs
 = (
soundtsöc
*(
íd
&0xF))>>16;

1083 
íd
>>=4;

1085 
öbuf
=
íd
;

1089 (
íd
);

1090 
	}
}

1093 
	$GëSoundBuf„r
(
öt32
 **
W
)

1095 *
W
=
WaveFöÆ
;

1096 (
öbuf
);

1097 
	}
}

1104 
	$FCEUSND_Re£t
()

1106 
x
;

1108 
IRQFømeMode
=0x0;

1109 
fh˙t
=
fhöc
;

1110 
f˙t
=0;

1111 
ƒeg
=1;

1113 
x
=0;x<2;x++)

1115 
wlcou¡
[
x
]=2048;

1116 if(
√söcsize
)

1117 
sqacc
[
x
]=((
uöt32
)2048<<17)/
√söcsize
;

1119 
sqacc
[
x
]=1;

1120 
swìp⁄
[
x
]=0;

1121 
cur‰eq
[
x
]=0;

1124 
wlcou¡
[2]=1;

1125 
wlcou¡
[3]=2048;

1127 
DMCHaveDMA
=
DMCHaveSam∂e
=0;

1128 
SIRQSèt
=0x00;

1130 
RawDAL©ch
=0x00;

1131 
TriCou¡
=0;

1132 
TriMode
=0;

1133 
åi°ï
=0;

1134 
E«bÀdCh™√ls
=0;

1135 
x
=0;x<4;x++)

1136 
Àngthcou¡
[
x
]=0;

1138 
DMCAddªssL©ch
=0;

1139 
DMCSizeL©ch
=0;

1140 
DMCF‹m©
=0;

1141 
DMCAddªss
=0;

1142 
DMCSize
=0;

1143 
DMCShi·
=0;

1149 if(
movõSyncHackOn
)

1151 if(
ª£tDMCacc
)

1154 #ifde‡
WIN32


1156 
DMCacc
=
movõC⁄vîtOff£t1
;

1157 
DMCBôCou¡
=
movõC⁄vîtOff£t2
;

1161 
	`FCEU_PrötEº‹
("W¨nög: The£ v¨übÀ†wîênŸ found i¿thêßvê°©ê™d wû»kì∞theú cuºíàvÆue: DMCacc=%d, DMCBôCou¡=%d\n", 
DMCacc
, 
DMCBôCou¡
);

1172 
DMCacc
=1;

1173 
DMCBôCou¡
=0;

1177 
	}
}

1179 
	$FCEUSND_Powî
()

1181 
x
;

1183 
	`SëNESSoundM≠
();

1184 
	`mem£t
(
PSG
,0x00,(PSG));

1185 
	`FCEUSND_Re£t
();

1187 
	`mem£t
(
Wave
,0,(Wave));

1188 
	`mem£t
(
WaveHi
,0,(WaveHi));

1189 
	`mem£t
(&
EnvUnôs
,0,(EnvUnits));

1191 
x
=0;x<5;x++)

1192 
Ch™√lBC
[
x
]=0;

1193 
soundtsoffs
=0;

1194 
	`LﬂdDMCPîiod
(
DMCF‹m©
&0xF);

1195 
	}
}

1197 
	$SëSoundV¨übÀs
()

1199 
x
;

1201 
fhöc
=
PAL
?16626:14915;

1202 
fhöc
*=24;

1204 if(
FSëtögs
.
SndR©e
)

1206 
wlookup1
[0]=0;

1207 
x
=1;x<32;x++)

1210 
wlookup1
[
x
]=1565000 * x / (8128 + 100 * x);

1211 if(!
FSëtögs
.
soundq
Ë
wlookup1
[
x
]>>=4;

1213 
wlookup2
[0]=0;

1214 
x
=1;x<203;x++)

1217 
wlookup2
[
x
]=2681569 * x / (24329 + 100 * x);

1218 if(!
FSëtögs
.
soundq
Ë
wlookup2
[
x
]>>=4;

1220 if(
FSëtögs
.
soundq
>=1)

1222 
DoNoi£
=
RDoNoi£
;

1223 
DoTrüngÀ
=
RDoTrüngÀ
;

1224 
DoPCM
=
RDoPCM
;

1225 
DoSQ1
=
RDoSQ1
;

1226 
DoSQ2
=
RDoSQ2
;

1230 
DoNoi£
=
DoTrüngÀ
=
DoPCM
=
DoSQ1
=
DoSQ2
=
Dummyfunc
;

1231 
DoSQ1
=
RDoSQLQ
;

1232 
DoSQ2
=
RDoSQLQ
;

1233 
DoTrüngÀ
=
RDoTrüngÀNoi£PCMLQ
;

1234 
DoNoi£
=
RDoTrüngÀNoi£PCMLQ
;

1235 
DoPCM
=
RDoTrüngÀNoi£PCMLQ
;

1240 
DoNoi£
=
DoTrüngÀ
=
DoPCM
=
DoSQ1
=
DoSQ2
=
Dummyfunc
;

1244 
	`MakeFûãrs
(
FSëtögs
.
SndR©e
);

1246 if(
GameExpSound
.
RCh™ge
)

1247 
GameExpSound
.
	`RCh™ge
();

1250 
√söcsize
=(
PAL
 ? 3405019392u : (
dídy
 ? 3632020412u : 3665454545u))/(
FSëtögs
.
SndR©e
 / 4);

1251 
	`mem£t
(
sqacc
,0,(sqacc));

1252 
	`mem£t
(
Ch™√lBC
,0,(ChannelBC));

1254 
	`LﬂdDMCPîiod
(
DMCF‹m©
&0xF);

1257 
soundtsöc
=
√söcsize
 / 2;

1258 
	}
}

1260 
	$FCEUI_Sound
(
R©e
)

1262 
FSëtögs
.
SndR©e
=
R©e
;

1263 
	`SëSoundV¨übÀs
();

1264 
	}
}

1267 
	$FCEUI_SëLowPass
(
q
)

1269 
FSëtögs
.
low∑ss
=
q
;

1270 
	}
}

1273 
	$FCEUI_SëSoundQuÆôy
(
quÆôy
)

1275 
FSëtögs
.
soundq
=
quÆôy
;

1276 
	`SëSoundV¨übÀs
();

1277 
	}
}

1279 
	$FCEUI_SëSoundVﬁume
(
uöt32
 
vﬁume
)

1281 
FSëtögs
.
SoundVﬁume
=
vﬁume
;

1282 
	}
}

1284 
	$FCEUI_SëTrüngÀVﬁume
(
uöt32
 
vﬁume
)

1286 
FSëtögs
.
TrüngÀVﬁume
=
vﬁume
;

1287 
	}
}

1289 
	$FCEUI_SëSqu¨e1Vﬁume
(
uöt32
 
vﬁume
)

1291 
FSëtögs
.
Squ¨e1Vﬁume
=
vﬁume
;

1292 
	}
}

1294 
	$FCEUI_SëSqu¨e2Vﬁume
(
uöt32
 
vﬁume
)

1296 
FSëtögs
.
Squ¨e2Vﬁume
=
vﬁume
;

1297 
	}
}

1299 
	$FCEUI_SëNoi£Vﬁume
(
uöt32
 
vﬁume
)

1301 
FSëtögs
.
Noi£Vﬁume
=
vﬁume
;

1302 
	}
}

1304 
	$FCEUI_SëPCMVﬁume
(
uöt32
 
vﬁume
)

1306 
FSëtögs
.
PCMVﬁume
=
vﬁume
;

1307 
	}
}

1309 
SFORMAT
 
	gFCEUSND_STATEINFO
[]={

1311 { &
fh˙t
, 4|
FCEUSTATE_RLSB
,"FHCN"},

1312 { &
f˙t
, 1, "FCNT"},

1313 { 
PSG
, 0x10, "PSG"},

1314 { &
E«bÀdCh™√ls
, 1, "ENCH"},

1315 { &
IRQFømeMode
, 1, "IQFM"},

1316 { &
ƒeg
, 2|
FCEUSTATE_RLSB
, "NREG"},

1317 { &
TriMode
, 1, "TRIM"},

1318 { &
TriCou¡
, 1, "TRIC"},

1320 { &
EnvUnôs
[0].
S≥ed
, 1, "E0SP"},

1321 { &
EnvUnôs
[1].
S≥ed
, 1, "E1SP"},

1322 { &
EnvUnôs
[2].
S≥ed
, 1, "E2SP"},

1324 { &
EnvUnôs
[0].
Mode
, 1, "E0MO"},

1325 { &
EnvUnôs
[1].
Mode
, 1, "E1MO"},

1326 { &
EnvUnôs
[2].
Mode
, 1, "E2MO"},

1328 { &
EnvUnôs
[0].
DecCou¡To1
, 1, "E0D1"},

1329 { &
EnvUnôs
[1].
DecCou¡To1
, 1, "E1D1"},

1330 { &
EnvUnôs
[2].
DecCou¡To1
, 1, "E2D1"},

1332 { &
EnvUnôs
[0].
decvﬁume
, 1, "E0DV"},

1333 { &
EnvUnôs
[1].
decvﬁume
, 1, "E1DV"},

1334 { &
EnvUnôs
[2].
decvﬁume
, 1, "E2DV"},

1336 { &
Àngthcou¡
[0], 4|
FCEUSTATE_RLSB
, "LEN0"},

1337 { &
Àngthcou¡
[1], 4|
FCEUSTATE_RLSB
, "LEN1"},

1338 { &
Àngthcou¡
[2], 4|
FCEUSTATE_RLSB
, "LEN2"},

1339 { &
Àngthcou¡
[3], 4|
FCEUSTATE_RLSB
, "LEN3"},

1340 { 
swìp⁄
, 2, "SWEE"},

1341 { &
cur‰eq
[0], 4|
FCEUSTATE_RLSB
,"CRF1"},

1342 { &
cur‰eq
[1], 4|
FCEUSTATE_RLSB
,"CRF2"},

1343 { 
SwìpCou¡
, 2,"SWCT"},

1345 { &
SIRQSèt
, 1, "SIRQ"},

1347 { &
DMCacc
, 4|
FCEUSTATE_RLSB
, "5ACC"},

1348 { &
DMCBôCou¡
, 1, "5BIT"},

1349 { &
DMCAddªss
, 4|
FCEUSTATE_RLSB
, "5ADD"},

1350 { &
DMCSize
, 4|
FCEUSTATE_RLSB
, "5SIZ"},

1351 { &
DMCShi·
, 1, "5SHF"},

1353 { &
DMCHaveDMA
, 1, "5HVDM"},

1354 { &
DMCHaveSam∂e
, 1, "5HVSP"},

1356 { &
DMCSizeL©ch
, 1, "5SZL"},

1357 { &
DMCAddªssL©ch
, 1, "5ADL"},

1358 { &
DMCF‹m©
, 1, "5FMT"},

1359 { &
RawDAL©ch
, 1, "RWDA"},

1364 
	$FCEUSND_SaveSèã
()

1367 
	}
}

1369 
	$FCEUSND_LﬂdSèã
(
vîsi⁄
)

1371 
	`LﬂdDMCPîiod
(
DMCF‹m©
&0xF);

1372 
RawDAL©ch
&=0x7F;

1373 
DMCAddªss
&=0x7FFF;

1374 
	}
}

	@fceux-am/src/sound.h

21 #i‚de‡
_SOUND_H_


22 
	#_SOUND_H_


	)

25 (*
	mFûl
)(
	mCou¡
);

33 (*
	mNeoFûl
)(
öt32
 *
	mWave
, 
	mCou¡
);

34 (*
	mHiFûl
)();

35 (*
	mHiSync
)(
öt32
 
	mts
);

37 (*
	mRCh™ge
)();

38 (*
	mKûl
)();

39 } 
	tEXPSOUND
;

41 
EXPSOUND
 
GameExpSound
;

43 
öt32
 
√söcsize
;

45 
SëSoundV¨übÀs
();

47 
GëSoundBuf„r
(
öt32
 **
W
);

48 
FlushEmuœãSound
();

49 
öt32
 
Wave
[2048+512];

50 
öt32
 
WaveFöÆ
[2048+512];

51 
öt32
 
WaveHi
[];

52 
uöt32
 
soundtsöc
;

54 
uöt32
 
soundtsoffs
;

55 
boﬁ
 
sw≠Duty
;

56 
	#SOUNDTS
 (
soundtime°amp
 + 
soundtsoffs
)

	)

58 
SëNESSoundM≠
();

59 
FømeSoundUpd©e
();

61 
FCEUSND_Powî
();

62 
FCEUSND_Re£t
();

63 
FCEUSND_SaveSèã
();

64 
FCEUSND_LﬂdSèã
(
vîsi⁄
);

66 
FCEU_SoundCPUHook
();

67 
Wrôe_IRQFM
 (
uöt32
 
A
, 
uöt8
 
V
);

69 
LogDPCM
(
romaddªss
, 
dpcmsize
);

72 
uöt8
 
	mS≥ed
;

73 
uöt8
 
	mMode
;

74 
uöt8
 
	mDecCou¡To1
;

75 
uöt8
 
	mdecvﬁume
;

76 
	mªlﬂddec
;

77 } 
	tENVUNIT
;

	@fceux-am/src/state.h

21 
	sSFORMAT


24 *
	mv
;

27 
uöt32
 
	ms
;

30 c⁄° *
	mdesc
;

33 
Re£tExSèã
((*
PªSave
)(),(*
Po°Save
)());

34 
	`AddExSèã
(*
v
, 
uöt32
 
s
, 
ty≥
, c⁄° *
desc
);

37 
	#FCEUSTATE_RLSB
 0x80000000

	)

40 
	#FCEUSTATE_INDIRECT
 0x40000000

	)

43 
	#FCEUSTATE_FLAGS
 (
FCEUSTATE_RLSB
|
FCEUSTATE_INDIRECT
)

	)

	@fceux-am/src/types.h

22 #i‚de‡
__FCEU_TYPES


23 
	#__FCEU_TYPES


	)

32 #ifde‡
FCEUDEF_DEBUGGER


33 
	#DEBUG
(
X
ËX;

	)

35 
	#DEBUG
(
X
)

	)

38 #ifde‡
MSVC


39 
	tuöt8
;

40 
	tuöt16
;

41 
	tuöt32
;

42 sig√d 
	töt8
;

43 sig√d 
	töt16
;

44 sig√d 
	töt32
;

45 
	#dup
 
_dup


	)

46 
	#°©
 
_°©


	)

47 
	#mkdú
 
_mkdú


	)

48 
	#Æloˇ
 
_Æloˇ


	)

49 
	#FCEUX_f°©
 
_f°©


	)

50 
	#W_OK
 2

	)

51 
	#R_OK
 2

	)

52 
	#X_OK
 1

	)

53 
	#F_OK
 0

	)

54 
	#PATH_MAX
 260

	)

58 #ifde‡
__MINGW32__


59 
	#Æloˇ
 
__buûtö_Æloˇ


	)

62 
	~<öây≥s.h
>

63 
öt8_t
 
	töt8
;

64 
öt16_t
 
	töt16
;

65 
öt32_t
 
	töt32
;

67 
uöt8_t
 
	tuöt8
;

68 
uöt16_t
 
	tuöt16
;

69 
uöt32_t
 
	tuöt32
;

71 
	#FCEUX_f°©
 
f°©


	)

74 #ifde‡
__GNUC__


75 
	tuöt64
;

76 
uöt64
 
	tu64
;

77 
	töt64
;

78 
	#INLINE
 
ölöe


	)

79 
	#GINLINE
 
ölöe


	)

80 #ñi‡
MSVC


81 
__öt64
 
	töt64
;

82 
	t__öt64
 
	tuöt64
;

83 
	#__ª°ri˘__


	)

84 
	#INLINE
 
__ölöe


	)

85 
	#GINLINE


	)

88 
	#PSS_STYLE
 2

	)

94 #i‡
PSS_STYLE
==2

96 
	#PSS
 "\\"

	)

97 
	#PS
 '\\'

	)

99 #ñi‡
PSS_STYLE
==1

101 
	#PSS
 "/"

	)

102 
	#PS
 '/'

	)

104 #ñi‡
PSS_STYLE
==3

106 
	#PSS
 "\\"

	)

107 
	#PS
 '\\'

	)

109 #ñi‡
PSS_STYLE
==4

111 
	#PSS
 ":"

	)

112 
	#PS
 ':'

	)

116 #îr‹ 
PSS_STYLE
 
undeföed
 
‹
 
övÆid
; 
£e
 "ty≥s.h" 
possibÀ
 
vÆues
, 
™d
 
add
 
as
 
compûe
-
time
 
›ti⁄
.

121 (*
	twrôefunc
)(
	tuöt32
 
	tA
, 
	tuöt8
 
	tV
);

122 
	$uöt8
 (*
	tªadfunc
)(
	tuöt32
 
	tA
);

124 #i‚de‡
CTASSERT


125 
	#CTASSERT
(
x
Ë
__as£π
 ## 
y
 { 
a
[(xË? 1 : -1];
	}
};

	)

128 
uöt8
 
	tu8
;

129 
uöt16
 
	tu16
;

130 
uöt32
 
	tu32
;

131 
uöt64
 
	tu64
;

132 
öt8
 
	ts8
;

133 
öt16
 
	ts16
;

134 
öt32
 
	ts32
;

135 
öt64
 
	ts64
;

137 
	~<klib.h
>

139 
	#FCEU_¥ötf
 
¥ötf


	)

140 
	#FCEU_PrötEº‹
 
¥ötf


	)

141 
	#FCEU_Di•Mesßge
(
msg
Ë
	`¥ötf
(msg "\n")

	)

	@fceux-am/src/unif.h

21 
AC08_Inô
(
C¨tInfo
 *
öfo
);

22 
ANROM_Inô
(
C¨tInfo
 *
öfo
);

23 
BMC11160_Inô
(
C¨tInfo
 *
öfo
);

24 
BMC12IN1_Inô
(
C¨tInfo
 *
öfo
);

25 
BMC13ö1JY110_Inô
(
C¨tInfo
 *
öfo
);

26 
BMC190ö1_Inô
(
C¨tInfo
 *
öfo
);

27 
BMC411120C_Inô
(
C¨tInfo
 *
öfo
);

28 
BMC64ö1ƒ_Inô
(
C¨tInfo
 *
öfo
);

29 
BMC70ö1B_Inô
(
C¨tInfo
 *
öfo
);

30 
BMC70ö1_Inô
(
C¨tInfo
 *
öfo
);

31 
BMC810544CA1_Inô
(
C¨tInfo
 *
öfo
);

32 
BMC830118C_Inô
(
C¨tInfo
 *
öfo
);

33 
BMCA65AS_Inô
(
C¨tInfo
 *
öfo
);

34 
BMCBS5_Inô
(
C¨tInfo
 *
öfo
);

35 
BMCD1038_Inô
(
C¨tInfo
 *
öfo
);

36 
BMCFK23CA_Inô
(
C¨tInfo
 *
öfo
);

37 
BMCFK23C_Inô
(
C¨tInfo
 *
öfo
);

38 
BMCG146_Inô
(
C¨tInfo
 *
öfo
);

39 
BMCGK192_Inô
(
C¨tInfo
 *
öfo
);

40 
BMCGS2004_Inô
(
C¨tInfo
 *
öfo
);

41 
BMCGS2013_Inô
(
C¨tInfo
 *
öfo
);

42 
BMCGho°bu°îs63ö1_Inô
(
C¨tInfo
 *
öfo
);

43 
BMCNTD03_Inô
(
C¨tInfo
 *
öfo
);

44 
BMCT2271_Inô
(
C¨tInfo
 *
öfo
);

45 
BMCT262_Inô
(
C¨tInfo
 *
öfo
);

46 
BMC1024CA1_Inô
(
C¨tInfo
 *
öfo
);

47 
CNROM_Inô
(
C¨tInfo
 *
öfo
);

48 
CPROM_Inô
(
C¨tInfo
 *
öfo
);

49 
DªamTech01_Inô
(
C¨tInfo
 *
öfo
);

50 
EKROM_Inô
(
C¨tInfo
 *
öfo
);

51 
ELROM_Inô
(
C¨tInfo
 *
öfo
);

52 
ETROM_Inô
(
C¨tInfo
 *
öfo
);

53 
EWROM_Inô
(
C¨tInfo
 *
öfo
);

54 
GNROM_Inô
(
C¨tInfo
 *
öfo
);

55 
HKROM_Inô
(
C¨tInfo
 *
öfo
);

56 
LE05_Inô
(
C¨tInfo
 *
öfo
);

57 
LH10_Inô
(
C¨tInfo
 *
öfo
);

58 
LH32_Inô
(
C¨tInfo
 *
öfo
);

59 
LH53_Inô
(
C¨tInfo
 *
öfo
);

60 
MALEE_Inô
(
C¨tInfo
 *
öfo
);

61 
MHROM_Inô
(
C¨tInfo
 *
öfo
);

62 
QTAi_Inô
(
C¨tInfo
 *
öfo
);

63 
NROM_Inô
(
C¨tInfo
 *
öfo
);

64 
Novñ_Inô
(
C¨tInfo
 *
öfo
);

65 
S74LS374NA_Inô
(
C¨tInfo
 *
öfo
);

66 
S74LS374N_Inô
(
C¨tInfo
 *
öfo
);

67 
S8259A_Inô
(
C¨tInfo
 *
öfo
);

68 
S8259B_Inô
(
C¨tInfo
 *
öfo
);

69 
S8259C_Inô
(
C¨tInfo
 *
öfo
);

70 
S8259D_Inô
(
C¨tInfo
 *
öfo
);

71 
SA0036_Inô
(
C¨tInfo
 *
öfo
);

72 
SA0037_Inô
(
C¨tInfo
 *
öfo
);

73 
SA009_Inô
(
C¨tInfo
 *
öfo
);

74 
SA0161M_Inô
(
C¨tInfo
 *
öfo
);

75 
SA72007_Inô
(
C¨tInfo
 *
öfo
);

76 
SA72008_Inô
(
C¨tInfo
 *
öfo
);

77 
SA9602B_Inô
(
C¨tInfo
 *
öfo
);

78 
SAROM_Inô
(
C¨tInfo
 *
öfo
);

79 
SBROM_Inô
(
C¨tInfo
 *
öfo
);

80 
SCROM_Inô
(
C¨tInfo
 *
öfo
);

81 
SEROM_Inô
(
C¨tInfo
 *
öfo
);

82 
SGROM_Inô
(
C¨tInfo
 *
öfo
);

83 
SKROM_Inô
(
C¨tInfo
 *
öfo
);

84 
SL1ROM_Inô
(
C¨tInfo
 *
öfo
);

85 
SLROM_Inô
(
C¨tInfo
 *
öfo
);

86 
SNROM_Inô
(
C¨tInfo
 *
öfo
);

87 
SOROM_Inô
(
C¨tInfo
 *
öfo
);

88 
SSSNROM_Inô
(
C¨tInfo
 *
öfo
);

89 
SUNSOFT_UNROM_Inô
(
C¨tInfo
 *
öfo
);

90 
Su≥r24_Inô
(
C¨tInfo
 *
öfo
);

91 
Su≥rvisi⁄16_Inô
(
C¨tInfo
 *
öfo
);

92 
TBROM_Inô
(
C¨tInfo
 *
öfo
);

93 
TCA01_Inô
(
C¨tInfo
 *
öfo
);

94 
TCU01_Inô
(
C¨tInfo
 *
öfo
);

95 
TCU02_Inô
(
C¨tInfo
 *
öfo
);

96 
TEROM_Inô
(
C¨tInfo
 *
öfo
);

97 
TFROM_Inô
(
C¨tInfo
 *
öfo
);

98 
TGROM_Inô
(
C¨tInfo
 *
öfo
);

99 
TKROM_Inô
(
C¨tInfo
 *
öfo
);

100 
TKSROM_Inô
(
C¨tInfo
 *
öfo
);

101 
TLROM_Inô
(
C¨tInfo
 *
öfo
);

102 
TLSROM_Inô
(
C¨tInfo
 *
öfo
);

103 
TQROM_Inô
(
C¨tInfo
 *
öfo
);

104 
TQROM_Inô
(
C¨tInfo
 *
öfo
);

105 
TSROM_Inô
(
C¨tInfo
 *
öfo
);

106 
Tønsf‹mî_Inô
(
C¨tInfo
 *
öfo
);

107 
UNL22211_Inô
(
C¨tInfo
 *
öfo
);

108 
UNL3DBlock_Inô
(
C¨tInfo
 *
öfo
);

109 
UNL43272_Inô
(
C¨tInfo
 *
öfo
);

110 
UNL6035052_Inô
(
C¨tInfo
 *
öfo
);

111 
UNL8157_Inô
(
C¨tInfo
 *
öfo
);

112 
UNL8237A_Inô
(
C¨tInfo
 *
öfo
);

113 
UNL8237_Inô
(
C¨tInfo
 *
öfo
);

114 
UNLA9746_Inô
(
C¨tInfo
 *
öfo
);

115 
UNLAX5705_Inô
(
C¨tInfo
 *
öfo
);

116 
UNLBB_Inô
(
C¨tInfo
 *
öfo
);

117 
UNLCC21_Inô
(
C¨tInfo
 *
öfo
);

118 
UNLCITYFIGHT_Inô
(
C¨tInfo
 *
öfo
);

119 
UNLD2000_Inô
(
C¨tInfo
 *
öfo
);

120 
UNLEDU2000_Inô
(
C¨tInfo
 *
öfo
);

121 
UNLFS304_Inô
(
C¨tInfo
 *
öfo
);

122 
UNLH2288_Inô
(
C¨tInfo
 *
öfo
);

123 
UNLKOF97_Inô
(
C¨tInfo
 *
öfo
);

124 
UNLKS7012_Inô
(
C¨tInfo
 *
öfo
);

125 
UNLKS7013B_Inô
(
C¨tInfo
 *
öfo
);

126 
UNLKS7016_Inô
(
C¨tInfo
 *
öfo
);

127 
UNLKS7017_Inô
(
C¨tInfo
 *
öfo
);

128 
UNLKS7030_Inô
(
C¨tInfo
 *
öfo
);

129 
UNLKS7031_Inô
(
C¨tInfo
 *
öfo
);

130 
UNLKS7032_Inô
(
C¨tInfo
 *
öfo
);

131 
UNLKS7037_Inô
(
C¨tInfo
 *
öfo
);

132 
UNLKS7057_Inô
(
C¨tInfo
 *
öfo
);

133 
UNLN625092_Inô
(
C¨tInfo
 *
öfo
);

134 
UNLMÆiSB_Inô
(
C¨tInfo
 *
öfo
);

135 
UNLO√Bus_Inô
(
C¨tInfo
 *
öfo
);

136 
UNLPEC586Inô
(
C¨tInfo
 *
öfo
);

137 
UNLSC127_Inô
(
C¨tInfo
 *
öfo
);

138 
UNLSHî€s_Inô
(
C¨tInfo
 *
öfo
);

139 
UNLSL12_Inô
(
C¨tInfo
 *
öfo
);

140 
UNLSL1632_Inô
(
C¨tInfo
 *
öfo
);

141 
UNLSMB2J_Inô
(
C¨tInfo
 *
öfo
);

142 
UNLT230_Inô
(
C¨tInfo
 *
öfo
);

143 
UNLTF1201_Inô
(
C¨tInfo
 *
öfo
);

144 
UNLVRC7_Inô
(
C¨tInfo
 *
öfo
);

145 
UNLYOKO_Inô
(
C¨tInfo
 *
öfo
);

146 
UNROM_Inô
(
C¨tInfo
 *
öfo
);

147 
UNROM512_Inô
(
C¨tInfo
 *
öfo
);

148 
UNLSB2000_Inô
(
C¨tInfo
 *
öfo
);

149 
UNLKS7010_Inô
(
C¨tInfo
 *
öfo
);

150 
COOLBOY_Inô
(
C¨tInfo
 *
öfo
);

151 
UNL158B_Inô
(
C¨tInfo
 *
öfo
);

152 
UNLBMW8544_Inô
(
C¨tInfo
 *
öfo
);

153 
UNLEH8813A_Inô
(
C¨tInfo
 *
öfo
);

154 
BMCHP898F_Inô
(
C¨tInfo
 *
öfo
);

155 
BMCF15_Inô
(
C¨tInfo
 *
öfo
);

156 
UNLRT01_Inô
(
C¨tInfo
 *
öfo
);

157 
BMC810131C_Inô
(
C¨tInfo
 *
öfo
);

158 
BMC8IN1_Inô
(
C¨tInfo
 *
öfo
);

159 
BMC80013B_Inô
(
C¨tInfo
 *
öfo
);

160 
BMCHPxx_Inô
(
C¨tInfo
 *
öfo
);

161 
MINDKIDS_Inô
(
C¨tInfo
 *
öfo
);

163 
uöt8
 *
UNIFchºama
;

	@fceux-am/src/unused.cpp

1 
	~"ty≥s.h
"

2 
	~"sound.h
"

11 
uöt8
 *
	gUNIFchºama
 = 0;

13 
	$AddExSèã
(*
v
, 
uöt32
 
s
, 
ty≥
, c⁄° *
desc
Ë{ 
	}
}

14 
	$FCEU_ChótAddRAM
(
s
, 
uöt32
 
A
, 
uöt8
 *
p
Ë{ 
	}
}

	@fceux-am/src/utils/general.cpp

21 
	~"../ty≥s.h
"

23 
uöt32
 
	$uµow2
(
uöt32
 
n
)

25 
x
;

27 
x
=31;x>=0;x--)

28 if(
n
&(1<<
x
))

30 if((1u<<
x
)!=
n
)

31 (1<<(
x
+1));

34  
n
;

35 
	}
}

	@fceux-am/src/utils/general.h

2 
uöt32
 
uµow2
(uöt32 
n
);

	@fceux-am/src/utils/md5.cpp

11 
	~"../ty≥s.h
"

12 
	~"md5.h
"

14 
	#GET_UINT32
(
n
,
b
,
i
) \

16 (
n
Ë–(
uöt32
Ë(
b
)[(
i
) + 3] << 24 ) \

17 | ( (
uöt32
Ë(
b
)[(
i
) + 2] << 16 ) \

18 | ( (
uöt32
Ë(
b
)[(
i
) + 1] << 8 ) \

19 | ( (
uöt32
Ë(
b
)[(
i
) ] ); \

20 }

	)

22 
	#PUT_UINT32
(
n
,
b
,
i
) \

24 (
b
)[(
i
Ë] = (
uöt8
Ë–(
n
) ); \

25 (
b
)[(
i
Ë+ 1] = (
uöt8
Ë–(
n
) >> 8 ); \

26 (
b
)[(
i
Ë+ 2] = (
uöt8
Ë–(
n
) >> 16 ); \

27 (
b
)[(
i
Ë+ 3] = (
uöt8
Ë–(
n
) >> 24 ); \

28 }

	)

30 
	$md5_°¨ts
–
md5_c⁄ãxt
 *
˘x
 )

32 
˘x
->
tŸÆ
[0] = 0;

33 
˘x
->
tŸÆ
[1] = 0;

34 
˘x
->
°©e
[0] = 0x67452301;

35 
˘x
->
°©e
[1] = 0xEFCDAB89;

36 
˘x
->
°©e
[2] = 0x98BADCFE;

37 
˘x
->
°©e
[3] = 0x10325476;

38 
	}
}

40 
	$md5_¥o˚ss
–
md5_c⁄ãxt
 *
˘x
, 
uöt8
 
d©a
[64] )

42 
uöt32
 
A
, 
B
, 
C
, 
D
, 
X
[16];

44 
	`GET_UINT32
–
X
[0], 
d©a
, 0 );

45 
	`GET_UINT32
–
X
[1], 
d©a
, 4 );

46 
	`GET_UINT32
–
X
[2], 
d©a
, 8 );

47 
	`GET_UINT32
–
X
[3], 
d©a
, 12 );

48 
	`GET_UINT32
–
X
[4], 
d©a
, 16 );

49 
	`GET_UINT32
–
X
[5], 
d©a
, 20 );

50 
	`GET_UINT32
–
X
[6], 
d©a
, 24 );

51 
	`GET_UINT32
–
X
[7], 
d©a
, 28 );

52 
	`GET_UINT32
–
X
[8], 
d©a
, 32 );

53 
	`GET_UINT32
–
X
[9], 
d©a
, 36 );

54 
	`GET_UINT32
–
X
[10], 
d©a
, 40 );

55 
	`GET_UINT32
–
X
[11], 
d©a
, 44 );

56 
	`GET_UINT32
–
X
[12], 
d©a
, 48 );

57 
	`GET_UINT32
–
X
[13], 
d©a
, 52 );

58 
	`GET_UINT32
–
X
[14], 
d©a
, 56 );

59 
	`GET_UINT32
–
X
[15], 
d©a
, 60 );

61 
	#S
(
x
,
n
Ë((x <<ÇË| ((x & 0xFFFFFFFFË>> (32 -Ç)))

	)

63 
	#P
(
a
,
b
,
c
,
d
,
k
,
s
,
t
) \

65 
a
 +
	`F
(
b
,
c
,
d
Ë+ 
X
[
k
] + 
t
;á = 
	`S
◊,
s
) + b; \

66 }

	)

68 
A
 = 
˘x
->
°©e
[0];

69 
B
 = 
˘x
->
°©e
[1];

70 
C
 = 
˘x
->
°©e
[2];

71 
D
 = 
˘x
->
°©e
[3];

73 
	#F
(
x
,
y
,
z
Ë(z ^ (x & (y ^ z)))

	)

75 
	`P
–
A
, 
B
, 
C
, 
D
, 0, 7, 0xD76AA478 );

76 
	`P
–
D
, 
A
, 
B
, 
C
, 1, 12, 0xE8C7B756 );

77 
	`P
–
C
, 
D
, 
A
, 
B
, 2, 17, 0x242070DB );

78 
	`P
–
B
, 
C
, 
D
, 
A
, 3, 22, 0xC1BDCEEE );

79 
	`P
–
A
, 
B
, 
C
, 
D
, 4, 7, 0xF57C0FAF );

80 
	`P
–
D
, 
A
, 
B
, 
C
, 5, 12, 0x4787C62A );

81 
	`P
–
C
, 
D
, 
A
, 
B
, 6, 17, 0xA8304613 );

82 
	`P
–
B
, 
C
, 
D
, 
A
, 7, 22, 0xFD469501 );

83 
	`P
–
A
, 
B
, 
C
, 
D
, 8, 7, 0x698098D8 );

84 
	`P
–
D
, 
A
, 
B
, 
C
, 9, 12, 0x8B44F7AF );

85 
	`P
–
C
, 
D
, 
A
, 
B
, 10, 17, 0xFFFF5BB1 );

86 
	`P
–
B
, 
C
, 
D
, 
A
, 11, 22, 0x895CD7BE );

87 
	`P
–
A
, 
B
, 
C
, 
D
, 12, 7, 0x6B901122 );

88 
	`P
–
D
, 
A
, 
B
, 
C
, 13, 12, 0xFD987193 );

89 
	`P
–
C
, 
D
, 
A
, 
B
, 14, 17, 0xA679438E );

90 
	`P
–
B
, 
C
, 
D
, 
A
, 15, 22, 0x49B40821 );

92 #unde‡
F


94 
	#F
(
x
,
y
,
z
Ë(y ^ (z & (x ^ y)))

	)

96 
	`P
–
A
, 
B
, 
C
, 
D
, 1, 5, 0xF61E2562 );

97 
	`P
–
D
, 
A
, 
B
, 
C
, 6, 9, 0xC040B340 );

98 
	`P
–
C
, 
D
, 
A
, 
B
, 11, 14, 0x265E5A51 );

99 
	`P
–
B
, 
C
, 
D
, 
A
, 0, 20, 0xE9B6C7AA );

100 
	`P
–
A
, 
B
, 
C
, 
D
, 5, 5, 0xD62F105D );

101 
	`P
–
D
, 
A
, 
B
, 
C
, 10, 9, 0x02441453 );

102 
	`P
–
C
, 
D
, 
A
, 
B
, 15, 14, 0xD8A1E681 );

103 
	`P
–
B
, 
C
, 
D
, 
A
, 4, 20, 0xE7D3FBC8 );

104 
	`P
–
A
, 
B
, 
C
, 
D
, 9, 5, 0x21E1CDE6 );

105 
	`P
–
D
, 
A
, 
B
, 
C
, 14, 9, 0xC33707D6 );

106 
	`P
–
C
, 
D
, 
A
, 
B
, 3, 14, 0xF4D50D87 );

107 
	`P
–
B
, 
C
, 
D
, 
A
, 8, 20, 0x455A14ED );

108 
	`P
–
A
, 
B
, 
C
, 
D
, 13, 5, 0xA9E3E905 );

109 
	`P
–
D
, 
A
, 
B
, 
C
, 2, 9, 0xFCEFA3F8 );

110 
	`P
–
C
, 
D
, 
A
, 
B
, 7, 14, 0x676F02D9 );

111 
	`P
–
B
, 
C
, 
D
, 
A
, 12, 20, 0x8D2A4C8A );

113 #unde‡
F


115 
	#F
(
x
,
y
,
z
Ë(x ^ y ^ z)

	)

117 
	`P
–
A
, 
B
, 
C
, 
D
, 5, 4, 0xFFFA3942 );

118 
	`P
–
D
, 
A
, 
B
, 
C
, 8, 11, 0x8771F681 );

119 
	`P
–
C
, 
D
, 
A
, 
B
, 11, 16, 0x6D9D6122 );

120 
	`P
–
B
, 
C
, 
D
, 
A
, 14, 23, 0xFDE5380C );

121 
	`P
–
A
, 
B
, 
C
, 
D
, 1, 4, 0xA4BEEA44 );

122 
	`P
–
D
, 
A
, 
B
, 
C
, 4, 11, 0x4BDECFA9 );

123 
	`P
–
C
, 
D
, 
A
, 
B
, 7, 16, 0xF6BB4B60 );

124 
	`P
–
B
, 
C
, 
D
, 
A
, 10, 23, 0xBEBFBC70 );

125 
	`P
–
A
, 
B
, 
C
, 
D
, 13, 4, 0x289B7EC6 );

126 
	`P
–
D
, 
A
, 
B
, 
C
, 0, 11, 0xEAA127FA );

127 
	`P
–
C
, 
D
, 
A
, 
B
, 3, 16, 0xD4EF3085 );

128 
	`P
–
B
, 
C
, 
D
, 
A
, 6, 23, 0x04881D05 );

129 
	`P
–
A
, 
B
, 
C
, 
D
, 9, 4, 0xD9D4D039 );

130 
	`P
–
D
, 
A
, 
B
, 
C
, 12, 11, 0xE6DB99E5 );

131 
	`P
–
C
, 
D
, 
A
, 
B
, 15, 16, 0x1FA27CF8 );

132 
	`P
–
B
, 
C
, 
D
, 
A
, 2, 23, 0xC4AC5665 );

134 #unde‡
F


136 
	#F
(
x
,
y
,
z
Ë(y ^ (x | ~z))

	)

138 
	`P
–
A
, 
B
, 
C
, 
D
, 0, 6, 0xF4292244 );

139 
	`P
–
D
, 
A
, 
B
, 
C
, 7, 10, 0x432AFF97 );

140 
	`P
–
C
, 
D
, 
A
, 
B
, 14, 15, 0xAB9423A7 );

141 
	`P
–
B
, 
C
, 
D
, 
A
, 5, 21, 0xFC93A039 );

142 
	`P
–
A
, 
B
, 
C
, 
D
, 12, 6, 0x655B59C3 );

143 
	`P
–
D
, 
A
, 
B
, 
C
, 3, 10, 0x8F0CCC92 );

144 
	`P
–
C
, 
D
, 
A
, 
B
, 10, 15, 0xFFEFF47D );

145 
	`P
–
B
, 
C
, 
D
, 
A
, 1, 21, 0x85845DD1 );

146 
	`P
–
A
, 
B
, 
C
, 
D
, 8, 6, 0x6FA87E4F );

147 
	`P
–
D
, 
A
, 
B
, 
C
, 15, 10, 0xFE2CE6E0 );

148 
	`P
–
C
, 
D
, 
A
, 
B
, 6, 15, 0xA3014314 );

149 
	`P
–
B
, 
C
, 
D
, 
A
, 13, 21, 0x4E0811A1 );

150 
	`P
–
A
, 
B
, 
C
, 
D
, 4, 6, 0xF7537E82 );

151 
	`P
–
D
, 
A
, 
B
, 
C
, 11, 10, 0xBD3AF235 );

152 
	`P
–
C
, 
D
, 
A
, 
B
, 2, 15, 0x2AD7D2BB );

153 
	`P
–
B
, 
C
, 
D
, 
A
, 9, 21, 0xEB86D391 );

155 #unde‡
F


157 
˘x
->
°©e
[0] +
A
;

158 
˘x
->
°©e
[1] +
B
;

159 
˘x
->
°©e
[2] +
C
;

160 
˘x
->
°©e
[3] +
D
;

161 
	}
}

163 
	$md5_upd©e
–
md5_c⁄ãxt
 *
˘x
, 
uöt8
 *
öput
, 
uöt32
 
Àngth
 )

165 
uöt32
 
À·
, 
fûl
;

167 if–! 
Àngth
 ) ;

169 
À·
 = ( 
˘x
->
tŸÆ
[0] >> 3 ) & 0x3F;

170 
fûl
 = 64 - 
À·
;

172 
˘x
->
tŸÆ
[0] +
Àngth
 << 3;

173 
˘x
->
tŸÆ
[1] +
Àngth
 >> 29;

175 
˘x
->
tŸÆ
[0] &= 0xFFFFFFFF;

176 
˘x
->
tŸÆ
[1] +˘x->tŸÆ[0] < ( 
Àngth
 << 3 );

178 if–
À·
 && 
Àngth
 >
fûl
 )

180 
	`mem˝y
–(*Ë(
˘x
->
buf„r
 + 
À·
), (*Ë
öput
, 
fûl
 );

181 
	`md5_¥o˚ss
–
˘x
, ctx->
buf„r
 );

182 
Àngth
 -
fûl
;

183 
öput
 +
fûl
;

184 
À·
 = 0;

187  
Àngth
 >= 64 )

189 
	`md5_¥o˚ss
–
˘x
, 
öput
 );

190 
Àngth
 -= 64;

191 
öput
 += 64;

194 if–
Àngth
 )

196 
	`mem˝y
–(*Ë(
˘x
->
buf„r
 + 
À·
), (*Ë
öput
, 
Àngth
 );

198 
	}
}

200 
uöt8
 
	gmd5_∑ddög
[64] =

208 
	$md5_föish
–
md5_c⁄ãxt
 *
˘x
, 
uöt8
 
dige°
[16] )

210 
uöt32
 
œ°
, 
∑dn
;

211 
uöt8
 
msgÀn
[8];

213 
	`PUT_UINT32
–
˘x
->
tŸÆ
[0], 
msgÀn
, 0 );

214 
	`PUT_UINT32
–
˘x
->
tŸÆ
[1], 
msgÀn
, 4 );

216 
œ°
 = ( 
˘x
->
tŸÆ
[0] >> 3 ) & 0x3F;

217 
∑dn
 = ( 
œ°
 < 56 ) ? ( 56 -Üast ) : ( 120 -Üast );

219 
	`md5_upd©e
–
˘x
, 
md5_∑ddög
, 
∑dn
 );

220 
	`md5_upd©e
–
˘x
, 
msgÀn
, 8 );

222 
	`PUT_UINT32
–
˘x
->
°©e
[0], 
dige°
, 0 );

223 
	`PUT_UINT32
–
˘x
->
°©e
[1], 
dige°
, 4 );

224 
	`PUT_UINT32
–
˘x
->
°©e
[2], 
dige°
, 8 );

225 
	`PUT_UINT32
–
˘x
->
°©e
[3], 
dige°
, 12 );

226 
	}
}

230 *
	$md5_ascii°r
(
MD5DATA
& 
md5
)

232 
uöt8
* 
dige°
 = 
md5
.
d©a
;

233 
°r
[33];

234 
å™s
[16]={'0','1','2','3','4','5','6','7','8','9','a','b','c','d','e','f'};

235 
x
;

237 
x
=0;x<16;x++)

239 
°r
[
x
*2]=
å™s
[
dige°
[x]>>4];

240 
°r
[
x
*2+1]=
å™s
[
dige°
[x]&0x0F];

242 (
°r
);

243 
	}
}

	@fceux-am/src/utils/md5.h

1 #i‚de‡
_MD5_H


2 
	#_MD5_H


	)

4 
	~"../ty≥s.h
"

5 
	~"vÆuóºay.h
"

7 
	smd5_c⁄ãxt


9 
uöt32
 
	mtŸÆ
[2];

10 
uöt32
 
	m°©e
[4];

11 
uöt8
 
	mbuf„r
[64];

14 
	gVÆueAºay
<
	tuöt8
,16> 
	tMD5DATA
;

16 
md5_°¨ts
–
md5_c⁄ãxt
 *
˘x
 );

17 
md5_upd©e
–
md5_c⁄ãxt
 *
˘x
, 
uöt8
 *
öput
, 
uöt32
 
Àngth
 );

18 
md5_föish
–
md5_c⁄ãxt
 *
˘x
, 
uöt8
 
dige°
[16] );

21 *
md5_ascii°r
(
MD5DATA
& 
md5
);

	@fceux-am/src/utils/memory.cpp

24 
	~"../ty≥s.h
"

25 
	~"../f˚u.h
"

26 
	~"mem‹y.h
"

29 *
	$FCEU_gmÆloc
(
uöt32
 
size
)

32 *
ªt
;

33 
ªt
=
	`mÆloc
(
size
);

34 if(!
ªt
)

36 
	`FCEU_PrötEº‹
("Errorállocating memory! Doingá hardÉxit.");

37 
	`as£π
(0);

39 
	`FCEU_Mem‹yR™d
((
uöt8
*)
ªt
,
size
,
åue
);

40  
ªt
;

41 
	}
}

44 *
	$FCEU_mÆloc
(
uöt32
 
size
)

46 *
ªt
;

47 
ªt
=
	`mÆloc
(
size
);

48 if(!
ªt
)

50 
	`FCEU_PrötEº‹
("Errorállocating memory!");

53 
	`mem£t
(
ªt
,0,
size
);

54  
ªt
;

55 
	}
}

58 
	$FCEU_g‰ì
(*
±r
)

60 
	`‰ì
(
±r
);

61 
	}
}

64 
	$FCEU_‰ì
(*
±r
)

66 
	`‰ì
(
±r
);

67 
	}
}

69 *
	$FCEU_dmÆloc
(
uöt32
 
size
)

71  
	`mÆloc
(
size
);

72 
	}
}

74 
	$FCEU_d‰ì
(*
±r
)

76 
	`‰ì
(
±r
);

77 
	}
}

	@fceux-am/src/utils/memory.h

25 
	#FCEU_dwmem£t
(
d
,
c
,
n
Ë{
_x
; _xÚ-4;_x>=0;_x-=4Ë*(
uöt32
 *)&(d)[_x]=c;}

	)

27 *
FCEU_mÆloc
(
uöt32
 
size
);

28 *
FCEU_gmÆloc
(
uöt32
 
size
);

29 
FCEU_g‰ì
(*
±r
);

30 
FCEU_‰ì
(*
±r
);

31 
FCEU_memmove
(*
d
, *
s
, 
uöt32
 
l
);

35 *
FCEU_dmÆloc
(
uöt32
 
size
);

36 
FCEU_d‰ì
(*
±r
);

	@fceux-am/src/utils/valuearray.h

1 #i‚de‡
_VALUEARRAY_H_


2 
	#_VALUEARRAY_H_


	)

4 
	gãm∂©e
<
ty≥«me
 
	gT
, 
	gN
>

5 
	sVÆueAºay


7 
T
 
	md©a
[
N
];

8 
	mT
 &
	m›î©‹
[](
	mödex
Ë{  
	md©a
[
ödex
]; }

9 c⁄° 
	msize
 = 
N
;

10 
boﬁ
 
	m›î©‹
!=(
VÆueAºay
<
T
,
	mN
> &
	mŸhî
Ë{  !›î©‹==(
Ÿhî
); }

11 
boﬁ
 
	m›î©‹
==(
VÆueAºay
<
T
,
	mN
> &
	mŸhî
)

13 
	mi
=0;i<
	msize
;i++)

14 if(
	md©a
[
i
] !
Ÿhî
[i])

15  
Ál£
;

16  
	måue
;

	@fceux-am/src/version.h

24 #i‚de‡
__FCEU_VERSION


25 
	#__FCEU_VERSION


	)

28 #ifde‡
SVN_REV


29 
	#SCM_REV_STR
 
SCM_REV


	)

31 
	#SCM_REV_STR
 ""

	)

34 
	#FCEU_NAME
 "FCEUX"

	)

36 
	#FCEU_FEATURE_STRING
 ""

	)

38 #ifde‡
_DEBUG


39 
	#FCEU_SUBVERSION_STRING
 " debug"

	)

40 #ñi‡
deföed
(
PUBLIC_RELEASE
)

41 
	#FCEU_SUBVERSION_STRING
 ""

	)

43 
	#FCEU_SUBVERSION_STRING
 "-öãrim gô" 
SCM_REV_STR


	)

47 
	#FCEU_COMPILER
 ""

	)

48 
	#FCEU_COMPILER_DETAIL
 ""

	)

50 
	#FCEU_VERSION_NUMERIC
 22020

	)

51 
	#FCEU_VERSION_STRING
 "2.2.3" 
FCEU_SUBVERSION_STRING
 
FCEU_FEATURE_STRING
 
FCEU_COMPILER


	)

52 
	#FCEU_NAME_AND_VERSION
 
FCEU_NAME
 " " 
FCEU_VERSION_STRING


	)

	@fceux-am/src/video.cpp

21 
	~"ty≥s.h
"

22 
	~"video.h
"

23 
	~"f˚u.h
"

24 
	~"fûe.h
"

25 
	~"utûs/mem‹y.h
"

26 
	~"°©e.h
"

27 
	~"∑Àâe.h
"

28 
	~"öput.h
"

29 
	~"døwög.h
"

30 
	~"drivî.h
"

31 
	~"drivîs/comm⁄/vidblô.h
"

38 
u8
 *
	gXBuf
=
NULL
;

39 
u8
 *
	gXBackBuf
=
NULL
;

40 
u8
 *
	gXDBuf
=
NULL
;

41 
u8
 *
	gXDBackBuf
=
NULL
;

42 
	gClùSidesOff£t
=0;

43 
u8
 *
	gxbßve
=
NULL
;

45 
	$FCEU_KûlVútuÆVideo
()

47 
	}
}

54 
	$FCEU_InôVútuÆVideo
()

58 if(
XBuf
)

61 
XBuf
 = (
u8
*)
	`FCEU_mÆloc
(256 * 256 + 16);

62 
XBackBuf
 = (
u8
*)
	`FCEU_mÆloc
(256 * 256 + 16);

63 
XDBuf
 = (
u8
*)
	`FCEU_mÆloc
(256 * 256 + 16);

64 
XDBackBuf
 = (
u8
*)
	`FCEU_mÆloc
(256 * 256 + 16);

65 if(!
XBuf
 || !
XBackBuf
 || !
XDBuf
 || !
XDBackBuf
)

70 
xbßve
 = 
XBuf
;

72 if–(
uöt8
*) == 4 )

74 
uöçå_t
 
m
 = (uöçå_t)
XBuf
;

75 
m
 = ( 8 - m) & 7;

76 
XBuf
+=
m
;

79 
	`mem£t
(
XBuf
,128,256*256);

80 
	`mem£t
(
XBackBuf
,128,256*256);

81 
	`mem£t
(
XBuf
,128,256*256);

82 
	`mem£t
(
XBackBuf
,128,256*256);

85 
	}
}

87 #ifde‡
FRAMESKIP


88 
	$FCEU_PutImageDummy
()

90 
	`ShowFPS
();

91 
	}
}

94 
uöt64
 
FCEUD_GëTime
();

95 
uöt32
 
FCEUD_GëTimeFªq
();

96 
boﬁ
 
	gShow_FPS
 = 
Ál£
;

98 
	$FCEUI_SëShowFPS
(
boﬁ
 
showFPS
)

100 
Show_FPS
 = 
showFPS
;

101 
	}
}

103 
uöt64
 
	gbo›
[60];

104 
	gbo›cou¡
 = 0;

106 
	$ShowFPS
()

108 
uöt32
 
tsc
 = 0;

109 if(
Show_FPS
 =
Ál£
)

111 
uöt32
 
now
 = 
	`FCEUD_GëTime
();

112 
uöt32
 
da
 = 
now
 - 
bo›
[
bo›cou¡
];

113 
bo›limô
 = 
PAL
?50:60;

114 
bo›
[
bo›cou¡
] = 
now
;

116 i‡(
now
 - 
tsc
 > 1000) {

117 
tsc
 = 
now
;

118 
i
 = 0; i < 40; i ++Ë
	`putch
('\b');

119 
	`¥ötf
("(Sy°emÅime: %dsËFPS = %d", 
now
 / 1000, 
bo›limô
 * 
	`FCEUD_GëTimeFªq
(Ë/ 
da
);

122 
bo›cou¡
 = (bo›cou¡ + 1Ë% 
bo›limô
;

123 
	}
}

	@fceux-am/src/video.h

1 #i‚de‡
_VIDEO_H_


2 
	#_VIDEO_H_


	)

3 
FCEU_InôVútuÆVideo
();

4 
FCEU_KûlVútuÆVideo
();

5 
SaveS«pshŸ
();

6 
SaveS«pshŸ
([]);

7 
Re£tS¸ìnshŸsCou¡î
();

8 
uöt32
 
GëS¸ìnPixñ
(
x
, 
y
, 
boﬁ
 
u£backup
);

9 
GëS¸ìnPixñPÆëã
(
x
, 
y
, 
boﬁ
 
u£backup
);

10 
uöt8
 *
XBuf
;

11 
uöt8
 *
XBackBuf
;

12 
uöt8
 *
XDBuf
;

13 
uöt8
 *
XDBackBuf
;

14 
ClùSidesOff£t
;

16 
FCEU_DøwNumbîRow
(
uöt8
 *
XBuf
, *
n°©us
, 
cur
);

18 
boﬁ
 
FCEUI_ShowFPS
();

19 
FCEUI_SëShowFPS
(
boﬁ
 
showFPS
);

20 
FCEUI_ToggÀShowFPS
();

21 
ShowFPS
();

22 
¢≠AVI
();

	@fceux-am/src/x6502.cpp

21 
	~"ty≥s.h
"

22 
	~"x6502.h
"

23 
	~"f˚u.h
"

24 
	~"sound.h
"

26 
	~"x6502abbªv.h
"

28 
X6502
 
	gX
;

29 
uöt32
 
	gtime°amp
;

30 
uöt32
 
	gsoundtime°amp
;

31 (*
M≠IRQHook
)(
a
);

33 
	#ADDCYC
(
x
) \

35 
__x
=
x
; \

36 
_tcou¡
+=
__x
; \

37 
_cou¡
-=
__x
*48; \

38 
time°amp
+=
__x
; \

39 if(!
ovî˛ockög
Ë
soundtime°amp
+=
__x
; \

40 
	}

	)
}

43 
INLINE
 
uöt8
 
	$RdMem
(
A
)

45 (
_DB
=
ARód
[
A
](A));

46 
	}
}

49 
INLINE
 
	$WrMem
(
A
, 
uöt8
 
V
)

51 
BWrôe
[
A
](A,
V
);

52 
	}
}

54 
INLINE
 
uöt8
 
	$RdRAM
(
A
)

58 (
_DB
=
RAM
[
A
]);

59 
	}
}

61 
INLINE
 
	$WrRAM
(
A
, 
uöt8
 
V
)

63 
RAM
[
A
]=
V
;

64 
	}
}

66 
uöt8
 
	$X6502_DMR
(
uöt32
 
A
)

68 
	`ADDCYC
(1);

69 (
X
.
DB
=
ARód
[
A
](A));

70 
	}
}

72 
	$X6502_DMW
(
uöt32
 
A
, 
uöt8
 
V
)

74 
	`ADDCYC
(1);

75 
BWrôe
[
A
](A,
V
);

76 
	}
}

78 
	#PUSH
(
V
) \

80 
uöt8
 
VTMP
=
V
; \

81 
	`WrRAM
(0x100+
_S
,
VTMP
); \

82 
_S
--; \

83 }

	)

85 
	#POP
(Ë
	`RdRAM
(0x100+(++
_S
))

	)

87 
uöt8
 
	gZNTabÀ
[256];

91 
	#X_ZN
(
z‹t
Ë
_P
&=~(
Z_FLAG
|
N_FLAG
);_P|=
ZNTabÀ
[z‹t]

	)

92 
	#X_ZNT
(
z‹t
Ë
_P
|=
ZNTabÀ
[z‹t]

	)

94 
	#JR
(
c⁄d
); \

96 if(
c⁄d
) \

98 
uöt32
 
tmp
; \

99 
öt32
 
di•
; \

100 
di•
=(
öt8
)
	`RdMem
(
_PC
); \

101 
_PC
++; \

102 
	`ADDCYC
(1); \

103 
tmp
=
_PC
; \

104 
_PC
+=
di•
; \

105 if((
tmp
^
_PC
)&0x100) \

106 
	`ADDCYC
(1); \

108 
_PC
++; \

109 }

	)

112 
	#LDA
 
_A
=
x
;
	`X_ZN
(_A)

	)

113 
	#LDX
 
_X
=
x
;
	`X_ZN
(_X)

	)

114 
	#LDY
 
_Y
=
x
;
	`X_ZN
(_Y)

	)

117 
	#AND
 
_A
&=
x
;
	`X_ZN
(_A)

	)

118 
	#BIT
 
_P
&=~(
Z_FLAG
|
V_FLAG
|
N_FLAG
);_P|=
ZNTabÀ
[
x
&
_A
]&Z_FLAG;_P|=x&(V_FLAG|N_FLAG)

	)

119 
	#EOR
 
_A
^=
x
;
	`X_ZN
(_A)

	)

120 
	#ORA
 
_A
|=
x
;
	`X_ZN
(_A)

	)

122 
	#ADC
 { \

123 
uöt32
 
l
=
_A
+
x
+(
_P
&1); \

124 
_P
&=~(
Z_FLAG
|
C_FLAG
|
N_FLAG
|
V_FLAG
); \

125 
_P
|=((((
_A
^
x
)&0x80)^0x80Ë& ((_A^
l
)&0x80))>>1; \

126 
_P
|=(
l
>>8)&
C_FLAG
; \

127 
_A
=
l
; \

128 
	`X_ZNT
(
_A
); \

129 }

	)

131 
	#SBC
 { \

132 
uöt32
 
l
=
_A
-
x
-((
_P
&1)^1); \

133 
_P
&=~(
Z_FLAG
|
C_FLAG
|
N_FLAG
|
V_FLAG
); \

134 
_P
|=((
_A
^
l
)&(_A^
x
)&0x80)>>1; \

135 
_P
|=((
l
>>8)&
C_FLAG
)^C_FLAG; \

136 
_A
=
l
; \

137 
	`X_ZNT
(
_A
); \

138 }

	)

140 
	#CMPL
(
a1
,
a2
) { \

141 
uöt32
 
t
=
a1
-
a2
; \

142 
	`X_ZN
(
t
&0xFF); \

143 
_P
&=~
C_FLAG
; \

144 
_P
|=((
t
>>8)&
C_FLAG
)^C_FLAG; \

145 }

	)

148 
	#AXS
 { \

149 
uöt32
 
t
=(
_A
&
_X
)-
x
; \

150 
	`X_ZN
(
t
&0xFF); \

151 
_P
&=~
C_FLAG
; \

152 
_P
|=((
t
>>8)&
C_FLAG
)^C_FLAG; \

153 
_X
=
t
; \

154 }

	)

156 
	#CMP
 
	`CMPL
(
_A
,
x
)

	)

157 
	#CPX
 
	`CMPL
(
_X
,
x
)

	)

158 
	#CPY
 
	`CMPL
(
_Y
,
x
)

	)

161 
	#DEC
 
x
--;
	`X_ZN
(x)

	)

162 
	#INC
 
x
++;
	`X_ZN
(x)

	)

164 
	#ASL
 
_P
&=~
C_FLAG
;_P|=
x
>>7;x<<=1;
	`X_ZN
(x)

	)

165 
	#LSR
 
_P
&=~(
C_FLAG
|
N_FLAG
|
Z_FLAG
);_P|=
x
&1;x>>=1;
	`X_ZNT
(x)

	)

168 
	#LSRA
 
_P
&=~(
C_FLAG
|
N_FLAG
|
Z_FLAG
);_P|=
_A
&1;_A>>=1;
	`X_ZNT
(_A)

	)

170 
	#ROL
 { \

171 
uöt8
 
l
=
x
>>7; \

172 
x
<<=1; \

173 
x
|=
_P
&
C_FLAG
; \

174 
_P
&=~(
Z_FLAG
|
N_FLAG
|
C_FLAG
); \

175 
_P
|=
l
; \

176 
	`X_ZNT
(
x
); \

177 }

	)

178 
	#ROR
 { \

179 
uöt8
 
l
=
x
&1; \

180 
x
>>=1; \

181 
x
|=(
_P
&
C_FLAG
)<<7; \

182 
_P
&=~(
Z_FLAG
|
N_FLAG
|
C_FLAG
); \

183 
_P
|=
l
; \

184 
	`X_ZNT
(
x
); \

185 }

	)

192 
	#GëAB
(
èrgë
) \

194 
èrgë
=
	`RdMem
(
_PC
); \

195 
_PC
++; \

196 
èrgë
|=
	`RdMem
(
_PC
)<<8; \

197 
_PC
++; \

198 }

	)

201 
	#GëABIRD
(
èrgë
, 
i
) \

203 
tmp
; \

204 
	`GëAB
(
tmp
); \

205 
èrgë
=
tmp
; \

206 
èrgë
+=
i
; \

207 if((
èrgë
^
tmp
)&0x100) \

209 
èrgë
&=0xFFFF; \

210 
	`RdMem
(
èrgë
^0x100); \

211 
	`ADDCYC
(1); \

213 }

	)

216 
	#GëABIWR
(
èrgë
, 
i
) \

218 
π
; \

219 
	`GëAB
(
π
); \

220 
èrgë
=
π
; \

221 
èrgë
+=
i
; \

222 
èrgë
&=0xFFFF; \

223 
	`RdMem
((
èrgë
&0x00FF)|(
π
&0xFF00)); \

224 }

	)

227 
	#GëZP
(
èrgë
) \

229 
èrgë
=
	`RdMem
(
_PC
); \

230 
_PC
++; \

231 }

	)

234 
	#GëZPI
(
èrgë
,
i
) \

236 
èrgë
=
i
+
	`RdMem
(
_PC
); \

237 
_PC
++; \

238 }

	)

241 
	#GëIX
(
èrgë
) \

243 
uöt8
 
tmp
; \

244 
tmp
=
	`RdMem
(
_PC
); \

245 
_PC
++; \

246 
tmp
+=
_X
; \

247 
èrgë
=
	`RdRAM
(
tmp
); \

248 
tmp
++; \

249 
èrgë
|=
	`RdRAM
(
tmp
)<<8; \

250 }

	)

253 
	#GëIYRD
(
èrgë
) \

255 
π
; \

256 
uöt8
 
tmp
; \

257 
tmp
=
	`RdMem
(
_PC
); \

258 
_PC
++; \

259 
π
=
	`RdRAM
(
tmp
); \

260 
tmp
++; \

261 
π
|=
	`RdRAM
(
tmp
)<<8; \

262 
èrgë
=
π
; \

263 
èrgë
+=
_Y
; \

264 if((
èrgë
^
π
)&0x100) \

266 
èrgë
&=0xFFFF; \

267 
	`RdMem
(
èrgë
^0x100); \

268 
	`ADDCYC
(1); \

270 }

	)

273 
	#GëIYWR
(
èrgë
) \

275 
π
; \

276 
uöt8
 
tmp
; \

277 
tmp
=
	`RdMem
(
_PC
); \

278 
_PC
++; \

279 
π
=
	`RdRAM
(
tmp
); \

280 
tmp
++; \

281 
π
|=
	`RdRAM
(
tmp
)<<8; \

282 
èrgë
=
π
; \

283 
èrgë
+=
_Y
; \

284 
èrgë
&=0xFFFF; \

285 
	`RdMem
((
èrgë
&0x00FF)|(
π
&0xFF00)); \

286 }

	)

293 
	#RMW_A
(
›
Ë{
uöt8
 
x
=
_A
; op; _A=x; ; }

	)

294 
	#RMW_AB
(
›
Ë{
A
; 
uöt8
 
x
; 
	`GëAB
(A); x=
	`RdMem
(A); 
	`WrMem
(A,x); op; WrMem(A,x); ; }

	)

295 
	#RMW_ABI
(
ªg
,
›
Ë{
A
; 
uöt8
 
x
; 
	`GëABIWR
(A,ªg); x=
	`RdMem
(A); 
	`WrMem
(A,x); op; WrMem(A,x); ; }

	)

296 
	#RMW_ABX
(
›
Ë
	`RMW_ABI
(
_X
,›)

	)

297 
	#RMW_ABY
(
›
Ë
	`RMW_ABI
(
_Y
,›)

	)

298 
	#RMW_IX
(
›
Ë{
A
; 
uöt8
 
x
; 
	`GëIX
(A); x=
	`RdMem
(A); 
	`WrMem
(A,x); op; WrMem(A,x); ; }

	)

299 
	#RMW_IY
(
›
Ë{
A
; 
uöt8
 
x
; 
	`GëIYWR
(A); x=
	`RdMem
(A); 
	`WrMem
(A,x); op; WrMem(A,x); ; }

	)

300 
	#RMW_ZP
(
›
Ë{
uöt8
 
A
; uöt8 
x
; 
	`GëZP
(A); x=
	`RdRAM
(A); op; 
	`WrRAM
(A,x); ; }

	)

301 
	#RMW_ZPX
(
›
Ë{
uöt8
 
A
; uöt8 
x
; 
	`GëZPI
(A,
_X
); x=
	`RdRAM
(A); op; 
	`WrRAM
(A,x); ;}

	)

303 
	#LD_IM
(
›
Ë{
uöt8
 
x
; x=
	`RdMem
(
_PC
); _PC++; op; ;}

	)

304 
	#LD_ZP
(
›
Ë{
uöt8
 
A
; uöt8 
x
; 
	`GëZP
(A); x=
	`RdRAM
(A); op; ;}

	)

305 
	#LD_ZPX
(
›
Ë{
uöt8
 
A
; uöt8 
x
; 
	`GëZPI
(A,
_X
); x=
	`RdRAM
(A); op; ;}

	)

306 
	#LD_ZPY
(
›
Ë{
uöt8
 
A
; uöt8 
x
; 
	`GëZPI
(A,
_Y
); x=
	`RdRAM
(A); op; ;}

	)

307 
	#LD_AB
(
›
Ë{
A
; 
	`__©åibuã__
((
unu£d
)Ë
uöt8
 
x
; 
	`GëAB
(A); x=
	`RdMem
(A); op; ; }

	)

308 
	#LD_ABI
(
ªg
,
›
Ë{
A
; 
	`__©åibuã__
((
unu£d
)Ë
uöt8
 
x
; 
	`GëABIRD
(A,ªg); x=
	`RdMem
(A); op; ;}

	)

309 
	#LD_ABX
(
›
Ë
	`LD_ABI
(
_X
,›)

	)

310 
	#LD_ABY
(
›
Ë
	`LD_ABI
(
_Y
,›)

	)

311 
	#LD_IX
(
›
Ë{
A
; 
uöt8
 
x
; 
	`GëIX
(A); x=
	`RdMem
(A); op; ;}

	)

312 
	#LD_IY
(
›
Ë{
A
; 
uöt8
 
x
; 
	`GëIYRD
(A); x=
	`RdMem
(A); op; ;}

	)

314 
	#ST_ZP
(
r
Ë{
uöt8
 
A
; 
	`GëZP
(A); 
	`WrRAM
(A,r); ;}

	)

315 
	#ST_ZPX
(
r
Ë{
uöt8
 
A
; 
	`GëZPI
(A,
_X
); 
	`WrRAM
(A,r); ;}

	)

316 
	#ST_ZPY
(
r
Ë{
uöt8
 
A
; 
	`GëZPI
(A,
_Y
); 
	`WrRAM
(A,r); ;}

	)

317 
	#ST_AB
(
r
Ë{
A
; 
	`GëAB
(A); 
	`WrMem
(A,r); ;}

	)

318 
	#ST_ABI
(
ªg
,
r
Ë{
A
; 
	`GëABIWR
(A,ªg); 
	`WrMem
(A,r); ; }

	)

319 
	#ST_ABX
(
r
Ë
	`ST_ABI
(
_X
,r)

	)

320 
	#ST_ABY
(
r
Ë
	`ST_ABI
(
_Y
,r)

	)

321 
	#ST_IX
(
r
Ë{
A
; 
	`GëIX
(A); 
	`WrMem
(A,r); ; }

	)

322 
	#ST_IY
(
r
Ë{
A
; 
	`GëIYWR
(A); 
	`WrMem
(A,r); ; }

	)

324 
uöt8
 
	gCycTabÀ
[256] =

344 
	$X6502_IRQBegö
(
w
)

346 
_IRQlow
|=
w
;

347 
	}
}

349 
	$X6502_IRQEnd
(
w
)

351 
_IRQlow
&=~
w
;

352 
	}
}

354 
	$TriggîNMI
()

356 
_IRQlow
|=
FCEU_IQNMI
;

357 
	}
}

359 
	$TriggîNMI2
()

361 
_IRQlow
|=
FCEU_IQNMI2
;

362 
	}
}

364 
	$X6502_Re£t
()

366 
_IRQlow
=
FCEU_IQRESET
;

367 
	}
}

371 
	$X6502_Inô
()

373 
i
;

376 
	`mem£t
((*)&
X
,0,(X));

378 
i
 = 0; i < (
ZNTabÀ
); i++)

380 if(!
i
)

382 
ZNTabÀ
[
i
] = 
Z_FLAG
;

384 i‡–
i
 & 0x80 )

386 
ZNTabÀ
[
i
] = 
N_FLAG
;

390 
ZNTabÀ
[
i
] = 0;

393 
	}
}

395 
SèckAddrBackup
;

396 
	$X6502_Powî
()

398 
_cou¡
=
_tcou¡
=
_IRQlow
=
_PC
=
_A
=
_X
=
_Y
=
_P
=
_PI
=
_DB
=
_jammed
=0;

399 
_S
=0xFD;

400 
time°amp
=
soundtime°amp
=0;

401 
	`X6502_Re£t
();

403 
	}
}

405 
	$X6502_Run
(
öt32
 
cy˛es
)

407 if(
PAL
)

408 
cy˛es
*=15;

410 
cy˛es
*=16;

412 
_cou¡
+=
cy˛es
;

413 
ã°
;Åest++;

414 
_cou¡
>0)

416 
öt32
 
ãmp
;

417 
uöt8
 
b1
;

419 if(
_IRQlow
)

421 if(
_IRQlow
&
FCEU_IQRESET
)

423 
	`DEBUG
–if(
debug_loggögCD
Ë
	`LogCDVe˘‹s
(0xFFFC); )

424 
_PC
=
	`RdMem
(0xFFFC);

425 
_PC
|=
	`RdMem
(0xFFFD)<<8;

426 
_jammed
=0;

427 
_PI
=
_P
=
I_FLAG
;

428 
_IRQlow
&=~
FCEU_IQRESET
;

430 if(
_IRQlow
&
FCEU_IQNMI2
)

432 
_IRQlow
&=~
FCEU_IQNMI2
;

433 
_IRQlow
|=
FCEU_IQNMI
;

435 if(
_IRQlow
&
FCEU_IQNMI
)

437 if(!
_jammed
)

439 
	`ADDCYC
(7);

440 
	`PUSH
(
_PC
>>8);

441 
	`PUSH
(
_PC
);

442 
	`PUSH
((
_P
&~
B_FLAG
)|(
U_FLAG
));

443 
_P
|=
I_FLAG
;

444 
	`DEBUG
–if(
debug_loggögCD
Ë
	`LogCDVe˘‹s
(0xFFFA) );

445 
_PC
=
	`RdMem
(0xFFFA);

446 
_PC
|=
	`RdMem
(0xFFFB)<<8;

447 
_IRQlow
&=~
FCEU_IQNMI
;

452 if(!(
_PI
&
I_FLAG
Ë&& !
_jammed
)

454 
	`ADDCYC
(7);

455 
	`PUSH
(
_PC
>>8);

456 
	`PUSH
(
_PC
);

457 
	`PUSH
((
_P
&~
B_FLAG
)|(
U_FLAG
));

458 
_P
|=
I_FLAG
;

459 
	`DEBUG
–if(
debug_loggögCD
Ë
	`LogCDVe˘‹s
(0xFFFE) );

460 
_PC
=
	`RdMem
(0xFFFE);

461 
_PC
|=
	`RdMem
(0xFFFF)<<8;

464 
_IRQlow
&=~(
FCEU_IQTEMP
);

465 if(
_cou¡
<=0)

467 
_PI
=
_P
;

474 
	`DEBUG
–
	`DebugCy˛e
() );

478 
_PI
=
_P
;

479 
b1
=
	`RdMem
(
_PC
);

481 
	`ADDCYC
(
CycTabÀ
[
b1
]);

483 
ãmp
=
_tcou¡
;

484 
_tcou¡
=0;

485 if(
M≠IRQHook
Ë
	`M≠IRQHook
(
ãmp
);

487 i‡(!
ovî˛ockög
)

488 
	`FCEU_SoundCPUHook
(
ãmp
);

490 
uöt32
 
œ°PC
 = 
_PC
;

491 
_PC
++;

492 
b1
)

494 
	~"›s.öc
"

496 i‡(
œ°PC
 =
_PC
 && 
_cou¡
 > 0) {

498 
	`ADDCYC
(
_cou¡
 / 48);

501 
	}
}

505 
	$FCEUI_NMI
()

507 
_IRQlow
|=
FCEU_IQNMI
;

508 
	}
}

510 
	$FCEUI_IRQ
()

512 
_IRQlow
|=
FCEU_IQTEMP
;

513 
	}
}

515 
	$FCEUI_GëIVe˘‹s
(
uöt16
 *
ª£t
, uöt16 *
úq
, uöt16 *
nmi
)

517 
f˚uödbg
=1;

519 *
ª£t
=
	`RdMem
(0xFFFC);

520 *
ª£t
|=
	`RdMem
(0xFFFD)<<8;

521 *
nmi
=
	`RdMem
(0xFFFA);

522 *
nmi
|=
	`RdMem
(0xFFFB)<<8;

523 *
úq
=
	`RdMem
(0xFFFE);

524 *
úq
|=
	`RdMem
(0xFFFF)<<8;

525 
f˚uödbg
=0;

526 
	}
}

529 c⁄° 
uöt8
 
	g›size
[256] = {

530 #ifde‡
BRK_3BYTE_HACK


566 c⁄° 
uöt8
 
	g›ty≥
[256] = {

604 c⁄° 
uöt8
 
	g›wrôe
[256] = {

	@fceux-am/src/x6502.h

21 #i‚de‡
_X6502H


23 
	~"x6502°ru˘.h
"

25 
X6502
 
X
;

29 c⁄° 
uöt8
 
›size
[256];

32 c⁄° 
uöt8
 
›ty≥
[256];

35 c⁄° 
uöt8
 
›wrôe
[256];

39 
X6502_Debug
((*
CPUHook
)(
X6502
 *),

40 
	$uöt8
 (*
RódHook
)(
X6502
 *, ),

41 (*
WrôeHook
)(
X6502
 *, , 
uöt8
));

47 
	`X6502_RunDebug
(
öt32
 
cy˛es
);

48 
	#X6502_Run
(
x
Ë
	`X6502_RunDebug
(x)

	)

51 
uöt32
 
time°amp
;

52 
uöt32
 
soundtime°amp
;

53 
sˇ∆öe
;

55 
	#N_FLAG
 0x80

	)

56 
	#V_FLAG
 0x40

	)

57 
	#U_FLAG
 0x20

	)

58 
	#B_FLAG
 0x10

	)

59 
	#D_FLAG
 0x08

	)

60 
	#I_FLAG
 0x04

	)

61 
	#Z_FLAG
 0x02

	)

62 
	#C_FLAG
 0x01

	)

64 (*
M≠IRQHook
)(
a
);

66 
	#NTSC_CPU
 (
dídy
 ? 1773447.467 : 1789772.7272727272727272)

	)

67 
	#PAL_CPU
 1662607.125

	)

69 
	#FCEU_IQEXT
 0x001

	)

70 
	#FCEU_IQEXT2
 0x002

	)

72 
	#FCEU_IQRESET
 0x020

	)

73 
	#FCEU_IQNMI2
 0x040

74 
	#FCEU_IQNMI
 0x080

	)

75 
	#FCEU_IQDPCM
 0x100

	)

76 
	#FCEU_IQFCOUNT
 0x200

	)

77 
	#FCEU_IQTEMP
 0x800

	)

79 
	`X6502_Inô
();

80 
	`X6502_Re£t
();

81 
	`X6502_Powî
();

83 
	`TriggîNMI
();

84 
	`TriggîNMI2
();

86 
uöt8
 
	`X6502_DMR
(
uöt32
 
A
);

87 
	`X6502_DMW
(
uöt32
 
A
, 
uöt8
 
V
);

89 
	`X6502_IRQBegö
(
w
);

90 
	`X6502_IRQEnd
(
w
);

92 
	#_X6502H


	)

	@fceux-am/src/x6502abbrev.h

1 #i‚de‡
_X6502ABBREV_H_


2 
	#_X6502ABBREV_H_


	)

6 
	#_PC
 
X
.
PC


	)

7 
	#_A
 
X
.
A


	)

8 
	#_X
 
X
.
	)
X

9 
	#_Y
 
X
.
Y


	)

10 
	#_S
 
X
.
S


	)

11 
	#_P
 
X
.
P


	)

12 
	#_PI
 
X
.
mooPI


	)

13 
	#_DB
 
X
.
DB


	)

14 
	#_cou¡
 
X
.
cou¡


	)

15 
	#_tcou¡
 
X
.
tcou¡


	)

16 
	#_IRQlow
 
X
.
IRQlow


	)

17 
	#_jammed
 
X
.
jammed


	)

	@fceux-am/src/x6502struct.h

1 #i‚de‡
_X6502STRUCTH


2 
	#_X6502STRUCTH


	)

4 
	s__X6502
 {

5 
öt32
 
	mtcou¡
;

6 
uöt16
 
	mPC
;

9 
uöt8
 
	mA
,
	mX
,
	mY
,
	mS
,
	mP
,
	mmooPI
;

10 
uöt8
 
	mjammed
;

12 
öt32
 
	mcou¡
;

13 
uöt32
 
	mIRQlow
;

15 
uöt8
 
	mDB
;

17 
	m¥ìxec
;

18 } 
	tX6502
;

	@nemu/include/common.h

1 #i‚de‡
__COMMON_H__


2 
	#__COMMON_H__


	)

4 
	~<°döt.h
>

5 
	~<°dboﬁ.h
>

6 
	~<°rög.h
>

8 
	~<gíî©ed/autoc⁄f.h
>

9 
	~<ma¸o.h
>

11 #ifde‡
CONFIG_TARGET_AM


12 
	~<klib.h
>

14 
	~<as£π.h
>

15 
	~<°dlib.h
>

18 #i‡
CONFIG_MBASE
 + 
CONFIG_MSIZE
 > 0x100000000ul

19 
	#PMEM64
 1

	)

22 
	$MUXDEF
(
	tCONFIG_ISA64
, 
	tuöt64_t
, 
	tuöt32_t
Ë
	tw‹d_t
;

23 
	$MUXDEF
(
	tCONFIG_ISA64
, 
	töt64_t
, 
	töt32_t
Ë
	tsw‹d_t
;

24 
	#FMT_WORD
 
	`MUXDEF
(
CONFIG_ISA64
, "0x%016lx", "0x%08x")

	)

26 
w‹d_t
 
	tvaddr_t
;

27 
	$MUXDEF
(
	tPMEM64
, 
	tuöt64_t
, 
	tuöt32_t
Ë
	t∑ddr_t
;

28 
	#FMT_PADDR
 
	`MUXDEF
(
PMEM64
, "0x%016lx", "0x%08x")

	)

29 
uöt16_t
 
	tiﬂddr_t
;

31 
	~<debug.h
>

	@nemu/include/config/audio/ctl/mmio.h

	@nemu/include/config/cc.h

	@nemu/include/config/cc/debug.h

	@nemu/include/config/cc/gcc.h

	@nemu/include/config/cc/o2.h

	@nemu/include/config/cc/og.h

	@nemu/include/config/cc/opt.h

	@nemu/include/config/device.h

	@nemu/include/config/difftest/ref/name.h

	@nemu/include/config/difftest/ref/path.h

	@nemu/include/config/disk/ctl/mmio.h

	@nemu/include/config/disk/img/path.h

	@nemu/include/config/engine.h

	@nemu/include/config/engine/interpreter.h

	@nemu/include/config/fb/addr.h

	@nemu/include/config/has/audio.h

	@nemu/include/config/has/disk.h

	@nemu/include/config/has/keyboard.h

	@nemu/include/config/has/serial.h

	@nemu/include/config/has/timer.h

	@nemu/include/config/has/vga.h

	@nemu/include/config/i8042/data/mmio.h

	@nemu/include/config/isa.h

	@nemu/include/config/isa/riscv32.h

	@nemu/include/config/isa/riscv64.h

	@nemu/include/config/isa64.h

	@nemu/include/config/itrace.h

	@nemu/include/config/itrace/cond.h

	@nemu/include/config/mbase.h

	@nemu/include/config/mem/random.h

	@nemu/include/config/mode/system.h

	@nemu/include/config/msize.h

	@nemu/include/config/pc/reset/offset.h

	@nemu/include/config/pmem/garray.h

	@nemu/include/config/rt/check.h

	@nemu/include/config/rtc/mmio.h

	@nemu/include/config/sb/addr.h

	@nemu/include/config/sb/size.h

	@nemu/include/config/serial/mmio.h

	@nemu/include/config/target/native/elf.h

	@nemu/include/config/timer/gettimeofday.h

	@nemu/include/config/trace.h

	@nemu/include/config/trace/end.h

	@nemu/include/config/trace/start.h

	@nemu/include/config/vga/ctl/mmio.h

	@nemu/include/config/vga/show/screen.h

	@nemu/include/config/vga/size/400x300.h

	@nemu/include/cpu/cpu.h

1 #i‚de‡
__CPU_CPU_H__


2 
	#__CPU_CPU_H__


	)

4 
	~<comm⁄.h
>

6 
˝u_exec
(
uöt64_t
 
n
);

8 
£t_√mu_°©e
(
°©e
, 
vaddr_t
 
pc
, 
hÆt_ªt
);

9 
övÆid_ö°
(
vaddr_t
 
thi•c
);

11 
	#NEMUTRAP
(
thi•c
, 
code
Ë
	`£t_√mu_°©e
(
NEMU_END
,Åhi•c, code)

	)

12 
	#INV
(
thi•c
Ë
	`övÆid_ö°
—hi•c)

	)

	@nemu/include/cpu/decode.h

1 #i‚de‡
__CPU_DECODE_H__


2 
	#__CPU_DECODE_H__


	)

4 
	~<iß.h
>

6 
	sDecode
 {

7 
vaddr_t
 
	mpc
;

8 
vaddr_t
 
	m¢pc
;

9 
vaddr_t
 
	md≈c
;

10 
ISADecodeInfo
 
	miß
;

11 
IFDEF
(
CONFIG_ITRACE
, 
logbuf
[128]);

12 } 
	tDecode
;

15 
__©åibuã__
((
Æways_ölöe
))

16 
ölöe
 
	$∑âîn_decode
(c⁄° *
°r
, 
Àn
,

17 
uöt32_t
 *
key
, uöt32_à*
mask
, uöt32_à*
shi·
) {

18 
uöt32_t
 
__key
 = 0, 
__mask
 = 0, 
__shi·
 = 0;

19 
	#ma¸o
(
i
) \

20 i‡((
i
Ë>
Àn
Ë
föish
; \

22 
c
 = 
°r
[
i
]; \

23 i‡(
c
 != ' ') { \

24 
	`As£π
(
c
 == '0' || c == '1' || c == '?', \

25 "övÆid ch¨a˘î '%c' i¿∑âî¿°rög", 
c
); \

26 
__key
 = (__key << 1Ë| (
c
 == '1' ? 1 : 0); \

27 
__mask
 = (__mask << 1Ë| (
c
 == '?' ? 0 : 1); \

28 
__shi·
 = (
c
 == '?' ? __shift + 1 : 0); \

30 }

	)

32 
	#ma¸o2
(
i
Ë
	`ma¸o
(i); ma¸o((iË+ 1)

	)

33 
	#ma¸o4
(
i
Ë
	`ma¸o2
(i); ma¸o2((iË+ 2)

	)

34 
	#ma¸o8
(
i
Ë
	`ma¸o4
(i); ma¸o4((iË+ 4)

	)

35 
	#ma¸o16
(
i
Ë
	`ma¸o8
(i); ma¸o8((iË+ 8)

	)

36 
	#ma¸o32
(
i
Ë
	`ma¸o16
(i); ma¸o16((iË+ 16)

	)

37 
	#ma¸o64
(
i
Ë
	`ma¸o32
(i); ma¸o32((iË+ 32)

	)

38 
	`ma¸o64
(0);

39 
	`∑nic
("patternÅooÜong");

40 #unde‡
ma¸o


41 
föish
:

42 *
key
 = 
__key
 >> 
__shi·
;

43 *
mask
 = 
__mask
 >> 
__shi·
;

44 *
shi·
 = 
__shi·
;

45 
	}
}

47 
__©åibuã__
((
Æways_ölöe
))

48 
ölöe
 
	$∑âîn_decode_hex
(c⁄° *
°r
, 
Àn
,

49 
uöt32_t
 *
key
, uöt32_à*
mask
, uöt32_à*
shi·
) {

50 
uöt32_t
 
__key
 = 0, 
__mask
 = 0, 
__shi·
 = 0;

51 
	#ma¸o
(
i
) \

52 i‡((
i
Ë>
Àn
Ë
föish
; \

54 
c
 = 
°r
[
i
]; \

55 i‡(
c
 != ' ') { \

56 
	`As£π
((
c
 >= '0' && c <= '9') || (c >= 'a' && c <= 'f') || c == '?', \

57 "övÆid ch¨a˘î '%c' i¿∑âî¿°rög", 
c
); \

58 
__key
 = (__key << 4Ë| (
c
 == '?' ? 0 : (c >= '0' && c <= '9') ? c - '0' : c - 'a' + 10); \

59 
__mask
 = (__mask << 4Ë| (
c
 == '?' ? 0 : 0xf); \

60 
__shi·
 = (
c
 == '?' ? __shift + 4 : 0); \

62 }

	)

64 
	`ma¸o16
(0);

65 
	`∑nic
("patternÅooÜong");

66 #unde‡
ma¸o


67 
föish
:

68 *
key
 = 
__key
 >> 
__shi·
;

69 *
mask
 = 
__mask
 >> 
__shi·
;

70 *
shi·
 = 
__shi·
;

71 
	}
}

75 
	#INSTPAT
(
∑âîn
, ...) do { \

76 
uöt32_t
 
key
, 
mask
, 
shi·
; \

77 
	`∑âîn_decode
(
∑âîn
, 
	`STRLEN
’©ã∫), &
key
, &
mask
, &
shi·
); \

78 i‡(((
	`INSTPAT_INST
(
s
Ë>> 
shi·
Ë& 
mask
Ë=
key
) { \

79 
	`INSTPAT_MATCH
(
s
, ##
__VA_ARGS__
); \

80 *(
__ö°∑t_íd
); \

82 } 0)

	)

84 
	#INSTPAT_START
(
«me
Ë{ c⁄° ** 
__ö°∑t_íd
 = &&
	`c⁄ˇt
(
__ö°∑t_íd_
,Çame);

	)

85 
	#INSTPAT_END
(
«me
Ë
	`c⁄ˇt
(
__ö°∑t_íd_
,Çame): ; }

	)

	@nemu/include/cpu/difftest.h

1 #i‚de‡
__CPU_DIFFTEST_H__


2 
	#__CPU_DIFFTEST_H__


	)

4 
	~<comm⁄.h
>

5 
	~<dif·e°-def.h
>

7 #ifde‡
CONFIG_DIFFTEST


8 
dif·e°_skù_ªf
();

9 
dif·e°_skù_dut
(
ƒ_ªf
, 
ƒ_dut
);

10 
dif·e°_£t_∑tch
((*
‚
)(*
¨g
), *arg);

11 
	`dif·e°_°ï
(
vaddr_t
 
pc
, vaddr_à
≈c
);

12 
	`dif·e°_dëach
();

13 
	`dif·e°_©èch
();

15 
ölöe
 
	$dif·e°_skù_ªf
(Ë{
	}
}

16 
ölöe
 
	$dif·e°_skù_dut
(
ƒ_ªf
, 
ƒ_dut
Ë{
	}
}

17 
ölöe
 
	$dif·e°_£t_∑tch
((*
‚
)(*
¨g
), *¨gË{
	}
}

18 
ölöe
 
	$dif·e°_°ï
(
vaddr_t
 
pc
, vaddr_à
≈c
Ë{
	}
}

19 
ölöe
 
	$dif·e°_dëach
(Ë{
	}
}

20 
ölöe
 
	$dif·e°_©èch
(Ë{
	}
}

23 (*
ªf_dif·e°_mem˝y
)(
∑ddr_t
 
addr
, *
buf
, 
size_t
 
n
, 
boﬁ
 
dúe˘i⁄
);

24 (*
ªf_dif·e°_ªg˝y
)(*
dut
, 
boﬁ
 
dúe˘i⁄
);

25 (*
ªf_dif·e°_exec
)(
uöt64_t
 
n
);

26 (*
ªf_dif·e°_øi£_öå
)(
uöt64_t
 
NO
);

28 
ölöe
 
boﬁ
 
	$dif·e°_check_ªg
(c⁄° *
«me
, 
vaddr_t
 
pc
, 
w‹d_t
 
ªf
, w‹d_à
dut
) {

29 i‡(
ªf
 !
dut
) {

30 
	`Log
("%†i†dif„ª¡á·îÉxecutög in°ru˘i⁄áàp¯" 
FMT_WORD


31 ",Ñighà" 
FMT_WORD
 ", wrong = " FMT_WORD ", diff = " FMT_WORD,

32 
«me
, 
pc
, 
ªf
, 
dut
,Ñef ^ dut);

33  
Ál£
;

35  
åue
;

36 
	}
}

	@nemu/include/cpu/ifetch.h

1 #i‚de‡
__CPU_IFETCH_H__


3 
	~<mem‹y/vaddr.h
>

5 
ölöe
 
uöt32_t
 
	$ö°_„tch
(
vaddr_t
 *
pc
, 
Àn
) {

6 
uöt32_t
 
ö°
 = 
	`vaddr_i„tch
(*
pc
, 
Àn
);

7 (*
pc
Ë+
Àn
;

8  
ö°
;

9 
	}
}

	@nemu/include/debug.h

1 #i‚de‡
__DEBUG_H__


2 
	#__DEBUG_H__


	)

4 
	~<comm⁄.h
>

5 
	~<°dio.h
>

6 
	~<utûs.h
>

8 
	#Log
(
f‹m©
, ...) \

9 
	`_Log
(
	`ASNI_FMT
("[%s:%d %s] " 
f‹m©
, 
ASNI_FG_BLUE
) "\n", \

10 
__FILE__
, 
__LINE__
, 
__func__
, ## 
__VA_ARGS__
)

	)

12 
	#As£π
(
c⁄d
, 
f‹m©
, ...) \

14 i‡(!(
c⁄d
)) { \

15 
	`MUXDEF
(
CONFIG_TARGET_AM
, 
	`¥ötf
(
	`ASNI_FMT
(
f‹m©
, 
ASNI_FG_RED
Ë"\n", ## 
__VA_ARGS__
), \

16 (
	`fÊush
(
°dout
), 
	`Ârötf
(
°dîr
, 
	`ASNI_FMT
(
f‹m©
, 
ASNI_FG_RED
Ë"\n", ## 
__VA_ARGS__
))); \

17 
	`IFNDEF
(
CONFIG_TARGET_AM
, 
FILE
* 
log_Â
; 
	`fÊush
(log_fp)); \

18 
	`as£π_Áû_msg
(); \

19 
	`as£π_Áû_msg
(); \

20 
	`as£π
(
c⁄d
); \

22 } 0)

	)

24 
	#∑nic
(
f‹m©
, ...Ë
	`As£π
(0, f‹m©, ## 
__VA_ARGS__
)

	)

26 
	#TODO
(Ë
	`∑nic
("∂ó£ im∂emíàme")

	)

	@nemu/include/device/alarm.h

1 #i‚de‡
__DEVICE_ALARM_H__


2 
	#__DEVICE_ALARM_H__


	)

4 
	#TIMER_HZ
 60

	)

6 (*
	gÆ¨m_h™dÀr_t
) ();

7 
add_Æ¨m_h™dÀ
(
Æ¨m_h™dÀr_t
 
h
);

	@nemu/include/device/map.h

1 #i‚de‡
__DEVICE_MAP_H__


2 
	#__DEVICE_MAP_H__


	)

4 
	~<˝u/dif·e°.h
>

6 (*
	tio_ˇŒback_t
)(
	tuöt32_t
, , 
	tboﬁ
);

7 
uöt8_t
* 
	`√w_•a˚
(
size
);

10 c⁄° *
«me
;

12 
∑ddr_t
 
low
;

13 
∑ddr_t
 
high
;

14 *
•a˚
;

15 
io_ˇŒback_t
 
ˇŒback
;

16 } 
	tIOM≠
;

18 
ölöe
 
boﬁ
 
	$m≠_öside
(
IOM≠
 *
m≠
, 
∑ddr_t
 
addr
) {

19  (
addr
 >
m≠
->
low
 &&ádd∏<m≠->
high
);

20 
	}
}

22 
ölöe
 
	$föd_m≠id_by_addr
(
IOM≠
 *
m≠s
, 
size
, 
∑ddr_t
 
addr
) {

23 
i
;

24 
i
 = 0; i < 
size
; i ++) {

25 i‡(
	`m≠_öside
(
m≠s
 + 
i
, 
addr
)) {

26 
	`dif·e°_skù_ªf
();

27  
i
;

31 
	}
}

33 
add_pio_m≠
(c⁄° *
«me
, 
iﬂddr_t
 
addr
,

34 *
•a˚
, 
uöt32_t
 
Àn
, 
io_ˇŒback_t
 
ˇŒback
);

35 
add_mmio_m≠
(c⁄° *
«me
, 
∑ddr_t
 
addr
,

36 *
•a˚
, 
uöt32_t
 
Àn
, 
io_ˇŒback_t
 
ˇŒback
);

38 
w‹d_t
 
m≠_ªad
(
∑ddr_t
 
addr
, 
Àn
, 
IOM≠
 *
m≠
);

39 
m≠_wrôe
(
∑ddr_t
 
addr
, 
Àn
, 
w‹d_t
 
d©a
, 
IOM≠
 *
m≠
);

	@nemu/include/device/mmio.h

1 #i‚de‡
__DEVICE_MMIO_H__


2 
	#__DEVICE_MMIO_H__


	)

4 
	~<comm⁄.h
>

6 
w‹d_t
 
mmio_ªad
(
∑ddr_t
 
addr
, 
Àn
);

7 
mmio_wrôe
(
∑ddr_t
 
addr
, 
Àn
, 
w‹d_t
 
d©a
);

	@nemu/include/difftest-def.h

1 #i‚de‡
__DIFFTEST_DEF_H__


2 
	#__DIFFTEST_DEF_H__


	)

4 
	~<°döt.h
>

5 
	~<gíî©ed/autoc⁄f.h
>

7 íum { 
	mDIFFTEST_TO_DUT
, 
	mDIFFTEST_TO_REF
 };

9 #i‡
deföed
(
CONFIG_ISA_x86
)

10 
	#DIFFTEST_REG_SIZE
 ((
uöt32_t
) * 9)

11 #ñi‡
	`deföed
(
CONFIG_ISA_mùs32
)

	)

12 
	#DIFFTEST_REG_SIZE
 ((
uöt32_t
) * 38)

13 #ñi‡
	`deföed
(
CONFIG_ISA_riscv32
)

	)

14 
	#DIFFTEST_REG_SIZE
 ((
uöt32_t
) * 33)

15 #ñi‡
	`deföed
(
CONFIG_ISA_riscv64
)

	)

16 
	#DIFFTEST_REG_SIZE
 ((
uöt64_t
) * 33)

17 #ñ£

	)

18 #îr‹ 
Unsuµ‹t
 
ISA


	@nemu/include/generated/autoconf.h

7 
	#CONFIG_ISA_riscv64
 1

	)

8 
	#CONFIG_AUDIO_CTL_MMIO
 0xa0000200

	)

9 
	#CONFIG_DIFFTEST_REF_NAME
 "n⁄e"

	)

10 
	#CONFIG_ENGINE
 "öãΩªãr"

	)

11 
	#CONFIG_VGA_SIZE_400x300
 1

	)

12 
	#CONFIG_VGA_SHOW_SCREEN
 1

	)

13 
	#CONFIG_PC_RESET_OFFSET
 0x0

	)

14 
	#CONFIG_RTC_MMIO
 0xa0000048

	)

15 
	#CONFIG_TARGET_NATIVE_ELF
 1

	)

16 
	#CONFIG_HAS_AUDIO
 1

	)

17 
	#CONFIG_MSIZE
 0x8000000

	)

18 
	#CONFIG_DEVICE
 1

	)

19 
	#CONFIG_HAS_KEYBOARD
 1

	)

20 
	#CONFIG_MODE_SYSTEM
 1

	)

21 
	#CONFIG_MEM_RANDOM
 1

	)

22 
	#CONFIG_ITRACE
 1

	)

23 
	#CONFIG_HAS_SERIAL
 1

	)

24 
	#CONFIG_HAS_DISK
 1

	)

25 
	#CONFIG_TRACE_END
 10000

	)

26 
	#CONFIG_FB_ADDR
 0xa1000000

	)

27 
	#CONFIG_HAS_VGA
 1

	)

28 
	#CONFIG_HAS_TIMER
 1

	)

29 
	#CONFIG_DISK_CTL_MMIO
 0xa0000300

	)

30 
	#CONFIG_MBASE
 0x80000000

	)

31 
	#CONFIG_TIMER_GETTIMEOFDAY
 1

	)

32 
	#CONFIG_ENGINE_INTERPRETER
 1

	)

33 
	#CONFIG_CC_Og
 1

	)

34 
	#CONFIG_CC_OPT
 "-Og"

	)

35 
	#CONFIG_SERIAL_MMIO
 0xa00003f8

	)

36 
	#CONFIG_RT_CHECK
 1

	)

37 
	#CONFIG_ISA64
 1

	)

38 
	#CONFIG_I8042_DATA_MMIO
 0xa0000060

	)

39 
	#CONFIG_ITRACE_COND
 "åue"

	)

40 
	#CONFIG_SB_SIZE
 0x10000

	)

41 
	#CONFIG_CC
 "gcc"

	)

42 
	#CONFIG_DIFFTEST_REF_PATH
 "n⁄e"

	)

43 
	#CONFIG_CC_DEBUG
 1

	)

44 
	#CONFIG_TRACE_START
 0

	)

45 
	#CONFIG_DISK_IMG_PATH
 ""

	)

46 
	#CONFIG_CC_GCC
 1

	)

47 
	#CONFIG_SB_ADDR
 0xa1200000

	)

48 
	#CONFIG_TRACE
 1

	)

49 
	#CONFIG_ISA
 "riscv64"

	)

50 
	#CONFIG_VGA_CTL_MMIO
 0xa0000100

	)

51 
	#CONFIG_PMEM_GARRAY
 1

	)

	@nemu/include/isa.h

1 #i‚de‡
__ISA_H__


2 
	#__ISA_H__


	)

5 
	~<iß-def.h
>

9 
	$c⁄ˇt
(
	t__GUEST_ISA__
, 
	t_CPU_°©e
Ë
	tCPU_°©e
;

10 
	$c⁄ˇt
(
	t__GUEST_ISA__
, 
	t_ISADecodeInfo
Ë
	tISADecodeInfo
;

13 
iß_logo
[];

14 
	`öô_iß
();

17 
CPU_°©e
 
˝u
;

18 
	`iß_ªg_di•œy
();

19 
w‹d_t
 
	`iß_ªg_°r2vÆ
(c⁄° *
«me
, 
boﬁ
 *
suc˚ss
);

22 
Decode
;

23 
	`iß_exec_⁄˚
(
Decode
 *
s
);

26 íum { 
MMU_DIRECT
, 
MMU_TRANSLATE
, 
MMU_FAIL
 };

27 íum { 
MEM_TYPE_IFETCH
, 
MEM_TYPE_READ
, 
MEM_TYPE_WRITE
 };

28 íum { 
MEM_RET_OK
, 
MEM_RET_FAIL
, 
MEM_RET_CROSS_PAGE
 };

29 #i‚de‡
iß_mmu_check


30 
	`iß_mmu_check
(
vaddr_t
 
vaddr
, 
Àn
, 
ty≥
);

32 
∑ddr_t
 
	`iß_mmu_å™¶©e
(
vaddr_t
 
vaddr
, 
Àn
, 
ty≥
);

35 
vaddr_t
 
	`iß_øi£_öå
(
w‹d_t
 
NO
, vaddr_à
ïc
);

36 
	#INTR_EMPTY
 ((
w‹d_t
)-1)

	)

37 
w‹d_t
 
	`iß_quîy_öå
();

41 
boﬁ
 
	`iß_dif·e°_checkªgs
(
CPU_°©e
 *
ªf_r
, 
vaddr_t
 
pc
);

42 
	`iß_dif·e°_©èch
();

45 
	`iß_dif·e°_ªg˝y
(*
dut
, 
boﬁ
 
dúe˘i⁄
);

46 
	`iß_dif·e°_øi£_öå
(
w‹d_t
 
NO
);

	@nemu/include/macro.h

1 #i‚de‡
__MACRO_H__


2 
	#__MACRO_H__


	)

4 
	~<°rög.h
>

7 
	#°r_ãmp
(
x
Ë#x

	)

8 
	#°r
(
x
Ë
	`°r_ãmp
(x)

	)

11 
	#STRLEN
(
CONST_STR
Ë((CONST_STRË- 1)

	)

14 
	#ARRLEN
(
¨r
Ë()(◊ºË/ ◊º[0]))

	)

17 
	#c⁄ˇt_ãmp
(
x
, 
y
Ëx ## 
	)
y

18 
	#c⁄ˇt
(
x
, 
y
Ë
	`c⁄ˇt_ãmp
(x, y)

	)

19 
	#c⁄ˇt3
(
x
, 
y
, 
z
Ë
	`c⁄ˇt
(c⁄ˇt(x, y), z)

	)

20 
	#c⁄ˇt4
(
x
, 
y
, 
z
, 
w
Ë
	`c⁄ˇt3
(
	`c⁄ˇt
(x, y), z, w)

	)

21 
	#c⁄ˇt5
(
x
, 
y
, 
z
, 
v
, 
w
Ë
	`c⁄ˇt4
(
	`c⁄ˇt
(x, y), z, v, w)

	)

25 
	#CHOOSE2nd
(
a
, 
b
, ...Ë
	)
b

26 
	#MUX_WITH_COMMA
(
c⁄èö_comma
, 
a
, 
b
Ë
	`CHOOSE2nd
(c⁄èö_comm®a, b)

	)

27 
	#MUX_MACRO_PROPERTY
(
p
, 
ma¸o
, 
a
, 
b
Ë
	`MUX_WITH_COMMA
(
	`c⁄ˇt
’, ma¸o),á, b)

	)

29 
	#__P_DEF_0
 
X
,

	)

30 
	#__P_DEF_1
 
X
,

	)

31 
	#__P_ONE_1
 
X
,

	)

32 
	#__P_ZERO_0
 
X
,

	)

34 
	#MUXDEF
(
ma¸o
, 
X
, 
Y
Ë
	`MUX_MACRO_PROPERTY
(
__P_DEF_
, ma¸o, X, Y)

	)

35 
	#MUXNDEF
(
ma¸o
, 
X
, 
Y
Ë
	`MUX_MACRO_PROPERTY
(
__P_DEF_
, ma¸o, Y, X)

	)

36 
	#MUXONE
(
ma¸o
, 
X
, 
Y
Ë
	`MUX_MACRO_PROPERTY
(
__P_ONE_
, ma¸o, X, Y)

	)

37 
	#MUXZERO
(
ma¸o
, 
X
, 
Y
Ë
	`MUX_MACRO_PROPERTY
(
__P_ZERO_
,ma¸o, X, Y)

	)

40 
	#ISDEF
(
ma¸o
Ë
	`MUXDEF
(ma¸o, 1, 0)

	)

42 
	#ISNDEF
(
ma¸o
Ë
	`MUXNDEF
(ma¸o, 1, 0)

	)

44 
	#ISONE
(
ma¸o
Ë
	`MUXONE
(ma¸o, 1, 0)

	)

46 
	#ISZERO
(
ma¸o
Ë
	`MUXZERO
(ma¸o, 1, 0)

	)

50 
	#isdef
(
ma¸o
Ë(
	`°rcmp
("" #ma¸o, "" 
	`°r
(ma¸o)Ë!0)

	)

53 
	#__IGNORE
(...)

	)

54 
	#__KEEP
(...Ë
__VA_ARGS__


	)

56 
	#IFDEF
(
ma¸o
, ...Ë
	`MUXDEF
(ma¸o, 
__KEEP
, 
__IGNORE
)(
__VA_ARGS__
)

	)

58 
	#IFNDEF
(
ma¸o
, ...Ë
	`MUXNDEF
(ma¸o, 
__KEEP
, 
__IGNORE
)(
__VA_ARGS__
)

	)

60 
	#IFONE
(
ma¸o
, ...Ë
	`MUXONE
(ma¸o, 
__KEEP
, 
__IGNORE
)(
__VA_ARGS__
)

	)

62 
	#IFZERO
(
ma¸o
, ...Ë
	`MUXZERO
(ma¸o, 
__KEEP
, 
__IGNORE
)(
__VA_ARGS__
)

	)

69 
	#MAP
(
c
, 
f
Ë
	`c
(f)

	)

71 
	#BITMASK
(
bôs
Ë((1uŒ << (bôs)Ë- 1)

	)

72 
	#BITS
(
x
, 
hi
, 
lo
Ë(((xË>> (lo)Ë& 
	`BITMASK
((hi) - (lo) + 1))

73 
	#SEXT
(
x
, 
Àn
Ë({ såu˘ { 
öt64_t
 
n
 :Üí; } 
__x
 = { .¿x }; (öt64_t)__x.n; })

	)

75 
	#ROUNDUP
(
a
, 
sz
Ë((((
uöçå_t
ÔË+ (szË- 1Ë& ~((szË- 1))

	)

76 
	#ROUNDDOWN
(
a
, 
sz
Ë((((
uöçå_t
Ô)Ë& ~((szË- 1))

	)

78 
	#PG_ALIGN
 
	`__©åibuã
((
	`Æig√d
(4096)))

	)

80 #i‡!
deföed
(
likñy
)

81 
	#likñy
(
c⁄d
Ë
	`__buûtö_ex≥˘
(c⁄d, 1)

	)

82 
	#u∆ikñy
(
c⁄d
Ë
	`__buûtö_ex≥˘
(c⁄d, 0)

	)

86 
	#io_ªad
(
ªg
) \

87 ({ 
ªg
##
_T
 
__io_∑øm
; \

88 
	`i€_ªad
(
ªg
, &
__io_∑øm
); \

89 
__io_∑øm
; })

	)

91 
	#io_wrôe
(
ªg
, ...) \

92 ({ 
ªg
##
_T
 
__io_∑øm
 = (ªg##_TË{ 
__VA_ARGS__
 }; \

93 
	`i€_wrôe
(
ªg
, &
__io_∑øm
); })

	)

	@nemu/include/memory/host.h

1 #i‚de‡
__MEMORY_HOST_H__


2 
	#__MEMORY_HOST_H__


	)

4 
	~<comm⁄.h
>

6 
ölöe
 
w‹d_t
 
	$ho°_ªad
(*
addr
, 
Àn
) {

7 
Àn
) {

8 1:  *(
uöt8_t
 *)
addr
;

9 2:  *(
uöt16_t
 *)
addr
;

10 4:  *(
uöt32_t
 *)
addr
;

11 
	`IFDEF
(
CONFIG_ISA64
, 8:  *(
uöt64_t
 *)
addr
);

12 : 
	`MUXDEF
(
CONFIG_RT_CHECK
, 
	`as£π
(0),  0);

14 
	}
}

16 
ölöe
 
	$ho°_wrôe
(*
addr
, 
Àn
, 
w‹d_t
 
d©a
) {

17 
Àn
) {

18 1: *(
uöt8_t
 *)
addr
 = 
d©a
; ;

19 2: *(
uöt16_t
 *)
addr
 = 
d©a
; ;

20 4: *(
uöt32_t
 *)
addr
 = 
d©a
; ;

21 
	`IFDEF
(
CONFIG_ISA64
, 8: *(
uöt64_t
 *)
addr
 = 
d©a
; );

22 
	`IFDEF
(
CONFIG_RT_CHECK
, : 
	`as£π
(0));

24 
	}
}

	@nemu/include/memory/paddr.h

1 #i‚de‡
__MEMORY_PADDR_H__


2 
	#__MEMORY_PADDR_H__


	)

4 
	~<comm⁄.h
>

6 
	#RESET_VECTOR
 (
CONFIG_MBASE
 + 
CONFIG_PC_RESET_OFFSET
)

	)

9 
uöt8_t
* 
gue°_to_ho°
(
∑ddr_t
 
∑ddr
);

11 
∑ddr_t
 
ho°_to_gue°
(
uöt8_t
 *
haddr
);

13 
ölöe
 
boﬁ
 
	$ö_pmem
(
∑ddr_t
 
addr
) {

14  (
addr
 >
CONFIG_MBASE
Ë&& (add∏< (
∑ddr_t
)CONFIG_MBASE + 
CONFIG_MSIZE
);

15 
	}
}

17 
w‹d_t
 
∑ddr_ªad
(
∑ddr_t
 
addr
, 
Àn
);

18 
∑ddr_wrôe
(
∑ddr_t
 
addr
, 
Àn
, 
w‹d_t
 
d©a
);

	@nemu/include/memory/vaddr.h

1 #i‚de‡
__MEMORY_VADDR_H__


2 
	#__MEMORY_VADDR_H__


	)

4 
	~<comm⁄.h
>

6 
w‹d_t
 
vaddr_i„tch
(
vaddr_t
 
addr
, 
Àn
);

7 
w‹d_t
 
vaddr_ªad
(
vaddr_t
 
addr
, 
Àn
);

8 
vaddr_wrôe
(
vaddr_t
 
addr
, 
Àn
, 
w‹d_t
 
d©a
);

10 
	#PAGE_SHIFT
 12

	)

11 
	#PAGE_SIZE
 (1u»<< 
PAGE_SHIFT
)

	)

12 
	#PAGE_MASK
 (
PAGE_SIZE
 - 1)

	)

	@nemu/include/utils.h

1 #i‚de‡
__UTILS_H__


2 
	#__UTILS_H__


	)

4 
	~<comm⁄.h
>

8 íum { 
	mNEMU_RUNNING
, 
	mNEMU_STOP
, 
	mNEMU_END
, 
	mNEMU_ABORT
, 
	mNEMU_QUIT
 };

11 
	m°©e
;

12 
vaddr_t
 
	mhÆt_pc
;

13 
uöt32_t
 
	mhÆt_ªt
;

14 } 
	tNEMUSèã
;

16 
NEMUSèã
 
√mu_°©e
;

20 
uöt64_t
 
gë_time
();

24 
	#ASNI_FG_BLACK
 "\33[1;30m"

	)

25 
	#ASNI_FG_RED
 "\33[1;31m"

	)

26 
	#ASNI_FG_GREEN
 "\33[1;32m"

	)

27 
	#ASNI_FG_YELLOW
 "\33[1;33m"

	)

28 
	#ASNI_FG_BLUE
 "\33[1;34m"

	)

29 
	#ASNI_FG_MAGENTA
 "\33[1;35m"

	)

30 
	#ASNI_FG_CYAN
 "\33[1;36m"

	)

31 
	#ASNI_FG_WHITE
 "\33[1;37m"

	)

32 
	#ASNI_BG_BLACK
 "\33[1;40m"

	)

33 
	#ASNI_BG_RED
 "\33[1;41m"

	)

34 
	#ASNI_BG_GREEN
 "\33[1;42m"

	)

35 
	#ASNI_BG_YELLOW
 "\33[1;43m"

	)

36 
	#ASNI_BG_BLUE
 "\33[1;44m"

	)

37 
	#ASNI_BG_MAGENTA
 "\33[1;35m"

	)

38 
	#ASNI_BG_CYAN
 "\33[1;46m"

	)

39 
	#ASNI_BG_WHITE
 "\33[1;47m"

	)

40 
	#ASNI_NONE
 "\33[0m"

	)

42 
	#ASNI_FMT
(
°r
, 
fmt
Ëfmà°∏
ASNI_NONE


	)

44 
	#log_wrôe
(...Ë
	`IFDEF
(
CONFIG_TARGET_NATIVE_ELF
, \

46 
FILE
* 
log_Â
; \

47 
boﬁ
 
	`log_íabÀ
(); \

48 i‡(
	`log_íabÀ
()) { \

49 
	`Ârötf
(
log_Â
, 
__VA_ARGS__
); \

50 
	`fÊush
(
log_Â
); \

53 )

	)

55 
	#_Log
(...) \

57 
	`¥ötf
(
__VA_ARGS__
); \

58 
	`log_wrôe
(
__VA_ARGS__
); \

59 } 0)

	)

	@nemu/resource/sdcard/nemu.c

21 
	~<löux/˛k.h
>

22 
	~<löux/dñay.h
>

23 
	~<löux/devi˚.h
>

24 
	~<löux/dm´ngöe.h
>

25 
	~<löux/dma-m≠pög.h
>

26 
	~<löux/îr.h
>

27 
	~<löux/highmem.h
>

28 
	~<löux/öãºu±.h
>

29 
	~<löux/io.h
>

30 
	~<löux/i›ﬁl.h
>

31 
	~<löux/moduÀ.h
>

32 
	~<löux/of_addªss.h
>

33 
	~<löux/of_úq.h
>

34 
	~<löux/∂©f‹m_devi˚.h
>

35 
	~<löux/sˇâîli°.h
>

36 
	~<löux/time.h
>

37 
	~<löux/w‹kqueue.h
>

39 
	~<löux/mmc/ho°.h
>

40 
	~<löux/mmc/mmc.h
>

41 
	~<löux/mmc/sd.h
>

43 
	#SDCMD
 0x00

	)

44 
	#SDARG
 0x04

	)

45 
	#SDTOUT
 0x08

	)

46 
	#SDCDIV
 0x0¯

	)

47 
	#SDRSP0
 0x10

	)

48 
	#SDRSP1
 0x14

	)

49 
	#SDRSP2
 0x18

	)

50 
	#SDRSP3
 0x1¯

	)

51 
	#SDHSTS
 0x20

	)

52 
	#SDVDD
 0x30

	)

53 
	#SDEDM
 0x34

	)

54 
	#SDHCFG
 0x38

	)

55 
	#SDHBCT
 0x3¯

	)

56 
	#SDDATA
 0x40

	)

57 
	#SDHBLC
 0x50

	)

59 
	#SDCMD_NEW_FLAG
 0x8000

	)

60 
	#SDCMD_FAIL_FLAG
 0x4000

	)

61 
	#SDCMD_BUSYWAIT
 0x800

	)

62 
	#SDCMD_NO_RESPONSE
 0x400

	)

63 
	#SDCMD_LONG_RESPONSE
 0x200

	)

64 
	#SDCMD_WRITE_CMD
 0x80

	)

65 
	#SDCMD_READ_CMD
 0x40

	)

66 
	#SDCMD_CMD_MASK
 0x3f

	)

68 
	#SDCDIV_MAX_CDIV
 0x7ff

	)

70 
	#SDDATA_FIFO_WORDS
 16

	)

72 
	#FIFO_READ_THRESHOLD
 4

	)

73 
	#FIFO_WRITE_THRESHOLD
 4

	)

74 
	#SDDATA_FIFO_PIO_BURST
 8

	)

76 
	#PIO_THRESHOLD
 1

	)

78 
	s√mu_ho°
 {

79 
•ölock_t
 
	mlock
;

80 
muãx
 
	mmuãx
;

82 
__iomem
 *
	miﬂddr
;

83 
u32
 
	mphys_addr
;

85 
mmc_ho°
 *
	mmmc
;

86 
∂©f‹m_devi˚
 *
	mpdev
;

88 
	m˛ock
;

89 
	mmax_˛k
;

90 
sg_m≠pög_ôî
 
	msg_môî
;

91 
	mblocks
;

93 
mmc_ªque°
 *
	mmrq
;

94 
mmc_comm™d
 *
	mcmd
;

95 
mmc_d©a
 *
	md©a
;

96 
boﬁ
 
	md©a_com∂ëe
:1;

97 
boﬁ
 
	mu£_sbc
:1;

100 
	$√mu_ª£t
(
mmc_ho°
 *
mmc
)

102 
	}
}

104 
√mu_föish_comm™d
(
√mu_ho°
 *
ho°
);

106 
	$√mu_å™s„r_block_pio
(
√mu_ho°
 *
ho°
, 
boﬁ
 
is_ªad
)

108 
Êags
;

109 
size_t
 
blksize
;

111 
blksize
 = 
ho°
->
d©a
->
blksz
;

113 
	`loˇl_úq_ßve
(
Êags
);

115 
blksize
) {

116 
c›y_w‹ds
;

117 
size_t
 
Àn
;

118 
u32
 *
buf
;

120 i‡(!
	`sg_môî_√xt
(&
ho°
->
sg_môî
)) {

121 
ho°
->
d©a
->
îr‹
 = -
EINVAL
;

125 
Àn
 = 
	`mö
(
ho°
->
sg_môî
.
Àngth
, 
blksize
);

126 i‡(
Àn
 % 4) {

127 
ho°
->
d©a
->
îr‹
 = -
EINVAL
;

131 
blksize
 -
Àn
;

132 
ho°
->
sg_môî
.
c⁄sumed
 = 
Àn
;

134 
buf
 = (
u32
 *)
ho°
->
sg_môî
.
addr
;

136 
c›y_w‹ds
 = 
Àn
 / 4;

138 
c›y_w‹ds
) {

139 
bur°_w‹ds
, 
w‹ds
;

140 
u32
 
edm
;

142 
bur°_w‹ds
 = 
	`mö
(
SDDATA_FIFO_PIO_BURST
, 
c›y_w‹ds
);

143 
edm
 = (8 << 4);

144 i‡(
is_ªad
)

145 
w‹ds
 = ((
edm
 >> 4) & 0x1f);

147 
w‹ds
 = 
SDDATA_FIFO_WORDS
 - ((
edm
 >> 4) & 0x1f);

149 i‡(
w‹ds
 < 
bur°_w‹ds
) {

151 } i‡(
w‹ds
 > 
c›y_w‹ds
) {

152 
w‹ds
 = 
c›y_w‹ds
;

155 
c›y_w‹ds
 -
w‹ds
;

157 
w‹ds
) {

158 i‡(
is_ªad
)

159 *(
buf
++Ë
	`ªadl
(
ho°
->
iﬂddr
 + 
SDDATA
);

161 
	`wrôñ
(*(
buf
++), 
ho°
->
iﬂddr
 + 
SDDATA
);

162 
w‹ds
--;

167 
	`sg_môî_°›
(&
ho°
->
sg_môî
);

169 
	`loˇl_úq_ª°‹e
(
Êags
);

170 
	}
}

172 
	$√mu_å™s„r_pio
(
√mu_ho°
 *
ho°
)

174 
boﬁ
 
is_ªad
 = (
ho°
->
d©a
->
Êags
 & 
MMC_DATA_READ
) != 0;

175 
	`√mu_å™s„r_block_pio
(
ho°
, 
is_ªad
);

176 
	}
}

179 
	$√mu_¥ï¨e_d©a
(
√mu_ho°
 *
ho°
, 
mmc_comm™d
 *
cmd
)

181 
mmc_d©a
 *
d©a
 = 
cmd
->data;

182 
Êags
 = 
SG_MITER_ATOMIC
;

184 
	`WARN_ON
(
ho°
->
d©a
);

186 
ho°
->
d©a
 = data;

187 i‡(!
d©a
)

190 
ho°
->
d©a_com∂ëe
 = 
Ál£
;

191 
ho°
->
d©a
->
byãs_x„ªd
 = 0;

194 i‡(
d©a
->
Êags
 & 
MMC_DATA_READ
)

195 
Êags
 |
SG_MITER_TO_SG
;

197 
Êags
 |
SG_MITER_FROM_SG
;

198 
	`sg_môî_°¨t
(&
ho°
->
sg_môî
, 
d©a
->
sg
, d©a->
sg_Àn
, 
Êags
);

199 
ho°
->
blocks
 = 
d©a
->blocks;

200 
	}
}

202 
	$√mu_föish_ªque°
(
√mu_ho°
 *
ho°
)

204 
mmc_ªque°
 *
mrq
;

206 
mrq
 = 
ho°
->mrq;

208 
ho°
->
mrq
 = 
NULL
;

209 
ho°
->
cmd
 = 
NULL
;

210 
ho°
->
d©a
 = 
NULL
;

212 
	`mmc_ªque°_d⁄e
(
ho°
->
mmc
, 
mrq
);

213 
	}
}

216 
boﬁ
 
	$√mu_£nd_comm™d
(
√mu_ho°
 *
ho°
, 
mmc_comm™d
 *
cmd
)

218 
u32
 
sdcmd
;

220 
	`WARN_ON
(
ho°
->
cmd
);

222 
ho°
->
cmd
 = cmd;

224 
	`√mu_¥ï¨e_d©a
(
ho°
, 
cmd
);

226 
	`wrôñ
(
cmd
->
¨g
, 
ho°
->
iﬂddr
 + 
SDARG
);

228 
sdcmd
 = 
cmd
->
›code
 & 
SDCMD_CMD_MASK
;

230 i‡(!(
cmd
->
Êags
 & 
MMC_RSP_PRESENT
)) {

231 
sdcmd
 |
SDCMD_NO_RESPONSE
;

233 i‡(
cmd
->
Êags
 & 
MMC_RSP_136
)

234 
sdcmd
 |
SDCMD_LONG_RESPONSE
;

235 i‡(
cmd
->
Êags
 & 
MMC_RSP_BUSY
) {

236 
sdcmd
 |
SDCMD_BUSYWAIT
;

240 i‡(
cmd
->
d©a
) {

241 i‡(
cmd
->
d©a
->
Êags
 & 
MMC_DATA_WRITE
) {

242 
sdcmd
 |
SDCMD_WRITE_CMD
;

244 i‡(
cmd
->
d©a
->
Êags
 & 
MMC_DATA_READ
)

245 
sdcmd
 |
SDCMD_READ_CMD
;

248 
	`wrôñ
(
sdcmd
 | 
SDCMD_NEW_FLAG
, 
ho°
->
iﬂddr
 + 
SDCMD
);

250  
åue
;

251 
	}
}

253 
	$√mu_å™s„r_com∂ëe
(
√mu_ho°
 *
ho°
)

255 
mmc_d©a
 *
d©a
;

257 
	`WARN_ON
(!
ho°
->
d©a_com∂ëe
);

259 
d©a
 = 
ho°
->data;

260 
ho°
->
d©a
 = 
NULL
;

266 i‡(
ho°
->
mrq
->
°›
 && (
d©a
->
îr‹
 || !ho°->
u£_sbc
)) {

267 i‡(
	`√mu_£nd_comm™d
(
ho°
, ho°->
mrq
->
°›
)) {

268 
	`√mu_föish_comm™d
(
ho°
);

271 
	`√mu_föish_ªque°
(
ho°
);

273 
	}
}

275 
	$√mu_föish_d©a
(
√mu_ho°
 *
ho°
)

277 
devi˚
 *
dev
 = &
ho°
->
pdev
->dev;

278 
mmc_d©a
 *
d©a
;

280 
d©a
 = 
ho°
->data;

282 
d©a
->
byãs_x„ªd
 = d©a->
îr‹
 ? 0 : (d©a->
blksz
 * d©a->
blocks
);

284 
ho°
->
d©a_com∂ëe
 = 
åue
;

286 i‡(
ho°
->
cmd
) {

291 
	`dev_dbg
(
dev
, "FinishedÉarly - HSTS %08x\n",

292 
	`ªadl
(
ho°
->
iﬂddr
 + 
SDHSTS
));

294 
	`√mu_å™s„r_com∂ëe
(
ho°
);

296 
	}
}

298 
	$√mu_föish_comm™d
(
√mu_ho°
 *
ho°
)

300 
mmc_comm™d
 *
cmd
 = 
ho°
->cmd;

301 
i
;

303 i‡(
cmd
->
Êags
 & 
MMC_RSP_PRESENT
) {

304 i‡(
cmd
->
Êags
 & 
MMC_RSP_136
) {

305 
i
 = 0; i < 4; i++) {

306 
cmd
->
ª•
[3 - 
i
] =

307 
	`ªadl
(
ho°
->
iﬂddr
 + 
SDRSP0
 + 
i
 * 4);

310 
cmd
->
ª•
[0] = 
	`ªadl
(
ho°
->
iﬂddr
 + 
SDRSP0
);

314 i‡(
cmd
 =
ho°
->
mrq
->
sbc
) {

316 
ho°
->
cmd
 = 
NULL
;

317 i‡(
	`√mu_£nd_comm™d
(
ho°
, ho°->
mrq
->
cmd
)) {

318 i‡(
ho°
->
d©a
) {

320 
i
 = 0; i < 
ho°
->
d©a
->
blocks
; i ++) {

321 
	`√mu_å™s„r_pio
(
ho°
);

324 
	`√mu_föish_d©a
(
ho°
);

327 
	`√mu_föish_comm™d
(
ho°
);

329 } i‡(
cmd
 =
ho°
->
mrq
->
°›
) {

331 
	`√mu_föish_ªque°
(
ho°
);

334 
ho°
->
cmd
 = 
NULL
;

335 i‡(!
ho°
->
d©a
) {

336 
	`√mu_föish_ªque°
(
ho°
);

338 i‡(
ho°
->
d©a_com∂ëe
) {

339 
	`√mu_å™s„r_com∂ëe
(
ho°
);

342 
	}
}

344 
	$√mu_ªque°
(
mmc_ho°
 *
mmc
, 
mmc_ªque°
 *
mrq
)

346 
√mu_ho°
 *
ho°
 = 
	`mmc_¥iv
(
mmc
);

347 
devi˚
 *
dev
 = &
ho°
->
pdev
->dev;

350 i‡(
mrq
->
sbc
)

351 
mrq
->
sbc
->
îr‹
 = 0;

352 i‡(
mrq
->
cmd
)

353 
mrq
->
cmd
->
îr‹
 = 0;

354 i‡(
mrq
->
d©a
)

355 
mrq
->
d©a
->
îr‹
 = 0;

356 i‡(
mrq
->
°›
)

357 
mrq
->
°›
->
îr‹
 = 0;

359 i‡(
mrq
->
d©a
 && !
	`is_powî_of_2
(mrq->d©a->
blksz
)) {

360 
	`dev_îr
(
dev
, "unsupported block size (%d bytes)\n",

361 
mrq
->
d©a
->
blksz
);

363 i‡(
mrq
->
cmd
)

364 
mrq
->
cmd
->
îr‹
 = -
EINVAL
;

366 
	`mmc_ªque°_d⁄e
(
mmc
, 
mrq
);

370 
	`muãx_lock
(&
ho°
->
muãx
);

372 
	`WARN_ON
(
ho°
->
mrq
);

373 
ho°
->
mrq
 = mrq;

375 
ho°
->
u£_sbc
 = !!
mrq
->
sbc
 && ho°->mrq->
d©a
 &&

376 (
ho°
->
mrq
->
d©a
->
Êags
 & 
MMC_DATA_READ
);

377 i‡(
ho°
->
u£_sbc
) {

378 i‡(
	`√mu_£nd_comm™d
(
ho°
, 
mrq
->
sbc
)) {

379 
	`√mu_föish_comm™d
(
ho°
);

381 } i‡(
mrq
->
cmd
 && 
	`√mu_£nd_comm™d
(
ho°
, mrq->cmd)) {

382 i‡(
ho°
->
d©a
) {

383 
i
;

385 
i
 = 0; i < 
ho°
->
d©a
->
blocks
; i ++) {

386 
	`√mu_å™s„r_pio
(
ho°
);

388 
	`√mu_föish_d©a
(
ho°
);

391 
	`√mu_föish_comm™d
(
ho°
);

394 
	`muãx_u∆ock
(&
ho°
->
muãx
);

395 
	}
}

397 
	$√mu_£t_ios
(
mmc_ho°
 *
mmc
, 
mmc_ios
 *
ios
)

399 
	}
}

401 c⁄° 
mmc_ho°_›s
 
	g√mu_›s
 = {

402 .
ªque°
 = 
√mu_ªque°
,

403 .
	g£t_ios
 = 
√mu_£t_ios
,

404 .
	ghw_ª£t
 = 
√mu_ª£t
,

407 
	$√mu_add_ho°
(
√mu_ho°
 *
ho°
)

409 
mmc_ho°
 *
mmc
 = 
ho°
->mmc;

410 
devi˚
 *
dev
 = &
ho°
->
pdev
->dev;

411 
ªt
;

413 i‡(!
mmc
->
f_max
 || mmc->f_max > 
ho°
->
max_˛k
)

414 
mmc
->
f_max
 = 
ho°
->
max_˛k
;

415 
mmc
->
f_mö
 = 
ho°
->
max_˛k
 / 
SDCDIV_MAX_CDIV
;

417 
mmc
->
max_busy_timeout
 = ~0 / (mmc->
f_max
 / 1000);

419 
	`dev_dbg
(
dev
, "f_max %d, f_min %d, max_busy_timeout %d\n",

420 
mmc
->
f_max
, mmc->
f_mö
, mmc->
max_busy_timeout
);

423 
mmc
->
ˇps
 |
MMC_CAP_SD_HIGHSPEED
 | 
MMC_CAP_MMC_HIGHSPEED
 |

424 
MMC_CAP_NEEDS_POLL
 | 
MMC_CAP_HW_RESET
 | 
MMC_CAP_ERASE
 |

425 
MMC_CAP_CMD23
;

427 
	`•ö_lock_öô
(&
ho°
->
lock
);

428 
	`muãx_öô
(&
ho°
->
muãx
);

430 
mmc
->
max_£gs
 = 128;

431 
mmc
->
max_ªq_size
 = 524288;

432 
mmc
->
max_£g_size
 = mmc->
max_ªq_size
;

433 
mmc
->
max_blk_size
 = 1024;

434 
mmc
->
max_blk_cou¡
 = 65535;

437 
mmc
->
o¸_avaû
 = 
MMC_VDD_32_33
 | 
MMC_VDD_33_34
;

439 
ªt
 = 
	`mmc_add_ho°
(
mmc
);

440 i‡(
ªt
) {

441  
ªt
;

444 
	`dev_öfo
(
dev
, "loaded - DMA %s\n", "disabled");

447 
	}
}

449 
	$√mu_¥obe
(
∂©f‹m_devi˚
 *
pdev
)

451 
devi˚
 *
dev
 = &
pdev
->dev;

452 
ªsour˚
 *
iomem
;

453 
√mu_ho°
 *
ho°
;

454 
mmc_ho°
 *
mmc
;

455 c⁄° 
__be32
 *
ªgaddr_p
;

456 
ªt
;

458 
	`dev_dbg
(
dev
, "%s\n", 
__func__
);

459 
mmc
 = 
	`mmc_Æloc_ho°
((*
ho°
), 
dev
);

460 i‡(!
mmc
)

461  -
ENOMEM
;

463 
mmc
->
›s
 = &
√mu_›s
;

464 
ho°
 = 
	`mmc_¥iv
(
mmc
);

465 
ho°
->
mmc
 = mmc;

466 
ho°
->
pdev
 =Ödev;

467 
	`•ö_lock_öô
(&
ho°
->
lock
);

469 
iomem
 = 
	`∂©f‹m_gë_ªsour˚
(
pdev
, 
IORESOURCE_MEM
, 0);

470 
ho°
->
iﬂddr
 = 
	`devm_i‹em≠_ªsour˚
(
dev
, 
iomem
);

471 i‡(
	`IS_ERR
(
ho°
->
iﬂddr
)) {

472 
ªt
 = 
	`PTR_ERR
(
ho°
->
iﬂddr
);

473 
îr
;

479 
ªgaddr_p
 = 
	`of_gë_addªss
(
pdev
->
dev
.
of_node
, 0, 
NULL
, NULL);

480 i‡(!
ªgaddr_p
) {

481 
	`dev_îr
(
dev
, "Can't getÖhysáddress\n");

482 
ªt
 = -
EINVAL
;

483 
îr
;

486 
ho°
->
phys_addr
 = 
	`be32_to_˝up
(
ªgaddr_p
);

488 
ho°
->
max_˛k
 = 1000000;

490 
ªt
 = 
	`mmc_of_∑r£
(
mmc
);

491 i‡(
ªt
)

492 
îr
;

494 
ªt
 = 
	`√mu_add_ho°
(
ho°
);

495 i‡(
ªt
)

496 
îr
;

498 
	`∂©f‹m_£t_drvd©a
(
pdev
, 
ho°
);

500 
	`dev_dbg
(
dev
, "%†-> OK\n", 
__func__
);

504 
îr
:

505 
	`dev_dbg
(
dev
, "%†->Éº %d\n", 
__func__
, 
ªt
);

506 
	`mmc_‰ì_ho°
(
mmc
);

508  
ªt
;

509 
	}
}

511 
	$√mu_ªmove
(
∂©f‹m_devi˚
 *
pdev
)

513 
√mu_ho°
 *
ho°
 = 
	`∂©f‹m_gë_drvd©a
(
pdev
);

515 
	`mmc_ªmove_ho°
(
ho°
->
mmc
);

517 
	`mmc_‰ì_ho°
(
ho°
->
mmc
);

518 
	`∂©f‹m_£t_drvd©a
(
pdev
, 
NULL
);

521 
	}
}

523 c⁄° 
of_devi˚_id
 
	g√mu_m©ch
[] = {

524 { .
com∑tibÀ
 = "nemu-sdhost" },

527 
MODULE_DEVICE_TABLE
(
of
, 
√mu_m©ch
);

529 
∂©f‹m_drivî
 
	g√mu_drivî
 = {

530 .
¥obe
 = 
√mu_¥obe
,

531 .
	gªmove
 = 
√mu_ªmove
,

532 .
	gdrivî
 = {

533 .
«me
 = "sdhost-nemu",

534 .
	gof_m©ch_èbÀ
 = 
√mu_m©ch
,

537 
moduÀ_∂©f‹m_drivî
(
√mu_drivî
);

539 
MODULE_ALIAS
("platform:sdhost-nemu");

540 
MODULE_DESCRIPTION
("NEMU SDHost driver");

541 
MODULE_LICENSE
("GPL v2");

542 
MODULE_AUTHOR
("Zihao Yu");

	@nemu/src/cpu/cpu-exec.c

1 
	~<˝u/˝u.h
>

2 
	~<˝u/decode.h
>

3 
	~<˝u/dif·e°.h
>

4 
	~<loˇÀ.h
>

11 
	#MAX_INST_TO_PRINT
 10

	)

13 
CPU_°©e
 
	g˝u
 = {};

14 
uöt64_t
 
	gg_ƒ_gue°_ö°
 = 0;

15 
uöt64_t
 
	gg_timî
 = 0;

16 
boﬁ
 
	gg_¥öt_°ï
 = 
Ál£
;

18 
devi˚_upd©e
();

20 
	$åa˚_™d_dif·e°
(
Decode
 *
_this
, 
vaddr_t
 
d≈c
) {

21 #ifde‡
CONFIG_ITRACE_COND


22 i‡(
ITRACE_COND
Ë{ 
	`log_wrôe
("%s\n", 
_this
->
logbuf
); }

24 i‡(
g_¥öt_°ï
Ë{ 
	`IFDEF
(
CONFIG_ITRACE
, 
	`puts
(
_this
->
logbuf
)); }

25 
	`IFDEF
(
CONFIG_DIFFTEST
, 
	`dif·e°_°ï
(
_this
->
pc
, 
d≈c
));

26 
	}
}

28 
	$exec_⁄˚
(
Decode
 *
s
, 
vaddr_t
 
pc
) {

29 
s
->
pc
 =Öc;

30 
s
->
¢pc
 = 
pc
;

31 
	`iß_exec_⁄˚
(
s
);

32 
˝u
.
pc
 = 
s
->
d≈c
;

33 #ifde‡
CONFIG_ITRACE


34 *
p
 = 
s
->
logbuf
;

35 
p
 +
	`¢¥ötf
’, (
s
->
logbuf
), 
FMT_WORD
 ":", s->
pc
);

36 
ûí
 = 
s
->
¢pc
 - s->
pc
;

37 
i
;

38 
uöt8_t
 *
ö°
 = (uöt8_à*)&
s
->
iß
.ö°.
vÆ
;

39 
i
 = 0; i < 
ûí
; i ++) {

40 
p
 +
	`¢¥ötf
’, 4, " %02x", 
ö°
[
i
]);

42 
ûí_max
 = 
	`MUXDEF
(
CONFIG_ISA_x86
, 8, 4);

43 
•a˚_Àn
 = 
ûí_max
 - 
ûí
;

44 i‡(
•a˚_Àn
 < 0) space_len = 0;

45 
•a˚_Àn
 = space_len * 3 + 1;

46 
	`mem£t
(
p
, ' ', 
•a˚_Àn
);

47 
p
 +
•a˚_Àn
;

49 
	`dißs£mbÀ
(*
°r
, 
size
, 
uöt64_t
 
pc
, 
uöt8_t
 *
code
, 
nbyã
);

50 
	`dißs£mbÀ
(
p
, 
s
->
logbuf
 + (s->logbuf) -Ö,

51 
	`MUXDEF
(
CONFIG_ISA_x86
, 
s
->
¢pc
, s->
pc
), (
uöt8_t
 *)&s->
iß
.
ö°
.
vÆ
, 
ûí
);

53 
	}
}

55 
	$execuã
(
uöt64_t
 
n
) {

56 
Decode
 
s
;

57 ;
n
 > 0;Ç --) {

58 
	`exec_⁄˚
(&
s
, 
˝u
.
pc
);

59 
g_ƒ_gue°_ö°
 ++;

60 
	`åa˚_™d_dif·e°
(&
s
, 
˝u
.
pc
);

61 i‡(
√mu_°©e
.
°©e
 !
NEMU_RUNNING
) ;

62 
	`IFDEF
(
CONFIG_DEVICE
, 
	`devi˚_upd©e
());

64 
	}
}

66 
	$°©i°ic
() {

67 
	`IFNDEF
(
CONFIG_TARGET_AM
, 
	`£éoˇÀ
(
LC_NUMERIC
, ""));

68 
	#NUMBERIC_FMT
 
	`MUXDEF
(
CONFIG_TARGET_AM
, "%ld", "%'ld")

	)

69 
	`Log
("ho°Åimê•íà" 
NUMBERIC_FMT
 " us", 
g_timî
);

70 
	`Log
("tŸÆ gue° in°ru˘i⁄†" 
NUMBERIC_FMT
, 
g_ƒ_gue°_ö°
);

71 i‡(
g_timî
 > 0Ë
	`Log
("simuœti⁄ fªquícy = " 
NUMBERIC_FMT
 " in°/s", 
g_ƒ_gue°_ö°
 * 1000000 / g_timer);

72 
	`Log
("FinishÑunning inÜessÅhan 1 usánd canÇot calculateÅhe simulation frequency");

73 
	}
}

75 
	$as£π_Áû_msg
() {

76 
	`iß_ªg_di•œy
();

77 
	`°©i°ic
();

78 
	}
}

81 
	$˝u_exec
(
uöt64_t
 
n
) {

82 
g_¥öt_°ï
 = (
n
 < 
MAX_INST_TO_PRINT
);

83 
√mu_°©e
.
°©e
) {

84 
NEMU_END
: 
NEMU_ABORT
:

85 
	`¥ötf
("ProgramÉxecution hasÉnded. ToÑestartÅheÖrogram,Éxit NEMUándÑunágain.\n");

87 : 
√mu_°©e
.
°©e
 = 
NEMU_RUNNING
;

90 
uöt64_t
 
timî_°¨t
 = 
	`gë_time
();

92 
	`execuã
(
n
);

94 
uöt64_t
 
timî_íd
 = 
	`gë_time
();

95 
g_timî
 +
timî_íd
 - 
timî_°¨t
;

97 
√mu_°©e
.
°©e
) {

98 
NEMU_RUNNING
: 
√mu_°©e
.
°©e
 = 
NEMU_STOP
; ;

100 
NEMU_END
: 
NEMU_ABORT
:

101 
	`Log
("√mu: %†©Ö¯" 
FMT_WORD
,

102 (
√mu_°©e
.
°©e
 =
NEMU_ABORT
 ? 
	`ASNI_FMT
("ABORT", 
ASNI_FG_RED
) :

103 (
√mu_°©e
.
hÆt_ªt
 =0 ? 
	`ASNI_FMT
("HIT GOOD TRAP", 
ASNI_FG_GREEN
) :

104 
	`ASNI_FMT
("HIT BAD TRAP", 
ASNI_FG_RED
))),

105 
√mu_°©e
.
hÆt_pc
);

107 
NEMU_QUIT
: 
	`°©i°ic
();

109 
	}
}

	@nemu/src/cpu/difftest/dut.c

1 
	~<dlf˙.h
>

3 
	~<iß.h
>

4 
	~<˝u/˝u.h
>

5 
	~<mem‹y/∑ddr.h
>

6 
	~<utûs.h
>

7 
	~<dif·e°-def.h
>

9 (*
ªf_dif·e°_mem˝y
)(
∑ddr_t
 
addr
, *
buf
, 
size_t
 
n
, 
boﬁ
 
dúe˘i⁄
Ë
NULL
;

10 (*
ªf_dif·e°_ªg˝y
)(*
dut
, 
boﬁ
 
dúe˘i⁄
Ë
NULL
;

11 (*
ªf_dif·e°_exec
)(
uöt64_t
 
n
Ë
NULL
;

12 (*
ªf_dif·e°_øi£_öå
)(
uöt64_t
 
NO
Ë
NULL
;

14 #ifde‡
CONFIG_DIFFTEST


16 
boﬁ
 
is_skù_ªf
 = 
Ál£
;

17 
skù_dut_ƒ_ö°
 = 0;

21 
	$dif·e°_skù_ªf
() {

22 
is_skù_ªf
 = 
åue
;

30 
skù_dut_ƒ_ö°
 = 0;

31 
	}
}

39 
	$dif·e°_skù_dut
(
ƒ_ªf
, 
ƒ_dut
) {

40 
skù_dut_ƒ_ö°
 +
ƒ_dut
;

42 
ƒ_ªf
 -- > 0) {

43 
	`ªf_dif·e°_exec
(1);

45 
	}
}

47 
	$öô_dif·e°
(*
ªf_so_fûe
, 
img_size
, 
p‹t
) {

48 
	`as£π
(
ªf_so_fûe
 !
NULL
);

50 *
h™dÀ
;

51 
h™dÀ
 = 
	`dl›í
(
ªf_so_fûe
, 
RTLD_LAZY
 | 
	`MUXNDEF
(
CONFIG_CC_ASAN
, 
RTLD_DEEPBIND
, 0));

52 
	`as£π
(
h™dÀ
);

54 
ªf_dif·e°_mem˝y
 = 
	`dlsym
(
h™dÀ
, "difftest_memcpy");

55 
	`as£π
(
ªf_dif·e°_mem˝y
);

57 
ªf_dif·e°_ªg˝y
 = 
	`dlsym
(
h™dÀ
, "difftest_regcpy");

58 
	`as£π
(
ªf_dif·e°_ªg˝y
);

60 
ªf_dif·e°_exec
 = 
	`dlsym
(
h™dÀ
, "difftest_exec");

61 
	`as£π
(
ªf_dif·e°_exec
);

63 
ªf_dif·e°_øi£_öå
 = 
	`dlsym
(
h™dÀ
, "difftest_raise_intr");

64 
	`as£π
(
ªf_dif·e°_øi£_öå
);

66 (*
ªf_dif·e°_öô
)(Ë
	`dlsym
(
h™dÀ
, "difftest_init");

67 
	`as£π
(
ªf_dif·e°_öô
);

69 
	`Log
("Dif„ª¡ü»ã°ög: %s", 
	`ASNI_FMT
("ON", 
ASNI_FG_GREEN
));

70 
	`Log
("TheÑesult ofÉvery instruction will be compared with %s. "

72 "I‡ô i†nŸÇe˚sßry, you c™Åu∫ iàof‡ö míuc⁄fig.", 
ªf_so_fûe
);

74 
	`ªf_dif·e°_öô
(
p‹t
);

75 
	`ªf_dif·e°_mem˝y
(
RESET_VECTOR
, 
	`gue°_to_ho°
(RESET_VECTOR), 
img_size
, 
DIFFTEST_TO_REF
);

76 
	`ªf_dif·e°_ªg˝y
(&
˝u
, 
DIFFTEST_TO_REF
);

77 
	}
}

79 
	$checkªgs
(
CPU_°©e
 *
ªf
, 
vaddr_t
 
pc
) {

80 i‡(!
	`iß_dif·e°_checkªgs
(
ªf
, 
pc
)) {

81 
√mu_°©e
.
°©e
 = 
NEMU_ABORT
;

82 
√mu_°©e
.
hÆt_pc
 = 
pc
;

83 
	`iß_ªg_di•œy
();

85 
	}
}

87 
	$dif·e°_°ï
(
vaddr_t
 
pc
, vaddr_à
≈c
) {

88 
CPU_°©e
 
ªf_r
;

90 i‡(
skù_dut_ƒ_ö°
 > 0) {

91 
	`ªf_dif·e°_ªg˝y
(&
ªf_r
, 
DIFFTEST_TO_DUT
);

92 i‡(
ªf_r
.
pc
 =
≈c
) {

93 
skù_dut_ƒ_ö°
 = 0;

94 
	`checkªgs
(&
ªf_r
, 
≈c
);

97 
skù_dut_ƒ_ö°
 --;

98 i‡(
skù_dut_ƒ_ö°
 == 0)

99 
	`∑nic
("ˇ¿nŸ c©ch u∞wôhÑef.p¯" 
FMT_WORD
 "áàp¯" FMT_WORD, 
ªf_r
.
pc
,Öc);

103 i‡(
is_skù_ªf
) {

105 
	`ªf_dif·e°_ªg˝y
(&
˝u
, 
DIFFTEST_TO_REF
);

106 
is_skù_ªf
 = 
Ál£
;

110 
	`ªf_dif·e°_exec
(1);

111 
	`ªf_dif·e°_ªg˝y
(&
ªf_r
, 
DIFFTEST_TO_DUT
);

113 
	`checkªgs
(&
ªf_r
, 
pc
);

114 
	}
}

116 
	$öô_dif·e°
(*
ªf_so_fûe
, 
img_size
, 
p‹t
Ë{ 
	}
}

	@nemu/src/device/alarm.c

1 
	~<comm⁄.h
>

2 
	~<devi˚/Æ¨m.h
>

3 
	~<sys/time.h
>

4 
	~<sig«l.h
>

6 
	#MAX_HANDLER
 8

	)

8 
Æ¨m_h™dÀr_t
 
	gh™dÀr
[
MAX_HANDLER
] = {};

9 
	gidx
 = 0;

11 
	$add_Æ¨m_h™dÀ
(
Æ¨m_h™dÀr_t
 
h
) {

12 
	`as£π
(
idx
 < 
MAX_HANDLER
);

13 
h™dÀr
[
idx
 ++] = 
h
;

14 
	}
}

16 
	$Æ¨m_sig_h™dÀr
(
signum
) {

17 
i
;

18 
i
 = 0; i < 
idx
; i ++) {

19 
h™dÀr
[
i
]();

21 
	}
}

23 
	$öô_Æ¨m
() {

24 
siga˘i⁄
 
s
;

25 
	`mem£t
(&
s
, 0, (s));

26 
s
.
ß_h™dÀr
 = 
Æ¨m_sig_h™dÀr
;

27 
ªt
 = 
	`siga˘i⁄
(
SIGVTALRM
, &
s
, 
NULL
);

28 
	`As£π
(
ªt
 == 0, "CanÇot set signal handler");

30 
ôimîvÆ
 
ô
 = {};

31 
ô
.
ô_vÆue
.
tv_£c
 = 0;

32 
ô
.
ô_vÆue
.
tv_u£c
 = 1000000 / 
TIMER_HZ
;

33 
ô
.
ô_öãrvÆ
 = it.
ô_vÆue
;

34 
ªt
 = 
	`£tôimî
(
ITIMER_VIRTUAL
, &
ô
, 
NULL
);

35 
	`As£π
(
ªt
 == 0, "CanÇot setÅimer");

36 
	}
}

	@nemu/src/device/audio.c

1 
	~<comm⁄.h
>

2 
	~<devi˚/m≠.h
>

3 
	~<SDL2/SDL.h
>

6 
	mªg_‰eq
,

7 
	mªg_ch™√ls
,

8 
	mªg_ßm∂es
,

9 
	mªg_sbuf_size
,

10 
	mªg_öô
,

11 
	mªg_cou¡
,

12 
	mƒ_ªg


15 
uöt8_t
 *
	gsbuf
 = 
NULL
;

16 
uöt32_t
 *
	gaudio_ba£
 = 
NULL
;

18 
	$audio_io_h™dÀr
(
uöt32_t
 
off£t
, 
Àn
, 
boﬁ
 
is_wrôe
) {

19 
	}
}

21 
	$öô_audio
() {

22 
uöt32_t
 
•a˚_size
 = (uöt32_tË* 
ƒ_ªg
;

23 
audio_ba£
 = (
uöt32_t
 *)
	`√w_•a˚
(
•a˚_size
);

24 #ifde‡
CONFIG_HAS_PORT_IO


25 
	`add_pio_m≠
 ("audio", 
CONFIG_AUDIO_CTL_PORT
, 
audio_ba£
, 
•a˚_size
, 
audio_io_h™dÀr
);

27 
	`add_mmio_m≠
("audio", 
CONFIG_AUDIO_CTL_MMIO
, 
audio_ba£
, 
•a˚_size
, 
audio_io_h™dÀr
);

30 
sbuf
 = (
uöt8_t
 *)
	`√w_•a˚
(
CONFIG_SB_SIZE
);

31 
	`add_mmio_m≠
("audio-sbuf", 
CONFIG_SB_ADDR
, 
sbuf
, 
CONFIG_SB_SIZE
, 
NULL
);

32 
	}
}

	@nemu/src/device/device.c

1 
	~<comm⁄.h
>

2 
	~<utûs.h
>

3 
	~<devi˚/Æ¨m.h
>

4 #i‚de‡
CONFIG_TARGET_AM


5 
	~<SDL2/SDL.h
>

8 
öô_m≠
();

9 
öô_£rül
();

10 
öô_timî
();

11 
öô_vga
();

12 
öô_i8042
();

13 
öô_audio
();

14 
öô_disk
();

15 
öô_sdˇrd
();

16 
öô_Æ¨m
();

18 
£nd_key
(
uöt8_t
, 
boﬁ
);

19 
vga_upd©e_s¸ìn
();

21 
	$devi˚_upd©e
() {

22 
uöt64_t
 
œ°
 = 0;

23 
uöt64_t
 
now
 = 
	`gë_time
();

24 i‡(
now
 - 
œ°
 < 1000000 / 
TIMER_HZ
) {

27 
œ°
 = 
now
;

29 
	`IFDEF
(
CONFIG_HAS_VGA
, 
	`vga_upd©e_s¸ìn
());

31 #i‚de‡
CONFIG_TARGET_AM


32 
SDL_Evít
 
evít
;

33 
	`SDL_PﬁlEvít
(&
evít
)) {

34 
evít
.
ty≥
) {

35 
SDL_QUIT
:

36 
√mu_°©e
.
°©e
 = 
NEMU_QUIT
;

38 #ifde‡
CONFIG_HAS_KEYBOARD


40 
SDL_KEYDOWN
:

41 
SDL_KEYUP
: {

42 
uöt8_t
 
k
 = 
evít
.
key
.
keysym
.
sˇncode
;

43 
boﬁ
 
is_keydown
 = (
evít
.
key
.
ty≥
 =
SDL_KEYDOWN
);

44 
	`£nd_key
(
k
, 
is_keydown
);

52 
	}
}

54 
	$sdl_˛ór_evít_queue
() {

55 #i‚de‡
CONFIG_TARGET_AM


56 
SDL_Evít
 
evít
;

57 
	`SDL_PﬁlEvít
(&
evít
));

59 
	}
}

61 
	$öô_devi˚
() {

62 
	`IFDEF
(
CONFIG_TARGET_AM
, 
	`i€_öô
());

63 
	`öô_m≠
();

65 
	`IFDEF
(
CONFIG_HAS_SERIAL
, 
	`öô_£rül
());

66 
	`IFDEF
(
CONFIG_HAS_TIMER
, 
	`öô_timî
());

67 
	`IFDEF
(
CONFIG_HAS_VGA
, 
	`öô_vga
());

68 
	`IFDEF
(
CONFIG_HAS_KEYBOARD
, 
	`öô_i8042
());

69 
	`IFDEF
(
CONFIG_HAS_AUDIO
, 
	`öô_audio
());

70 
	`IFDEF
(
CONFIG_HAS_DISK
, 
	`öô_disk
());

71 
	`IFDEF
(
CONFIG_HAS_SDCARD
, 
	`öô_sdˇrd
());

73 
	`IFNDEF
(
CONFIG_TARGET_AM
, 
	`öô_Æ¨m
());

74 
	}
}

	@nemu/src/device/disk.c

1 
	~<devi˚/m≠.h
>

3 
	$öô_disk
() {

4 
	}
}

	@nemu/src/device/intr.c

1 
	~<iß.h
>

3 
	$dev_øi£_öå
() {

4 
	}
}

	@nemu/src/device/io/map.c

1 
	~<iß.h
>

2 
	~<mem‹y/ho°.h
>

3 
	~<mem‹y/vaddr.h
>

4 
	~<devi˚/m≠.h
>

6 
	#IO_SPACE_MAX
 (2 * 1024 * 1024)

	)

8 
uöt8_t
 *
	gio_•a˚
 = 
NULL
;

9 
uöt8_t
 *
	gp_•a˚
 = 
NULL
;

11 
uöt8_t
* 
	$√w_•a˚
(
size
) {

12 
uöt8_t
 *
p
 = 
p_•a˚
;

14 
size
 = (sizê+ (
PAGE_SIZE
 - 1)Ë& ~
PAGE_MASK
;

15 
p_•a˚
 +
size
;

16 
	`as£π
(
p_•a˚
 - 
io_•a˚
 < 
IO_SPACE_MAX
);

17  
p
;

18 
	}
}

20 
	$check_bound
(
IOM≠
 *
m≠
, 
∑ddr_t
 
addr
) {

21 i‡(
m≠
 =
NULL
) {

22 
	`As£π
(
m≠
 !
NULL
, "addªs†(" 
FMT_PADDR
 "Ëi†ouào‡boundáàp¯" 
FMT_WORD
, 
addr
, 
˝u
.
pc
);

24 
	`As£π
(
addr
 <
m≠
->
high
 &&ádd∏>m≠->
low
,

25 "addªs†(" 
FMT_PADDR
 "Ëi†ouào‡bound {%s} [" FMT_PADDR ", " FMT_PADDR "]áàp¯" 
FMT_WORD
,

26 
addr
, 
m≠
->
«me
, m≠->
low
, m≠->
high
, 
˝u
.
pc
);

28 
	}
}

30 
	$övoke_ˇŒback
(
io_ˇŒback_t
 
c
, 
∑ddr_t
 
off£t
, 
Àn
, 
boﬁ
 
is_wrôe
) {

31 i‡(
c
 !
NULL
Ë{ 
	`c
(
off£t
, 
Àn
, 
is_wrôe
); }

32 
	}
}

34 
	$öô_m≠
() {

35 
io_•a˚
 = 
	`mÆloc
(
IO_SPACE_MAX
);

36 
	`as£π
(
io_•a˚
);

37 
p_•a˚
 = 
io_•a˚
;

38 
	}
}

40 
w‹d_t
 
	$m≠_ªad
(
∑ddr_t
 
addr
, 
Àn
, 
IOM≠
 *
m≠
) {

41 
	`as£π
(
Àn
 >= 1 &&Üen <= 8);

42 
	`check_bound
(
m≠
, 
addr
);

43 
∑ddr_t
 
off£t
 = 
addr
 - 
m≠
->
low
;

44 
	`övoke_ˇŒback
(
m≠
->
ˇŒback
, 
off£t
, 
Àn
, 
Ál£
);

45 
w‹d_t
 
ªt
 = 
	`ho°_ªad
(
m≠
->
•a˚
 + 
off£t
, 
Àn
);

46  
ªt
;

47 
	}
}

49 
	$m≠_wrôe
(
∑ddr_t
 
addr
, 
Àn
, 
w‹d_t
 
d©a
, 
IOM≠
 *
m≠
) {

50 
	`as£π
(
Àn
 >= 1 &&Üen <= 8);

51 
	`check_bound
(
m≠
, 
addr
);

52 
∑ddr_t
 
off£t
 = 
addr
 - 
m≠
->
low
;

53 
	`ho°_wrôe
(
m≠
->
•a˚
 + 
off£t
, 
Àn
, 
d©a
);

54 
	`övoke_ˇŒback
(
m≠
->
ˇŒback
, 
off£t
, 
Àn
, 
åue
);

55 
	}
}

	@nemu/src/device/io/mmio.c

1 
	~<devi˚/m≠.h
>

3 
	#NR_MAP
 16

	)

5 
IOM≠
 
	gm≠s
[
NR_MAP
] = {};

6 
	gƒ_m≠
 = 0;

8 
IOM≠
* 
	$„tch_mmio_m≠
(
∑ddr_t
 
addr
) {

9 
m≠id
 = 
	`föd_m≠id_by_addr
(
m≠s
, 
ƒ_m≠
, 
addr
);

10  (
m≠id
 =-1 ? 
NULL
 : &
m≠s
[mapid]);

11 
	}
}

14 
	$add_mmio_m≠
(c⁄° *
«me
, 
∑ddr_t
 
addr
, *
•a˚
, 
uöt32_t
 
Àn
, 
io_ˇŒback_t
 
ˇŒback
) {

15 
	`as£π
(
ƒ_m≠
 < 
NR_MAP
);

16 
m≠s
[
ƒ_m≠
] = (
IOM≠
){ .
«me
 =Çame, .
low
 = 
addr
, .
high
 =ádd∏+ 
Àn
 - 1,

17 .
•a˚
 = s∑˚, .
ˇŒback
 = callback };

18 
	`Log
("Add mmiÿm≠ '%s'áà[" 
FMT_PADDR
 ", " FMT_PADDR "]",

19 
m≠s
[
ƒ_m≠
].
«me
, m≠s[ƒ_m≠].
low
, m≠s[ƒ_m≠].
high
);

21 
ƒ_m≠
 ++;

22 
	}
}

25 
w‹d_t
 
	$mmio_ªad
(
∑ddr_t
 
addr
, 
Àn
) {

26  
	`m≠_ªad
(
addr
, 
Àn
, 
	`„tch_mmio_m≠
(addr));

27 
	}
}

29 
	$mmio_wrôe
(
∑ddr_t
 
addr
, 
Àn
, 
w‹d_t
 
d©a
) {

30 
	`m≠_wrôe
(
addr
, 
Àn
, 
d©a
, 
	`„tch_mmio_m≠
(addr));

31 
	}
}

	@nemu/src/device/io/port-io.c

1 
	~<devi˚/m≠.h
>

3 
	#PORT_IO_SPACE_MAX
 65535

	)

5 
	#NR_MAP
 16

	)

6 
IOM≠
 
	gm≠s
[
NR_MAP
] = {};

7 
	gƒ_m≠
 = 0;

10 
	$add_pio_m≠
(c⁄° *
«me
, 
iﬂddr_t
 
addr
, *
•a˚
, 
uöt32_t
 
Àn
, 
io_ˇŒback_t
 
ˇŒback
) {

11 
	`as£π
(
ƒ_m≠
 < 
NR_MAP
);

12 
	`as£π
(
addr
 + 
Àn
 <
PORT_IO_SPACE_MAX
);

13 
m≠s
[
ƒ_m≠
] = (
IOM≠
){ .
«me
 =Çame, .
low
 = 
addr
, .
high
 =ádd∏+ 
Àn
 - 1,

14 .
•a˚
 = s∑˚, .
ˇŒback
 = callback };

15 
	`Log
("AddÖ‹t-iÿm≠ '%s'áà[" 
FMT_PADDR
 ", " FMT_PADDR "]",

16 
m≠s
[
ƒ_m≠
].
«me
, m≠s[ƒ_m≠].
low
, m≠s[ƒ_m≠].
high
);

18 
ƒ_m≠
 ++;

19 
	}
}

22 
uöt32_t
 
	$pio_ªad
(
iﬂddr_t
 
addr
, 
Àn
) {

23 
	`as£π
(
addr
 + 
Àn
 - 1 < 
PORT_IO_SPACE_MAX
);

24 
m≠id
 = 
	`föd_m≠id_by_addr
(
m≠s
, 
ƒ_m≠
, 
addr
);

25 
	`as£π
(
m≠id
 != -1);

26  
	`m≠_ªad
(
addr
, 
Àn
, &
m≠s
[
m≠id
]);

27 
	}
}

29 
	$pio_wrôe
(
iﬂddr_t
 
addr
, 
Àn
, 
uöt32_t
 
d©a
) {

30 
	`as£π
(
addr
 + 
Àn
 - 1 < 
PORT_IO_SPACE_MAX
);

31 
m≠id
 = 
	`föd_m≠id_by_addr
(
m≠s
, 
ƒ_m≠
, 
addr
);

32 
	`as£π
(
m≠id
 != -1);

33 
	`m≠_wrôe
(
addr
, 
Àn
, 
d©a
, &
m≠s
[
m≠id
]);

34 
	}
}

	@nemu/src/device/keyboard.c

1 
	~<devi˚/m≠.h
>

2 
	~<utûs.h
>

4 
	#KEYDOWN_MASK
 0x8000

	)

6 #i‚de‡
CONFIG_TARGET_AM


7 
	~<SDL2/SDL.h
>

10 
	#_KEYS
(
f
) \

11 
	`f
(
ESCAPE
Ëf(
F1
Ëf(
F2
Ëf(
F3
Ëf(
F4
Ëf(
F5
Ëf(
F6
Ëf(
F7
Ëf(
F8
Ëf(
F9
Ëf(
F10
Ëf(
F11
Ëf(
F12
) \

12 
	`f
(
GRAVE
Ëf(1Ëf(2Ëf(3Ëf(4Ëf(5Ëf(6Ëf(7Ëf(8Ëf(9Ëf(0Ëf(
MINUS
Ëf(
EQUALS
Ëf(
BACKSPACE
) \

13 
	`f
(
TAB
Ëf(
Q
Ëf(
W
Ëf(
E
Ëf(
R
Ëf(
T
Ëf(
Y
Ëf(
U
Ëf(
I
Ëf(
O
Ëf(
P
Ëf(
LEFTBRACKET
Ëf(
RIGHTBRACKET
Ëf(
BACKSLASH
) \

14 
	`f
(
CAPSLOCK
Ëf(
A
Ëf(
S
Ëf(
D
Ëf(
F
Ëf(
G
Ëf(
H
Ëf(
J
Ëf(
K
Ëf(
L
Ëf(
SEMICOLON
Ëf(
APOSTROPHE
Ëf(
RETURN
) \

15 
	`f
(
LSHIFT
Ëf(
Z
Ëf(
X
Ëf(
C
Ëf(
V
Ëf(
B
Ëf(
N
Ëf(
M
Ëf(
COMMA
Ëf(
PERIOD
Ëf(
SLASH
Ëf(
RSHIFT
) \

16 
	`f
(
LCTRL
Ëf(
APPLICATION
Ëf(
LALT
Ëf(
SPACE
Ëf(
RALT
Ëf(
RCTRL
) \

17 
	`f
(
UP
Ëf(
DOWN
Ëf(
LEFT
Ëf(
RIGHT
Ëf(
INSERT
Ëf(
DELETE
Ëf(
HOME
Ëf(
END
Ëf(
PAGEUP
Ëf(
PAGEDOWN
)

	)

19 
	#_KEY_NAME
(
k
Ë
_KEY_
##k,

	)

22 
	m_KEY_NONE
 = 0,

23 
MAP
(
_KEYS
, 
_KEY_NAME
)

26 
	#SDL_KEYMAP
(
k
Ë
keym≠
[
	`c⁄ˇt
(
SDL_SCANCODE_
, k)] = c⁄ˇt(
_KEY_
, k);

	)

27 
uöt32_t
 
	gkeym≠
[256] = {};

29 
	$öô_keym≠
() {

30 
	`MAP
(
_KEYS
, 
SDL_KEYMAP
)

31 
	}
}

33 
	#KEY_QUEUE_LEN
 1024

	)

34 
	gkey_queue
[
KEY_QUEUE_LEN
] = {};

35 
	gkey_f
 = 0, 
	gkey_r
 = 0;

37 
	$key_íqueue
(
uöt32_t
 
am_sˇncode
) {

38 
key_queue
[
key_r
] = 
am_sˇncode
;

39 
key_r
 = (key_∏+ 1Ë% 
KEY_QUEUE_LEN
;

40 
	`As£π
(
key_r
 !
key_f
, "key queue overflow!");

41 
	}
}

43 
uöt32_t
 
	$key_dequeue
() {

44 
uöt32_t
 
key
 = 
_KEY_NONE
;

45 i‡(
key_f
 !
key_r
) {

46 
key
 = 
key_queue
[
key_f
];

47 
key_f
 = (key_‡+ 1Ë% 
KEY_QUEUE_LEN
;

49  
key
;

50 
	}
}

52 
	$£nd_key
(
uöt8_t
 
sˇncode
, 
boﬁ
 
is_keydown
) {

53 i‡(
√mu_°©e
.
°©e
 =
NEMU_RUNNING
 && 
keym≠
[
sˇncode
] !
_KEY_NONE
) {

54 
uöt32_t
 
am_sˇncode
 = 
keym≠
[
sˇncode
] | (
is_keydown
 ? 
KEYDOWN_MASK
 : 0);

55 
	`key_íqueue
(
am_sˇncode
);

57 
	}
}

59 
	#_KEY_NONE
 0

	)

61 
uöt32_t
 
	$key_dequeue
() {

62 
AM_INPUT_KEYBRD_T
 
ev
 = 
	`io_ªad
(
AM_INPUT_KEYBRD
);

63 
uöt32_t
 
am_sˇncode
 = 
ev
.
keycode
 | (ev.
keydown
 ? 
KEYDOWN_MASK
 : 0);

64  
am_sˇncode
;

65 
	}
}

68 
uöt32_t
 *
	gi8042_d©a_p‹t_ba£
 = 
NULL
;

70 
	$i8042_d©a_io_h™dÀr
(
uöt32_t
 
off£t
, 
Àn
, 
boﬁ
 
is_wrôe
) {

71 
	`as£π
(!
is_wrôe
);

72 
	`as£π
(
off£t
 == 0);

73 
i8042_d©a_p‹t_ba£
[0] = 
	`key_dequeue
();

74 
	}
}

76 
	$öô_i8042
() {

77 
i8042_d©a_p‹t_ba£
 = (
uöt32_t
 *)
	`√w_•a˚
(4);

78 
i8042_d©a_p‹t_ba£
[0] = 
_KEY_NONE
;

79 #ifde‡
CONFIG_HAS_PORT_IO


80 
	`add_pio_m≠
 ("keybﬂrd", 
CONFIG_I8042_DATA_PORT
, 
i8042_d©a_p‹t_ba£
, 4, 
i8042_d©a_io_h™dÀr
);

82 
	`add_mmio_m≠
("keybﬂrd", 
CONFIG_I8042_DATA_MMIO
, 
i8042_d©a_p‹t_ba£
, 4, 
i8042_d©a_io_h™dÀr
);

84 
	`IFNDEF
(
CONFIG_TARGET_AM
, 
	`öô_keym≠
());

85 
	}
}

	@nemu/src/device/mmc.h

24 #i‚de‡
LINUX_MMC_MMC_H


25 
	#LINUX_MMC_MMC_H


	)

29 
	#MMC_GO_IDLE_STATE
 0

	)

30 
	#MMC_SEND_OP_COND
 1

	)

31 
	#MMC_ALL_SEND_CID
 2

	)

32 
	#MMC_SET_RELATIVE_ADDR
 3

	)

33 
	#MMC_SET_DSR
 4

	)

34 
	#MMC_SLEEP_AWAKE
 5

	)

35 
	#MMC_SWITCH
 6

	)

36 
	#MMC_SELECT_CARD
 7

	)

37 
	#MMC_SEND_EXT_CSD
 8

	)

38 
	#MMC_SEND_CSD
 9

	)

39 
	#MMC_SEND_CID
 10

	)

40 
	#MMC_READ_DAT_UNTIL_STOP
 11

	)

41 
	#MMC_STOP_TRANSMISSION
 12

	)

42 
	#MMC_SEND_STATUS
 13

	)

43 
	#MMC_BUS_TEST_R
 14

	)

44 
	#MMC_GO_INACTIVE_STATE
 15

	)

45 
	#MMC_BUS_TEST_W
 19

	)

46 
	#MMC_SPI_READ_OCR
 58

	)

47 
	#MMC_SPI_CRC_ON_OFF
 59

	)

50 
	#MMC_SET_BLOCKLEN
 16

	)

51 
	#MMC_READ_SINGLE_BLOCK
 17

	)

52 
	#MMC_READ_MULTIPLE_BLOCK
 18

	)

53 
	#MMC_SEND_TUNING_BLOCK
 19

	)

54 
	#MMC_SEND_TUNING_BLOCK_HS200
 21

	)

57 
	#MMC_WRITE_DAT_UNTIL_STOP
 20

	)

60 
	#MMC_SET_BLOCK_COUNT
 23

	)

61 
	#MMC_WRITE_BLOCK
 24

	)

62 
	#MMC_WRITE_MULTIPLE_BLOCK
 25

	)

63 
	#MMC_PROGRAM_CID
 26

	)

64 
	#MMC_PROGRAM_CSD
 27

	)

67 
	#MMC_SET_WRITE_PROT
 28

	)

68 
	#MMC_CLR_WRITE_PROT
 29

	)

69 
	#MMC_SEND_WRITE_PROT
 30

	)

72 
	#MMC_ERASE_GROUP_START
 35

	)

73 
	#MMC_ERASE_GROUP_END
 36

	)

74 
	#MMC_ERASE
 38

	)

77 
	#MMC_FAST_IO
 39

	)

78 
	#MMC_GO_IRQ_STATE
 40

	)

81 
	#MMC_LOCK_UNLOCK
 42

	)

84 
	#MMC_APP_CMD
 55

	)

85 
	#MMC_GEN_CMD
 56

	)

88 
	#MMC_QUE_TASK_PARAMS
 44

	)

89 
	#MMC_QUE_TASK_ADDR
 45

	)

90 
	#MMC_EXECUTE_READ_TASK
 46

	)

91 
	#MMC_EXECUTE_WRITE_TASK
 47

	)

92 
	#MMC_CMDQ_TASK_MGMT
 48

	)

126 
	#R1_OUT_OF_RANGE
 (1 << 31Ë

	)

127 
	#R1_ADDRESS_ERROR
 (1 << 30Ë

	)

128 
	#R1_BLOCK_LEN_ERROR
 (1 << 29Ë

	)

129 
	#R1_ERASE_SEQ_ERROR
 (1 << 28Ë

	)

130 
	#R1_ERASE_PARAM
 (1 << 27Ë

	)

131 
	#R1_WP_VIOLATION
 (1 << 26Ë

	)

132 
	#R1_CARD_IS_LOCKED
 (1 << 25Ë

	)

133 
	#R1_LOCK_UNLOCK_FAILED
 (1 << 24Ë

	)

134 
	#R1_COM_CRC_ERROR
 (1 << 23Ë

	)

135 
	#R1_ILLEGAL_COMMAND
 (1 << 22Ë

	)

136 
	#R1_CARD_ECC_FAILED
 (1 << 21Ë

	)

137 
	#R1_CC_ERROR
 (1 << 20Ë

	)

138 
	#R1_ERROR
 (1 << 19Ë

	)

139 
	#R1_UNDERRUN
 (1 << 18Ë

	)

140 
	#R1_OVERRUN
 (1 << 17Ë

	)

141 
	#R1_CID_CSD_OVERWRITE
 (1 << 16Ë

	)

142 
	#R1_WP_ERASE_SKIP
 (1 << 15Ë

	)

143 
	#R1_CARD_ECC_DISABLED
 (1 << 14Ë

	)

144 
	#R1_ERASE_RESET
 (1 << 13Ë

	)

145 
	#R1_STATUS
(
x
Ë(x & 0xFFFFE000)

	)

146 
	#R1_CURRENT_STATE
(
x
Ë((x & 0x00001E00Ë>> 9Ë

	)

147 
	#R1_READY_FOR_DATA
 (1 << 8Ë

	)

148 
	#R1_SWITCH_ERROR
 (1 << 7Ë

	)

149 
	#R1_EXCEPTION_EVENT
 (1 << 6Ë

	)

150 
	#R1_APP_CMD
 (1 << 5Ë

	)

152 
	#R1_STATE_IDLE
 0

	)

153 
	#R1_STATE_READY
 1

	)

154 
	#R1_STATE_IDENT
 2

	)

155 
	#R1_STATE_STBY
 3

	)

156 
	#R1_STATE_TRAN
 4

	)

157 
	#R1_STATE_DATA
 5

	)

158 
	#R1_STATE_RCV
 6

	)

159 
	#R1_STATE_PRG
 7

	)

160 
	#R1_STATE_DIS
 8

	)

166 
	#R1_SPI_IDLE
 (1 << 0)

	)

167 
	#R1_SPI_ERASE_RESET
 (1 << 1)

	)

168 
	#R1_SPI_ILLEGAL_COMMAND
 (1 << 2)

	)

169 
	#R1_SPI_COM_CRC
 (1 << 3)

	)

170 
	#R1_SPI_ERASE_SEQ
 (1 << 4)

	)

171 
	#R1_SPI_ADDRESS
 (1 << 5)

	)

172 
	#R1_SPI_PARAMETER
 (1 << 6)

	)

174 
	#R2_SPI_CARD_LOCKED
 (1 << 8)

	)

175 
	#R2_SPI_WP_ERASE_SKIP
 (1 << 9Ë

	)

176 
	#R2_SPI_LOCK_UNLOCK_FAIL
 
R2_SPI_WP_ERASE_SKIP


	)

177 
	#R2_SPI_ERROR
 (1 << 10)

	)

178 
	#R2_SPI_CC_ERROR
 (1 << 11)

	)

179 
	#R2_SPI_CARD_ECC_ERROR
 (1 << 12)

	)

180 
	#R2_SPI_WP_VIOLATION
 (1 << 13)

	)

181 
	#R2_SPI_ERASE_PARAM
 (1 << 14)

	)

182 
	#R2_SPI_OUT_OF_RANGE
 (1 << 15Ë

	)

183 
	#R2_SPI_CSD_OVERWRITE
 
R2_SPI_OUT_OF_RANGE


	)

188 
	#MMC_CARD_BUSY
 0x80000000

	)

193 
	#CCC_BASIC
 (1<<0Ë

	)

196 
	#CCC_STREAM_READ
 (1<<1Ë

	)

198 
	#CCC_BLOCK_READ
 (1<<2Ë

	)

200 
	#CCC_STREAM_WRITE
 (1<<3Ë

	)

202 
	#CCC_BLOCK_WRITE
 (1<<4Ë

	)

204 
	#CCC_ERASE
 (1<<5Ë

	)

206 
	#CCC_WRITE_PROT
 (1<<6Ë

	)

208 
	#CCC_LOCK_CARD
 (1<<7Ë

	)

210 
	#CCC_APP_SPEC
 (1<<8Ë

	)

212 
	#CCC_IO_MODE
 (1<<9Ë

	)

214 
	#CCC_SWITCH
 (1<<10Ë

	)

223 
	#CSD_STRUCT_VER_1_0
 0

	)

224 
	#CSD_STRUCT_VER_1_1
 1

	)

225 
	#CSD_STRUCT_VER_1_2
 2

	)

226 
	#CSD_STRUCT_EXT_CSD
 3

	)

228 
	#CSD_SPEC_VER_0
 0

	)

229 
	#CSD_SPEC_VER_1
 1

	)

230 
	#CSD_SPEC_VER_2
 2

	)

231 
	#CSD_SPEC_VER_3
 3

	)

232 
	#CSD_SPEC_VER_4
 4

	)

238 
	#EXT_CSD_CMDQ_MODE_EN
 15

	)

239 
	#EXT_CSD_FLUSH_CACHE
 32

	)

240 
	#EXT_CSD_CACHE_CTRL
 33

	)

241 
	#EXT_CSD_POWER_OFF_NOTIFICATION
 34

	)

242 
	#EXT_CSD_PACKED_FAILURE_INDEX
 35

	)

243 
	#EXT_CSD_PACKED_CMD_STATUS
 36

	)

244 
	#EXT_CSD_EXP_EVENTS_STATUS
 54

	)

245 
	#EXT_CSD_EXP_EVENTS_CTRL
 56

	)

246 
	#EXT_CSD_DATA_SECTOR_SIZE
 61

	)

247 
	#EXT_CSD_GP_SIZE_MULT
 143

	)

248 
	#EXT_CSD_PARTITION_SETTING_COMPLETED
 155

	)

249 
	#EXT_CSD_PARTITION_ATTRIBUTE
 156

	)

250 
	#EXT_CSD_PARTITION_SUPPORT
 160

	)

251 
	#EXT_CSD_HPI_MGMT
 161

	)

252 
	#EXT_CSD_RST_N_FUNCTION
 162

	)

253 
	#EXT_CSD_BKOPS_EN
 163

	)

254 
	#EXT_CSD_BKOPS_START
 164

	)

255 
	#EXT_CSD_SANITIZE_START
 165

	)

256 
	#EXT_CSD_WR_REL_PARAM
 166

	)

257 
	#EXT_CSD_RPMB_MULT
 168

	)

258 
	#EXT_CSD_FW_CONFIG
 169

	)

259 
	#EXT_CSD_BOOT_WP
 173

	)

260 
	#EXT_CSD_ERASE_GROUP_DEF
 175

	)

261 
	#EXT_CSD_PART_CONFIG
 179

	)

262 
	#EXT_CSD_ERASED_MEM_CONT
 181

	)

263 
	#EXT_CSD_BUS_WIDTH
 183

	)

264 
	#EXT_CSD_STROBE_SUPPORT
 184

	)

265 
	#EXT_CSD_HS_TIMING
 185

	)

266 
	#EXT_CSD_POWER_CLASS
 187

	)

267 
	#EXT_CSD_REV
 192

	)

268 
	#EXT_CSD_STRUCTURE
 194

	)

269 
	#EXT_CSD_CARD_TYPE
 196

	)

270 
	#EXT_CSD_DRIVER_STRENGTH
 197

	)

271 
	#EXT_CSD_OUT_OF_INTERRUPT_TIME
 198

	)

272 
	#EXT_CSD_PART_SWITCH_TIME
 199

	)

273 
	#EXT_CSD_PWR_CL_52_195
 200

	)

274 
	#EXT_CSD_PWR_CL_26_195
 201

	)

275 
	#EXT_CSD_PWR_CL_52_360
 202

	)

276 
	#EXT_CSD_PWR_CL_26_360
 203

	)

277 
	#EXT_CSD_SEC_CNT
 212

	)

278 
	#EXT_CSD_S_A_TIMEOUT
 217

	)

279 
	#EXT_CSD_REL_WR_SEC_C
 222

	)

280 
	#EXT_CSD_HC_WP_GRP_SIZE
 221

	)

281 
	#EXT_CSD_ERASE_TIMEOUT_MULT
 223

	)

282 
	#EXT_CSD_HC_ERASE_GRP_SIZE
 224

	)

283 
	#EXT_CSD_BOOT_MULT
 226

	)

284 
	#EXT_CSD_SEC_TRIM_MULT
 229

	)

285 
	#EXT_CSD_SEC_ERASE_MULT
 230

	)

286 
	#EXT_CSD_SEC_FEATURE_SUPPORT
 231

	)

287 
	#EXT_CSD_TRIM_MULT
 232

	)

288 
	#EXT_CSD_PWR_CL_200_195
 236

	)

289 
	#EXT_CSD_PWR_CL_200_360
 237

	)

290 
	#EXT_CSD_PWR_CL_DDR_52_195
 238

	)

291 
	#EXT_CSD_PWR_CL_DDR_52_360
 239

	)

292 
	#EXT_CSD_BKOPS_STATUS
 246

	)

293 
	#EXT_CSD_POWER_OFF_LONG_TIME
 247

	)

294 
	#EXT_CSD_GENERIC_CMD6_TIME
 248

	)

295 
	#EXT_CSD_CACHE_SIZE
 249

	)

296 
	#EXT_CSD_PWR_CL_DDR_200_360
 253

	)

297 
	#EXT_CSD_FIRMWARE_VERSION
 254

	)

298 
	#EXT_CSD_PRE_EOL_INFO
 267

	)

299 
	#EXT_CSD_DEVICE_LIFE_TIME_EST_TYP_A
 268

	)

300 
	#EXT_CSD_DEVICE_LIFE_TIME_EST_TYP_B
 269

	)

301 
	#EXT_CSD_CMDQ_DEPTH
 307

	)

302 
	#EXT_CSD_CMDQ_SUPPORT
 308

	)

303 
	#EXT_CSD_SUPPORTED_MODE
 493

	)

304 
	#EXT_CSD_TAG_UNIT_SIZE
 498

	)

305 
	#EXT_CSD_DATA_TAG_SUPPORT
 499

	)

306 
	#EXT_CSD_MAX_PACKED_WRITES
 500

	)

307 
	#EXT_CSD_MAX_PACKED_READS
 501

	)

308 
	#EXT_CSD_BKOPS_SUPPORT
 502

	)

309 
	#EXT_CSD_HPI_FEATURES
 503

	)

315 
	#EXT_CSD_WR_REL_PARAM_EN
 (1<<2)

	)

317 
	#EXT_CSD_BOOT_WP_B_PWR_WP_DIS
 (0x40)

	)

318 
	#EXT_CSD_BOOT_WP_B_PERM_WP_DIS
 (0x10)

	)

319 
	#EXT_CSD_BOOT_WP_B_PERM_WP_EN
 (0x04)

	)

320 
	#EXT_CSD_BOOT_WP_B_PWR_WP_EN
 (0x01)

	)

322 
	#EXT_CSD_PART_CONFIG_ACC_MASK
 (0x7)

	)

323 
	#EXT_CSD_PART_CONFIG_ACC_BOOT0
 (0x1)

	)

324 
	#EXT_CSD_PART_CONFIG_ACC_RPMB
 (0x3)

	)

325 
	#EXT_CSD_PART_CONFIG_ACC_GP0
 (0x4)

	)

327 
	#EXT_CSD_PART_SETTING_COMPLETED
 (0x1)

	)

328 
	#EXT_CSD_PART_SUPPORT_PART_EN
 (0x1)

	)

330 
	#EXT_CSD_CMD_SET_NORMAL
 (1<<0)

	)

331 
	#EXT_CSD_CMD_SET_SECURE
 (1<<1)

	)

332 
	#EXT_CSD_CMD_SET_CPSECURE
 (1<<2)

	)

334 
	#EXT_CSD_CARD_TYPE_HS_26
 (1<<0Ë

	)

335 
	#EXT_CSD_CARD_TYPE_HS_52
 (1<<1Ë

	)

336 
	#EXT_CSD_CARD_TYPE_HS
 (
EXT_CSD_CARD_TYPE_HS_26
 | \

337 
EXT_CSD_CARD_TYPE_HS_52
)

	)

338 
	#EXT_CSD_CARD_TYPE_DDR_1_8V
 (1<<2Ë

	)

340 
	#EXT_CSD_CARD_TYPE_DDR_1_2V
 (1<<3Ë

	)

342 
	#EXT_CSD_CARD_TYPE_DDR_52
 (
EXT_CSD_CARD_TYPE_DDR_1_8V
 \

343 | 
EXT_CSD_CARD_TYPE_DDR_1_2V
)

	)

344 
	#EXT_CSD_CARD_TYPE_HS200_1_8V
 (1<<4Ë

	)

345 
	#EXT_CSD_CARD_TYPE_HS200_1_2V
 (1<<5Ë

	)

347 
	#EXT_CSD_CARD_TYPE_HS200
 (
EXT_CSD_CARD_TYPE_HS200_1_8V
 | \

348 
EXT_CSD_CARD_TYPE_HS200_1_2V
)

	)

349 
	#EXT_CSD_CARD_TYPE_HS400_1_8V
 (1<<6Ë

	)

350 
	#EXT_CSD_CARD_TYPE_HS400_1_2V
 (1<<7Ë

	)

351 
	#EXT_CSD_CARD_TYPE_HS400
 (
EXT_CSD_CARD_TYPE_HS400_1_8V
 | \

352 
EXT_CSD_CARD_TYPE_HS400_1_2V
)

	)

353 
	#EXT_CSD_CARD_TYPE_HS400ES
 (1<<8Ë

	)

355 
	#EXT_CSD_BUS_WIDTH_1
 0

	)

356 
	#EXT_CSD_BUS_WIDTH_4
 1

	)

357 
	#EXT_CSD_BUS_WIDTH_8
 2

	)

358 
	#EXT_CSD_DDR_BUS_WIDTH_4
 5

	)

359 
	#EXT_CSD_DDR_BUS_WIDTH_8
 6

	)

360 
	#EXT_CSD_BUS_WIDTH_STROBE
 
	`BIT
(7Ë

	)

362 
	#EXT_CSD_TIMING_BC
 0

	)

363 
	#EXT_CSD_TIMING_HS
 1

	)

364 
	#EXT_CSD_TIMING_HS200
 2

	)

365 
	#EXT_CSD_TIMING_HS400
 3

	)

366 
	#EXT_CSD_DRV_STR_SHIFT
 4

	)

368 
	#EXT_CSD_SEC_ER_EN
 
	`BIT
(0)

	)

369 
	#EXT_CSD_SEC_BD_BLK_EN
 
	`BIT
(2)

	)

370 
	#EXT_CSD_SEC_GB_CL_EN
 
	`BIT
(4)

	)

371 
	#EXT_CSD_SEC_SANITIZE
 
	`BIT
(6Ë

	)

373 
	#EXT_CSD_RST_N_EN_MASK
 0x3

	)

374 
	#EXT_CSD_RST_N_ENABLED
 1

	)

376 
	#EXT_CSD_NO_POWER_NOTIFICATION
 0

	)

377 
	#EXT_CSD_POWER_ON
 1

	)

378 
	#EXT_CSD_POWER_OFF_SHORT
 2

	)

379 
	#EXT_CSD_POWER_OFF_LONG
 3

	)

381 
	#EXT_CSD_PWR_CL_8BIT_MASK
 0xF0

	)

382 
	#EXT_CSD_PWR_CL_4BIT_MASK
 0x0F

	)

383 
	#EXT_CSD_PWR_CL_8BIT_SHIFT
 4

	)

384 
	#EXT_CSD_PWR_CL_4BIT_SHIFT
 0

	)

386 
	#EXT_CSD_PACKED_EVENT_EN
 
	`BIT
(3)

	)

391 
	#EXT_CSD_URGENT_BKOPS
 
	`BIT
(0)

	)

392 
	#EXT_CSD_DYNCAP_NEEDED
 
	`BIT
(1)

	)

393 
	#EXT_CSD_SYSPOOL_EXHAUSTED
 
	`BIT
(2)

	)

394 
	#EXT_CSD_PACKED_FAILURE
 
	`BIT
(3)

	)

396 
	#EXT_CSD_PACKED_GENERIC_ERROR
 
	`BIT
(0)

	)

397 
	#EXT_CSD_PACKED_INDEXED_ERROR
 
	`BIT
(1)

	)

402 
	#EXT_CSD_BKOPS_LEVEL_2
 0x2

	)

407 
	#EXT_CSD_MANUAL_BKOPS_MASK
 0x01

	)

408 
	#EXT_CSD_AUTO_BKOPS_MASK
 0x02

	)

413 
	#EXT_CSD_CMDQ_MODE_ENABLED
 
	`BIT
(0)

	)

414 
	#EXT_CSD_CMDQ_DEPTH_MASK
 
	`GENMASK
(4, 0)

	)

415 
	#EXT_CSD_CMDQ_SUPPORTED
 
	`BIT
(0)

	)

420 
	#MMC_SWITCH_MODE_CMD_SET
 0x00

	)

421 
	#MMC_SWITCH_MODE_SET_BITS
 0x01

	)

422 
	#MMC_SWITCH_MODE_CLEAR_BITS
 0x02

	)

423 
	#MMC_SWITCH_MODE_WRITE_BYTE
 0x03

	)

428 
	#MMC_ERASE_ARG
 0x00000000

	)

429 
	#MMC_SECURE_ERASE_ARG
 0x80000000

	)

430 
	#MMC_TRIM_ARG
 0x00000001

	)

431 
	#MMC_DISCARD_ARG
 0x00000003

	)

432 
	#MMC_SECURE_TRIM1_ARG
 0x80000001

	)

433 
	#MMC_SECURE_TRIM2_ARG
 0x80008000

	)

434 
	#MMC_SECURE_ARGS
 0x80000000

	)

435 
	#MMC_TRIM_ARGS
 0x00008001

	)

437 
	#mmc_drivî_ty≥_mask
(
n
Ë(1 << (n))

	)

	@nemu/src/device/sdcard.c

1 
	~<devi˚/m≠.h
>

2 
	~"mmc.h
"

7 
	#MEMORY_SIZE
 (16ull * 1024 * 1024 * 1024)

8 
	#READ_BL_LEN
 15

	)

9 
	#BLOCK_LEN
 (1 << 
READ_BL_LEN
)

	)

10 
	#NR_BLOCK
 (
MEMORY_SIZE
 / 
BLOCK_LEN
)

	)

11 
	#C_SIZE_MULT
 7

12 
	#MULT
 (1 << (
C_SIZE_MULT
 + 2))

	)

13 
	#C_SIZE
 (
NR_BLOCK
 / 
MULT
 - 1)

	)

20 
	mSDCMD
, 
	mSDARG
, 
	mSDTOUT
, 
	mSDCDIV
,

21 
	mSDRSP0
, 
	mSDRSP1
, 
	mSDRSP2
, 
	mSDRSP3
,

22 
	mSDHSTS
, 
	m__PAD0
, 
	m__PAD1
, 
	m__PAD2
,

23 
	mSDVDD
, 
	mSDEDM
, 
	mSDHCFG
, 
	mSDHBCT
,

24 
	mSDDATA
, 
	m__PAD10
, 
	m__PAD11
, 
	m__PAD12
,

25 
	mSDHBLC


28 
FILE
 *
	gÂ
 = 
NULL
;

29 
uöt32_t
 *
	gba£
 = 
NULL
;

30 
uöt32_t
 
	gblk˙t
 = 0;

31 
	gblk_addr
 = 0;

32 
uöt32_t
 
	gaddr
 = 0;

33 
boﬁ
 
	gwrôe_cmd
 = 0;

34 
boﬁ
 
	gªad_ext_csd
 = 
Ál£
;

36 
	$¥ï¨e_rw
(
is_wrôe
) {

37 
blk_addr
 = 
ba£
[
SDARG
];

38 
addr
 = 0;

39 i‡(
Â
Ë
	`f£ek
(Â, 
blk_addr
 << 9, 
SEEK_SET
);

40 
wrôe_cmd
 = 
is_wrôe
;

41 
	}
}

43 
	$sdˇrd_h™dÀ_cmd
(
cmd
) {

44 
cmd
) {

45 
MMC_GO_IDLE_STATE
: ;

46 
MMC_SEND_OP_COND
: 
ba£
[
SDRSP0
] = 0x80ff8000; ;

47 
MMC_ALL_SEND_CID
:

48 
ba£
[
SDRSP0
] = 0x00000001;

49 
ba£
[
SDRSP1
] = 0x00000000;

50 
ba£
[
SDRSP2
] = 0x00000000;

51 
ba£
[
SDRSP3
] = 0x15000000;

55 
MMC_SEND_CSD
:

56 
ba£
[
SDRSP0
] = 0x92404001;

57 
ba£
[
SDRSP1
] = 0x124b97e3 | ((
C_SIZE
 & 0x3) << 30);

58 
ba£
[
SDRSP2
] = 0x0f508000 | (
C_SIZE
 >> 2Ë| (
READ_BL_LEN
 << 16);

59 
ba£
[
SDRSP3
] = 0x9026012a;

61 
MMC_SEND_EXT_CSD
: 
ªad_ext_csd
 = 
åue
; 
addr
 = 0; ;

62 
MMC_SLEEP_AWAKE
: ;

63 
MMC_APP_CMD
: ;

64 
MMC_SET_RELATIVE_ADDR
: ;

65 
MMC_SELECT_CARD
: ;

66 
MMC_SET_BLOCK_COUNT
: 
blk˙t
 = 
ba£
[
SDARG
] & 0xffff; ;

67 
MMC_READ_MULTIPLE_BLOCK
: 
	`¥ï¨e_rw
(
Ál£
); ;

68 
MMC_WRITE_MULTIPLE_BLOCK
: 
	`¥ï¨e_rw
(
åue
); ;

69 
MMC_SEND_STATUS
: 
ba£
[
SDRSP0
] = 0x900; ba£[
SDRSP1
] = ba£[
SDRSP2
] = ba£[
SDRSP3
] = 0; ;

70 
MMC_STOP_TRANSMISSION
: ;

72 
	`∑nic
("unh™dÀd comm™d = %d", 
cmd
);

74 
	}
}

76 
	$sdˇrd_io_h™dÀr
(
uöt32_t
 
off£t
, 
Àn
, 
boﬁ
 
is_wrôe
) {

77 
idx
 = 
off£t
 / 4;

78 
idx
) {

79 
SDCMD
: 
	`sdˇrd_h™dÀ_cmd
(
ba£
[SDCMD] & 0x3f); ;

80 
SDARG
:

81 
SDRSP0
:

82 
SDRSP1
:

83 
SDRSP2
:

84 
SDRSP3
:

86 
SDDATA
:

87 i‡(
ªad_ext_csd
) {

89 
uöt32_t
 
d©a
;

90 
addr
) {

91 192: 
d©a
 = 2; ;

92 212: 
d©a
 = 
MEMORY_SIZE
 / 512; ;

93 : 
d©a
 = 0;

95 
ba£
[
SDDATA
] = 
d©a
;

96 i‡(
addr
 =512 - 4Ë
ªad_ext_csd
 = 
Ál£
;

97 } i‡(
Â
) {

98 
	`__©åibuã__
((
unu£d
)Ë
ªt
;

99 i‡(!
wrôe_cmd
Ë{ 
ªt
 = 
	`‰ód
(&
ba£
[
SDDATA
], 4, 1, 
Â
); }

100 { 
ªt
 = 
	`fwrôe
(&
ba£
[
SDDATA
], 4, 1, 
Â
); }

102 
addr
 += 4;

105 
	`Log
("off£à0x%x(idx = %d), is_wrôê%d, d©®0x%x", 
off£t
, 
idx
, 
is_wrôe
, 
ba£
[idx]);

106 
	`∑nic
("unh™dÀ off£à%d", 
off£t
);

108 
	}
}

110 
	$öô_sdˇrd
() {

111 
ba£
 = (
uöt32_t
 *)
	`√w_•a˚
(0x80);

112 
	`add_mmio_m≠
("sdhci", 
CONFIG_SDCARD_CTL_MMIO
, 
ba£
, 0x80, 
sdˇrd_io_h™dÀr
);

114 
	`As£π
(
C_SIZE
 < (1 << 12), "shoule be fit in 12 bits");

116 c⁄° *
img
 = 
CONFIG_SDCARD_IMG_PATH
;

117 
Â
 = 
	`f›í
(
img
, "r+");

118 i‡(
Â
 =
NULL
Ë
	`Log
("C™ÇŸ föd sdˇrd image: %s", 
img
);

119 
	}
}

	@nemu/src/device/serial.c

1 
	~<utûs.h
>

2 
	~<devi˚/m≠.h
>

7 
	#CH_OFFSET
 0

	)

9 
uöt8_t
 *
	g£rül_ba£
 = 
NULL
;

12 
	$£rül_putc
(
ch
) {

13 
	`MUXDEF
(
CONFIG_TARGET_AM
, 
	`putch
(
ch
), 
	`putc
(ch, 
°dîr
));

14 
	}
}

16 
	$£rül_io_h™dÀr
(
uöt32_t
 
off£t
, 
Àn
, 
boﬁ
 
is_wrôe
) {

17 
	`as£π
(
Àn
 == 1);

18 
off£t
) {

20 
CH_OFFSET
:

21 i‡(
is_wrôe
Ë
	`£rül_putc
(
£rül_ba£
[0]);

22 
	`∑nic
("doÇot supportÑead");

24 : 
	`∑nic
("dÿnŸ suµ‹àoff£à%d", 
off£t
);

26 
	}
}

28 
	$öô_£rül
() {

29 
£rül_ba£
 = 
	`√w_•a˚
(8);

30 #ifde‡
CONFIG_HAS_PORT_IO


31 
	`add_pio_m≠
 ("£rül", 
CONFIG_SERIAL_PORT
, 
£rül_ba£
, 8, 
£rül_io_h™dÀr
);

33 
	`add_mmio_m≠
("£rül", 
CONFIG_SERIAL_MMIO
, 
£rül_ba£
, 8, 
£rül_io_h™dÀr
);

36 
	}
}

	@nemu/src/device/timer.c

1 
	~<devi˚/m≠.h
>

2 
	~<devi˚/Æ¨m.h
>

3 
	~<utûs.h
>

5 
uöt32_t
 *
	gπc_p‹t_ba£
 = 
NULL
;

7 
	$πc_io_h™dÀr
(
uöt32_t
 
off£t
, 
Àn
, 
boﬁ
 
is_wrôe
) {

8 
	`as£π
(
off£t
 == 0 || offset == 4);

9 i‡(!
is_wrôe
 && 
off£t
 == 4) {

10 
uöt64_t
 
us
 = 
	`gë_time
();

11 
πc_p‹t_ba£
[0] = (
uöt32_t
)
us
;

12 
πc_p‹t_ba£
[1] = 
us
 >> 32;

14 
	}
}

16 #i‚de‡
CONFIG_TARGET_AM


17 
	$timî_öå
() {

18 i‡(
√mu_°©e
.
°©e
 =
NEMU_RUNNING
) {

19 
	`dev_øi£_öå
();

20 
	`dev_øi£_öå
();

22 
	}
}

25 
	$öô_timî
() {

26 
πc_p‹t_ba£
 = (
uöt32_t
 *)
	`√w_•a˚
(8);

27 #ifde‡
CONFIG_HAS_PORT_IO


28 
	`add_pio_m≠
 ("πc", 
CONFIG_RTC_PORT
, 
πc_p‹t_ba£
, 8, 
πc_io_h™dÀr
);

30 
	`add_mmio_m≠
("πc", 
CONFIG_RTC_MMIO
, 
πc_p‹t_ba£
, 8, 
πc_io_h™dÀr
);

32 
	`IFNDEF
(
CONFIG_TARGET_AM
, 
	`add_Æ¨m_h™dÀ
(
timî_öå
));

33 
	}
}

	@nemu/src/device/vga.c

1 
	~<comm⁄.h
>

2 
	~<devi˚/m≠.h
>

4 
	#SCREEN_W
 (
	`MUXDEF
(
CONFIG_VGA_SIZE_800x600
, 800, 400))

	)

5 
	#SCREEN_H
 (
	`MUXDEF
(
CONFIG_VGA_SIZE_800x600
, 600, 300))

	)

7 
uöt32_t
 
	$s¸ìn_width
() {

8  
	`MUXDEF
(
CONFIG_TARGET_AM
, 
	`io_ªad
(
AM_GPU_CONFIG
).
width
, 
SCREEN_W
);

9 
	}
}

11 
uöt32_t
 
	$s¸ìn_height
() {

12  
	`MUXDEF
(
CONFIG_TARGET_AM
, 
	`io_ªad
(
AM_GPU_CONFIG
).
height
, 
SCREEN_H
);

13 
	}
}

15 
uöt32_t
 
	$s¸ìn_size
() {

16  
	`s¸ìn_width
(Ë* 
	`s¸ìn_height
(Ë* (
uöt32_t
);

17 
	}
}

19 *
	gvmem
 = 
NULL
;

20 
uöt32_t
 *
	gvga˘l_p‹t_ba£
 = 
NULL
;

22 #ifde‡
CONFIG_VGA_SHOW_SCREEN


23 #i‚de‡
CONFIG_TARGET_AM


24 
	~<SDL2/SDL.h
>

26 
SDL_Rídîî
 *
	gªndîî
 = 
NULL
;

27 
SDL_Textuª
 *
	gãxtuª
 = 
NULL
;

29 
	$öô_s¸ìn
() {

30 
SDL_Wödow
 *
wödow
 = 
NULL
;

31 
tôÀ
[128];

32 
	`•rötf
(
tôÀ
, "%s-NEMU", 
	`°r
(
__GUEST_ISA__
));

33 
	`SDL_Inô
(
SDL_INIT_VIDEO
);

34 
	`SDL_Cª©eWödowAndRídîî
(

35 
SCREEN_W
 * (
	`MUXDEF
(
CONFIG_VGA_SIZE_400x300
, 2, 1)),

36 
SCREEN_H
 * (
	`MUXDEF
(
CONFIG_VGA_SIZE_400x300
, 2, 1)),

37 0, &
wödow
, &
ªndîî
);

38 
	`SDL_SëWödowTôÀ
(
wödow
, 
tôÀ
);

39 
ãxtuª
 = 
	`SDL_Cª©eTextuª
(
ªndîî
, 
SDL_PIXELFORMAT_ARGB8888
,

40 
SDL_TEXTUREACCESS_STATIC
, 
SCREEN_W
, 
SCREEN_H
);

41 
	}
}

43 
ölöe
 
	$upd©e_s¸ìn
() {

44 
	`SDL_Upd©eTextuª
(
ãxtuª
, 
NULL
, 
vmem
, 
SCREEN_W
 * (
uöt32_t
));

45 
	`SDL_RídîCÀ¨
(
ªndîî
);

46 
	`SDL_RídîC›y
(
ªndîî
, 
ãxtuª
, 
NULL
, NULL);

47 
	`SDL_RídîPª£¡
(
ªndîî
);

48 
	}
}

50 
	$öô_s¸ìn
(Ë{
	}
}

52 
ölöe
 
	$upd©e_s¸ìn
() {

53 
	`io_wrôe
(
AM_GPU_FBDRAW
, 0, 0, 
vmem
, 
	`s¸ìn_width
(), 
	`s¸ìn_height
(), 
åue
);

54 
	}
}

58 
	$vga_upd©e_s¸ìn
() {

61 
	}
}

63 
	$öô_vga
() {

64 
vga˘l_p‹t_ba£
 = (
uöt32_t
 *)
	`√w_•a˚
(8);

65 
vga˘l_p‹t_ba£
[0] = (
	`s¸ìn_width
(Ë<< 16Ë| 
	`s¸ìn_height
();

66 #ifde‡
CONFIG_HAS_PORT_IO


67 
	`add_pio_m≠
 ("vga˘l", 
CONFIG_VGA_CTL_PORT
, 
vga˘l_p‹t_ba£
, 8, 
NULL
);

69 
	`add_mmio_m≠
("vga˘l", 
CONFIG_VGA_CTL_MMIO
, 
vga˘l_p‹t_ba£
, 8, 
NULL
);

72 
vmem
 = 
	`√w_•a˚
(
	`s¸ìn_size
());

73 
	`add_mmio_m≠
("vmem", 
CONFIG_FB_ADDR
, 
vmem
, 
	`s¸ìn_size
(), 
NULL
);

74 
	`IFDEF
(
CONFIG_VGA_SHOW_SCREEN
, 
	`öô_s¸ìn
());

75 
	`IFDEF
(
CONFIG_VGA_SHOW_SCREEN
, 
	`mem£t
(
vmem
, 0, 
	`s¸ìn_size
()));

76 
	}
}

	@nemu/src/engine/interpreter/hostcall.c

1 
	~<utûs.h
>

2 
	~<˝u/i„tch.h
>

3 
	~<iß.h
>

4 
	~<˝u/dif·e°.h
>

6 
	$£t_√mu_°©e
(
°©e
, 
vaddr_t
 
pc
, 
hÆt_ªt
) {

7 
	`dif·e°_skù_ªf
();

8 
√mu_°©e
.
°©e
 = state;

9 
√mu_°©e
.
hÆt_pc
 = 
pc
;

10 
√mu_°©e
.
hÆt_ªt
 = halt_ret;

11 
	}
}

13 
__©åibuã__
((
noölöe
))

14 
	$övÆid_ö°
(
vaddr_t
 
thi•c
) {

15 
uöt32_t
 
ãmp
[2];

16 
vaddr_t
 
pc
 = 
thi•c
;

17 
ãmp
[0] = 
	`ö°_„tch
(&
pc
, 4);

18 
ãmp
[1] = 
	`ö°_„tch
(&
pc
, 4);

20 
uöt8_t
 *
p
 = (uöt8_à*)
ãmp
;

21 
	`¥ötf
("övÆid opcode(PC = " 
FMT_WORD
 "):\n"

24 
thi•c
, 
p
[0],Ö[1],Ö[2],Ö[3],Ö[4],Ö[5],Ö[6],Ö[7], 
ãmp
[0],Åemp[1]);

26 
	`¥ötf
("ThereáreÅwo cases which willÅriggerÅhis unexpectedÉxception:\n"

27 "1. Thêö°ru˘i⁄áàPC = " 
FMT_WORD
 " isÇot implemented.\n"

28 "2. Somëhög i†im∂emíãd inc‹ª˘ly.\n", 
thi•c
);

29 
	`¥ötf
("FödÅhi†PC(" 
FMT_WORD
 "ËöÅhêdißs£mblögÑesu…Åÿdi°öguish which ca£ iàis.\n\n", 
thi•c
);

30 
	`¥ötf
(
	`ASNI_FMT
("If it isÅhe first case, see\n%s\nfor more details.\n\n"

33 "* EvîyÜöêo‡u¡e°ed codêi†Æway†wr⁄g!\n\n", 
ASNI_FG_RED
), 
iß_logo
);

35 
	`£t_√mu_°©e
(
NEMU_ABORT
, 
thi•c
, -1);

36 
	}
}

	@nemu/src/engine/interpreter/init.c

1 
	~<˝u/˝u.h
>

3 
sdb_maölo›
();

5 
	$ígöe_°¨t
() {

6 #ifde‡
CONFIG_TARGET_AM


7 
	`˝u_exec
(-1);

10 
	`sdb_maölo›
();

12 
	}
}

	@nemu/src/isa/riscv32/difftest/dut.c

1 
	~<iß.h
>

2 
	~<˝u/dif·e°.h
>

3 
	~"../loˇl-ö˛ude/ªg.h
"

5 
boﬁ
 
	$iß_dif·e°_checkªgs
(
CPU_°©e
 *
ªf_r
, 
vaddr_t
 
pc
) {

6  
Ál£
;

7 
	}
}

9 
	$iß_dif·e°_©èch
() {

10 
	}
}

	@nemu/src/isa/riscv32/include/isa-def.h

1 #i‚de‡
__ISA_RISCV32_H__


2 
	#__ISA_RISCV32_H__


	)

4 
	~<comm⁄.h
>

7 
w‹d_t
 
	mg¥
[32];

8 
vaddr_t
 
	mpc
;

9 } 
	triscv32_CPU_°©e
;

14 
uöt32_t
 
	mvÆ
;

15 } 
	mö°
;

16 } 
	triscv32_ISADecodeInfo
;

18 
	#iß_mmu_check
(
vaddr
, 
Àn
, 
ty≥
Ë(
MMU_DIRECT
)

	)

	@nemu/src/isa/riscv32/init.c

1 
	~<iß.h
>

2 
	~<mem‹y/∑ddr.h
>

6 c⁄° 
uöt32_t
 
	gimg
 [] = {

13 
	$ª°¨t
() {

15 
˝u
.
pc
 = 
RESET_VECTOR
;

18 
˝u
.
g¥
[0] = 0;

19 
	}
}

21 
	$öô_iß
() {

23 
	`mem˝y
(
	`gue°_to_ho°
(
RESET_VECTOR
), 
img
, (img));

26 
	`ª°¨t
();

27 
	}
}

	@nemu/src/isa/riscv32/inst.c

1 
	~"loˇl-ö˛ude/ªg.h
"

2 
	~<˝u/˝u.h
>

3 
	~<˝u/i„tch.h
>

4 
	~<˝u/decode.h
>

6 
	#R
(
i
Ë
	`g¥
(i)

	)

7 
	#Mr
 
vaddr_ªad


	)

8 
	#Mw
 
vaddr_wrôe


	)

11 
	mTYPE_I
, 
	mTYPE_U
, 
	mTYPE_S
,

12 
	mTYPE_N
,

15 
	#§c1R
(
n
Ëdÿ{ *
§c1
 = 
	`R
“); } 0)

	)

16 
	#§c2R
(
n
Ëdÿ{ *
§c2
 = 
	`R
“); } 0)

	)

17 
	#de°R
(
n
Ëdÿ{ *
de°
 =Ç; } 0)

	)

18 
	#§c1I
(
i
Ëdÿ{ *
§c1
 = i; } 0)

	)

19 
	#§c2I
(
i
Ëdÿ{ *
§c2
 = i; } 0)

	)

20 
	#de°I
(
i
Ëdÿ{ *
de°
 = i; } 0)

	)

22 
w‹d_t
 
	$immI
(
uöt32_t
 
i
Ë{  
	`SEXT
(
	`BITS
(i, 31, 20), 12); 
	}
}

23 
w‹d_t
 
	$immU
(
uöt32_t
 
i
Ë{  
	`BITS
(i, 31, 12Ë<< 12; 
	}
}

24 
w‹d_t
 
	$immS
(
uöt32_t
 
i
Ë{  (
	`SEXT
(
	`BITS
(i, 31, 25), 7Ë<< 5Ë| BITS(i, 11, 7); 
	}
}

26 
	$decode_›î™d
(
Decode
 *
s
, 
w‹d_t
 *
de°
, w‹d_à*
§c1
, w‹d_à*
§c2
, 
ty≥
) {

27 
uöt32_t
 
i
 = 
s
->
iß
.
ö°
.
vÆ
;

28 
rd
 = 
	`BITS
(
i
, 11, 7);

29 
rs1
 = 
	`BITS
(
i
, 19, 15);

30 
rs2
 = 
	`BITS
(
i
, 24, 20);

31 
	`de°R
(
rd
);

32 
ty≥
) {

33 
TYPE_I
: 
	`§c1R
(
rs1
); 
	`§c2I
(
	`immI
(
i
)); ;

34 
TYPE_U
: 
	`§c1I
(
	`immU
(
i
)); ;

35 
TYPE_S
: 
	`de°I
(
	`immS
(
i
)); 
	`§c1R
(
rs1
); 
	`§c2R
(
rs2
); ;

37 
	}
}

39 
	$decode_exec
(
Decode
 *
s
) {

40 
w‹d_t
 
de°
 = 0, 
§c1
 = 0, 
§c2
 = 0;

41 
s
->
d≈c
 = s->
¢pc
;

43 
	#INSTPAT_INST
(
s
Ë((s)->
iß
.
ö°
.
vÆ
)

	)

44 
	#INSTPAT_MATCH
(
s
, 
«me
, 
ty≥
, ... ) { \

45 
	`decode_›î™d
(
s
, &
de°
, &
§c1
, &
§c2
, 
	`c⁄ˇt
(
TYPE_
, 
ty≥
)); \

46 
__VA_ARGS__
 ; \

47 }

	)

49 
	`INSTPAT_START
();

50 
	`INSTPAT
("??????? ????? ????? ??? ????? 01101 11", 
lui
 , 
U
, 
	`R
(
de°
Ë
§c1
);

51 
	`INSTPAT
("??????? ????? ????? 010 ????? 00000 11", 
lw
 , 
I
, 
	`R
(
de°
Ë
	`Mr
(
§c1
 + 
§c2
, 4));

52 
	`INSTPAT
("??????? ????? ????? 010 ????? 01000 11", 
sw
 , 
S
, 
	`Mw
(
§c1
 + 
de°
, 4, 
§c2
));

54 
	`INSTPAT
("0000000 00001 00000 000 00000 11100 11", 
ebªak
 , 
N
, 
	`NEMUTRAP
(
s
->
pc
, 
	`R
(10)));

55 
	`INSTPAT
("??????? ????? ????? ??? ????? ????? ??", 
öv
 , 
N
, 
	`INV
(
s
->
pc
));

56 
	`INSTPAT_END
();

58 
	`R
(0) = 0;

61 
	}
}

63 
	$iß_exec_⁄˚
(
Decode
 *
s
) {

64 
s
->
iß
.
ö°
.
vÆ
 = 
	`ö°_„tch
(&s->
¢pc
, 4);

65  
	`decode_exec
(
s
);

66 
	}
}

	@nemu/src/isa/riscv32/local-include/reg.h

1 #i‚de‡
__RISCV32_REG_H__


2 
	#__RISCV32_REG_H__


	)

4 
	~<comm⁄.h
>

6 
ölöe
 
	$check_ªg_idx
(
idx
) {

7 
	`IFDEF
(
CONFIG_RT_CHECK
, 
	`as£π
(
idx
 >= 0 && idx < 32));

8  
idx
;

9 
	}
}

11 
	#g¥
(
idx
Ë
˝u
.
g¥
[
	`check_ªg_idx
(idx)]

	)

13 
ölöe
 c⁄° * 
	$ªg_«me
(
idx
, 
width
) {

14 c⁄° * 
ªgs
[];

15  
ªgs
[
	`check_ªg_idx
(
idx
)];

16 
	}
}

	@nemu/src/isa/riscv32/logo.c

13 
	giß_logo
[] = {

	@nemu/src/isa/riscv32/reg.c

1 
	~<iß.h
>

2 
	~"loˇl-ö˛ude/ªg.h
"

4 c⁄° *
	gªgs
[] = {

11 
	$iß_ªg_di•œy
() {

12 
	}
}

14 
w‹d_t
 
	$iß_ªg_°r2vÆ
(c⁄° *
s
, 
boﬁ
 *
suc˚ss
) {

16 
	}
}

	@nemu/src/isa/riscv32/system/intr.c

1 
	~<iß.h
>

3 
w‹d_t
 
	$iß_øi£_öå
(
w‹d_t
 
NO
, 
vaddr_t
 
ïc
) {

9 
	}
}

11 
w‹d_t
 
	$iß_quîy_öå
() {

12  
INTR_EMPTY
;

13 
	}
}

	@nemu/src/isa/riscv32/system/mmu.c

1 
	~<iß.h
>

2 
	~<mem‹y/∑ddr.h
>

3 
	~<mem‹y/vaddr.h
>

5 
∑ddr_t
 
	$iß_mmu_å™¶©e
(
vaddr_t
 
vaddr
, 
Àn
, 
ty≥
) {

6  
MEM_RET_FAIL
;

7 
	}
}

	@nemu/src/isa/riscv64/difftest/dut.c

1 
	~<iß.h
>

2 
	~<˝u/dif·e°.h
>

3 
	~"../loˇl-ö˛ude/ªg.h
"

5 
boﬁ
 
	$iß_dif·e°_checkªgs
(
CPU_°©e
 *
ªf_r
, 
vaddr_t
 
pc
) {

6  
Ál£
;

7 
	}
}

9 
	$iß_dif·e°_©èch
() {

10 
	}
}

	@nemu/src/isa/riscv64/include/isa-def.h

1 #i‚de‡
__ISA_RISCV64_H__


2 
	#__ISA_RISCV64_H__


	)

4 
	~<comm⁄.h
>

7 
w‹d_t
 
	mg¥
[32];

8 
vaddr_t
 
	mpc
;

9 } 
	triscv64_CPU_°©e
;

14 
uöt32_t
 
	mvÆ
;

15 } 
	mö°
;

16 } 
	triscv64_ISADecodeInfo
;

18 
	#iß_mmu_check
(
vaddr
, 
Àn
, 
ty≥
Ë(
MMU_DIRECT
)

	)

	@nemu/src/isa/riscv64/init.c

1 
	~<iß.h
>

2 
	~<mem‹y/∑ddr.h
>

6 c⁄° 
uöt32_t
 
	gimg
 [] = {

14 
	$ª°¨t
() {

16 
˝u
.
pc
 = 
RESET_VECTOR
;

19 
˝u
.
g¥
[0] = 0;

20 
	}
}

22 
	$öô_iß
() {

24 
	`mem˝y
(
	`gue°_to_ho°
(
RESET_VECTOR
), 
img
, (img));

27 
	`ª°¨t
();

28 
	}
}

	@nemu/src/isa/riscv64/inst.c

1 
	~"loˇl-ö˛ude/ªg.h
"

2 
	~<˝u/˝u.h
>

3 
	~<˝u/i„tch.h
>

4 
	~<˝u/decode.h
>

6 
	#R
(
i
Ë
	`g¥
(i)

	)

7 
	#Mr
 
vaddr_ªad


	)

8 
	#Mw
 
vaddr_wrôe


	)

11 
	mTYPE_I
, 
	mTYPE_U
, 
	mTYPE_S
,

12 
	mTYPE_N
,

15 
	#§c1R
(
n
Ëdÿ{ *
§c1
 = 
	`R
“); } 0)

	)

16 
	#§c2R
(
n
Ëdÿ{ *
§c2
 = 
	`R
“); } 0)

	)

17 
	#de°R
(
n
Ëdÿ{ *
de°
 =Ç; } 0)

	)

18 
	#§c1I
(
i
Ëdÿ{ *
§c1
 = i; } 0)

	)

19 
	#§c2I
(
i
Ëdÿ{ *
§c2
 = i; } 0)

	)

20 
	#de°I
(
i
Ëdÿ{ *
de°
 = i; } 0)

	)

22 
w‹d_t
 
	$immI
(
uöt32_t
 
i
Ë{  
	`SEXT
(
	`BITS
(i, 31, 20), 12); 
	}
}

23 
w‹d_t
 
	$immU
(
uöt32_t
 
i
Ë{  
	`SEXT
(
	`BITS
(i, 31, 12), 20Ë<< 12; 
	}
}

24 
w‹d_t
 
	$immS
(
uöt32_t
 
i
Ë{  (
	`SEXT
(
	`BITS
(i, 31, 25), 7Ë<< 5Ë| BITS(i, 11, 7); 
	}
}

26 
	$decode_›î™d
(
Decode
 *
s
, 
w‹d_t
 *
de°
, w‹d_à*
§c1
, w‹d_à*
§c2
, 
ty≥
) {

27 
uöt32_t
 
i
 = 
s
->
iß
.
ö°
.
vÆ
;

28 
rd
 = 
	`BITS
(
i
, 11, 7);

29 
rs1
 = 
	`BITS
(
i
, 19, 15);

30 
rs2
 = 
	`BITS
(
i
, 24, 20);

31 
	`de°R
(
rd
);

32 
ty≥
) {

33 
TYPE_I
: 
	`§c1R
(
rs1
); 
	`§c2I
(
	`immI
(
i
)); ;

34 
TYPE_U
: 
	`§c1I
(
	`immU
(
i
)); ;

35 
TYPE_S
: 
	`de°I
(
	`immS
(
i
)); 
	`§c1R
(
rs1
); 
	`§c2R
(
rs2
); ;

37 
	}
}

39 
	$decode_exec
(
Decode
 *
s
) {

40 
w‹d_t
 
de°
 = 0, 
§c1
 = 0, 
§c2
 = 0;

41 
s
->
d≈c
 = s->
¢pc
;

43 
	#INSTPAT_INST
(
s
Ë((s)->
iß
.
ö°
.
vÆ
)

	)

44 
	#INSTPAT_MATCH
(
s
, 
«me
, 
ty≥
, ... ) { \

45 
	`decode_›î™d
(
s
, &
de°
, &
§c1
, &
§c2
, 
	`c⁄ˇt
(
TYPE_
, 
ty≥
)); \

46 
__VA_ARGS__
 ; \

47 }

	)

49 
	`INSTPAT_START
();

50 
	`INSTPAT
("??????? ????? ????? ??? ????? 00101 11", 
auùc
 , 
U
, 
	`R
(
de°
Ë
§c1
 + 
s
->
pc
);

51 
	`INSTPAT
("??????? ????? ????? 011 ????? 00000 11", 
ld
 , 
I
, 
	`R
(
de°
Ë
	`Mr
(
§c1
 + 
§c2
, 8));

52 
	`INSTPAT
("??????? ????? ????? 011 ????? 01000 11", 
sd
 , 
S
, 
	`Mw
(
§c1
 + 
de°
, 8, 
§c2
));

54 
	`INSTPAT
("0000000 00001 00000 000 00000 11100 11", 
ebªak
 , 
N
, 
	`NEMUTRAP
(
s
->
pc
, 
	`R
(10)));

55 
	`INSTPAT
("??????? ????? ????? ??? ????? ????? ??", 
öv
 , 
N
, 
	`INV
(
s
->
pc
));

56 
	`INSTPAT_END
();

58 
	`R
(0) = 0;

61 
	}
}

63 
	$iß_exec_⁄˚
(
Decode
 *
s
) {

64 
s
->
iß
.
ö°
.
vÆ
 = 
	`ö°_„tch
(&s->
¢pc
, 4);

65  
	`decode_exec
(
s
);

66 
	}
}

	@nemu/src/isa/riscv64/local-include/reg.h

1 #i‚de‡
__RISCV64_REG_H__


2 
	#__RISCV64_REG_H__


	)

4 
	~<comm⁄.h
>

6 
ölöe
 
	$check_ªg_idx
(
idx
) {

7 
	`IFDEF
(
CONFIG_RT_CHECK
, 
	`as£π
(
idx
 >= 0 && idx < 32));

8  
idx
;

9 
	}
}

11 
	#g¥
(
idx
Ë(
˝u
.
g¥
[
	`check_ªg_idx
(idx)])

	)

13 
ölöe
 c⁄° * 
	$ªg_«me
(
idx
, 
width
) {

14 c⁄° * 
ªgs
[];

15  
ªgs
[
	`check_ªg_idx
(
idx
)];

16 
	}
}

	@nemu/src/isa/riscv64/logo.c

13 
	giß_logo
[] = {

	@nemu/src/isa/riscv64/reg.c

1 
	~<iß.h
>

2 
	~"loˇl-ö˛ude/ªg.h
"

4 c⁄° *
	gªgs
[] = {

11 
	$iß_ªg_di•œy
() {

18 
	}
}

20 
w‹d_t
 
	$iß_ªg_°r2vÆ
(c⁄° *
s
, 
boﬁ
 *
suc˚ss
) {

22 
	}
}

	@nemu/src/isa/riscv64/system/intr.c

1 
	~<iß.h
>

3 
w‹d_t
 
	$iß_øi£_öå
(
w‹d_t
 
NO
, 
vaddr_t
 
ïc
) {

9 
	}
}

11 
w‹d_t
 
	$iß_quîy_öå
() {

12  
INTR_EMPTY
;

13 
	}
}

	@nemu/src/isa/riscv64/system/mmu.c

1 
	~<iß.h
>

2 
	~<mem‹y/vaddr.h
>

3 
	~<mem‹y/∑ddr.h
>

5 
∑ddr_t
 
	$iß_mmu_å™¶©e
(
vaddr_t
 
vaddr
, 
Àn
, 
ty≥
) {

6  
MEM_RET_FAIL
;

7 
	}
}

	@nemu/src/memory/paddr.c

1 
	~<mem‹y/ho°.h
>

2 
	~<mem‹y/∑ddr.h
>

3 
	~<devi˚/mmio.h
>

4 
	~<iß.h
>

6 #i‡ 
deföed
(
CONFIG_PMEM_MALLOC
)

7 
uöt8_t
 *
	gpmem
 = 
NULL
;

9 
uöt8_t
 
	gpmem
[
CONFIG_MSIZE
] 
	gPG_ALIGN
 = {};

12 
uöt8_t
* 
	$gue°_to_ho°
(
∑ddr_t
 
∑ddr
Ë{  
pmem
 +Öadd∏- 
CONFIG_MBASE
; 
	}
}

13 
∑ddr_t
 
	$ho°_to_gue°
(
uöt8_t
 *
haddr
Ë{  hadd∏- 
pmem
 + 
CONFIG_MBASE
; 
	}
}

15 
w‹d_t
 
	$pmem_ªad
(
∑ddr_t
 
addr
, 
Àn
) {

16 
w‹d_t
 
ªt
 = 
	`ho°_ªad
(
	`gue°_to_ho°
(
addr
), 
Àn
);

17  
ªt
;

18 
	}
}

20 
	$pmem_wrôe
(
∑ddr_t
 
addr
, 
Àn
, 
w‹d_t
 
d©a
) {

21 
	`ho°_wrôe
(
	`gue°_to_ho°
(
addr
), 
Àn
, 
d©a
);

22 
	}
}

24 
	$out_of_bound
(
∑ddr_t
 
addr
) {

25 
	`∑nic
("addªs†" 
FMT_PADDR
 " i†ouào‡bound o‡pmem [" FMT_PADDR ", " FMT_PADDR "Ë©Ö¯" 
FMT_WORD
,

26 
addr
, 
CONFIG_MBASE
, CONFIG_MBASE + 
CONFIG_MSIZE
, 
˝u
.
pc
);

27 
	}
}

29 
	$öô_mem
() {

30 #i‡ 
	`deföed
(
CONFIG_PMEM_MALLOC
)

31 
pmem
 = 
	`mÆloc
(
CONFIG_MSIZE
);

32 
	`as£π
(
pmem
);

34 #ifde‡
CONFIG_MEM_RANDOM


35 
uöt32_t
 *
p
 = (uöt32_à*)
pmem
;

36 
i
;

37 
i
 = 0; i < (Ë(
CONFIG_MSIZE
 / (
p
[0])); i ++) {

38 
p
[
i
] = 
	`ønd
();

41 
	`Log
("physiˇ»mem‹yáª®[" 
FMT_PADDR
 ", " FMT_PADDR "]",

42 (
∑ddr_t
)
CONFIG_MBASE
, (∑ddr_t)CONFIG_MBASE + 
CONFIG_MSIZE
);

43 
	}
}

45 
w‹d_t
 
	$∑ddr_ªad
(
∑ddr_t
 
addr
, 
Àn
) {

46 i‡(
	`likñy
(
	`ö_pmem
(
addr
))Ë 
	`pmem_ªad
◊ddr, 
Àn
);

47 
	`IFDEF
(
CONFIG_DEVICE
,  
	`mmio_ªad
(
addr
, 
Àn
));

48 
	`out_of_bound
(
addr
);

50 
	}
}

52 
	$∑ddr_wrôe
(
∑ddr_t
 
addr
, 
Àn
, 
w‹d_t
 
d©a
) {

53 i‡(
	`likñy
(
	`ö_pmem
(
addr
))Ë{ 
	`pmem_wrôe
◊ddr, 
Àn
, 
d©a
); ; }

54 
	`IFDEF
(
CONFIG_DEVICE
, 
	`mmio_wrôe
(
addr
, 
Àn
, 
d©a
); );

55 
	`out_of_bound
(
addr
);

56 
	}
}

	@nemu/src/memory/vaddr.c

1 
	~<iß.h
>

2 
	~<mem‹y/∑ddr.h
>

4 
w‹d_t
 
	$vaddr_i„tch
(
vaddr_t
 
addr
, 
Àn
) {

5  
	`∑ddr_ªad
(
addr
, 
Àn
);

6 
	}
}

8 
w‹d_t
 
	$vaddr_ªad
(
vaddr_t
 
addr
, 
Àn
) {

9  
	`∑ddr_ªad
(
addr
, 
Àn
);

10 
	}
}

12 
	$vaddr_wrôe
(
vaddr_t
 
addr
, 
Àn
, 
w‹d_t
 
d©a
) {

13 
	`∑ddr_wrôe
(
addr
, 
Àn
, 
d©a
);

14 
	}
}

	@nemu/src/monitor/monitor.c

1 
	~<iß.h
>

2 
	~<mem‹y/∑ddr.h
>

4 
öô_ønd
();

5 
öô_log
(c⁄° *
log_fûe
);

6 
öô_mem
();

7 
öô_dif·e°
(*
ªf_so_fûe
, 
img_size
, 
p‹t
);

8 
öô_devi˚
();

9 
öô_sdb
();

10 
öô_dißsm
(c⁄° *
åùÀ
);

12 
	$wñcome
() {

13 
	`Log
("Tø˚: %s", 
	`MUXDEF
(
CONFIG_TRACE
, 
	`ASNI_FMT
("ON", 
ASNI_FG_GREEN
), ASNI_FMT("OFF", 
ASNI_FG_RED
)));

14 
	`IFDEF
(
CONFIG_TRACE
, 
	`Log
("IfÅrace isÉnabled,áÜog file will be generated "

17 
	`Log
("BuûdÅime: %s, %s", 
__TIME__
, 
__DATE__
);

18 
	`¥ötf
("Wñcomêtÿ%s-NEMU!\n", 
	`ASNI_FMT
(
	`°r
(
__GUEST_ISA__
), 
ASNI_FG_YELLOW
 
ASNI_BG_RED
));

19 
	`¥ötf
("For help,Åype \"help\"\n");

20 
	}
}

22 #i‚de‡
CONFIG_TARGET_AM


23 
	~<gë›t.h
>

25 
sdb_£t_b©ch_mode
();

27 *
	glog_fûe
 = 
NULL
;

28 *
	gdiff_so_fûe
 = 
NULL
;

29 *
	gimg_fûe
 = 
NULL
;

30 
	gdif·e°_p‹t
 = 1234;

32 
	$lﬂd_img
() {

33 i‡(
img_fûe
 =
NULL
) {

34 
	`Log
("No image is given. UseÅhe default build-in image.");

39 
FILE
 *
Â
 = 
	`f›í
(
img_fûe
, "rb");

40 
	`As£π
(
Â
, "C™ÇŸ o≥¿'%s'", 
img_fûe
);

42 
	`f£ek
(
Â
, 0, 
SEEK_END
);

43 
size
 = 
	`·ñl
(
Â
);

45 
	`Log
("Thêimagêi†%s, sizê%ld", 
img_fûe
, 
size
);

47 
	`f£ek
(
Â
, 0, 
SEEK_SET
);

48 
ªt
 = 
	`‰ód
(
	`gue°_to_ho°
(
RESET_VECTOR
), 
size
, 1, 
Â
);

49 
	`as£π
(
ªt
 == 1);

51 
	`f˛o£
(
Â
);

52  
size
;

53 
	}
}

55 
	$∑r£_¨gs
(
¨gc
, *
¨gv
[]) {

56 c⁄° 
›ti⁄
 
èbÀ
[] = {

57 {"b©ch" , 
no_¨gumít
 , 
NULL
, 'b'},

58 {"log" , 
ªquúed_¨gumít
, 
NULL
, 'l'},

59 {"diff" , 
ªquúed_¨gumít
, 
NULL
, 'd'},

60 {"p‹t" , 
ªquúed_¨gumít
, 
NULL
, 'p'},

61 {"hñp" , 
no_¨gumít
 , 
NULL
, 'h'},

62 {0 , 0 , 
NULL
, 0 },

64 
o
;

65  (
o
 = 
	`gë›t_l⁄g
(
¨gc
, 
¨gv
, "-bhl:d:p:", 
èbÀ
, 
NULL
)) != -1) {

66 
o
) {

67 'b': 
	`sdb_£t_b©ch_mode
(); ;

68 'p': 
	`ssˇnf
(
›èrg
, "%d", &
dif·e°_p‹t
); ;

69 'l': 
log_fûe
 = 
›èrg
; ;

70 'd': 
diff_so_fûe
 = 
›èrg
; ;

71 1: 
img_fûe
 = 
›èrg
;  
›töd
 - 1;

73 
	`¥ötf
("Ußge: %†[OPTION...] IMAGE [¨gs]\n\n", 
¨gv
[0]);

74 
	`¥ötf
("\t-b,--batchÑun with batch mode\n");

75 
	`¥ötf
("\t-l,--log=FILE outputÜogÅo FILE\n");

76 
	`¥ötf
("\t-d,--diff=REF_SOÑun DiffTest withÑeference REF_SO\n");

77 
	`¥ötf
("\t-p,--port=PORTÑun DiffTest withÖort PORT\n");

78 
	`¥ötf
("\n");

79 
	`exô
(0);

85 
	}
}

87 
	$öô_m⁄ô‹
(
¨gc
, *
¨gv
[]) {

91 
	`∑r£_¨gs
(
¨gc
, 
¨gv
);

94 
	`öô_ønd
();

97 
	`öô_log
(
log_fûe
);

100 
	`öô_mem
();

103 
	`IFDEF
(
CONFIG_DEVICE
, 
	`öô_devi˚
());

106 
	`öô_iß
();

109 
img_size
 = 
	`lﬂd_img
();

112 
	`öô_dif·e°
(
diff_so_fûe
, 
img_size
, 
dif·e°_p‹t
);

115 
	`öô_sdb
();

117 
	`IFDEF
(
CONFIG_ITRACE
, 
	`öô_dißsm
(

118 
	`MUXDEF
(
CONFIG_ISA_x86
, "i686",

119 
	`MUXDEF
(
CONFIG_ISA_mùs32
, "mipsel",

120 
	`MUXDEF
(
CONFIG_ISA_riscv32
, "riscv32",

121 
	`MUXDEF
(
CONFIG_ISA_riscv64
, "riscv64", "bad")))) "-pc-linux-gnu"

125 
	`wñcome
();

126 
	}
}

128 
	$lﬂd_img
() {

129 
bö_°¨t
, 
bö_íd
;

130 
size_t
 
size
 = &
bö_íd
 - &
bö_°¨t
;

131 
	`Log
("img sizê%ld", 
size
);

132 
	`mem˝y
(
	`gue°_to_ho°
(
RESET_VECTOR
), &
bö_°¨t
, 
size
);

133  
size
;

134 
	}
}

136 
	$am_öô_m⁄ô‹
() {

137 
	`öô_ønd
();

138 
	`öô_mem
();

139 
	`öô_iß
();

140 
	`lﬂd_img
();

141 
	`IFDEF
(
CONFIG_DEVICE
, 
	`öô_devi˚
());

142 
	`wñcome
();

143 
	}
}

	@nemu/src/monitor/sdb/expr.c

1 
	~<iß.h
>

6 
	~<ªgex.h
>

9 
	mTK_NOTYPE
 = 256, 
	mTK_EQ
,

15 
	sruÀ
 {

16 c⁄° *
	mªgex
;

17 
	mtokí_ty≥
;

18 } 
	gruÀs
[] = {

24 {" +", 
TK_NOTYPE
},

26 {"==", 
TK_EQ
},

29 
	#NR_REGEX
 
	`ARRLEN
(
ruÀs
)

	)

31 
ªgex_t
 
	gª
[
NR_REGEX
] = {};

36 
	$öô_ªgex
() {

37 
i
;

38 
îr‹_msg
[128];

39 
ªt
;

41 
i
 = 0; i < 
NR_REGEX
; i ++) {

42 
ªt
 = 
	`ªgcomp
(&
ª
[
i
], 
ruÀs
[i].
ªgex
, 
REG_EXTENDED
);

43 i‡(
ªt
 != 0) {

44 
	`ªgîr‹
(
ªt
, &
ª
[
i
], 
îr‹_msg
, 128);

45 
	`∑nic
("ªgex compû©i⁄ faûed: %s\n%s", 
îr‹_msg
, 
ruÀs
[
i
].
ªgex
);

48 
	}
}

50 
	stokí
 {

51 
	mty≥
;

52 
	m°r
[32];

53 } 
	tTokí
;

55 
Tokí
 
	gtokís
[32] 
__©åibuã__
((
u£d
)) = {};

56 
ƒ_tokí
 
__©åibuã__
((
u£d
)) = 0;

58 
boﬁ
 
	$make_tokí
(*
e
) {

59 
posôi⁄
 = 0;

60 
i
;

61 
ªgm©ch_t
 
pm©ch
;

63 
ƒ_tokí
 = 0;

65 
e
[
posôi⁄
] != '\0') {

67 
i
 = 0; i < 
NR_REGEX
; i ++) {

68 i‡(
	`ªgexec
(&
ª
[
i
], 
e
 + 
posôi⁄
, 1, &
pm©ch
, 0Ë=0 &&Öm©ch.
rm_so
 == 0) {

69 *
sub°r_°¨t
 = 
e
 + 
posôi⁄
;

70 
sub°r_Àn
 = 
pm©ch
.
rm_eo
;

72 
	`Log
("matchÑules[%d] = \"%s\"átÖosition %d withÜen %d: %.*s",

73 
i
, 
ruÀs
[i].
ªgex
, 
posôi⁄
, 
sub°r_Àn
, sub°r_Àn, 
sub°r_°¨t
);

75 
posôi⁄
 +
sub°r_Àn
;

82 
ruÀs
[
i
].
tokí_ty≥
) {

83 : 
	`TODO
();

90 i‡(
i
 =
NR_REGEX
) {

91 
	`¥ötf
("nÿm©cháàposôi⁄ %d\n%s\n%*.s^\n", 
posôi⁄
, 
e
,Öosition, "");

92  
Ál£
;

96  
åue
;

97 
	}
}

100 
w‹d_t
 
	$ex¥
(*
e
, 
boﬁ
 *
suc˚ss
) {

101 i‡(!
	`make_tokí
(
e
)) {

102 *
suc˚ss
 = 
Ál£
;

107 
	`TODO
();

110 
	}
}

	@nemu/src/monitor/sdb/sdb.c

1 
	~<iß.h
>

2 
	~<˝u/˝u.h
>

3 
	~<ªadlöe/ªadlöe.h
>

4 
	~<ªadlöe/hi°‹y.h
>

5 
	~"sdb.h
"

7 
	gis_b©ch_mode
 = 
Ál£
;

9 
öô_ªgex
();

10 
öô_wp_poﬁ
();

13 * 
	$æ_gës
() {

14 *
löe_ªad
 = 
NULL
;

16 i‡(
löe_ªad
) {

17 
	`‰ì
(
löe_ªad
);

18 
löe_ªad
 = 
NULL
;

21 
löe_ªad
 = 
	`ªadlöe
("(nemu) ");

23 i‡(
löe_ªad
 && *line_read) {

24 
	`add_hi°‹y
(
löe_ªad
);

27  
löe_ªad
;

28 
	}
}

30 
	$cmd_c
(*
¨gs
) {

31 
	`˝u_exec
(-1);

33 
	}
}

36 
	$cmd_q
(*
¨gs
) {

38 
	}
}

40 
cmd_hñp
(*
¨gs
);

41 
cmd_si
(*
¨gs
);

42 
cmd_öfo
(*
¨gs
);

43 
cmd_x
(*
¨gs
);

46 c⁄° *
	m«me
;

47 c⁄° *
	mdes¸ùti⁄
;

48 (*
	mh™dÀr
) (*);

49 } 
	gcmd_èbÀ
 [] = {

50 { "hñp", "Di•œy inf‹m©i⁄†abouàÆ»suµ‹ãd comm™ds", 
cmd_hñp
 },

51 { "c", "C⁄töuêthêexecuti⁄ o‡thê¥ogøm", 
cmd_c
 },

52 { "q", "Exô NEMU", 
cmd_q
 },

53 { "si","SögÀ sã∞executi⁄", 
cmd_si
},

54 { "öfo","Pröàªgi°î sèã", 
cmd_öfo
},

55 { "x", "Sˇ¿mem‹y", 
cmd_x
},

61 
	#NR_CMD
 
	`ARRLEN
(
cmd_èbÀ
)

	)

63 
	$cmd_x
(*
¨gs
){

74 
Àn
;

75 
vaddr_t
 
addr
;

76 
	`ssˇnf
(
¨gs
, "%d, %lx", &
Àn
, &
addr
);

78 
w‹d_t
 
	`vaddr_ªad
(
vaddr_t
 
addr
, 
Àn
);

80 
i
 = 0; i<
Àn
; i++ ){

82 
	`¥ötf
("0x%08lx \n", 
	`vaddr_ªad
(
addr
, 4));

83 
addr
+=4;

86 
	}
}

90 
	$cmd_öfo
(*
¨gs
){

91 *
¨g
 = 
	`°πok
(
NULL
, " ");

92 if(
¨g
 =
NULL
){

93 
	`¥ötf
("Error: Please input infoÑ or info w forÖrintÑigisters or monitor. \n" );

96 if–
	`°rcmp
(
¨g
, "r") == 0 ){

99 if–
	`°rcmp
(
¨g
, "w") == 0 ){

100 
	`¥ötf
("wait me code. \n");

104 
	`¥ötf
("Error: PleaseáddÑ/wáfter info. \n");

108 
	}
}

111 
	$cmd_si
(*
¨gs
){

112 *
¨g
 = 
	`°πok
(
NULL
, " ");

113 
°ïs
 = 0;

114 if(
¨g
 =
NULL
){

115 
	`˝u_exec
(1);

119 
	`ssˇnf
(
¨g
, "%d", &
°ïs
);

120 if(
°ïs
<0 || steps>9){

121 
	`¥ötf
("Error, steps is wrong!\n");

124 
	`˝u_exec
(
°ïs
);

126 
	}
}

129 
	$cmd_hñp
(*
¨gs
) {

131 *
¨g
 = 
	`°πok
(
NULL
, " ");

132 
i
;

134 i‡(
¨g
 =
NULL
) {

136 
i
 = 0; i < 
NR_CMD
; i ++) {

137 
	`¥ötf
("%†- %s\n", 
cmd_èbÀ
[
i
].
«me
, cmd_èbÀ[i].
des¸ùti⁄
);

141 
i
 = 0; i < 
NR_CMD
; i ++) {

142 i‡(
	`°rcmp
(
¨g
, 
cmd_èbÀ
[
i
].
«me
) == 0) {

143 
	`¥ötf
("%†- %s\n", 
cmd_èbÀ
[
i
].
«me
, cmd_èbÀ[i].
des¸ùti⁄
);

147 
	`¥ötf
("Unknow¿comm™d '%s'\n", 
¨g
);

150 
	}
}

152 
	$sdb_£t_b©ch_mode
() {

153 
is_b©ch_mode
 = 
åue
;

154 
	}
}

156 
	$sdb_maölo›
() {

157 i‡(
is_b©ch_mode
) {

158 
	`cmd_c
(
NULL
);

162 *
°r
; (°∏
	`æ_gës
()Ë!
NULL
; ) {

163 *
°r_íd
 = 
°r
 + 
	`°æí
(str);

166 *
cmd
 = 
	`°πok
(
°r
, " ");

167 i‡(
cmd
 =
NULL
) { ; }

172 *
¨gs
 = 
cmd
 + 
	`°æí
(cmd) + 1;

173 i‡(
¨gs
 >
°r_íd
) {

174 
¨gs
 = 
NULL
;

177 #ifde‡
CONFIG_DEVICE


178 
	`sdl_˛ór_evít_queue
();

179 
	`sdl_˛ór_evít_queue
();

182 
i
;

183 
i
 = 0; i < 
NR_CMD
; i ++) {

184 i‡(
	`°rcmp
(
cmd
, 
cmd_èbÀ
[
i
].
«me
) == 0) {

185 i‡(
cmd_èbÀ
[
i
].
	`h™dÀr
(
¨gs
) < 0) { ; }

190 i‡(
i
 =
NR_CMD
Ë{ 
	`¥ötf
("Unknow¿comm™d '%s'\n", 
cmd
); }

192 
	}
}

194 
	$öô_sdb
() {

196 
	`öô_ªgex
();

199 
	`öô_wp_poﬁ
();

200 
	}
}

	@nemu/src/monitor/sdb/sdb.h

1 #i‚de‡
__SDB_H__


2 
	#__SDB_H__


	)

4 
	~<comm⁄.h
>

6 
w‹d_t
 
ex¥
(*
e
, 
boﬁ
 *
suc˚ss
);

	@nemu/src/monitor/sdb/watchpoint.c

1 
	~"sdb.h
"

3 
	#NR_WP
 32

	)

5 
	sw©chpoöt
 {

6 
	mNO
;

7 
w©chpoöt
 *
	m√xt
;

11 } 
	tWP
;

13 
WP
 
	gwp_poﬁ
[
NR_WP
] = {};

14 
WP
 *
	ghód
 = 
NULL
, *
	g‰ì_
 = NULL;

16 
	$öô_wp_poﬁ
() {

17 
i
;

18 
i
 = 0; i < 
NR_WP
; i ++) {

19 
wp_poﬁ
[
i
].
NO
 = i;

20 
wp_poﬁ
[
i
].
√xt
 = (ò=
NR_WP
 - 1 ? 
NULL
 : &wp_pool[i + 1]);

23 
hód
 = 
NULL
;

24 
‰ì_
 = 
wp_poﬁ
;

25 
	}
}

	@nemu/src/nemu-main.c

1 
	~<comm⁄.h
>

3 
öô_m⁄ô‹
(, *[]);

4 
am_öô_m⁄ô‹
();

5 
ígöe_°¨t
();

6 
is_exô_°©us_bad
();

8 
	$maö
(
¨gc
, *
¨gv
[]) {

10 #ifde‡
CONFIG_TARGET_AM


11 
	`am_öô_m⁄ô‹
();

13 
	`öô_m⁄ô‹
(
¨gc
, 
¨gv
);

17 
	`ígöe_°¨t
();

19  
	`is_exô_°©us_bad
();

20 
	}
}

	@nemu/src/utils/disasm.cc

1 #i‡
deföed
(
__GNUC__
Ë&& !deföed(
__˛™g__
)

2 #¥agm®
GCC
 
dügno°ic
 
push


3 #¥agm®
GCC
 
dügno°ic
 
ign‹ed
 "-Wmaybe-uninitialized"

6 
	~"Œvm/MC/MCAsmInfo.h
"

7 
	~"Œvm/MC/MCC⁄ãxt.h
"

8 
	~"Œvm/MC/MCDißs£mbÀr/MCDißs£mbÀr.h
"

9 
	~"Œvm/MC/MCIn°Pröãr.h
"

10 
	~"Œvm/Suµ‹t/T¨gëRegi°ry.h
"

11 
	~"Œvm/Suµ‹t/T¨gëSñe˘.h
"

13 #i‡
deföed
(
__GNUC__
Ë&& !deföed(
__˛™g__
)

14 #¥agm®
GCC
 
dügno°ic
 
p›


17 
usög
 
«me•a˚
 
	gŒvm
;

19 
	gŒvm
::
MCDißs£mbÀr
 *
gDißs£mbÀr
 = 
nuŒ±r
;

20 
	gŒvm
::
MCSubèrgëInfo
 *
gSTI
 = 
nuŒ±r
;

21 
	gŒvm
::
MCIn°Pröãr
 *
gIP
 = 
nuŒ±r
;

23 "C" 
	$öô_dißsm
(c⁄° *
åùÀ
) {

24 
Œvm
::
	`InôülizeAŒT¨gëInfos
();

25 
Œvm
::
	`InôülizeAŒT¨gëMCs
();

26 
Œvm
::
	`InôülizeAŒAsmP¨£rs
();

27 
Œvm
::
	`InôülizeAŒDißs£mbÀrs
();

29 
°d
::
°rög
 
îr°r
;

30 
°d
::
°rög
 
	`gTrùÀ
(
åùÀ
);

32 
Œvm
::
MCIn°rInfo
 *
gMII
 = 
nuŒ±r
;

33 
Œvm
::
MCRegi°îInfo
 *
gMRI
 = 
nuŒ±r
;

34 autÿ
èrgë
 = 
Œvm
::
T¨gëRegi°ry
::
	`lookupT¨gë
(
gTrùÀ
, 
îr°r
);

35 i‡(!
èrgë
) {

36 
Œvm
::
	`îrs
(Ë<< "C™'àfödÅ¨gë f‹ " << 
gTrùÀ
 << ": " << 
îr°r
 << "\n";

37 
	`as£π
(0);

41 
MCT¨gëO±i⁄s
 
MCO±i⁄s
;

42 
gSTI
 = 
èrgë
->
	`¸óãMCSubèrgëInfo
(
gTrùÀ
, "", "");

43 
°d
::
°rög
 
iß
 = 
èrgë
->
	`gëName
();

44 i‡(
iß
 == "riscv32" || isa == "riscv64") {

45 
gSTI
->
	`AµlyFótuªFœg
("+m");

46 
gSTI
->
	`AµlyFótuªFœg
("+a");

47 
gSTI
->
	`AµlyFótuªFœg
("+c");

48 
gSTI
->
	`AµlyFótuªFœg
("+f");

49 
gSTI
->
	`AµlyFótuªFœg
("+d");

52 
gMII
 = 
èrgë
->
	`¸óãMCIn°rInfo
();

53 
gMRI
 = 
èrgë
->
	`¸óãMCRegInfo
(
gTrùÀ
);

54 autÿ
AsmInfo
 = 
èrgë
->
	`¸óãMCAsmInfo
(*
gMRI
, 
gTrùÀ
, 
MCO±i⁄s
);

55 #i‡
LLVM_VERSION_MAJOR
 >= 13

56 autÿ
ŒvmTrùÀTwöe
 = 
	`Twöe
(
åùÀ
);

57 autÿ
ŒvmåùÀ
 = 
Œvm
::
	`TrùÀ
(
ŒvmTrùÀTwöe
);

58 autÿ
Ctx
 = 
√w
 
Œvm
::
	`MCC⁄ãxt
(
ŒvmåùÀ
,
AsmInfo
, 
gMRI
, 
nuŒ±r
);

60 autÿ
Ctx
 = 
√w
 
Œvm
::
	`MCC⁄ãxt
(
AsmInfo
, 
gMRI
, 
nuŒ±r
);

62 
gDißs£mbÀr
 = 
èrgë
->
	`¸óãMCDißs£mbÀr
(*
gSTI
, *
Ctx
);

63 
gIP
 = 
èrgë
->
	`¸óãMCIn°Pröãr
(
Œvm
::
	`TrùÀ
(
gTrùÀ
),

64 
AsmInfo
->
	`gëAs£mbÀrDüÀ˘
(), *AsmInfo, *
gMII
, *
gMRI
);

65 
gIP
->
	`£tPrötImmHex
(
åue
);

66 
gIP
->
	`£tPrötBønchImmAsAddªss
(
åue
);

67 
	}
}

69 "C" 
	$dißs£mbÀ
(*
°r
, 
size
, 
uöt64_t
 
pc
, 
uöt8_t
 *
code
, 
nbyã
) {

70 
MCIn°
 
ö°
;

71 
Œvm
::
AºayRef
<
uöt8_t
> 
	`¨r
(
code
, 
nbyã
);

72 
uöt64_t
 
dummy_size
 = 0;

73 
gDißs£mbÀr
->
	`gëIn°ru˘i⁄
(
ö°
, 
dummy_size
, 
¨r
, 
pc
, 
Œvm
::
	`nuŒs
());

75 
°d
::
°rög
 
s
;

76 
øw_°rög_o°ªam
 
	`os
(
s
);

77 
gIP
->
	`¥ötIn°
(&
ö°
, 
pc
, "", *
gSTI
, 
os
);

79 
skù
 = 
s
.
	`föd_fú°_nŸ_of
('\t');

80 c⁄° *
p
 = 
s
.
	`c_°r
(Ë+ 
skù
;

81 
	`as£π
(()
s
.
	`Àngth
(Ë- 
skù
 < 
size
);

82 
	`°r˝y
(
°r
, 
p
);

83 
	}
}

	@nemu/src/utils/log.c

1 
	~<comm⁄.h
>

3 
uöt64_t
 
g_ƒ_gue°_ö°
;

4 
FILE
 *
	glog_Â
 = 
NULL
;

6 
	$öô_log
(c⁄° *
log_fûe
) {

7 
log_Â
 = 
°dout
;

8 i‡(
log_fûe
 !
NULL
) {

9 
FILE
 *
Â
 = 
	`f›í
(
log_fûe
, "w");

10 
	`As£π
(
Â
, "C™ÇŸ o≥¿'%s'", 
log_fûe
);

11 
log_Â
 = 
Â
;

13 
	`Log
("Log i†wrôã¿tÿ%s", 
log_fûe
 ?Üog_file : "stdout");

14 
	}
}

16 
boﬁ
 
	$log_íabÀ
() {

17  
	`MUXDEF
(
CONFIG_TRACE
, (
g_ƒ_gue°_ö°
 >
CONFIG_TRACE_START
) &&

18 (
g_ƒ_gue°_ö°
 <
CONFIG_TRACE_END
), 
Ál£
);

19 
	}
}

	@nemu/src/utils/rand.c

1 
	~<comm⁄.h
>

2 #i‚de‡
CONFIG_TARGET_AM


3 
	~<time.h
>

6 
	$öô_ønd
() {

7 
	`§™d
(
	`MUXDEF
(
CONFIG_TARGET_AM
, 0, 
	`time
(0)));

8 
	}
}

	@nemu/src/utils/state.c

1 
	~<utûs.h
>

3 
NEMUSèã
 
	g√mu_°©e
 = { .
°©e
 = 
NEMU_STOP
 };

5 
	$is_exô_°©us_bad
() {

6 
good
 = (
√mu_°©e
.
°©e
 =
NEMU_END
 &&Çemu_°©e.
hÆt_ªt
 == 0) ||

7 (
√mu_°©e
.
°©e
 =
NEMU_QUIT
);

8  
good
;

9 
	}
}

	@nemu/src/utils/timer.c

1 
	~<comm⁄.h
>

2 #ö˛udê
MUXDEF
(
CONFIG_TIMER_GETTIMEOFDAY
, <
sys
/
time
.
h
>, <time.h>)

4 
IFDEF
(
CONFIG_TIMER_CLOCK_GETTIME
,

5 
°©ic_as£π
(
CLOCKS_PER_SEC
 == 1000000, "CLOCKS_PER_SEC != 1000000"));

6 
IFDEF
(
CONFIG_TIMER_CLOCK_GETTIME
,

7 
°©ic_as£π
((
˛ock_t
) == 8, "sizeof(clock_t) != 8"));

9 
uöt64_t
 
	gboŸ_time
 = 0;

11 
uöt64_t
 
	$gë_time_öã∫Æ
() {

12 #i‡
	`deföed
(
CONFIG_TARGET_AM
)

13 
uöt64_t
 
us
 = 
	`io_ªad
(
AM_TIMER_UPTIME
).us;

14 #ñi‡
	`deföed
(
CONFIG_TIMER_GETTIMEOFDAY
)

15 
timevÆ
 
now
;

16 
	`gëtimeofday
(&
now
, 
NULL
);

17 
uöt64_t
 
us
 = 
now
.
tv_£c
 * 1000000 +Çow.
tv_u£c
;

19 
time•ec
 
now
;

20 
	`˛ock_gëtime
(
CLOCK_MONOTONIC_COARSE
, &
now
);

21 
uöt64_t
 
us
 = 
now
.
tv_£c
 * 1000000 +Çow.
tv_n£c
 / 1000;

23  
us
;

24 
	}
}

26 
uöt64_t
 
	$gë_time
() {

27 i‡(
boŸ_time
 =0ËboŸ_timê
	`gë_time_öã∫Æ
();

28 
uöt64_t
 
now
 = 
	`gë_time_öã∫Æ
();

29  
now
 - 
boŸ_time
;

30 
	}
}

	@nemu/tools/fixdep/fixdep.c

92 
	~<sys/ty≥s.h
>

93 
	~<sys/°©.h
>

94 
	~<uni°d.h
>

95 
	~<f˙é.h
>

96 
	~<°rög.h
>

97 
	~<°d¨g.h
>

98 
	~<°dlib.h
>

99 
	~<°dio.h
>

100 
	~<˘y≥.h
>

102 
	$ußge
()

104 
	`Ârötf
(
°dîr
, "Usage: fixdep <depfile> <target> <cmdline>\n");

105 
	`exô
(1);

106 
	}
}

113 
	$x¥ötf
(c⁄° *
f‹m©
, ...)

115 
va_li°
 
≠
;

116 
ªt
;

118 
	`va_°¨t
(
≠
, 
f‹m©
);

119 
ªt
 = 
	`v¥ötf
(
f‹m©
, 
≠
);

120 i‡(
ªt
 < 0) {

121 
	`≥º‹
("fixdep");

122 
	`exô
(1);

124 
	`va_íd
(
≠
);

125 
	}
}

127 
	$xputch¨
(
c
)

129 
ªt
;

131 
ªt
 = 
	`putch¨
(
c
);

132 i‡(
ªt
 =
EOF
) {

133 
	`≥º‹
("fixdep");

134 
	`exô
(1);

136 
	}
}

141 
	$¥öt_dï
(c⁄° *
m
, 
¶í
, c⁄° *
dú
)

143 
c
, 
¥ev_c
 = '/', 
i
;

145 
	`x¥ötf
(" $(wûdˇrd %s/", 
dú
);

146 
i
 = 0; i < 
¶í
; i++) {

147 
c
 = 
m
[
i
];

148 i‡(
c
 == '_')

149 
c
 = '/';

151 
c
 = 
	`tﬁowî
(c);

152 i‡(
c
 !'/' || 
¥ev_c
 != '/')

153 
	`xputch¨
(
c
);

154 
¥ev_c
 = 
c
;

156 
	`x¥ötf
(".h) \\\n");

157 
	}
}

159 
	sôem
 {

160 
ôem
 *
	m√xt
;

161 
	mÀn
;

162 
	mhash
;

163 
	m«me
[];

166 
	#HASHSZ
 256

	)

167 
ôem
 *
	ghashèb
[
HASHSZ
];

169 
	$°rhash
(c⁄° *
°r
, 
sz
)

172 
i
, 
hash
 = 2166136261U;

174 
i
 = 0; i < 
sz
; i++)

175 
hash
 = (hash ^ 
°r
[
i
]) * 0x01000193;

176  
hash
;

177 
	}
}

182 
	$is_deföed_c⁄fig
(c⁄° *
«me
, 
Àn
, 
hash
)

184 
ôem
 *
aux
;

186 
aux
 = 
hashèb
[
hash
 % 
HASHSZ
];áux;áux =áux->
√xt
) {

187 i‡(
aux
->
hash
 =hash &&áux->
Àn
 ==Üen &&

188 
	`memcmp
(
aux
->
«me
,Çame, 
Àn
) == 0)

192 
	}
}

197 
	$deföe_c⁄fig
(c⁄° *
«me
, 
Àn
, 
hash
)

199 
ôem
 *
aux
 = 
	`mÆloc
((*auxË+ 
Àn
);

201 i‡(!
aux
) {

202 
	`≥º‹
("fixdep:malloc");

203 
	`exô
(1);

205 
	`mem˝y
(
aux
->
«me
,Çame, 
Àn
);

206 
aux
->
Àn
 =Üen;

207 
aux
->
hash
 = hash;

208 
aux
->
√xt
 = 
hashèb
[
hash
 % 
HASHSZ
];

209 
hashèb
[
hash
 % 
HASHSZ
] = 
aux
;

210 
	}
}

215 
	$u£_c⁄fig
(c⁄° *
m
, 
¶í
)

217 
hash
 = 
	`°rhash
(
m
, 
¶í
);

219 i‡(
	`is_deföed_c⁄fig
(
m
, 
¶í
, 
hash
))

222 
	`deföe_c⁄fig
(
m
, 
¶í
, 
hash
);

223 
	`¥öt_dï
(
m
, 
¶í
, "include/config");

224 
	}
}

227 
	$°r_íds_wôh
(c⁄° *
s
, 
¶í
, c⁄° *
sub
)

229 
subÀn
 = 
	`°æí
(
sub
);

231 i‡(
subÀn
 > 
¶í
)

234  !
	`memcmp
(
s
 + 
¶í
 - 
subÀn
, 
sub
, sublen);

235 
	}
}

237 
	$∑r£_c⁄fig_fûe
(c⁄° *
p
)

239 c⁄° *
q
, *
r
;

240 c⁄° *
°¨t
 = 
p
;

242 (
p
 = 
	`°r°r
(p, "CONFIG_"))) {

243 i‡(
p
 > 
°¨t
 && (
	`iß um
(p[-1]) ||Ö[-1] == '_')) {

244 
p
 += 7;

247 
p
 += 7;

248 
q
 = 
p
;

249 
	`iß um
(*
q
) || *q == '_')

250 
q
++;

251 i‡(
	`°r_íds_wôh
(
p
, 
q
 -Ö, "_MODULE"))

252 
r
 = 
q
 - 7;

254 
r
 = 
q
;

255 i‡(
r
 > 
p
)

256 
	`u£_c⁄fig
(
p
, 
r
 -Ö);

257 
p
 = 
q
;

259 
	}
}

261 *
	$ªad_fûe
(c⁄° *
fûíame
)

263 
°©
 
°
;

264 
fd
;

265 *
buf
;

267 
fd
 = 
	`›í
(
fûíame
, 
O_RDONLY
);

268 i‡(
fd
 < 0) {

269 
	`Ârötf
(
°dîr
, "fixdep:Érror opening file: ");

270 
	`≥º‹
(
fûíame
);

271 
	`exô
(2);

273 i‡(
	`f°©
(
fd
, &
°
) < 0) {

274 
	`Ârötf
(
°dîr
, "fixdep:Érror fstat'ing file: ");

275 
	`≥º‹
(
fûíame
);

276 
	`exô
(2);

278 
buf
 = 
	`mÆloc
(
°
.
°_size
 + 1);

279 i‡(!
buf
) {

280 
	`≥º‹
("fixdep: malloc");

281 
	`exô
(2);

283 i‡(
	`ªad
(
fd
, 
buf
, 
°
.
°_size
) != st.st_size) {

284 
	`≥º‹
("fixdep:Ñead");

285 
	`exô
(2);

287 
buf
[
°
.
°_size
] = '\0';

288 
	`˛o£
(
fd
);

290  
buf
;

291 
	}
}

294 
	$is_ign‹ed_fûe
(c⁄° *
s
, 
Àn
)

296  
	`°r_íds_wôh
(
s
, 
Àn
, "include/generated/autoconf.h") ||

297 
	`°r_íds_wôh
(
s
, 
Àn
, "include/generated/autoksyms.h");

298 
	}
}

305 
	$∑r£_dï_fûe
(*
m
, c⁄° *
èrgë
)

307 *
p
;

308 
is_œ°
, 
is_èrgë
;

309 
ßw_™y_èrgë
 = 0;

310 
is_fú°_dï
 = 0;

311 *
buf
;

315 *
m
 == ' ' || *m == '\\' || *m == '\n')

316 
m
++;

318 i‡(!*
m
)

322 
p
 = 
m
;

323 *
p
 && *p != ' ' && *p != '\\' && *p != '\n')

324 
p
++;

325 
is_œ°
 = (*
p
 == '\0');

327 
is_èrgë
 = (*(
p
-1) == ':');

329 i‡(
is_èrgë
) {

331 
is_fú°_dï
 = 1;

332 } i‡(!
	`is_ign‹ed_fûe
(
m
, 
p
 - m)) {

333 *
p
 = '\0';

341 i‡(
is_fú°_dï
) {

350 i‡(!
ßw_™y_èrgë
) {

351 
ßw_™y_èrgë
 = 1;

352 
	`x¥ötf
("source_%s := %s\n\n",

353 
èrgë
, 
m
);

354 
	`x¥ötf
("dïs_%†:\\\n", 
èrgë
);

356 
is_fú°_dï
 = 0;

358 
	`x¥ötf
(" %†\\\n", 
m
);

361 
buf
 = 
	`ªad_fûe
(
m
);

362 
	`∑r£_c⁄fig_fûe
(
buf
);

363 
	`‰ì
(
buf
);

366 i‡(
is_œ°
)

373 
m
 = 
p
 + 1;

376 i‡(!
ßw_™y_èrgë
) {

377 
	`Ârötf
(
°dîr
, "fixdep:ÖarseÉrror;ÇoÅargets found\n");

378 
	`exô
(1);

381 
	`x¥ötf
("\n%s: $(dïs_%s)\n\n", 
èrgë
,Åarget);

382 
	`x¥ötf
("$(dïs_%s):\n", 
èrgë
);

383 
	}
}

385 
	$maö
(
¨gc
, *
¨gv
[])

387 c⁄° *
dïfûe
, *
èrgë
, *
cmdlöe
;

388 *
buf
;

390 i‡(
¨gc
 != 4)

391 
	`ußge
();

393 
dïfûe
 = 
¨gv
[1];

394 
èrgë
 = 
¨gv
[2];

395 
cmdlöe
 = 
¨gv
[3];

397 
	`x¥ötf
("cmd_%†:%s\n\n", 
èrgë
, 
cmdlöe
);

399 
buf
 = 
	`ªad_fûe
(
dïfûe
);

400 
	`∑r£_dï_fûe
(
buf
, 
èrgë
);

401 
	`‰ì
(
buf
);

404 
	}
}

	@nemu/tools/gen-expr/gen-expr.c

1 
	~<°döt.h
>

2 
	~<°dio.h
>

3 
	~<°dlib.h
>

4 
	~<time.h
>

5 
	~<as£π.h
>

6 
	~<°rög.h
>

9 
	gbuf
[65536] = {};

10 
	gcode_buf
[65536 + 128] = {};

11 *
	gcode_f‹m©
 =

19 
	$gí_ønd_ex¥
() {

20 
buf
[0] = '\0';

21 
	}
}

23 
	$maö
(
¨gc
, *
¨gv
[]) {

24 
£ed
 = 
	`time
(0);

25 
	`§™d
(
£ed
);

26 
lo›
 = 1;

27 i‡(
¨gc
 > 1) {

28 
	`ssˇnf
(
¨gv
[1], "%d", &
lo›
);

30 
i
;

31 
i
 = 0; i < 
lo›
; i ++) {

32 
	`gí_ønd_ex¥
();

34 
	`•rötf
(
code_buf
, 
code_f‹m©
, 
buf
);

36 
FILE
 *
Â
 = 
	`f›í
("/tmp/.code.c", "w");

37 
	`as£π
(
Â
 !
NULL
);

38 
	`Âuts
(
code_buf
, 
Â
);

39 
	`f˛o£
(
Â
);

41 
ªt
 = 
	`sy°em
("gcc /tmp/.code.c -o /tmp/.expr");

42 i‡(
ªt
 != 0) ;

44 
Â
 = 
	`p›í
("/tmp/.expr", "r");

45 
	`as£π
(
Â
 !
NULL
);

47 
ªsu…
;

48 
	`fsˇnf
(
Â
, "%d", &
ªsu…
);

49 
	`p˛o£
(
Â
);

51 
	`¥ötf
("%u %s\n", 
ªsu…
, 
buf
);

54 
	}
}

	@nemu/tools/kconfig/build/lexer.lex.c

5 
	#YY_INT_ALIGNED
 

	)

9 
	#FLEX_SCANNER


	)

10 
	#YY_FLEX_MAJOR_VERSION
 2

	)

11 
	#YY_FLEX_MINOR_VERSION
 6

	)

12 
	#YY_FLEX_SUBMINOR_VERSION
 4

	)

13 #i‡
YY_FLEX_SUBMINOR_VERSION
 > 0

14 
	#FLEX_BETA


	)

20 
	~<°dio.h
>

21 
	~<°rög.h
>

22 
	~<î∫o.h
>

23 
	~<°dlib.h
>

29 #i‚de‡
FLEXINT_H


30 
	#FLEXINT_H


	)

34 #i‡
deföed
 (
__STDC_VERSION__
) && __STDC_VERSION__ >= 199901L

39 #i‚de‡
__STDC_LIMIT_MACROS


40 
	#__STDC_LIMIT_MACROS
 1

	)

43 
	~<öây≥s.h
>

44 
öt8_t
 
	tÊex_öt8_t
;

45 
uöt8_t
 
	tÊex_uöt8_t
;

46 
öt16_t
 
	tÊex_öt16_t
;

47 
uöt16_t
 
	tÊex_uöt16_t
;

48 
öt32_t
 
	tÊex_öt32_t
;

49 
uöt32_t
 
	tÊex_uöt32_t
;

51 sig√d 
	tÊex_öt8_t
;

52 
	tÊex_öt16_t
;

53 
	tÊex_öt32_t
;

54 
	tÊex_uöt8_t
;

55 
	tÊex_uöt16_t
;

56 
	tÊex_uöt32_t
;

59 #i‚de‡
INT8_MIN


60 
	#INT8_MIN
 (-128)

	)

62 #i‚de‡
INT16_MIN


63 
	#INT16_MIN
 (-32767-1)

	)

65 #i‚de‡
INT32_MIN


66 
	#INT32_MIN
 (-2147483647-1)

	)

68 #i‚de‡
INT8_MAX


69 
	#INT8_MAX
 (127)

	)

71 #i‚de‡
INT16_MAX


72 
	#INT16_MAX
 (32767)

	)

74 #i‚de‡
INT32_MAX


75 
	#INT32_MAX
 (2147483647)

	)

77 #i‚de‡
UINT8_MAX


78 
	#UINT8_MAX
 (255U)

	)

80 #i‚de‡
UINT16_MAX


81 
	#UINT16_MAX
 (65535U)

	)

83 #i‚de‡
UINT32_MAX


84 
	#UINT32_MAX
 (4294967295U)

	)

87 #i‚de‡
SIZE_MAX


88 
	#SIZE_MAX
 (~(
size_t
)0)

	)

98 
	#yyc⁄°
 c⁄°

	)

100 #i‡
deföed
(
__GNUC__
) && __GNUC__ >= 3

101 
	#yyn‹ëu∫
 
	`__©åibuã__
((
__n‹ëu∫__
))

	)

103 
	#yyn‹ëu∫


	)

107 
	#YY_NULL
 0

	)

112 
	#YY_SC_TO_UI
(
c
Ë((
YY_CHAR
Ë(c))

	)

118 
	#BEGIN
 (
yy_°¨t
Ë1 + 2 *

	)

123 
	#YY_START
 (((
yy_°¨t
Ë- 1Ë/ 2)

	)

124 
	#YYSTATE
 
YY_START


	)

126 
	#YY_STATE_EOF
(
°©e
Ë(
YY_END_OF_BUFFER
 + sèã + 1)

	)

128 
	#YY_NEW_FILE
 
	`yyª°¨t
–
yyö
 )

	)

129 
	#YY_END_OF_BUFFER_CHAR
 0

	)

132 #i‚de‡
YY_BUF_SIZE


133 #ifde‡
__ü64__


138 
	#YY_BUF_SIZE
 32768

	)

140 
	#YY_BUF_SIZE
 16384

	)

146 
	#YY_STATE_BUF_SIZE
 ((
YY_BUF_SIZE
 + 2Ë* (
yy_°©e_ty≥
))

	)

148 #i‚de‡
YY_TYPEDEF_YY_BUFFER_STATE


149 
	#YY_TYPEDEF_YY_BUFFER_STATE


	)

150 
yy_buf„r_°©e
 *
	tYY_BUFFER_STATE
;

153 #i‚de‡
YY_TYPEDEF_YY_SIZE_T


154 
	#YY_TYPEDEF_YY_SIZE_T


	)

155 
size_t
 
	tyy_size_t
;

158 
yyÀng
;

160 
FILE
 *
yyö
, *
yyout
;

162 
	#EOB_ACT_CONTINUE_SCAN
 0

	)

163 
	#EOB_ACT_END_OF_FILE
 1

	)

164 
	#EOB_ACT_LAST_MATCH
 2

	)

173 
	#YY_LESS_LINENO
(
n
) \

175 
yyl
;\

176  
yyl
 = 
n
; yy»< 
yyÀng
; ++yyl )\

177 i‡–
yyãxt
[
yyl
] == '\n' )\

178 --
yylöío
;\

179 }0)

	)

180 
	#YY_LINENO_REWIND_TO
(
d°
) \

182 c⁄° *
p
;\

183  
p
 = 
yy_˝
-1;Ö >(
d°
); --p)\

184 i‡–*
p
 == '\n' )\

185 --
yylöío
;\

186 }0)

	)

189 
	#yyÀss
(
n
) \

193 
yyÀss_ma¸o_¨g
 = (
n
); \

194 
	`YY_LESS_LINENO
(
yyÀss_ma¸o_¨g
);\

195 *
yy_˝
 = (
yy_hﬁd_ch¨
); \

196 
YY_RESTORE_YY_MORE_OFFSET
 \

197 (
yy_c_buf_p
Ë
yy_˝
 = 
yy_bp
 + 
yyÀss_ma¸o_¨g
 - 
YY_MORE_ADJ
; \

198 
YY_DO_BEFORE_ACTION
; \

200  0 )

	)

201 
	#u≈ut
(
c
Ë
	`yyu≈ut
–c, (
yyãxt_±r
Ë)

	)

203 #i‚de‡
YY_STRUCT_YY_BUFFER_STATE


204 
	#YY_STRUCT_YY_BUFFER_STATE


	)

205 
	syy_buf„r_°©e


207 
FILE
 *
	myy_öput_fûe
;

209 *
	myy_ch_buf
;

210 *
	myy_buf_pos
;

215 
	myy_buf_size
;

220 
	myy_n_ch¨s
;

226 
	myy_is_our_buf„r
;

233 
	myy_is_öãø˘ive
;

239 
	myy_©_bﬁ
;

241 
	myy_bs_löío
;

242 
	myy_bs_cﬁumn
;

247 
	myy_fûl_buf„r
;

249 
	myy_buf„r_°©us
;

251 
	#YY_BUFFER_NEW
 0

	)

252 
	#YY_BUFFER_NORMAL
 1

	)

263 
	#YY_BUFFER_EOF_PENDING
 2

	)

269 
size_t
 
	gyy_buf„r_°ack_t›
 = 0;

270 
size_t
 
	gyy_buf„r_°ack_max
 = 0;

271 
YY_BUFFER_STATE
 * 
	gyy_buf„r_°ack
 = 
NULL
;

279 
	#YY_CURRENT_BUFFER
 ( (
yy_buf„r_°ack
) \

280 ? (
yy_buf„r_°ack
)[(
yy_buf„r_°ack_t›
)] \

281 : 
NULL
)

	)

285 
	#YY_CURRENT_BUFFER_LVALUE
 (
yy_buf„r_°ack
)[(
yy_buf„r_°ack_t›
)]

	)

288 
	gyy_hﬁd_ch¨
;

289 
	gyy_n_ch¨s
;

290 
	gyyÀng
;

293 *
	gyy_c_buf_p
 = 
NULL
;

294 
	gyy_öô
 = 0;

295 
	gyy_°¨t
 = 0;

300 
	gyy_did_buf„r_swôch_⁄_eof
;

302 
yyª°¨t
 ( 
FILE
 *
öput_fûe
 );

303 
yy_swôch_to_buf„r
 ( 
YY_BUFFER_STATE
 
√w_buf„r
 );

304 
YY_BUFFER_STATE
 
yy_¸óã_buf„r
 ( 
FILE
 *
fûe
, 
size
 );

305 
yy_dñëe_buf„r
 ( 
YY_BUFFER_STATE
 
b
 );

306 
yy_Êush_buf„r
 ( 
YY_BUFFER_STATE
 
b
 );

307 
yypush_buf„r_°©e
 ( 
YY_BUFFER_STATE
 
√w_buf„r
 );

308 
yyp›_buf„r_°©e
 ( );

310 
yyísuª_buf„r_°ack
 ( );

311 
yy_lﬂd_buf„r_°©e
 ( );

312 
yy_öô_buf„r
 ( 
YY_BUFFER_STATE
 
b
, 
FILE
 *
fûe
 );

313 
	#YY_FLUSH_BUFFER
 
	`yy_Êush_buf„r
–
YY_CURRENT_BUFFER
 )

	)

315 
YY_BUFFER_STATE
 
yy_sˇn_buf„r
 ( *
ba£
, 
yy_size_t
 
size
 );

316 
YY_BUFFER_STATE
 
yy_sˇn_°rög
 ( c⁄° *
yy_°r
 );

317 
YY_BUFFER_STATE
 
yy_sˇn_byãs
 ( c⁄° *
byãs
, 
Àn
 );

319 *
yyÆloc
 ( 
yy_size_t
 );

320 *
yyªÆloc
 ( *, 
yy_size_t
 );

321 
yy‰ì
 ( * );

323 
	#yy_√w_buf„r
 
yy_¸óã_buf„r


	)

324 
	#yy_£t_öãø˘ive
(
is_öãø˘ive
) \

326 i‡–! 
YY_CURRENT_BUFFER
 ){ \

327 
	`yyísuª_buf„r_°ack
 (); \

328 
YY_CURRENT_BUFFER_LVALUE
 = \

329 
	`yy_¸óã_buf„r
–
yyö
, 
YY_BUF_SIZE
 ); \

331 
YY_CURRENT_BUFFER_LVALUE
->
yy_is_öãø˘ive
 = 
is_öãø˘ive
; \

332 }

	)

333 
	#yy_£t_bﬁ
(
©_bﬁ
) \

335 i‡–! 
YY_CURRENT_BUFFER
 ){\

336 
	`yyísuª_buf„r_°ack
 (); \

337 
YY_CURRENT_BUFFER_LVALUE
 = \

338 
	`yy_¸óã_buf„r
–
yyö
, 
YY_BUF_SIZE
 ); \

340 
YY_CURRENT_BUFFER_LVALUE
->
yy_©_bﬁ
 = 
©_bﬁ
; \

341 }

	)

342 
	#YY_AT_BOL
(Ë(
YY_CURRENT_BUFFER_LVALUE
->
yy_©_bﬁ
)

	)

346 
	#yywøp
(Ë–1)

	)

347 
	#YY_SKIP_YYWRAP


	)

348 
Êex_uöt8_t
 
	tYY_CHAR
;

350 
FILE
 *
	gyyö
 = 
NULL
, *
	gyyout
 = NULL;

352 
	tyy_°©e_ty≥
;

354 
yylöío
;

355 
	gyylöío
 = 1;

357 *
yyãxt
;

358 #ifde‡
yyãxt_±r


359 #unde‡
yyãxt_±r


361 
	#yyãxt_±r
 
yyãxt


	)

363 c⁄° 
Êex_öt16_t
 
	gyy_nxt
[][42] =

2330 
yy_°©e_ty≥
 
yy_gë_¥evious_°©e
 ( );

2331 
yy_°©e_ty≥
 
yy_åy_NUL_å™s
 ( yy_°©e_ty≥ 
cuºít_°©e
 );

2332 
yy_gë_√xt_buf„r
 ( );

2333 
yyn‹ëu∫
 
yy_Áèl_îr‹
 ( c⁄° * 
msg
 );

2338 
	#YY_DO_BEFORE_ACTION
 \

2339 (
yyãxt_±r
Ë
yy_bp
; \

2340 
yyÀng
 = (Ë(
yy_˝
 - 
yy_bp
); \

2341 (
yy_hﬁd_ch¨
Ë*
yy_˝
; \

2342 *
yy_˝
 = '\0'; \

2343 (
yy_c_buf_p
Ë
yy_˝
;

	)

2344 
	#YY_NUM_RULES
 66

	)

2345 
	#YY_END_OF_BUFFER
 67

	)

2348 
	syy_å™s_öfo


2350 
Êex_öt32_t
 
	myy_vîify
;

2351 
Êex_öt32_t
 
	myy_nxt
;

2353 c⁄° 
Êex_öt16_t
 
	gyy_ac˚±
[231] =

2382 c⁄° 
YY_CHAR
 
	gyy_ec
[256] =

2415 c⁄° 
Êex_öt32_t
 
	gyy_ruÀ_ˇn_m©ch_eﬁ
[67] =

2422 
yy_Êex_debug
;

2423 
	gyy_Êex_debug
 = 0;

2428 
	#REJECT
 
ªje˘_u£d_but_nŸ_dëe˘ed


	)

2429 
	#yym‹e
(Ë
yym‹e_u£d_but_nŸ_dëe˘ed


	)

2430 
	#YY_MORE_ADJ
 0

	)

2431 
	#YY_RESTORE_YY_MORE_OFFSET


	)

2432 *
	gyyãxt
;

2441 
	~<as£π.h
>

2442 
	~<limôs.h
>

2443 
	~<°dio.h
>

2444 
	~<°dlib.h
>

2445 
	~<°rög.h
>

2446 
	~<uni°d.h
>

2448 
	~"lkc.h
"

2449 
	~"∑r£r.èb.h
"

2451 
	#YY_DECL
 
	`yyÀx1
()

	)

2453 
	#START_STRSIZE
 16

	)

2456 
fûe
 *
	mfûe
;

2457 
	mlöío
;

2458 } 
	gcuºít_pos
;

2460 
	g¥ev_¥ev_tokí
 = 
T_EOL
;

2461 
	g¥ev_tokí
 = 
T_EOL
;

2462 *
	gãxt
;

2463 
	gãxt_size
, 
	gãxt_asize
;

2465 
	sbuf„r
 {

2466 
buf„r
 *
	m∑ª¡
;

2467 
YY_BUFFER_STATE
 
	m°©e
;

2470 
buf„r
 *
	gcuºít_buf
;

2472 
	gœ°_ts
, 
	gfú°_ts
;

2474 *
ex∑nd_tokí
(c⁄° *
ö
, 
size_t
 
n
);

2475 
≠≥nd_ex∑nded_°rög
(c⁄° *
ö
);

2476 
zc⁄f_ídhñp
();

2477 
zc⁄f_ídfûe
();

2479 
	$√w_°rög
()

2481 
ãxt
 = 
	`xmÆloc
(
START_STRSIZE
);

2482 
ãxt_asize
 = 
START_STRSIZE
;

2483 
ãxt_size
 = 0;

2484 *
ãxt
 = 0;

2485 
	}
}

2487 
	$≠≥nd_°rög
(c⁄° *
°r
, 
size
)

2489 
√w_size
 = 
ãxt_size
 + 
size
 + 1;

2490 i‡(
√w_size
 > 
ãxt_asize
) {

2491 
√w_size
 +
START_STRSIZE
 - 1;

2492 
√w_size
 &-
START_STRSIZE
;

2493 
ãxt
 = 
	`xªÆloc
—ext, 
√w_size
);

2494 
ãxt_asize
 = 
√w_size
;

2496 
	`mem˝y
(
ãxt
 + 
ãxt_size
, 
°r
, 
size
);

2497 
ãxt_size
 +
size
;

2498 
ãxt
[
ãxt_size
] = 0;

2499 
	}
}

2501 
	$Æloc_°rög
(c⁄° *
°r
, 
size
)

2503 
ãxt
 = 
	`xmÆloc
(
size
 + 1);

2504 
	`mem˝y
(
ãxt
, 
°r
, 
size
);

2505 
ãxt
[
size
] = 0;

2506 
	}
}

2508 
	$w¨n_ign‹ed_ch¨a˘î
(
chr
)

2510 
	`Ârötf
(
°dîr
,

2512 
cuºít_fûe
->
«me
, 
yylöío
, 
chr
);

2513 
	}
}

2517 
	#INITIAL
 0

	)

2518 
	#ASSIGN_VAL
 1

	)

2519 
	#HELP
 2

	)

2520 
	#STRING
 3

	)

2522 #i‚de‡
YY_NO_UNISTD_H


2527 
	~<uni°d.h
>

2530 #i‚de‡
YY_EXTRA_TYPE


2531 
	#YY_EXTRA_TYPE
 *

	)

2534 
yy_öô_globÆs
 ( );

2539 
yyÀx_de°roy
 ( );

2541 
yygë_debug
 ( );

2543 
yy£t_debug
 ( 
debug_Êag
 );

2545 
YY_EXTRA_TYPE
 
yygë_exåa
 ( );

2547 
yy£t_exåa
 ( 
YY_EXTRA_TYPE
 
u£r_deföed
 );

2549 
FILE
 *
yygë_ö
 ( );

2551 
yy£t_ö
 ( 
FILE
 * 
_ö_°r
 );

2553 
FILE
 *
yygë_out
 ( );

2555 
yy£t_out
 ( 
FILE
 * 
_out_°r
 );

2557 
yygë_Àng
 ( );

2559 *
yygë_ãxt
 ( );

2561 
yygë_löío
 ( );

2563 
yy£t_löío
 ( 
_löe_numbî
 );

2569 #i‚de‡
YY_SKIP_YYWRAP


2570 #ifde‡
__˝lu•lus


2571 "C" 
yywøp
 ( );

2573 
yywøp
 ( );

2577 #i‚de‡
YY_NO_UNPUT


2579 
yyu≈ut
 ( 
c
, *
buf_±r
 );

2583 #i‚de‡
yyãxt_±r


2584 
yy_Êex_°∫˝y
 ( *, const *, );

2587 #ifde‡
YY_NEED_STRLEN


2588 
yy_Êex_°æí
 ( const * );

2591 #i‚de‡
YY_NO_INPUT


2592 #ifde‡
__˝lu•lus


2593 
yyöput
 ( );

2595 
öput
 ( );

2601 #i‚de‡
YY_READ_BUF_SIZE


2602 #ifde‡
__ü64__


2604 
	#YY_READ_BUF_SIZE
 16384

	)

2606 
	#YY_READ_BUF_SIZE
 8192

	)

2611 #i‚de‡
ECHO


2615 
	#ECHO
 dÿ{ i‡(
	`fwrôe
–
yyãxt
, (
size_t
Ë
yyÀng
, 1, 
yyout
 )Ë{} } 0)

	)

2621 #i‚de‡
YY_INPUT


2622 
	#YY_INPUT
(
buf
,
ªsu…
,
max_size
) \

2623 
î∫o
=0; \

2624  (
ªsu…
 = (Ë
	`ªad
–
	`fûío
(
yyö
), 
buf
, (
yy_size_t
Ë
max_size
 )) < 0 ) \

2626 if–
î∫o
 !
EINTR
) \

2628 
	`YY_FATAL_ERROR
( "input in flex scanner failed" ); \

2631 
î∫o
=0; \

2632 
	`˛óªº
(
yyö
); \

2635 

	)

2642 #i‚de‡
yyãrmö©e


2643 
	#yyãrmö©e
(Ë 
YY_NULL


	)

2647 #i‚de‡
YY_START_STACK_INCR


2648 
	#YY_START_STACK_INCR
 25

	)

2652 #i‚de‡
YY_FATAL_ERROR


2653 
	#YY_FATAL_ERROR
(
msg
Ë
	`yy_Áèl_îr‹
–msg )

	)

2661 #i‚de‡
YY_DECL


2662 
	#YY_DECL_IS_OURS
 1

	)

2664 
yyÀx
 ();

2666 
	#YY_DECL
 
	`yyÀx
 ()

	)

2672 #i‚de‡
YY_USER_ACTION


2673 
	#YY_USER_ACTION


	)

2677 #i‚de‡
YY_BREAK


2678 
	#YY_BREAK
 ;

	)

2681 
	#YY_RULE_SETUP
 \

2682 
YY_USER_ACTION


	)

2686 
	gYY_DECL


2688 
yy_°©e_ty≥
 
	gyy_cuºít_°©e
;

2689 *
	gyy_˝
, *
	gyy_bp
;

2690 
	gyy_a˘
;

2692 i‡–!(
	gyy_öô
) )

2694 (
	gyy_öô
) = 1;

2696 #ifde‡
YY_USER_INIT


2697 
	gYY_USER_INIT
;

2700 i‡–! (
	gyy_°¨t
) )

2701 (
	gyy_°¨t
) = 1;

2703 i‡–! 
	gyyö
 )

2704 
	gyyö
 = 
°dö
;

2706 i‡–! 
	gyyout
 )

2707 
	gyyout
 = 
°dout
;

2709 i‡–! 
	gYY_CURRENT_BUFFER
 ) {

2710 
yyísuª_buf„r_°ack
 ();

2711 
	gYY_CURRENT_BUFFER_LVALUE
 =

2712 
yy_¸óã_buf„r
–
yyö
, 
YY_BUF_SIZE
 );

2715 
yy_lﬂd_buf„r_°©e
( );

2722 
	g°r
 = 0;

2723 
	gts
, 
	gi
;

2729 
	gyy_˝
 = (
yy_c_buf_p
);

2732 *
	gyy_˝
 = (
yy_hﬁd_ch¨
);

2737 
	gyy_bp
 = 
yy_˝
;

2739 
	gyy_cuºít_°©e
 = (
yy_°¨t
);

2740 
	gyy_m©ch
:

2741  (
yy_cuºít_°©e
 = 
yy_nxt
[yy_cuºít_°©e][ 
yy_ec
[
YY_SC_TO_UI
(*
yy_˝
)] ]) > 0 )

2742 ++
yy_˝
;

2744 
	gyy_cuºít_°©e
 = -
yy_cuºít_°©e
;

2746 
	gyy_föd_a˘i⁄
:

2747 
yy_a˘
 = 
yy_ac˚±
[
yy_cuºít_°©e
];

2749 
	gYY_DO_BEFORE_ACTION
;

2751 i‡–
	gyy_a˘
 !
YY_END_OF_BUFFER
 && 
yy_ruÀ_ˇn_m©ch_eﬁ
[
yy_a˘
] )

2753 
yyl
;

2754  
	gyyl
 = 0; yy»< 
	gyyÀng
; ++yyl )

2755 i‡–
	gyyãxt
[
yyl
] == '\n' )

2757 
yylöío
++;

2761 
	gdo_a˘i⁄
:

2763  
yy_a˘
 )

2766 
YY_RULE_SETUP


2769 
YY_BREAK


2771 
YY_RULE_SETUP


2774 
YY_BREAK


2777 
YY_RULE_SETUP


2780 
YY_BREAK


2783 
YY_RULE_SETUP


2785  
T_EOL
;

2786 
YY_BREAK


2788 
YY_RULE_SETUP


2790  
T_ALLNOCONFIG_Y
;

2791 
YY_BREAK


2793 
YY_RULE_SETUP


2795  
T_BOOL
;

2796 
YY_BREAK


2798 
YY_RULE_SETUP


2800  
T_CHOICE
;

2801 
YY_BREAK


2803 
YY_RULE_SETUP


2805  
T_COMMENT
;

2806 
YY_BREAK


2808 
YY_RULE_SETUP


2810  
T_CONFIG
;

2811 
YY_BREAK


2813 
YY_RULE_SETUP


2815  
T_DEF_BOOL
;

2816 
YY_BREAK


2818 
YY_RULE_SETUP


2820  
T_DEF_TRISTATE
;

2821 
YY_BREAK


2823 
YY_RULE_SETUP


2825  
T_DEFAULT
;

2826 
YY_BREAK


2828 
YY_RULE_SETUP


2830  
T_DEFCONFIG_LIST
;

2831 
YY_BREAK


2833 
YY_RULE_SETUP


2835  
T_DEPENDS
;

2836 
YY_BREAK


2838 
YY_RULE_SETUP


2840  
T_ENDCHOICE
;

2841 
YY_BREAK


2843 
YY_RULE_SETUP


2845  
T_ENDIF
;

2846 
YY_BREAK


2848 
YY_RULE_SETUP


2850  
T_ENDMENU
;

2851 
YY_BREAK


2853 
YY_RULE_SETUP


2855  
T_HELP
;

2856 
YY_BREAK


2858 
YY_RULE_SETUP


2860  
T_HEX
;

2861 
YY_BREAK


2863 
YY_RULE_SETUP


2865  
T_IF
;

2866 
YY_BREAK


2868 
YY_RULE_SETUP


2870  
T_IMPLY
;

2871 
YY_BREAK


2873 
YY_RULE_SETUP


2875  
T_INT
;

2876 
YY_BREAK


2878 
YY_RULE_SETUP


2880  
T_MAINMENU
;

2881 
YY_BREAK


2883 
YY_RULE_SETUP


2885  
T_MENU
;

2886 
YY_BREAK


2888 
YY_RULE_SETUP


2890  
T_MENUCONFIG
;

2891 
YY_BREAK


2893 
YY_RULE_SETUP


2895  
T_MODULES
;

2896 
YY_BREAK


2898 
YY_RULE_SETUP


2900  
T_ON
;

2901 
YY_BREAK


2903 
YY_RULE_SETUP


2905  
T_OPTION
;

2906 
YY_BREAK


2908 
YY_RULE_SETUP


2910  
T_OPTIONAL
;

2911 
YY_BREAK


2913 
YY_RULE_SETUP


2915  
T_PROMPT
;

2916 
YY_BREAK


2918 
YY_RULE_SETUP


2920  
T_RANGE
;

2921 
YY_BREAK


2923 
YY_RULE_SETUP


2925  
T_SELECT
;

2926 
YY_BREAK


2928 
YY_RULE_SETUP


2930  
T_SOURCE
;

2931 
YY_BREAK


2933 
YY_RULE_SETUP


2935  
T_STRING
;

2936 
YY_BREAK


2938 
YY_RULE_SETUP


2940  
T_TRISTATE
;

2941 
YY_BREAK


2943 
YY_RULE_SETUP


2945  
T_VISIBLE
;

2946 
YY_BREAK


2948 
YY_RULE_SETUP


2950  
T_OR
;

2951 
YY_BREAK


2953 
YY_RULE_SETUP


2955  
T_AND
;

2956 
YY_BREAK


2958 
YY_RULE_SETUP


2960  
T_EQUAL
;

2961 
YY_BREAK


2963 
YY_RULE_SETUP


2965  
T_UNEQUAL
;

2966 
YY_BREAK


2968 
YY_RULE_SETUP


2970  
T_LESS
;

2971 
YY_BREAK


2973 
YY_RULE_SETUP


2975  
T_LESS_EQUAL
;

2976 
YY_BREAK


2978 
YY_RULE_SETUP


2980  
T_GREATER
;

2981 
YY_BREAK


2983 
YY_RULE_SETUP


2985  
T_GREATER_EQUAL
;

2986 
YY_BREAK


2988 
YY_RULE_SETUP


2990  
T_NOT
;

2991 
YY_BREAK


2993 
YY_RULE_SETUP


2995  
T_OPEN_PAREN
;

2996 
YY_BREAK


2998 
YY_RULE_SETUP


3000  
T_CLOSE_PAREN
;

3001 
YY_BREAK


3003 
YY_RULE_SETUP


3005  
T_COLON_EQUAL
;

3006 
YY_BREAK


3008 
YY_RULE_SETUP


3010  
T_PLUS_EQUAL
;

3011 
YY_BREAK


3013 
YY_RULE_SETUP


3016 
°r
 = 
yyãxt
[0];

3017 
√w_°rög
();

3018 
BEGIN
(
STRING
);

3020 
YY_BREAK


3022 
YY_RULE_SETUP


3025 
Æloc_°rög
(
yyãxt
, 
yyÀng
);

3026 
	gyylvÆ
.
	g°rög
 = 
ãxt
;

3027  
	gT_WORD
;

3029 
YY_BREAK


3031 
YY_RULE_SETUP


3035 
yylvÆ
.
°rög
 = 
ex∑nd_tokí
(
yyãxt
, 
yyÀng
);

3036 i‡(
°æí
(
yylvÆ
.
°rög
))

3037  
	gT_WORD
;

3038 
‰ì
(
yylvÆ
.
°rög
);

3040 
YY_BREAK


3042 
YY_RULE_SETUP


3044 
w¨n_ign‹ed_ch¨a˘î
(*
yyãxt
);

3045 
YY_BREAK


3048 
YY_RULE_SETUP


3051 
Æloc_°rög
(
yyãxt
, 
yyÀng
);

3052 
	gyylvÆ
.
	g°rög
 = 
ãxt
;

3053  
	gT_ASSIGN_VAL
;

3055 
YY_BREAK


3058 
YY_RULE_SETUP


3060 { 
BEGIN
(
INITIAL
);  
	gT_EOL
; }

3061 
YY_BREAK


3063 
YY_RULE_SETUP


3066 
YY_BREAK


3070 
YY_RULE_SETUP


3072 
≠≥nd_ex∑nded_°rög
(
yyãxt
);

3073 
YY_BREAK


3075 
YY_RULE_SETUP


3078 
≠≥nd_°rög
(
yyãxt
, 
yyÀng
);

3080 
YY_BREAK


3082 
YY_RULE_SETUP


3085 
≠≥nd_°rög
(
yyãxt
 + 1, 
yyÀng
 - 1);

3087 
YY_BREAK


3089 
YY_RULE_SETUP


3092 i‡(
°r
 =
yyãxt
[0]) {

3093 
BEGIN
(
INITIAL
);

3094 
	gyylvÆ
.
	g°rög
 = 
ãxt
;

3095  
	gT_WORD_QUOTE
;

3097 
≠≥nd_°rög
(
yyãxt
, 1);

3099 
YY_BREAK


3102 
YY_RULE_SETUP


3105 
Ârötf
(
°dîr
,

3107 
zc⁄f_cu∫ame
(), 
zc⁄f_löío
());

3108 
u≈ut
('\n');

3109 
BEGIN
(
INITIAL
);

3110 
	gyylvÆ
.
	g°rög
 = 
ãxt
;

3111  
	gT_WORD_QUOTE
;

3113 
YY_BREAK


3114 
YY_STATE_EOF
(
STRING
):

3117 
BEGIN
(
INITIAL
);

3118 
	gyylvÆ
.
	g°rög
 = 
ãxt
;

3119  
	gT_WORD_QUOTE
;

3121 
YY_BREAK


3125 
YY_RULE_SETUP


3128 
ts
 = 0;

3129 
	gi
 = 0; i < 
	gyyÀng
; i++) {

3130 i‡(
	gyyãxt
[
i
] == '\t')

3131 
ts
 = (ts & ~7) + 8;

3133 
	gts
++;

3135 
	gœ°_ts
 = 
ts
;

3136 i‡(
	gfú°_ts
) {

3137 i‡(
	gts
 < 
	gfú°_ts
) {

3138 
zc⁄f_ídhñp
();

3139  
	gT_HELPTEXT
;

3141 
	gts
 -
fú°_ts
;

3142 
	gts
 > 8) {

3143 
≠≥nd_°rög
(" ", 8);

3144 
	gts
 -= 8;

3146 
≠≥nd_°rög
(" ", 
ts
);

3149 
YY_BREAK


3152 *
yy_˝
 = (
yy_hﬁd_ch¨
);

3153 
YY_LINENO_REWIND_TO
(
yy_˝
 - 1);

3154 (
	gyy_c_buf_p
Ë
yy_˝
 -= 1;

3155 
	gYY_DO_BEFORE_ACTION
;

3156 
	gYY_RULE_SETUP


3159 
zc⁄f_ídhñp
();

3160  
	gT_HELPTEXT
;

3162 
YY_BREAK


3165 
YY_RULE_SETUP


3168 
≠≥nd_°rög
("\n", 1);

3170 
YY_BREAK


3172 
YY_RULE_SETUP


3175 
yyÀng
) {

3176 i‡((
yyãxt
[
yyÀng
-1] != ' ') && (yytext[yyleng-1] != '\t'))

3178 
	gyyÀng
--;

3180 
≠≥nd_°rög
(
yyãxt
, 
yyÀng
);

3181 i‡(!
	gfú°_ts
)

3182 
	gfú°_ts
 = 
œ°_ts
;

3184 
YY_BREAK


3185 
YY_STATE_EOF
(
HELP
):

3188 
zc⁄f_ídhñp
();

3189  
	gT_HELPTEXT
;

3191 
YY_BREAK


3193 
YY_STATE_EOF
(
INITIAL
):

3194 
YY_STATE_EOF
(
ASSIGN_VAL
):

3197 
BEGIN
(
INITIAL
);

3199 i‡(
	g¥ev_tokí
 !
T_EOL
 && 
¥ev_tokí
 !
T_HELPTEXT
)

3200 
Ârötf
(
°dîr
, "%s:%d:warning:ÇoÇewÜineátÉnd of file\n",

3201 
cuºít_fûe
->
«me
, 
yylöío
);

3203 i‡(
	gcuºít_fûe
) {

3204 
zc⁄f_ídfûe
();

3205  
	gT_EOL
;

3207 
f˛o£
(
yyö
);

3208 
yyãrmö©e
();

3210 
YY_BREAK


3212 
YY_RULE_SETUP


3214 
YY_FATAL_ERROR
( "flex scanner jammed" );

3215 
	gYY_BREAK


3218 
	gYY_END_OF_BUFFER
:

3221 
yy_amou¡_of_m©ched_ãxt
 = (Ë(
yy_˝
 - (
yyãxt_±r
)) - 1;

3224 *
	gyy_˝
 = (
yy_hﬁd_ch¨
);

3225 
YY_RESTORE_YY_MORE_OFFSET


3227 i‡–
	gYY_CURRENT_BUFFER_LVALUE
->
	gyy_buf„r_°©us
 =
YY_BUFFER_NEW
 )

3238 (
yy_n_ch¨s
Ë
YY_CURRENT_BUFFER_LVALUE
->yy_n_chars;

3239 
	gYY_CURRENT_BUFFER_LVALUE
->
	gyy_öput_fûe
 = 
yyö
;

3240 
	gYY_CURRENT_BUFFER_LVALUE
->
	gyy_buf„r_°©us
 = 
YY_BUFFER_NORMAL
;

3250 i‡–(
	gyy_c_buf_p
Ë<&
YY_CURRENT_BUFFER_LVALUE
->
yy_ch_buf
[(
yy_n_ch¨s
)] )

3252 
yy_°©e_ty≥
 
yy_√xt_°©e
;

3254 (
	gyy_c_buf_p
Ë(
yyãxt_±r
Ë+ 
yy_amou¡_of_m©ched_ãxt
;

3256 
	gyy_cuºít_°©e
 = 
yy_gë_¥evious_°©e
( );

3267 
	gyy_√xt_°©e
 = 
yy_åy_NUL_å™s
–
yy_cuºít_°©e
 );

3269 
	gyy_bp
 = (
yyãxt_±r
Ë+ 
YY_MORE_ADJ
;

3271 i‡–
	gyy_√xt_°©e
 )

3274 
	gyy_˝
 = ++(
yy_c_buf_p
);

3275 
	gyy_cuºít_°©e
 = 
yy_√xt_°©e
;

3276 
	gyy_m©ch
;

3281 
	gyy_˝
 = (
yy_c_buf_p
);

3282 
	gyy_föd_a˘i⁄
;

3286  
yy_gë_√xt_buf„r
( ) )

3288 
	gEOB_ACT_END_OF_FILE
:

3290 (
yy_did_buf„r_swôch_⁄_eof
) = 0;

3292 i‡–
yywøp
( ) )

3303 (
	gyy_c_buf_p
Ë(
yyãxt_±r
Ë+ 
YY_MORE_ADJ
;

3305 
	gyy_a˘
 = 
YY_STATE_EOF
(
YY_START
);

3306 
	gdo_a˘i⁄
;

3311 i‡–! (
	gyy_did_buf„r_swôch_⁄_eof
) )

3312 
	gYY_NEW_FILE
;

3317 
	gEOB_ACT_CONTINUE_SCAN
:

3318 (
yy_c_buf_p
) =

3319 (
yyãxt_±r
Ë+ 
yy_amou¡_of_m©ched_ãxt
;

3321 
	gyy_cuºít_°©e
 = 
yy_gë_¥evious_°©e
( );

3323 
	gyy_˝
 = (
yy_c_buf_p
);

3324 
	gyy_bp
 = (
yyãxt_±r
Ë+ 
YY_MORE_ADJ
;

3325 
	gyy_m©ch
;

3327 
	gEOB_ACT_LAST_MATCH
:

3328 (
yy_c_buf_p
) =

3329 &
YY_CURRENT_BUFFER_LVALUE
->
yy_ch_buf
[(
yy_n_ch¨s
)];

3331 
	gyy_cuºít_°©e
 = 
yy_gë_¥evious_°©e
( );

3333 
	gyy_˝
 = (
yy_c_buf_p
);

3334 
	gyy_bp
 = (
yyãxt_±r
Ë+ 
YY_MORE_ADJ
;

3335 
	gyy_föd_a˘i⁄
;

3341 
YY_FATAL_ERROR
(

3355 
	$yy_gë_√xt_buf„r
 ()

3357 *
de°
 = 
YY_CURRENT_BUFFER_LVALUE
->
yy_ch_buf
;

3358 *
sour˚
 = (
yyãxt_±r
);

3359 
numbî_to_move
, 
i
;

3360 
ªt_vÆ
;

3362 i‡–(
yy_c_buf_p
Ë> &
YY_CURRENT_BUFFER_LVALUE
->
yy_ch_buf
[(
yy_n_ch¨s
) + 1] )

3363 
	`YY_FATAL_ERROR
(

3366 i‡–
YY_CURRENT_BUFFER_LVALUE
->
yy_fûl_buf„r
 == 0 )

3368 i‡–(
yy_c_buf_p
Ë- (
yyãxt_±r
Ë- 
YY_MORE_ADJ
 == 1 )

3373  
EOB_ACT_END_OF_FILE
;

3381  
EOB_ACT_LAST_MATCH
;

3388 
numbî_to_move
 = (Ë((
yy_c_buf_p
Ë- (
yyãxt_±r
) - 1);

3390  
i
 = 0; i < 
numbî_to_move
; ++i )

3391 *(
de°
++Ë*(
sour˚
++);

3393 i‡–
YY_CURRENT_BUFFER_LVALUE
->
yy_buf„r_°©us
 =
YY_BUFFER_EOF_PENDING
 )

3397 
YY_CURRENT_BUFFER_LVALUE
->
yy_n_ch¨s
 = (yy_n_chars) = 0;

3401 
num_to_ªad
 =

3402 
YY_CURRENT_BUFFER_LVALUE
->
yy_buf_size
 - 
numbî_to_move
 - 1;

3404  
num_to_ªad
 <= 0 )

3408 
YY_BUFFER_STATE
 
b
 = 
YY_CURRENT_BUFFER_LVALUE
;

3410 
yy_c_buf_p_off£t
 =

3411 (Ë((
yy_c_buf_p
Ë- 
b
->
yy_ch_buf
);

3413 i‡–
b
->
yy_is_our_buf„r
 )

3415 
√w_size
 = 
b
->
yy_buf_size
 * 2;

3417 i‡–
√w_size
 <= 0 )

3418 
b
->
yy_buf_size
 += b->yy_buf_size / 8;

3420 
b
->
yy_buf_size
 *= 2;

3422 
b
->
yy_ch_buf
 = (*)

3424 
	`yyªÆloc
–(*Ë
b
->
yy_ch_buf
,

3425 (
yy_size_t
Ë(
b
->
yy_buf_size
 + 2) );

3429 
b
->
yy_ch_buf
 = 
NULL
;

3431 i‡–! 
b
->
yy_ch_buf
 )

3432 
	`YY_FATAL_ERROR
(

3435 (
yy_c_buf_p
Ë&
b
->
yy_ch_buf
[
yy_c_buf_p_off£t
];

3437 
num_to_ªad
 = 
YY_CURRENT_BUFFER_LVALUE
->
yy_buf_size
 -

3438 
numbî_to_move
 - 1;

3442 i‡–
num_to_ªad
 > 
YY_READ_BUF_SIZE
 )

3443 
num_to_ªad
 = 
YY_READ_BUF_SIZE
;

3446 
	`YY_INPUT
–(&
YY_CURRENT_BUFFER_LVALUE
->
yy_ch_buf
[
numbî_to_move
]),

3447 (
yy_n_ch¨s
), 
num_to_ªad
 );

3449 
YY_CURRENT_BUFFER_LVALUE
->
yy_n_ch¨s
 = (yy_n_chars);

3452 i‡–(
yy_n_ch¨s
) == 0 )

3454 i‡–
numbî_to_move
 =
YY_MORE_ADJ
 )

3456 
ªt_vÆ
 = 
EOB_ACT_END_OF_FILE
;

3457 
	`yyª°¨t
–
yyö
 );

3462 
ªt_vÆ
 = 
EOB_ACT_LAST_MATCH
;

3463 
YY_CURRENT_BUFFER_LVALUE
->
yy_buf„r_°©us
 =

3464 
YY_BUFFER_EOF_PENDING
;

3469 
ªt_vÆ
 = 
EOB_ACT_CONTINUE_SCAN
;

3471 i‡(((
yy_n_ch¨s
Ë+ 
numbî_to_move
Ë> 
YY_CURRENT_BUFFER_LVALUE
->
yy_buf_size
) {

3473 
√w_size
 = (
yy_n_ch¨s
Ë+ 
numbî_to_move
 + ((yy_n_chars) >> 1);

3474 
YY_CURRENT_BUFFER_LVALUE
->
yy_ch_buf
 = (*Ë
	`yyªÆloc
(

3475 (*Ë
YY_CURRENT_BUFFER_LVALUE
->
yy_ch_buf
, (
yy_size_t
Ë
√w_size
 );

3476 i‡–! 
YY_CURRENT_BUFFER_LVALUE
->
yy_ch_buf
 )

3477 
	`YY_FATAL_ERROR
( "out of dynamic memory in yy_get_next_buffer()" );

3479 
YY_CURRENT_BUFFER_LVALUE
->
yy_buf_size
 = (Ë(
√w_size
 - 2);

3482 (
yy_n_ch¨s
Ë+
numbî_to_move
;

3483 
YY_CURRENT_BUFFER_LVALUE
->
yy_ch_buf
[(
yy_n_ch¨s
)] = 
YY_END_OF_BUFFER_CHAR
;

3484 
YY_CURRENT_BUFFER_LVALUE
->
yy_ch_buf
[(
yy_n_ch¨s
Ë+ 1] = 
YY_END_OF_BUFFER_CHAR
;

3486 (
yyãxt_±r
Ë&
YY_CURRENT_BUFFER_LVALUE
->
yy_ch_buf
[0];

3488  
ªt_vÆ
;

3489 
	}
}

3493 
yy_°©e_ty≥
 
	$yy_gë_¥evious_°©e
 ()

3495 
yy_°©e_ty≥
 
yy_cuºít_°©e
;

3496 *
yy_˝
;

3498 
yy_cuºít_°©e
 = (
yy_°¨t
);

3500  
yy_˝
 = (
yyãxt_±r
Ë+ 
YY_MORE_ADJ
; yy_˝ < (
yy_c_buf_p
); ++yy_cp )

3502 
yy_cuºít_°©e
 = 
yy_nxt
[yy_cuºít_°©e][(*
yy_˝
 ? 
yy_ec
[
	`YY_SC_TO_UI
(*yy_cp)] : 1)];

3505  
yy_cuºít_°©e
;

3506 
	}
}

3513 
yy_°©e_ty≥
 
	$yy_åy_NUL_å™s
 (
yy_°©e_ty≥
 
yy_cuºít_°©e
 )

3515 
yy_is_jam
;

3517 
yy_cuºít_°©e
 = 
yy_nxt
[yy_current_state][1];

3518 
yy_is_jam
 = (
yy_cuºít_°©e
 <= 0);

3520  
yy_is_jam
 ? 0 : 
yy_cuºít_°©e
;

3521 
	}
}

3523 #i‚de‡
YY_NO_UNPUT


3525 
	$yyu≈ut
 (
c
, * 
yy_bp
 )

3527 *
yy_˝
;

3529 
yy_˝
 = (
yy_c_buf_p
);

3532 *
yy_˝
 = (
yy_hﬁd_ch¨
);

3534 i‡–
yy_˝
 < 
YY_CURRENT_BUFFER_LVALUE
->
yy_ch_buf
 + 2 )

3537 
numbî_to_move
 = (
yy_n_ch¨s
) + 2;

3538 *
de°
 = &
YY_CURRENT_BUFFER_LVALUE
->
yy_ch_buf
[

3539 
YY_CURRENT_BUFFER_LVALUE
->
yy_buf_size
 + 2];

3540 *
sour˚
 =

3541 &
YY_CURRENT_BUFFER_LVALUE
->
yy_ch_buf
[
numbî_to_move
];

3543  
sour˚
 > 
YY_CURRENT_BUFFER_LVALUE
->
yy_ch_buf
 )

3544 *--
de°
 = *--
sour˚
;

3546 
yy_˝
 +(Ë(
de°
 - 
sour˚
);

3547 
yy_bp
 +(Ë(
de°
 - 
sour˚
);

3548 
YY_CURRENT_BUFFER_LVALUE
->
yy_n_ch¨s
 =

3549 (
yy_n_ch¨s
Ë(Ë
YY_CURRENT_BUFFER_LVALUE
->
yy_buf_size
;

3551 i‡–
yy_˝
 < 
YY_CURRENT_BUFFER_LVALUE
->
yy_ch_buf
 + 2 )

3552 
	`YY_FATAL_ERROR
( "flex scannerÖush-back overflow" );

3555 *--
yy_˝
 = (Ë
c
;

3557 i‡–
c
 == '\n' ){

3558 --
yylöío
;

3561 (
yyãxt_±r
Ë
yy_bp
;

3562 (
yy_hﬁd_ch¨
Ë*
yy_˝
;

3563 (
yy_c_buf_p
Ë
yy_˝
;

3564 
	}
}

3568 #i‚de‡
YY_NO_INPUT


3569 #ifde‡
__˝lu•lus


3570 
	$yyöput
 ()

3572 
	$öput
 ()

3576 
c
;

3578 *(
yy_c_buf_p
Ë(
yy_hﬁd_ch¨
);

3580 i‡–*(
yy_c_buf_p
Ë=
YY_END_OF_BUFFER_CHAR
 )

3586 i‡–(
yy_c_buf_p
Ë< &
YY_CURRENT_BUFFER_LVALUE
->
yy_ch_buf
[(
yy_n_ch¨s
)] )

3588 *(
yy_c_buf_p
) = '\0';

3592 
off£t
 = (Ë((
yy_c_buf_p
Ë- (
yyãxt_±r
));

3593 ++(
yy_c_buf_p
);

3595  
	`yy_gë_√xt_buf„r
( ) )

3597 
EOB_ACT_LAST_MATCH
:

3609 
	`yyª°¨t
–
yyö
 );

3613 
EOB_ACT_END_OF_FILE
:

3615 i‡–
	`yywøp
( ) )

3618 i‡–! (
yy_did_buf„r_swôch_⁄_eof
) )

3619 
YY_NEW_FILE
;

3620 #ifde‡
__˝lu•lus


3621  
	`yyöput
();

3623  
	`öput
();

3627 
EOB_ACT_CONTINUE_SCAN
:

3628 (
yy_c_buf_p
Ë(
yyãxt_±r
Ë+ 
off£t
;

3634 
c
 = *(*Ë(
yy_c_buf_p
);

3635 *(
yy_c_buf_p
) = '\0';

3636 (
yy_hﬁd_ch¨
Ë*++(
yy_c_buf_p
);

3638 i‡–
c
 == '\n' )

3640 
yylöío
++;

3643  
c
;

3644 
	}
}

3652 
	$yyª°¨t
 (
FILE
 * 
öput_fûe
 )

3655 i‡–! 
YY_CURRENT_BUFFER
 ){

3656 
	`yyísuª_buf„r_°ack
 ();

3657 
YY_CURRENT_BUFFER_LVALUE
 =

3658 
	`yy_¸óã_buf„r
–
yyö
, 
YY_BUF_SIZE
 );

3661 
	`yy_öô_buf„r
–
YY_CURRENT_BUFFER
, 
öput_fûe
 );

3662 
	`yy_lﬂd_buf„r_°©e
( );

3663 
	}
}

3669 
	$yy_swôch_to_buf„r
 (
YY_BUFFER_STATE
 
√w_buf„r
 )

3677 
	`yyísuª_buf„r_°ack
 ();

3678 i‡–
YY_CURRENT_BUFFER
 =
√w_buf„r
 )

3681 i‡–
YY_CURRENT_BUFFER
 )

3684 *(
yy_c_buf_p
Ë(
yy_hﬁd_ch¨
);

3685 
YY_CURRENT_BUFFER_LVALUE
->
yy_buf_pos
 = (
yy_c_buf_p
);

3686 
YY_CURRENT_BUFFER_LVALUE
->
yy_n_ch¨s
 = (yy_n_chars);

3689 
YY_CURRENT_BUFFER_LVALUE
 = 
√w_buf„r
;

3690 
	`yy_lﬂd_buf„r_°©e
( );

3697 (
yy_did_buf„r_swôch_⁄_eof
) = 1;

3698 
	}
}

3700 
	$yy_lﬂd_buf„r_°©e
 ()

3702 (
yy_n_ch¨s
Ë
YY_CURRENT_BUFFER_LVALUE
->yy_n_chars;

3703 (
yyãxt_±r
Ë(
yy_c_buf_p
Ë
YY_CURRENT_BUFFER_LVALUE
->
yy_buf_pos
;

3704 
yyö
 = 
YY_CURRENT_BUFFER_LVALUE
->
yy_öput_fûe
;

3705 (
yy_hﬁd_ch¨
Ë*(
yy_c_buf_p
);

3706 
	}
}

3714 
YY_BUFFER_STATE
 
	$yy_¸óã_buf„r
 (
FILE
 * 
fûe
, 
size
 )

3716 
YY_BUFFER_STATE
 
b
;

3718 
b
 = (
YY_BUFFER_STATE
Ë
	`yyÆloc
––
yy_buf„r_°©e
 ) );

3719 i‡–! 
b
 )

3720 
	`YY_FATAL_ERROR
( "out of dynamic memory in yy_create_buffer()" );

3722 
b
->
yy_buf_size
 = 
size
;

3727 
b
->
yy_ch_buf
 = (*Ë
	`yyÆloc
–(
yy_size_t
Ë(b->
yy_buf_size
 + 2) );

3728 i‡–! 
b
->
yy_ch_buf
 )

3729 
	`YY_FATAL_ERROR
( "out of dynamic memory in yy_create_buffer()" );

3731 
b
->
yy_is_our_buf„r
 = 1;

3733 
	`yy_öô_buf„r
–
b
, 
fûe
 );

3735  
b
;

3736 
	}
}

3742 
	$yy_dñëe_buf„r
 (
YY_BUFFER_STATE
 
b
 )

3745 i‡–! 
b
 )

3748 i‡–
b
 =
YY_CURRENT_BUFFER
 )

3749 
YY_CURRENT_BUFFER_LVALUE
 = (
YY_BUFFER_STATE
) 0;

3751 i‡–
b
->
yy_is_our_buf„r
 )

3752 
	`yy‰ì
–(*Ë
b
->
yy_ch_buf
 );

3754 
	`yy‰ì
–(*Ë
b
 );

3755 
	}
}

3761 
	$yy_öô_buf„r
 (
YY_BUFFER_STATE
 
b
, 
FILE
 * 
fûe
 )

3764 
€ºno
 = 
î∫o
;

3766 
	`yy_Êush_buf„r
–
b
 );

3768 
b
->
yy_öput_fûe
 = 
fûe
;

3769 
b
->
yy_fûl_buf„r
 = 1;

3775 i‡(
b
 !
YY_CURRENT_BUFFER
){

3776 
b
->
yy_bs_löío
 = 1;

3777 
b
->
yy_bs_cﬁumn
 = 0;

3780 
b
->
yy_is_öãø˘ive
 = 0;

3782 
î∫o
 = 
€ºno
;

3783 
	}
}

3789 
	$yy_Êush_buf„r
 (
YY_BUFFER_STATE
 
b
 )

3791 i‡–! 
b
 )

3794 
b
->
yy_n_ch¨s
 = 0;

3800 
b
->
yy_ch_buf
[0] = 
YY_END_OF_BUFFER_CHAR
;

3801 
b
->
yy_ch_buf
[1] = 
YY_END_OF_BUFFER_CHAR
;

3803 
b
->
yy_buf_pos
 = &b->
yy_ch_buf
[0];

3805 
b
->
yy_©_bﬁ
 = 1;

3806 
b
->
yy_buf„r_°©us
 = 
YY_BUFFER_NEW
;

3808 i‡–
b
 =
YY_CURRENT_BUFFER
 )

3809 
	`yy_lﬂd_buf„r_°©e
( );

3810 
	}
}

3818 
	$yypush_buf„r_°©e
 (
YY_BUFFER_STATE
 
√w_buf„r
 )

3820 i‡(
√w_buf„r
 =
NULL
)

3823 
	`yyísuª_buf„r_°ack
();

3826 i‡–
YY_CURRENT_BUFFER
 )

3829 *(
yy_c_buf_p
Ë(
yy_hﬁd_ch¨
);

3830 
YY_CURRENT_BUFFER_LVALUE
->
yy_buf_pos
 = (
yy_c_buf_p
);

3831 
YY_CURRENT_BUFFER_LVALUE
->
yy_n_ch¨s
 = (yy_n_chars);

3835 i‡(
YY_CURRENT_BUFFER
)

3836 (
yy_buf„r_°ack_t›
)++;

3837 
YY_CURRENT_BUFFER_LVALUE
 = 
√w_buf„r
;

3840 
	`yy_lﬂd_buf„r_°©e
( );

3841 (
yy_did_buf„r_swôch_⁄_eof
) = 1;

3842 
	}
}

3848 
	$yyp›_buf„r_°©e
 ()

3850 i‡(!
YY_CURRENT_BUFFER
)

3853 
	`yy_dñëe_buf„r
(
YY_CURRENT_BUFFER
 );

3854 
YY_CURRENT_BUFFER_LVALUE
 = 
NULL
;

3855 i‡((
yy_buf„r_°ack_t›
) > 0)

3856 --(
yy_buf„r_°ack_t›
);

3858 i‡(
YY_CURRENT_BUFFER
) {

3859 
	`yy_lﬂd_buf„r_°©e
( );

3860 (
yy_did_buf„r_swôch_⁄_eof
) = 1;

3862 
	}
}

3867 
	$yyísuª_buf„r_°ack
 ()

3869 
yy_size_t
 
num_to_Æloc
;

3871 i‡(!(
yy_buf„r_°ack
)) {

3877 
num_to_Æloc
 = 1;

3878 (
yy_buf„r_°ack
Ë(
yy_buf„r_°©e
**)
yyÆloc


3879 (
num_to_Æloc
 * (
yy_buf„r_°©e
*)

3881 i‡–! (
yy_buf„r_°ack
) )

3882 
	`YY_FATAL_ERROR
( "out of dynamic memory in yyensure_buffer_stack()" );

3884 
	`mem£t
((
yy_buf„r_°ack
), 0, 
num_to_Æloc
 * (
yy_buf„r_°©e
*));

3886 (
yy_buf„r_°ack_max
Ë
num_to_Æloc
;

3887 (
yy_buf„r_°ack_t›
) = 0;

3891 i‡((
yy_buf„r_°ack_t›
Ë>((
yy_buf„r_°ack_max
)) - 1){

3894 
yy_size_t
 
grow_size
 = 8 ;

3896 
num_to_Æloc
 = (
yy_buf„r_°ack_max
Ë+ 
grow_size
;

3897 (
yy_buf„r_°ack
Ë(
yy_buf„r_°©e
**)
yyªÆloc


3898 ((
yy_buf„r_°ack
),

3899 
num_to_Æloc
 * (
yy_buf„r_°©e
*)

3901 i‡–! (
yy_buf„r_°ack
) )

3902 
	`YY_FATAL_ERROR
( "out of dynamic memory in yyensure_buffer_stack()" );

3905 
	`mem£t
((
yy_buf„r_°ack
Ë+ (
yy_buf„r_°ack_max
), 0, 
grow_size
 * (
yy_buf„r_°©e
*));

3906 (
yy_buf„r_°ack_max
Ë
num_to_Æloc
;

3908 
	}
}

3916 
YY_BUFFER_STATE
 
	$yy_sˇn_buf„r
 (* 
ba£
, 
yy_size_t
 
size
 )

3918 
YY_BUFFER_STATE
 
b
;

3920 i‡–
size
 < 2 ||

3921 
ba£
[
size
-2] !
YY_END_OF_BUFFER_CHAR
 ||

3922 
ba£
[
size
-1] !
YY_END_OF_BUFFER_CHAR
 )

3924  
NULL
;

3926 
b
 = (
YY_BUFFER_STATE
Ë
	`yyÆloc
––
yy_buf„r_°©e
 ) );

3927 i‡–! 
b
 )

3928 
	`YY_FATAL_ERROR
( "out of dynamic memory in yy_scan_buffer()" );

3930 
b
->
yy_buf_size
 = (Ë(
size
 - 2);

3931 
b
->
yy_buf_pos
 = b->
yy_ch_buf
 = 
ba£
;

3932 
b
->
yy_is_our_buf„r
 = 0;

3933 
b
->
yy_öput_fûe
 = 
NULL
;

3934 
b
->
yy_n_ch¨s
 = b->
yy_buf_size
;

3935 
b
->
yy_is_öãø˘ive
 = 0;

3936 
b
->
yy_©_bﬁ
 = 1;

3937 
b
->
yy_fûl_buf„r
 = 0;

3938 
b
->
yy_buf„r_°©us
 = 
YY_BUFFER_NEW
;

3940 
	`yy_swôch_to_buf„r
–
b
 );

3942  
b
;

3943 
	}
}

3953 
YY_BUFFER_STATE
 
	$yy_sˇn_°rög
 (c⁄° * 
yy°r
 )

3956  
	`yy_sˇn_byãs
–
yy°r
, (Ë
	`°æí
(yystr) );

3957 
	}
}

3966 
YY_BUFFER_STATE
 
	$yy_sˇn_byãs
 (c⁄° * 
yybyãs
, 
_yybyãs_Àn
 )

3968 
YY_BUFFER_STATE
 
b
;

3969 *
buf
;

3970 
yy_size_t
 
n
;

3971 
i
;

3974 
n
 = (
yy_size_t
Ë(
_yybyãs_Àn
 + 2);

3975 
buf
 = (*Ë
	`yyÆloc
–
n
 );

3976 i‡–! 
buf
 )

3977 
	`YY_FATAL_ERROR
( "out of dynamic memory in yy_scan_bytes()" );

3979  
i
 = 0; i < 
_yybyãs_Àn
; ++i )

3980 
buf
[
i
] = 
yybyãs
[i];

3982 
buf
[
_yybyãs_Àn
] = buf[_yybyãs_Àn+1] = 
YY_END_OF_BUFFER_CHAR
;

3984 
b
 = 
	`yy_sˇn_buf„r
–
buf
, 
n
 );

3985 i‡–! 
b
 )

3986 
	`YY_FATAL_ERROR
( "bad buffer in yy_scan_bytes()" );

3991 
b
->
yy_is_our_buf„r
 = 1;

3993  
b
;

3994 
	}
}

3996 #i‚de‡
YY_EXIT_FAILURE


3997 
	#YY_EXIT_FAILURE
 2

	)

4000 
yyn‹ëu∫
 
	$yy_Áèl_îr‹
 (c⁄° * 
msg
 )

4002 
	`Ârötf
–
°dîr
, "%s\n", 
msg
 );

4003 
	`exô
–
YY_EXIT_FAILURE
 );

4004 
	}
}

4008 #unde‡
yyÀss


4009 
	#yyÀss
(
n
) \

4013 
yyÀss_ma¸o_¨g
 = (
n
); \

4014 
	`YY_LESS_LINENO
(
yyÀss_ma¸o_¨g
);\

4015 
yyãxt
[
yyÀng
] = (
yy_hﬁd_ch¨
); \

4016 (
yy_c_buf_p
Ë
yyãxt
 + 
yyÀss_ma¸o_¨g
; \

4017 (
yy_hﬁd_ch¨
Ë*(
yy_c_buf_p
); \

4018 *(
yy_c_buf_p
) = '\0'; \

4019 
yyÀng
 = 
yyÀss_ma¸o_¨g
; \

4021  0 )

	)

4028 
	$yygë_löío
 ()

4031  
yylöío
;

4032 
	}
}

4037 
FILE
 *
	$yygë_ö
 ()

4039  
yyö
;

4040 
	}
}

4045 
FILE
 *
	$yygë_out
 ()

4047  
yyout
;

4048 
	}
}

4053 
	$yygë_Àng
 ()

4055  
yyÀng
;

4056 
	}
}

4062 *
	$yygë_ãxt
 ()

4064  
yyãxt
;

4065 
	}
}

4071 
	$yy£t_löío
 (
_löe_numbî
 )

4074 
yylöío
 = 
_löe_numbî
;

4075 
	}
}

4083 
	$yy£t_ö
 (
FILE
 * 
_ö_°r
 )

4085 
yyö
 = 
_ö_°r
 ;

4086 
	}
}

4088 
	$yy£t_out
 (
FILE
 * 
_out_°r
 )

4090 
yyout
 = 
_out_°r
 ;

4091 
	}
}

4093 
	$yygë_debug
 ()

4095  
yy_Êex_debug
;

4096 
	}
}

4098 
	$yy£t_debug
 (
_bdebug
 )

4100 
yy_Êex_debug
 = 
_bdebug
 ;

4101 
	}
}

4103 
	$yy_öô_globÆs
 ()

4110 
yylöío
 = 1;

4112 (
yy_buf„r_°ack
Ë
NULL
;

4113 (
yy_buf„r_°ack_t›
) = 0;

4114 (
yy_buf„r_°ack_max
) = 0;

4115 (
yy_c_buf_p
Ë
NULL
;

4116 (
yy_öô
) = 0;

4117 (
yy_°¨t
) = 0;

4120 #ifde‡
YY_STDINIT


4121 
yyö
 = 
°dö
;

4122 
yyout
 = 
°dout
;

4124 
yyö
 = 
NULL
;

4125 
yyout
 = 
NULL
;

4132 
	}
}

4135 
	$yyÀx_de°roy
 ()

4139 
YY_CURRENT_BUFFER
){

4140 
	`yy_dñëe_buf„r
–
YY_CURRENT_BUFFER
 );

4141 
YY_CURRENT_BUFFER_LVALUE
 = 
NULL
;

4142 
	`yyp›_buf„r_°©e
();

4146 
	`yy‰ì
((
yy_buf„r_°ack
) );

4147 (
yy_buf„r_°ack
Ë
NULL
;

4151 
	`yy_öô_globÆs
( );

4154 
	}
}

4160 #i‚de‡
yyãxt_±r


4161 
	$yy_Êex_°∫˝y
 (* 
s1
, c⁄° * 
s2
, 
n
 )

4164 
i
;

4165  
i
 = 0; i < 
n
; ++i )

4166 
s1
[
i
] = 
s2
[i];

4167 
	}
}

4170 #ifde‡
YY_NEED_STRLEN


4171 
	$yy_Êex_°æí
 (c⁄° * 
s
 )

4173 
n
;

4174  
n
 = 0; 
s
[n]; ++n )

4177  
n
;

4178 
	}
}

4181 *
	$yyÆloc
 (
yy_size_t
 
size
 )

4183  
	`mÆloc
(
size
);

4184 
	}
}

4186 *
	$yyªÆloc
 (* 
±r
, 
yy_size_t
 
size
 )

4196  
	`ªÆloc
(
±r
, 
size
);

4197 
	}
}

4199 
	$yy‰ì
 (* 
±r
 )

4201 
	`‰ì
–(*Ë
±r
 );

4202 
	}
}

4204 
	#YYTABLES_NAME
 "yyèbÀs"

	)

4210 
	$yyÀx
()

4212 
tokí
;

4214 
ª≥©
:

4215 
tokí
 = 
	`yyÀx1
();

4217 i‡(
¥ev_tokí
 =
T_EOL
 ||Öªv_tokí =
T_HELPTEXT
) {

4218 i‡(
tokí
 =
T_EOL
) {

4220 
ª≥©
;

4228 
cuºít_pos
.
fûe
 = 
cuºít_fûe
;

4229 
cuºít_pos
.
löío
 = 
yylöío
;

4233 i‡(
¥ev_¥ev_tokí
 =
T_EOL
 && 
¥ev_tokí
 =
T_WORD
 &&

4234 (
tokí
 =
T_EQUAL
 ||Åokí =
T_COLON_EQUAL
 ||Åokí =
T_PLUS_EQUAL
))

4235 
	`BEGIN
(
ASSIGN_VAL
);

4237 
¥ev_¥ev_tokí
 = 
¥ev_tokí
;

4238 
¥ev_tokí
 = 
tokí
;

4240  
tokí
;

4241 
	}
}

4243 *
	$ex∑nd_tokí
(c⁄° *
ö
, 
size_t
 
n
)

4245 *
out
;

4246 
c
;

4247 
c2
;

4248 c⁄° *
ª°
, *
íd
;

4250 
	`√w_°rög
();

4251 
	`≠≥nd_°rög
(
ö
, 
n
);

4254 (
c
 = 
	`öput
()Ë!
EOF
) {

4255 i‡(
c
 == '\n') {

4256 
	`u≈ut
(
c
);

4259 
c2
 = 
c
;

4260 
	`≠≥nd_°rög
(&
c2
, 1);

4263 
ª°
 = 
ãxt
;

4264 
out
 = 
	`ex∑nd_⁄e_tokí
(&
ª°
);

4267 
íd
 = 
ª°
 + 
	`°æí
(rest);

4268 
íd
 > 
ª°
)

4269 
	`u≈ut
(*--
íd
);

4271 
	`‰ì
(
ãxt
);

4273  
out
;

4274 
	}
}

4276 
	$≠≥nd_ex∑nded_°rög
(c⁄° *
°r
)

4278 c⁄° *
íd
;

4279 *
ªs
;

4281 
°r
++;

4283 
ªs
 = 
	`ex∑nd_dﬁœr
(&
°r
);

4286 
íd
 = 
°r
 + 
	`°æí
(str);

4287 
íd
 > 
°r
)

4288 
	`u≈ut
(*--
íd
);

4290 
	`≠≥nd_°rög
(
ªs
, 
	`°æí
(res));

4292 
	`‰ì
(
ªs
);

4293 
	}
}

4295 
	$zc⁄f_°¨thñp
()

4297 
	`√w_°rög
();

4298 
œ°_ts
 = 
fú°_ts
 = 0;

4299 
	`BEGIN
(
HELP
);

4300 
	}
}

4302 
	$zc⁄f_ídhñp
()

4304 
yylvÆ
.
°rög
 = 
ãxt
;

4305 
	`BEGIN
(
INITIAL
);

4306 
	}
}

4317 
FILE
 *
	$zc⁄f_f›í
(c⁄° *
«me
)

4319 *
ív
, 
fuŒ«me
[
PATH_MAX
+1];

4320 
FILE
 *
f
;

4322 
f
 = 
	`f›í
(
«me
, "r");

4323 i‡(!
f
 && 
«me
 !
NULL
 &&Çame[0] != '/') {

4324 
ív
 = 
	`gëív
(
SRCTREE
);

4325 i‡(
ív
) {

4326 
	`¢¥ötf
(
fuŒ«me
, (fullname),

4327 "%s/%s", 
ív
, 
«me
);

4328 
f
 = 
	`f›í
(
fuŒ«me
, "r");

4331  
f
;

4332 
	}
}

4334 
	$zc⁄f_öôsˇn
(c⁄° *
«me
)

4336 
yyö
 = 
	`zc⁄f_f›í
(
«me
);

4337 i‡(!
yyö
) {

4338 
	`Ârötf
(
°dîr
, "ˇn'àföd fûê%s\n", 
«me
);

4339 
	`exô
(1);

4342 
cuºít_buf
 = 
	`xmÆloc
((*current_buf));

4343 
	`mem£t
(
cuºít_buf
, 0, (*current_buf));

4345 
cuºít_fûe
 = 
	`fûe_lookup
(
«me
);

4346 
yylöío
 = 1;

4347 
	}
}

4349 
	$zc⁄f_√xtfûe
(c⁄° *
«me
)

4351 
fûe
 *
ôî
;

4352 
fûe
 *fûê
	`fûe_lookup
(
«me
);

4353 
buf„r
 *
buf
 = 
	`xmÆloc
((*buf));

4354 
	`mem£t
(
buf
, 0, (*buf));

4356 
cuºít_buf
->
°©e
 = 
YY_CURRENT_BUFFER
;

4357 
yyö
 = 
	`zc⁄f_f›í
(
fûe
->
«me
);

4358 i‡(!
yyö
) {

4359 
	`Ârötf
(
°dîr
, "%s:%d: can't open file \"%s\"\n",

4360 
	`zc⁄f_cu∫ame
(), 
	`zc⁄f_löío
(), 
fûe
->
«me
);

4361 
	`exô
(1);

4363 
	`yy_swôch_to_buf„r
(
	`yy_¸óã_buf„r
(
yyö
, 
YY_BUF_SIZE
));

4364 
buf
->
∑ª¡
 = 
cuºít_buf
;

4365 
cuºít_buf
 = 
buf
;

4367 
cuºít_fûe
->
löío
 = 
yylöío
;

4368 
fûe
->
∑ª¡
 = 
cuºít_fûe
;

4370 
ôî
 = 
cuºít_fûe
; iãr; iã∏ôî->
∑ª¡
) {

4371 i‡(!
	`°rcmp
(
ôî
->
«me
, 
fûe
->name)) {

4372 
	`Ârötf
(
°dîr
,

4375 " cuºíàfûê: %s\n", 
fûe
->
«me
);

4376 
ôî
 = 
fûe
;

4378 
ôî
 = iãr->
∑ª¡
;

4379 
	`Ârötf
(
°dîr
, " included from: %s:%d\n",

4380 
ôî
->
«me
, iãr->
löío
 - 1);

4381 } 
	`°rcmp
(
ôî
->
«me
, 
fûe
->name));

4382 
	`exô
(1);

4386 
yylöío
 = 1;

4387 
cuºít_fûe
 = 
fûe
;

4388 
	}
}

4390 
	$zc⁄f_ídfûe
()

4392 
buf„r
 *
∑ª¡
;

4394 
cuºít_fûe
 = cuºít_fûe->
∑ª¡
;

4395 i‡(
cuºít_fûe
)

4396 
yylöío
 = 
cuºít_fûe
->
löío
;

4398 
∑ª¡
 = 
cuºít_buf
->parent;

4399 i‡(
∑ª¡
) {

4400 
	`f˛o£
(
yyö
);

4401 
	`yy_dñëe_buf„r
(
YY_CURRENT_BUFFER
);

4402 
	`yy_swôch_to_buf„r
(
∑ª¡
->
°©e
);

4404 
	`‰ì
(
cuºít_buf
);

4405 
cuºít_buf
 = 
∑ª¡
;

4406 
	}
}

4408 
	$zc⁄f_löío
()

4410  
cuºít_pos
.
löío
;

4411 
	}
}

4413 c⁄° *
	$zc⁄f_cu∫ame
()

4415  
cuºít_pos
.
fûe
 ? cuºít_pos.fûe->
«me
 : "<none>";

4416 
	}
}

	@nemu/tools/kconfig/build/parser.tab.c

48 
	#YYBISON
 1

	)

51 
	#YYBISON_VERSION
 "3.5.1"

	)

54 
	#YYSKELETON_NAME
 "yacc.c"

	)

57 
	#YYPURE
 0

	)

60 
	#YYPUSH
 0

	)

63 
	#YYPULL
 1

	)

72 
	~<˘y≥.h
>

73 
	~<°d¨g.h
>

74 
	~<°dio.h
>

75 
	~<°dlib.h
>

76 
	~<°rög.h
>

77 
	~<°dboﬁ.h
>

79 
	~"lkc.h
"

81 
	#¥ötd
(
mask
, 
fmt
...Ëi‡(
cdebug
 & (mask)Ë
	`¥ötf
(fmt)

	)

83 
	#PRINTD
 0x0001

	)

84 
	#DEBUG_PARSE
 0x0002

	)

86 
	gcdebug
 = 
PRINTD
;

88 
yyîr‹
(c⁄° *
îr
);

89 
zc⁄Âröt
(c⁄° *
îr
, ...);

90 
zc⁄f_îr‹
(c⁄° *
îr
, ...);

91 
boﬁ
 
zc⁄f_ídtokí
(c⁄° *
tokí«me
,

92 c⁄° *
ex≥˘ed_tokí«me
);

94 
symbﬁ
 *
	gsymbﬁ_hash
[
SYMBOL_HASHSIZE
];

96 
míu
 *
	gcuºít_míu
, *
	gcuºít_íåy
;

101 #i‚de‡
YY_CAST


102 #ifde‡
__˝lu•lus


103 
	#YY_CAST
(
Ty≥
, 
VÆ
Ë
°©ic_ˇ°
<Ty≥> (VÆ)

	)

104 
	#YY_REINTERPRET_CAST
(
Ty≥
, 
VÆ
Ë
ªöãΩªt_ˇ°
<Ty≥> (VÆ)

	)

106 
	#YY_CAST
(
Ty≥
, 
VÆ
Ë((Ty≥Ë(VÆ))

	)

107 
	#YY_REINTERPRET_CAST
(
Ty≥
, 
VÆ
Ë((Ty≥Ë(VÆ))

	)

110 #i‚de‡
YY_NULLPTR


111 #i‡
deföed
 
__˝lu•lus


112 #i‡201103L <
__˝lu•lus


113 
	#YY_NULLPTR
 
nuŒ±r


	)

115 
	#YY_NULLPTR
 0

	)

118 
	#YY_NULLPTR
 ((*)0)

	)

123 #ifde‡
YYERROR_VERBOSE


124 #unde‡
YYERROR_VERBOSE


125 
	#YYERROR_VERBOSE
 1

	)

127 
	#YYERROR_VERBOSE
 0

	)

132 #i‚de‡
YY_YY_BUILD_PARSER_TAB_H_INCLUDED


133 
	#YY_YY_BUILD_PARSER_TAB_H_INCLUDED


	)

135 #i‚de‡
YYDEBUG


136 
	#YYDEBUG
 0

	)

138 #i‡
YYDEBUG


139 
yydebug
;

143 #i‚de‡
YYTOKENTYPE


144 
	#YYTOKENTYPE


	)

145 
	eyytokíty≥


147 
	mT_HELPTEXT
 = 258,

148 
	mT_WORD
 = 259,

149 
	mT_WORD_QUOTE
 = 260,

150 
	mT_ALLNOCONFIG_Y
 = 261,

151 
	mT_BOOL
 = 262,

152 
	mT_CHOICE
 = 263,

153 
	mT_CLOSE_PAREN
 = 264,

154 
	mT_COLON_EQUAL
 = 265,

155 
	mT_COMMENT
 = 266,

156 
	mT_CONFIG
 = 267,

157 
	mT_DEFAULT
 = 268,

158 
	mT_DEFCONFIG_LIST
 = 269,

159 
	mT_DEF_BOOL
 = 270,

160 
	mT_DEF_TRISTATE
 = 271,

161 
	mT_DEPENDS
 = 272,

162 
	mT_ENDCHOICE
 = 273,

163 
	mT_ENDIF
 = 274,

164 
	mT_ENDMENU
 = 275,

165 
	mT_HELP
 = 276,

166 
	mT_HEX
 = 277,

167 
	mT_IF
 = 278,

168 
	mT_IMPLY
 = 279,

169 
	mT_INT
 = 280,

170 
	mT_MAINMENU
 = 281,

171 
	mT_MENU
 = 282,

172 
	mT_MENUCONFIG
 = 283,

173 
	mT_MODULES
 = 284,

174 
	mT_ON
 = 285,

175 
	mT_OPEN_PAREN
 = 286,

176 
	mT_OPTION
 = 287,

177 
	mT_OPTIONAL
 = 288,

178 
	mT_PLUS_EQUAL
 = 289,

179 
	mT_PROMPT
 = 290,

180 
	mT_RANGE
 = 291,

181 
	mT_SELECT
 = 292,

182 
	mT_SOURCE
 = 293,

183 
	mT_STRING
 = 294,

184 
	mT_TRISTATE
 = 295,

185 
	mT_VISIBLE
 = 296,

186 
	mT_EOL
 = 297,

187 
	mT_ASSIGN_VAL
 = 298,

188 
	mT_OR
 = 299,

189 
	mT_AND
 = 300,

190 
	mT_EQUAL
 = 301,

191 
	mT_UNEQUAL
 = 302,

192 
	mT_LESS
 = 303,

193 
	mT_LESS_EQUAL
 = 304,

194 
	mT_GREATER
 = 305,

195 
	mT_GREATER_EQUAL
 = 306,

196 
	mT_NOT
 = 307

201 #i‡! 
deföed
 
YYSTYPE
 && ! deföed 
YYSTYPE_IS_DECLARED


202 
	uYYSTYPE


206 *
	m°rög
;

207 
symbﬁ
 *
	msymbﬁ
;

208 
ex¥
 *
	mex¥
;

209 
míu
 *
	mmíu
;

210 
symbﬁ_ty≥
 
	mty≥
;

211 
v¨übÀ_Êav‹
 
	mÊav‹
;

216 
YYSTYPE
 
	tYYSTYPE
;

217 
	#YYSTYPE_IS_TRIVIAL
 1

	)

218 
	#YYSTYPE_IS_DECLARED
 1

	)

222 
YYSTYPE
 
yylvÆ
;

224 
yy∑r£
 ();

238 #i‚de‡
__PTRDIFF_MAX__


239 
	~<limôs.h
>

240 #i‡
deföed
 
__STDC_VERSION__
 && 199901 <= __STDC_VERSION__

241 
	~<°döt.h
>

242 
	#YY_STDINT_H


	)

251 #ifde‡
__INT_LEAST8_MAX__


252 
__INT_LEAST8_TYPE__
 
	tyyty≥_öt8
;

253 #ñi‡
deföed
 
YY_STDINT_H


254 
öt_Àa°8_t
 
	tyyty≥_öt8
;

256 sig√d 
	tyyty≥_öt8
;

259 #ifde‡
__INT_LEAST16_MAX__


260 
__INT_LEAST16_TYPE__
 
	tyyty≥_öt16
;

261 #ñi‡
deföed
 
YY_STDINT_H


262 
öt_Àa°16_t
 
	tyyty≥_öt16
;

264 
	tyyty≥_öt16
;

267 #i‡
deföed
 
__UINT_LEAST8_MAX__
 && __UINT_LEAST8_MAX__ <
__INT_MAX__


268 
__UINT_LEAST8_TYPE__
 
	tyyty≥_uöt8
;

269 #ñi‡(!
deföed
 
__UINT_LEAST8_MAX__
 && deföed 
YY_STDINT_H
 \

270 && 
	gUINT_LEAST8_MAX
 <
INT_MAX
)

271 
uöt_Àa°8_t
 
	tyyty≥_uöt8
;

272 #ñi‡!
deföed
 
__UINT_LEAST8_MAX__
 && 
UCHAR_MAX
 <
INT_MAX


273 
	tyyty≥_uöt8
;

275 
	tyyty≥_uöt8
;

278 #i‡
deföed
 
__UINT_LEAST16_MAX__
 && __UINT_LEAST16_MAX__ <
__INT_MAX__


279 
__UINT_LEAST16_TYPE__
 
	tyyty≥_uöt16
;

280 #ñi‡(!
deföed
 
__UINT_LEAST16_MAX__
 && deföed 
YY_STDINT_H
 \

281 && 
	gUINT_LEAST16_MAX
 <
INT_MAX
)

282 
uöt_Àa°16_t
 
	tyyty≥_uöt16
;

283 #ñi‡!
deföed
 
__UINT_LEAST16_MAX__
 && 
USHRT_MAX
 <
INT_MAX


284 
	tyyty≥_uöt16
;

286 
	tyyty≥_uöt16
;

289 #i‚de‡
YYPTRDIFF_T


290 #i‡
deföed
 
__PTRDIFF_TYPE__
 && deföed 
__PTRDIFF_MAX__


291 
	#YYPTRDIFF_T
 
__PTRDIFF_TYPE__


	)

292 
	#YYPTRDIFF_MAXIMUM
 
__PTRDIFF_MAX__


	)

293 #ñi‡
deföed
 
PTRDIFF_MAX


294 #i‚de‡
±rdiff_t


295 
	~<°ddef.h
>

297 
	#YYPTRDIFF_T
 
±rdiff_t


	)

298 
	#YYPTRDIFF_MAXIMUM
 
PTRDIFF_MAX


	)

300 
	#YYPTRDIFF_T
 

	)

301 
	#YYPTRDIFF_MAXIMUM
 
LONG_MAX


	)

305 #i‚de‡
YYSIZE_T


306 #ifde‡
__SIZE_TYPE__


307 
	#YYSIZE_T
 
__SIZE_TYPE__


	)

308 #ñi‡
deföed
 
size_t


309 
	#YYSIZE_T
 
size_t


	)

310 #ñi‡
deföed
 
__STDC_VERSION__
 && 199901 <= __STDC_VERSION__

311 
	~<°ddef.h
>

312 
	#YYSIZE_T
 
size_t


	)

314 
	#YYSIZE_T
 

	)

318 
	#YYSIZE_MAXIMUM
 \

319 
	`YY_CAST
 (
YYPTRDIFF_T
, \

320 (
YYPTRDIFF_MAXIMUM
 < 
	`YY_CAST
 (
YYSIZE_T
, -1) \

321 ? 
YYPTRDIFF_MAXIMUM
 \

322 : 
	`YY_CAST
 (
YYSIZE_T
, -1)))

	)

324 
	#YYSIZEOF
(
X
Ë
	`YY_CAST
 (
YYPTRDIFF_T
,  (X))

	)

327 
yyty≥_uöt8
 
	tyy_°©e_t
;

330 
	tyy_°©e_Á°_t
;

332 #i‚de‡
YY_


333 #i‡
deföed
 
YYENABLE_NLS
 && YYENABLE_NLS

334 #i‡
ENABLE_NLS


335 
	~<liböé.h
>

336 
	#YY_
(
Msgid
Ë
	`dgëãxt
 ("bis⁄-ru¡ime", Msgid)

	)

339 #i‚de‡
YY_


340 
	#YY_
(
Msgid
Ë
	)
Msgid

344 #i‚de‡
YY_ATTRIBUTE_PURE


345 #i‡
deföed
 
__GNUC__
 && 2 < __GNUC__ + (96 <
__GNUC_MINOR__
)

346 
	#YY_ATTRIBUTE_PURE
 
	`__©åibuã__
 ((
__puª__
))

	)

348 
	#YY_ATTRIBUTE_PURE


	)

352 #i‚de‡
YY_ATTRIBUTE_UNUSED


353 #i‡
deföed
 
__GNUC__
 && 2 < __GNUC__ + (7 <
__GNUC_MINOR__
)

354 
	#YY_ATTRIBUTE_UNUSED
 
	`__©åibuã__
 ((
__unu£d__
))

	)

356 
	#YY_ATTRIBUTE_UNUSED


	)

361 #i‡! 
deföed
 
löt
 || deföed 
__GNUC__


362 
	#YYUSE
(
E
Ë((Ë(E))

	)

364 
	#YYUSE
(
E
Ë

	)

367 #i‡
deföed
 
__GNUC__
 && ! deföed 
__ICC
 && 407 <__GNUC__ * 100 + 
__GNUC_MINOR__


369 
	#YY_IGNORE_MAYBE_UNINITIALIZED_BEGIN
 \

370 
	`_Pøgma
 ("GCC diagnosticÖush") \

371 
	`_Pøgma
 ("GCC diagnostic ignored \"-Wuninitialized\"") \

372 
	`_Pøgma
 ("GCC dügno°i¯ign‹ed \"-Wmaybe-unöôülized\"")

	)

373 
	#YY_IGNORE_MAYBE_UNINITIALIZED_END
 \

374 
	`_Pøgma
 ("GCC dügno°i¯p›")

	)

376 
	#YY_INITIAL_VALUE
(
VÆue
Ë
	)
VÆue

378 #i‚de‡
YY_IGNORE_MAYBE_UNINITIALIZED_BEGIN


379 
	#YY_IGNORE_MAYBE_UNINITIALIZED_BEGIN


	)

380 
	#YY_IGNORE_MAYBE_UNINITIALIZED_END


	)

382 #i‚de‡
YY_INITIAL_VALUE


383 
	#YY_INITIAL_VALUE
(
VÆue
Ë

	)

386 #i‡
deföed
 
__˝lu•lus
 && deföed 
__GNUC__
 && ! deföed 
__ICC
 && 6 <= __GNUC__

387 
	#YY_IGNORE_USELESS_CAST_BEGIN
 \

388 
	`_Pøgma
 ("GCC diagnosticÖush") \

389 
	`_Pøgma
 ("GCC dügno°i¯ign‹ed \"-Wu£Àss-ˇ°\"")

	)

390 
	#YY_IGNORE_USELESS_CAST_END
 \

391 
	`_Pøgma
 ("GCC dügno°i¯p›")

	)

393 #i‚de‡
YY_IGNORE_USELESS_CAST_BEGIN


394 
	#YY_IGNORE_USELESS_CAST_BEGIN


	)

395 
	#YY_IGNORE_USELESS_CAST_END


	)

399 
	#YY_ASSERT
(
E
Ë((Ë(0 && (E)))

	)

401 #i‡! 
deföed
 
yyovîÊow
 || 
YYERROR_VERBOSE


405 #ifde‡
YYSTACK_USE_ALLOCA


406 #i‡
YYSTACK_USE_ALLOCA


407 #ifde‡
__GNUC__


408 
	#YYSTACK_ALLOC
 
__buûtö_Æloˇ


	)

409 #ñi‡
deföed
 
__BUILTIN_VA_ARG_INCR


410 
	~<Æloˇ.h
>

411 #ñi‡
deföed
 
_AIX


412 
	#YYSTACK_ALLOC
 
__Æloˇ


	)

413 #ñi‡
deföed
 
_MSC_VER


414 
	~<mÆloc.h
>

415 
	#Æloˇ
 
_Æloˇ


	)

417 
	#YYSTACK_ALLOC
 
Æloˇ


	)

418 #i‡! 
deföed
 
_ALLOCA_H
 && ! deföed 
EXIT_SUCCESS


419 
	~<°dlib.h
>

421 #i‚de‡
EXIT_SUCCESS


422 
	#EXIT_SUCCESS
 0

	)

429 #ifde‡
YYSTACK_ALLOC


431 
	#YYSTACK_FREE
(
På
Ëdÿ{ ; } 0)

	)

432 #i‚de‡
YYSTACK_ALLOC_MAXIMUM


437 
	#YYSTACK_ALLOC_MAXIMUM
 4032

	)

440 
	#YYSTACK_ALLOC
 
YYMALLOC


	)

441 
	#YYSTACK_FREE
 
YYFREE


	)

442 #i‚de‡
YYSTACK_ALLOC_MAXIMUM


443 
	#YYSTACK_ALLOC_MAXIMUM
 
YYSIZE_MAXIMUM


	)

445 #i‡(
deföed
 
__˝lu•lus
 && ! deföed 
EXIT_SUCCESS
 \

446 && ! ((
deföed
 
	gYYMALLOC
 || deföed 
	gmÆloc
) \

447 && (
deföed
 
	gYYFREE
 || deföed 
	g‰ì
)))

448 
	~<°dlib.h
>

449 #i‚de‡
EXIT_SUCCESS


450 
	#EXIT_SUCCESS
 0

	)

453 #i‚de‡
YYMALLOC


454 
	#YYMALLOC
 
mÆloc


	)

455 #i‡! 
deföed
 
mÆloc
 && ! deföed 
EXIT_SUCCESS


456 *
mÆloc
 (
YYSIZE_T
);

459 #i‚de‡
YYFREE


460 
	#YYFREE
 
‰ì


	)

461 #i‡! 
deföed
 
‰ì
 && ! deföed 
EXIT_SUCCESS


462 
‰ì
 (*);

469 #i‡(! 
deföed
 
yyovîÊow
 \

470 && (! 
deföed
 
	g__˝lu•lus
 \

471 || (
deföed
 
	gYYSTYPE_IS_TRIVIAL
 && YYSTYPE_IS_TRIVIAL)))

474 
	uyyÆloc


476 
yy_°©e_t
 
	myyss_Æloc
;

477 
YYSTYPE
 
	myyvs_Æloc
;

481 
	#YYSTACK_GAP_MAXIMUM
 (
	`YYSIZEOF
 (
yyÆloc
Ë- 1)

	)

485 
	#YYSTACK_BYTES
(
N
) \

486 ((
N
Ë* (
	`YYSIZEOF
 (
yy_°©e_t
Ë+ YYSIZEOF (
YYSTYPE
)) \

487 + 
YYSTACK_GAP_MAXIMUM
)

	)

489 
	#YYCOPY_NEEDED
 1

	)

496 
	#YYSTACK_RELOCATE
(
Sèck_Æloc
, 
Sèck
) \

499 
YYPTRDIFF_T
 
yy√wbyãs
; \

500 
	`YYCOPY
 (&
yy±r
->
Sèck_Æloc
, 
Sèck
, 
yysize
); \

501 
Sèck
 = &
yy±r
->
Sèck_Æloc
; \

502 
yy√wbyãs
 = 
yy°acksize
 * 
	`YYSIZEOF
 (*
Sèck
Ë+ 
YYSTACK_GAP_MAXIMUM
; \

503 
yy±r
 +
yy√wbyãs
 / 
	`YYSIZEOF
 (*yyptr); \

505 0)

	)

509 #i‡
deföed
 
YYCOPY_NEEDED
 && YYCOPY_NEEDED

512 #i‚de‡
YYCOPY


513 #i‡
deföed
 
__GNUC__
 && 1 < __GNUC__

514 
	#YYCOPY
(
D°
, 
Src
, 
Cou¡
) \

515 
	`__buûtö_mem˝y
 (
D°
, 
Src
, 
	`YY_CAST
 (
YYSIZE_T
, (
Cou¡
)Ë*  (*(Src)))

	)

517 
	#YYCOPY
(
D°
, 
Src
, 
Cou¡
) \

520 
YYPTRDIFF_T
 
yyi
; \

521 
yyi
 = 0; yyò< (
Cou¡
); yyi++) \

522 (
D°
)[
yyi
] = (
Src
)[yyi]; \

524 0)

	)

530 
	#YYFINAL
 6

	)

532 
	#YYLAST
 190

	)

535 
	#YYNTOKENS
 53

	)

537 
	#YYNNTS
 47

	)

539 
	#YYNRULES
 107

	)

541 
	#YYNSTATES
 189

	)

543 
	#YYUNDEFTOK
 2

	)

544 
	#YYMAXUTOK
 307

	)

549 
	#YYTRANSLATE
(
YYX
) \

550 (0 <(
YYX
Ë&& (YYXË<
YYMAXUTOK
 ? 
yyå™¶©e
[YYX] : 
YYUNDEFTOK
)

	)

554 c⁄° 
yyty≥_öt8
 
	gyyå™¶©e
[] =

589 #i‡
YYDEBUG


591 c⁄° 
yyty≥_öt16
 
	gyyæöe
[] =

607 #i‡
YYDEBUG
 || 
YYERROR_VERBOSE
 || 0

610 c⁄° *c⁄° 
	gyyäame
[] =

632 "assign_vÆ", 
YY_NULLPTR


636 #ifde‡
YYPRINT


639 c⁄° 
yyty≥_öt16
 
	gyytoknum
[] =

650 
	#YYPACT_NINF
 (-64)

	)

652 
	#yy∑˘_vÆue_is_deÁu…
(
Yyn
) \

653 ((
Yyn
Ë=
YYPACT_NINF
)

	)

655 
	#YYTABLE_NINF
 (-4)

	)

657 
	#yyèbÀ_vÆue_is_îr‹
(
Yyn
) \

658 0

	)

662 c⁄° 
yyty≥_öt16
 
	gyy∑˘
[] =

688 c⁄° 
yyty≥_öt8
 
	gyydeÁ˘
[] =

712 c⁄° 
yyty≥_öt16
 
	gyypgŸo
[] =

722 c⁄° 
yyty≥_öt16
 
	gyydefgŸo
[] =

734 c⁄° 
yyty≥_öt16
 
	gyyèbÀ
[] =

758 c⁄° 
yyty≥_öt16
 
	gyycheck
[] =

784 c⁄° 
yyty≥_öt8
 
	gyy°os
[] =

808 c⁄° 
yyty≥_öt8
 
	gyyr1
[] =

824 c⁄° 
yyty≥_öt8
 
	gyyr2
[] =

840 
	#yyîrok
 (
yyîr°©us
 = 0)

	)

841 
	#yy˛órö
 (
yych¨
 = 
YYEMPTY
)

	)

842 
	#YYEMPTY
 (-2)

	)

843 
	#YYEOF
 0

	)

845 
	#YYACCEPT
 
yyac˚±œb


	)

846 
	#YYABORT
 
yyab‹éab


	)

847 
	#YYERROR
 
yyîr‹œb


	)

850 
	#YYRECOVERING
(Ë(!!
yyîr°©us
)

	)

852 
	#YYBACKUP
(
Tokí
, 
VÆue
) \

854 i‡(
yych¨
 =
YYEMPTY
) \

856 
yych¨
 = (
Tokí
); \

857 
yylvÆ
 = (
VÆue
); \

858 
	`YYPOPSTACK
 (
yyÀn
); \

859 
yy°©e
 = *
yys•
; \

860 
yybackup
; \

864 
	`yyîr‹
 (
	`YY_
("syntaxÉrror: cannot back up")); \

865 
YYERROR
; \

867 0)

	)

870 
	#YYTERROR
 1

	)

871 
	#YYERRCODE
 256

	)

876 #i‡
YYDEBUG


878 #i‚de‡
YYFPRINTF


879 
	~<°dio.h
>

880 
	#YYFPRINTF
 
Ârötf


	)

883 
	#YYDPRINTF
(
Args
) \

885 i‡(
yydebug
) \

886 
YYFPRINTF
 
Args
; \

887 } 0)

	)

890 #i‚de‡
YY_LOCATION_PRINT


891 
	#YY_LOCATION_PRINT
(
Fûe
, 
Loc
Ë((Ë0)

	)

895 
	#YY_SYMBOL_PRINT
(
TôÀ
, 
Ty≥
, 
VÆue
, 
Loˇti⁄
) \

897 i‡(
yydebug
) \

899 
	`YYFPRINTF
 (
°dîr
, "%†", 
TôÀ
); \

900 
	`yy_symbﬁ_¥öt
 (
°dîr
, \

901 
Ty≥
, 
VÆue
); \

902 
	`YYFPRINTF
 (
°dîr
, "\n"); \

904 } 0)

	)

912 
	$yy_symbﬁ_vÆue_¥öt
 (
FILE
 *
yyo
, 
yyty≥
, 
YYSTYPE
 c⁄° * c⁄° 
yyvÆuï
)

914 
FILE
 *
yyouçut
 = 
yyo
;

915 
	`YYUSE
 (
yyouçut
);

916 i‡(!
yyvÆuï
)

918 #ifde‡
YYPRINT


919 i‡(
yyty≥
 < 
YYNTOKENS
)

920 
	`YYPRINT
 (
yyo
, 
yytoknum
[
yyty≥
], *
yyvÆuï
);

922 
YY_IGNORE_MAYBE_UNINITIALIZED_BEGIN


923 
	`YYUSE
 (
yyty≥
);

924 
YY_IGNORE_MAYBE_UNINITIALIZED_END


925 
	}
}

933 
	$yy_symbﬁ_¥öt
 (
FILE
 *
yyo
, 
yyty≥
, 
YYSTYPE
 c⁄° * c⁄° 
yyvÆuï
)

935 
	`YYFPRINTF
 (
yyo
, "%s %s (",

936 
yyty≥
 < 
YYNTOKENS
 ? "tokí" : "¡îm", 
yyäame
[yytype]);

938 
	`yy_symbﬁ_vÆue_¥öt
 (
yyo
, 
yyty≥
, 
yyvÆuï
);

939 
	`YYFPRINTF
 (
yyo
, ")");

940 
	}
}

948 
	$yy_°ack_¥öt
 (
yy_°©e_t
 *
yybŸtom
, yy_°©e_à*
yyt›
)

950 
	`YYFPRINTF
 (
°dîr
, "StackÇow");

951 ; 
yybŸtom
 <
yyt›
; yybottom++)

953 
yybŸ
 = *
yybŸtom
;

954 
	`YYFPRINTF
 (
°dîr
, " %d", 
yybŸ
);

956 
	`YYFPRINTF
 (
°dîr
, "\n");

957 
	}
}

959 
	#YY_STACK_PRINT
(
BŸtom
, 
T›
) \

961 i‡(
yydebug
) \

962 
	`yy_°ack_¥öt
 ((
BŸtom
), (
T›
)); \

963 } 0)

	)

971 
	$yy_ªdu˚_¥öt
 (
yy_°©e_t
 *
yys•
, 
YYSTYPE
 *
yyv•
, 
yyruÀ
)

973 
yy o
 = 
yyæöe
[
yyruÀ
];

974 
yyƒhs
 = 
yyr2
[
yyruÀ
];

975 
yyi
;

976 
	`YYFPRINTF
 (
°dîr
, "Reducing stack byÑule %d (line %d):\n",

977 
yyruÀ
 - 1, 
yy o
);

979 
yyi
 = 0; yyò< 
yyƒhs
; yyi++)

981 
	`YYFPRINTF
 (
°dîr
, " $%d = ", 
yyi
 + 1);

982 
	`yy_symbﬁ_¥öt
 (
°dîr
,

983 
yy°os
[+
yys•
[
yyi
 + 1 - 
yyƒhs
]],

984 &
yyv•
[(
yyi
 + 1Ë- (
yyƒhs
)]

986 
	`YYFPRINTF
 (
°dîr
, "\n");

988 
	}
}

990 
	#YY_REDUCE_PRINT
(
RuÀ
) \

992 i‡(
yydebug
) \

993 
	`yy_ªdu˚_¥öt
 (
yys•
, 
yyv•
, 
RuÀ
); \

994 } 0)

	)

998 
	gyydebug
;

1000 
	#YYDPRINTF
(
Args
)

	)

1001 
	#YY_SYMBOL_PRINT
(
TôÀ
, 
Ty≥
, 
VÆue
, 
Loˇti⁄
)

	)

1002 
	#YY_STACK_PRINT
(
BŸtom
, 
T›
)

	)

1003 
	#YY_REDUCE_PRINT
(
RuÀ
)

	)

1008 #i‚de‡
YYINITDEPTH


1009 
	#YYINITDEPTH
 200

	)

1019 #i‚de‡
YYMAXDEPTH


1020 
	#YYMAXDEPTH
 10000

	)

1024 #i‡
YYERROR_VERBOSE


1026 #i‚de‡
yy°æí


1027 #i‡
deföed
 
__GLIBC__
 && deföed 
_STRING_H


1028 
	#yy°æí
(
S
Ë(
	`YY_CAST
 (
YYPTRDIFF_T
, 
	`°æí
 (S)))

	)

1031 
YYPTRDIFF_T


1032 
	$yy°æí
 (c⁄° *
yy°r
)

1034 
YYPTRDIFF_T
 
yyÀn
;

1035 
yyÀn
 = 0; 
yy°r
[yylen]; yylen++)

1037  
yyÀn
;

1038 
	}
}

1042 #i‚de‡
yy°p˝y


1043 #i‡
deföed
 
__GLIBC__
 && deföed 
_STRING_H
 && deföed 
_GNU_SOURCE


1044 
	#yy°p˝y
 
°p˝y


	)

1049 
	$yy°p˝y
 (*
yyde°
, c⁄° *
yy§c
)

1051 *
yyd
 = 
yyde°
;

1052 c⁄° *
yys
 = 
yy§c
;

1054 (*
yyd
++ = *
yys
++) != '\0')

1057  
yyd
 - 1;

1058 
	}
}

1062 #i‚de‡
yyäamîr


1070 
YYPTRDIFF_T


1071 
	$yyäamîr
 (*
yyªs
, c⁄° *
yy°r
)

1073 i‡(*
yy°r
 == '"')

1075 
YYPTRDIFF_T
 
yyn
 = 0;

1076 c⁄° *
yyp
 = 
yy°r
;

1079 *++
yyp
)

1083 
do_nŸ_°rù_quŸes
;

1086 i‡(*++
yyp
 != '\\')

1087 
do_nŸ_°rù_quŸes
;

1089 
≠≥nd
;

1091 
≠≥nd
:

1093 i‡(
yyªs
)

1094 
yyªs
[
yyn
] = *
yyp
;

1095 
yyn
++;

1099 i‡(
yyªs
)

1100 
yyªs
[
yyn
] = '\0';

1101  
yyn
;

1103 
do_nŸ_°rù_quŸes
: ;

1106 i‡(
yyªs
)

1107  
	`yy°p˝y
 (
yyªs
, 
yy°r
) - yyres;

1109  
	`yy°æí
 (
yy°r
);

1110 
	}
}

1122 
	$yysy¡ax_îr‹
 (
YYPTRDIFF_T
 *
yymsg_Æloc
, **
yymsg
,

1123 
yy_°©e_t
 *
yys•
, 
yytokí
)

1125 íum { 
YYERROR_VERBOSE_ARGS_MAXIMUM
 = 5 };

1127 c⁄° *
yyf‹m©
 = 
YY_NULLPTR
;

1130 c⁄° *
yy¨g
[
YYERROR_VERBOSE_ARGS_MAXIMUM
];

1132 
yycou¡
 = 0;

1134 
YYPTRDIFF_T
 
yysize
 = 0;

1159 i‡(
yytokí
 !
YYEMPTY
)

1161 
yyn
 = 
yy∑˘
[+*
yys•
];

1162 
YYPTRDIFF_T
 
yysize0
 = 
	`yyäamîr
 (
YY_NULLPTR
, 
yyäame
[
yytokí
]);

1163 
yysize
 = 
yysize0
;

1164 
yy¨g
[
yycou¡
++] = 
yyäame
[
yytokí
];

1165 i‡(!
	`yy∑˘_vÆue_is_deÁu…
 (
yyn
))

1170 
yyxbegö
 = 
yyn
 < 0 ? -yyn : 0;

1172 
yychecklim
 = 
YYLAST
 - 
yyn
 + 1;

1173 
yyxíd
 = 
yychecklim
 < 
YYNTOKENS
 ? yychecklim : YYNTOKENS;

1174 
yyx
;

1176 
yyx
 = 
yyxbegö
; yyx < 
yyxíd
; ++yyx)

1177 i‡(
yycheck
[
yyx
 + 
yyn
] =yyx && yyx !
YYTERROR


1178 && !
	`yyèbÀ_vÆue_is_îr‹
 (
yyèbÀ
[
yyx
 + 
yyn
]))

1180 i‡(
yycou¡
 =
YYERROR_VERBOSE_ARGS_MAXIMUM
)

1182 
yycou¡
 = 1;

1183 
yysize
 = 
yysize0
;

1186 
yy¨g
[
yycou¡
++] = 
yyäame
[
yyx
];

1188 
YYPTRDIFF_T
 
yysize1


1189 
yysize
 + 
	`yyäamîr
 (
YY_NULLPTR
, 
yyäame
[
yyx
]);

1190 i‡(
yysize
 <
yysize1
 && yysize1 <
YYSTACK_ALLOC_MAXIMUM
)

1191 
yysize
 = 
yysize1
;

1199 
yycou¡
)

1201 
	#YYCASE_
(
N
, 
S
) \

1202 
N
: \

1203 
yyf‹m©
 = 
S
; \

1204 

	)

1206 
	`YYCASE_
(0, 
	`YY_
("syntaxÉrror"));

1207 
	`YYCASE_
(1, 
	`YY_
("syntaxÉrror, unexpected %s"));

1208 
	`YYCASE_
(2, 
	`YY_
("syntaxÉrror, unexpected %s,Éxpecting %s"));

1209 
	`YYCASE_
(3, 
	`YY_
("syntaxÉrror, unexpected %s,Éxpecting %s or %s"));

1210 
	`YYCASE_
(4, 
	`YY_
("syntaxÉrror, unexpected %s,Éxpecting %s or %s or %s"));

1211 
	`YYCASE_
(5, 
	`YY_
("syntaxÉrror, unexpected %s,Éxpecting %s or %s or %s or %s"));

1212 #unde‡
YYCASE_


1218 
YYPTRDIFF_T
 
yysize1
 = 
yysize
 + (
	`yy°æí
 (
yyf‹m©
Ë- 2 * 
yycou¡
) + 1;

1219 i‡(
yysize
 <
yysize1
 && yysize1 <
YYSTACK_ALLOC_MAXIMUM
)

1220 
yysize
 = 
yysize1
;

1225 i‡(*
yymsg_Æloc
 < 
yysize
)

1227 *
yymsg_Æloc
 = 2 * 
yysize
;

1228 i‡(! (
yysize
 <*
yymsg_Æloc


1229 && *
yymsg_Æloc
 <
YYSTACK_ALLOC_MAXIMUM
))

1230 *
yymsg_Æloc
 = 
YYSTACK_ALLOC_MAXIMUM
;

1238 *
yyp
 = *
yymsg
;

1239 
yyi
 = 0;

1240 (*
yyp
 = *
yyf‹m©
) != '\0')

1241 i‡(*
yyp
 ='%' && 
yyf‹m©
[1] ='s' && 
yyi
 < 
yycou¡
)

1243 
yyp
 +
	`yyäamîr
 (yyp, 
yy¨g
[
yyi
++]);

1244 
yyf‹m©
 += 2;

1248 ++
yyp
;

1249 ++
yyf‹m©
;

1253 
	}
}

1261 
	$yyde°ru˘
 (c⁄° *
yymsg
, 
yyty≥
, 
YYSTYPE
 *
yyvÆuï
)

1263 
	`YYUSE
 (
yyvÆuï
);

1264 i‡(!
yymsg
)

1265 
yymsg
 = "Deleting";

1266 
	`YY_SYMBOL_PRINT
 (
yymsg
, 
yyty≥
, 
yyvÆuï
, 
yyloˇti⁄p
);

1268 
YY_IGNORE_MAYBE_UNINITIALIZED_BEGIN


1269 
yyty≥
)

1274 
	`Ârötf
(
°dîr
, "%s:%d: missingÉnd statement forÅhisÉntry\n",

1275 ((*
yyvÆuï
).
míu
)->
fûe
->
«me
, ((*yyvÆuï).míu)->
löío
);

1276 i‡(
cuºít_míu
 =((*
yyvÆuï
).
míu
))

1277 
	`míu_íd_míu
();

1285 
	`Ârötf
(
°dîr
, "%s:%d: missingÉnd statement forÅhisÉntry\n",

1286 ((*
yyvÆuï
).
míu
)->
fûe
->
«me
, ((*yyvÆuï).míu)->
löío
);

1287 i‡(
cuºít_míu
 =((*
yyvÆuï
).
míu
))

1288 
	`míu_íd_míu
();

1296 
	`Ârötf
(
°dîr
, "%s:%d: missingÉnd statement forÅhisÉntry\n",

1297 ((*
yyvÆuï
).
míu
)->
fûe
->
«me
, ((*yyvÆuï).míu)->
löío
);

1298 i‡(
cuºít_míu
 =((*
yyvÆuï
).
míu
))

1299 
	`míu_íd_míu
();

1307 
YY_IGNORE_MAYBE_UNINITIALIZED_END


1308 
	}
}

1314 
	gyych¨
;

1317 
YYSTYPE
 
	gyylvÆ
;

1319 
	gyy√ºs
;

1327 
	$yy∑r£
 ()

1329 
yy_°©e_Á°_t
 
yy°©e
;

1331 
yyîr°©us
;

1341 
yy_°©e_t
 
yysß
[
YYINITDEPTH
];

1342 
yy_°©e_t
 *
yyss
;

1343 
yy_°©e_t
 *
yys•
;

1346 
YYSTYPE
 
yyvß
[
YYINITDEPTH
];

1347 
YYSTYPE
 *
yyvs
;

1348 
YYSTYPE
 *
yyv•
;

1350 
YYPTRDIFF_T
 
yy°acksize
;

1352 
yyn
;

1353 
yyªsu…
;

1355 
yytokí
 = 0;

1358 
YYSTYPE
 
yyvÆ
;

1360 #i‡
YYERROR_VERBOSE


1362 
yymsgbuf
[128];

1363 *
yymsg
 = 
yymsgbuf
;

1364 
YYPTRDIFF_T
 
yymsg_Æloc
 =  
yymsgbuf
;

1367 
	#YYPOPSTACK
(
N
Ë(
yyv•
 -(N), 
yys•
 -(N))

	)

1371 
yyÀn
 = 0;

1373 
yys•
 = 
yyss
 = 
yysß
;

1374 
yyv•
 = 
yyvs
 = 
yyvß
;

1375 
yy°acksize
 = 
YYINITDEPTH
;

1377 
	`YYDPRINTF
 ((
°dîr
, "StartingÖarse\n"));

1379 
yy°©e
 = 0;

1380 
yyîr°©us
 = 0;

1381 
yy√ºs
 = 0;

1382 
yych¨
 = 
YYEMPTY
;

1383 
yy£t°©e
;

1389 
yy√w°©e
:

1392 
yys•
++;

1398 
yy£t°©e
:

1399 
	`YYDPRINTF
 ((
°dîr
, "E¡îög sèã %d\n", 
yy°©e
));

1400 
	`YY_ASSERT
 (0 <
yy°©e
 && yy°©ê< 
YYNSTATES
);

1401 
YY_IGNORE_USELESS_CAST_BEGIN


1402 *
yys•
 = 
	`YY_CAST
 (
yy_°©e_t
, 
yy°©e
);

1403 
YY_IGNORE_USELESS_CAST_END


1405 i‡(
yyss
 + 
yy°acksize
 - 1 <
yys•
)

1406 #i‡!
deföed
 
yyovîÊow
 && !deföed 
YYSTACK_RELOCATE


1407 
yyexhau°edœb
;

1411 
YYPTRDIFF_T
 
yysize
 = 
yys•
 - 
yyss
 + 1;

1413 #i‡
deföed
 
yyovîÊow


1418 
yy_°©e_t
 *
yyss1
 = 
yyss
;

1419 
YYSTYPE
 *
yyvs1
 = 
yyvs
;

1425 
	`yyovîÊow
 (
	`YY_
("memoryÉxhausted"),

1426 &
yyss1
, 
yysize
 * 
	`YYSIZEOF
 (*
yys•
),

1427 &
yyvs1
, 
yysize
 * 
	`YYSIZEOF
 (*
yyv•
),

1428 &
yy°acksize
);

1429 
yyss
 = 
yyss1
;

1430 
yyvs
 = 
yyvs1
;

1434 i‡(
YYMAXDEPTH
 <
yy°acksize
)

1435 
yyexhau°edœb
;

1436 
yy°acksize
 *= 2;

1437 i‡(
YYMAXDEPTH
 < 
yy°acksize
)

1438 
yy°acksize
 = 
YYMAXDEPTH
;

1441 
yy_°©e_t
 *
yyss1
 = 
yyss
;

1442 
yyÆloc
 *
yy±r
 =

1443 
	`YY_CAST
 (
yyÆloc
 *,

1444 
	`YYSTACK_ALLOC
 (
	`YY_CAST
 (
YYSIZE_T
, 
	`YYSTACK_BYTES
 (
yy°acksize
))));

1445 i‡(! 
yy±r
)

1446 
yyexhau°edœb
;

1447 
	`YYSTACK_RELOCATE
 (
yyss_Æloc
, 
yyss
);

1448 
	`YYSTACK_RELOCATE
 (
yyvs_Æloc
, 
yyvs
);

1449 #unde‡
YYSTACK_RELOCATE


1450 i‡(
yyss1
 !
yysß
)

1451 
	`YYSTACK_FREE
 (
yyss1
);

1455 
yys•
 = 
yyss
 + 
yysize
 - 1;

1456 
yyv•
 = 
yyvs
 + 
yysize
 - 1;

1458 
YY_IGNORE_USELESS_CAST_BEGIN


1459 
	`YYDPRINTF
 ((
°dîr
, "Stack size increasedÅo %ld\n",

1460 
	`YY_CAST
 (, 
yy°acksize
)));

1461 
YY_IGNORE_USELESS_CAST_END


1463 i‡(
yyss
 + 
yy°acksize
 - 1 <
yys•
)

1464 
YYABORT
;

1468 i‡(
yy°©e
 =
YYFINAL
)

1469 
YYACCEPT
;

1471 
yybackup
;

1477 
yybackup
:

1482 
yyn
 = 
yy∑˘
[
yy°©e
];

1483 i‡(
	`yy∑˘_vÆue_is_deÁu…
 (
yyn
))

1484 
yydeÁu…
;

1489 i‡(
yych¨
 =
YYEMPTY
)

1491 
	`YYDPRINTF
 ((
°dîr
, "ReadingáÅoken: "));

1492 
yych¨
 = 
	`yyÀx
 ();

1495 i‡(
yych¨
 <
YYEOF
)

1497 
yych¨
 = 
yytokí
 = 
YYEOF
;

1498 
	`YYDPRINTF
 ((
°dîr
, "NowátÉnd of input.\n"));

1502 
yytokí
 = 
	`YYTRANSLATE
 (
yych¨
);

1503 
	`YY_SYMBOL_PRINT
 ("Nexàtokí is", 
yytokí
, &
yylvÆ
, &
yyŒoc
);

1508 
yyn
 +
yytokí
;

1509 i‡(
yyn
 < 0 || 
YYLAST
 < yy¿|| 
yycheck
[yyn] !
yytokí
)

1510 
yydeÁu…
;

1511 
yyn
 = 
yyèbÀ
[yyn];

1512 i‡(
yyn
 <= 0)

1514 i‡(
	`yyèbÀ_vÆue_is_îr‹
 (
yyn
))

1515 
yyîæab
;

1516 
yyn
 = -yyn;

1517 
yyªdu˚
;

1522 i‡(
yyîr°©us
)

1523 
yyîr°©us
--;

1526 
	`YY_SYMBOL_PRINT
 ("Shi·ög", 
yytokí
, &
yylvÆ
, &
yyŒoc
);

1527 
yy°©e
 = 
yyn
;

1528 
YY_IGNORE_MAYBE_UNINITIALIZED_BEGIN


1529 *++
yyv•
 = 
yylvÆ
;

1530 
YY_IGNORE_MAYBE_UNINITIALIZED_END


1533 
yych¨
 = 
YYEMPTY
;

1534 
yy√w°©e
;

1540 
yydeÁu…
:

1541 
yyn
 = 
yydeÁ˘
[
yy°©e
];

1542 i‡(
yyn
 == 0)

1543 
yyîæab
;

1544 
yyªdu˚
;

1550 
yyªdu˚
:

1552 
yyÀn
 = 
yyr2
[
yyn
];

1562 
yyvÆ
 = 
yyv•
[1-
yyÀn
];

1565 
	`YY_REDUCE_PRINT
 (
yyn
);

1566 
yyn
)

1571 
	`míu_add_¥om±
(
P_MENU
, (
yyv•
[-1].
°rög
), 
NULL
);

1578 { 
	`zc⁄f_îr‹
("unknow¿°©emíà\"%s\"", (
yyv•
[-2].
°rög
)); }

1584 { 
	`zc⁄f_îr‹
("invalid statement"); }

1590 { 
	`zc⁄f_îr‹
("invalid statement"); }

1597 (
yyv•
[-1].
symbﬁ
)->
Êags
 |
SYMBOL_OPTIONAL
;

1598 
	`míu_add_íåy
((
yyv•
[-1].
symbﬁ
));

1599 
	`¥ötd
(
DEBUG_PARSE
, "%s:%d:c⁄fig %s\n", 
	`zc⁄f_cu∫ame
(), 
	`zc⁄f_löío
(), (
yyv•
[-1].
symbﬁ
)->
«me
);

1607 
	`¥ötd
(
DEBUG_PARSE
, "%s:%d:ídc⁄fig\n", 
	`zc⁄f_cu∫ame
(), 
	`zc⁄f_löío
());

1615 (
yyv•
[-1].
symbﬁ
)->
Êags
 |
SYMBOL_OPTIONAL
;

1616 
	`míu_add_íåy
((
yyv•
[-1].
symbﬁ
));

1617 
	`¥ötd
(
DEBUG_PARSE
, "%s:%d:míuc⁄fig %s\n", 
	`zc⁄f_cu∫ame
(), 
	`zc⁄f_löío
(), (
yyv•
[-1].
symbﬁ
)->
«me
);

1625 i‡(
cuºít_íåy
->
¥om±
)

1626 
cuºít_íåy
->
¥om±
->
ty≥
 = 
P_MENU
;

1628 
	`zc⁄Âröt
("warning: menuconfig statement withoutÖrompt");

1629 
	`¥ötd
(
DEBUG_PARSE
, "%s:%d:ídc⁄fig\n", 
	`zc⁄f_cu∫ame
(), 
	`zc⁄f_löío
());

1637 
	`míu_£t_ty≥
((
yyv•
[-2].
ty≥
));

1638 
	`¥ötd
(
DEBUG_PARSE
, "%s:%d:type(%u)\n",

1639 
	`zc⁄f_cu∫ame
(), 
	`zc⁄f_löío
(),

1640 (
yyv•
[-2].
ty≥
));

1648 
	`míu_add_¥om±
(
P_PROMPT
, (
yyv•
[-2].
°rög
), (yyv•[-1].
ex¥
));

1649 
	`¥ötd
(
DEBUG_PARSE
, "%s:%d:¥om±\n", 
	`zc⁄f_cu∫ame
(), 
	`zc⁄f_löío
());

1657 
	`míu_add_ex¥
(
P_DEFAULT
, (
yyv•
[-2].
ex¥
), (yyvsp[-1].expr));

1658 i‡((
yyv•
[-3].
ty≥
Ë!
S_UNKNOWN
)

1659 
	`míu_£t_ty≥
((
yyv•
[-3].
ty≥
));

1660 
	`¥ötd
(
DEBUG_PARSE
, "%s:%d:default(%u)\n",

1661 
	`zc⁄f_cu∫ame
(), 
	`zc⁄f_löío
(),

1662 (
yyv•
[-3].
ty≥
));

1670 
	`míu_add_symbﬁ
(
P_SELECT
, (
yyv•
[-2].
symbﬁ
), (yyv•[-1].
ex¥
));

1671 
	`¥ötd
(
DEBUG_PARSE
, "%s:%d:£À˘\n", 
	`zc⁄f_cu∫ame
(), 
	`zc⁄f_löío
());

1679 
	`míu_add_symbﬁ
(
P_IMPLY
, (
yyv•
[-2].
symbﬁ
), (yyv•[-1].
ex¥
));

1680 
	`¥ötd
(
DEBUG_PARSE
, "%s:%d:im∂y\n", 
	`zc⁄f_cu∫ame
(), 
	`zc⁄f_löío
());

1688 
	`míu_add_ex¥
(
P_RANGE
, 
	`ex¥_Æloc_comp
(
E_RANGE
,(
yyv•
[-3].
symbﬁ
), (yyv•[-2].symbﬁ)), (yyv•[-1].
ex¥
));

1689 
	`¥ötd
(
DEBUG_PARSE
, "%s:%d:ønge\n", 
	`zc⁄f_cu∫ame
(), 
	`zc⁄f_löío
());

1697 
	`míu_add_›ti⁄_moduÀs
();

1705 
	`míu_add_›ti⁄_defc⁄fig_li°
();

1713 
	`míu_add_›ti⁄_Æ oc⁄fig_y
();

1721 
symbﬁ
 *
sym
 = 
	`sym_lookup
((
yyv•
[-1].
°rög
), 
SYMBOL_CHOICE
);

1722 
sym
->
Êags
 |
SYMBOL_NO_WRITE
;

1723 
	`míu_add_íåy
(
sym
);

1724 
	`míu_add_ex¥
(
P_CHOICE
, 
NULL
, NULL);

1725 
	`‰ì
((
yyv•
[-1].
°rög
));

1726 
	`¥ötd
(
DEBUG_PARSE
, "%s:%d:choi˚\n", 
	`zc⁄f_cu∫ame
(), 
	`zc⁄f_löío
());

1734 (
yyvÆ
.
míu
Ë
	`míu_add_míu
();

1742 i‡(
	`zc⁄f_ídtokí
((
yyv•
[0].
°rög
), "choice")) {

1743 
	`míu_íd_míu
();

1744 
	`¥ötd
(
DEBUG_PARSE
, "%s:%d:ídchoi˚\n", 
	`zc⁄f_cu∫ame
(), 
	`zc⁄f_löío
());

1753 
	`míu_add_¥om±
(
P_PROMPT
, (
yyv•
[-2].
°rög
), (yyv•[-1].
ex¥
));

1754 
	`¥ötd
(
DEBUG_PARSE
, "%s:%d:¥om±\n", 
	`zc⁄f_cu∫ame
(), 
	`zc⁄f_löío
());

1762 
	`míu_£t_ty≥
((
yyv•
[-2].
ty≥
));

1763 
	`¥ötd
(
DEBUG_PARSE
, "%s:%d:type(%u)\n",

1764 
	`zc⁄f_cu∫ame
(), 
	`zc⁄f_löío
(), (
yyv•
[-2].
ty≥
));

1772 
cuºít_íåy
->
sym
->
Êags
 |
SYMBOL_OPTIONAL
;

1773 
	`¥ötd
(
DEBUG_PARSE
, "%s:%d:›ti⁄Æ\n", 
	`zc⁄f_cu∫ame
(), 
	`zc⁄f_löío
());

1781 
	`míu_add_symbﬁ
(
P_DEFAULT
, (
yyv•
[-2].
symbﬁ
), (yyv•[-1].
ex¥
));

1782 
	`¥ötd
(
DEBUG_PARSE
, "%s:%d:default\n",

1783 
	`zc⁄f_cu∫ame
(), 
	`zc⁄f_löío
());

1790 { (
yyvÆ
.
ty≥
Ë
S_INT
; }

1796 { (
yyvÆ
.
ty≥
Ë
S_HEX
; }

1802 { (
yyvÆ
.
ty≥
Ë
S_STRING
; }

1808 { (
yyvÆ
.
ty≥
Ë
S_BOOLEAN
; }

1814 { (
yyvÆ
.
ty≥
Ë
S_TRISTATE
; }

1820 { (
yyvÆ
.
ty≥
Ë
S_UNKNOWN
; }

1826 { (
yyvÆ
.
ty≥
Ë
S_BOOLEAN
; }

1832 { (
yyvÆ
.
ty≥
Ë
S_TRISTATE
; }

1839 
	`¥ötd
(
DEBUG_PARSE
, "%s:%d:if\n", 
	`zc⁄f_cu∫ame
(), 
	`zc⁄f_löío
());

1840 
	`míu_add_íåy
(
NULL
);

1841 
	`míu_add_dï
((
yyv•
[-1].
ex¥
));

1842 (
yyvÆ
.
míu
Ë
	`míu_add_míu
();

1850 i‡(
	`zc⁄f_ídtokí
((
yyv•
[0].
°rög
), "if")) {

1851 
	`míu_íd_míu
();

1852 
	`¥ötd
(
DEBUG_PARSE
, "%s:%d:ídif\n", 
	`zc⁄f_cu∫ame
(), 
	`zc⁄f_löío
());

1861 
	`míu_add_íåy
(
NULL
);

1862 
	`míu_add_¥om±
(
P_MENU
, (
yyv•
[-1].
°rög
), 
NULL
);

1863 
	`¥ötd
(
DEBUG_PARSE
, "%s:%d:míu\n", 
	`zc⁄f_cu∫ame
(), 
	`zc⁄f_löío
());

1871 (
yyvÆ
.
míu
Ë
	`míu_add_míu
();

1879 i‡(
	`zc⁄f_ídtokí
((
yyv•
[0].
°rög
), "menu")) {

1880 
	`míu_íd_míu
();

1881 
	`¥ötd
(
DEBUG_PARSE
, "%s:%d:ídmíu\n", 
	`zc⁄f_cu∫ame
(), 
	`zc⁄f_löío
());

1890 
	`¥ötd
(
DEBUG_PARSE
, "%s:%d:sour˚ %s\n", 
	`zc⁄f_cu∫ame
(), 
	`zc⁄f_löío
(), (
yyv•
[-1].
°rög
));

1891 
	`zc⁄f_√xtfûe
((
yyv•
[-1].
°rög
));

1892 
	`‰ì
((
yyv•
[-1].
°rög
));

1900 
	`míu_add_íåy
(
NULL
);

1901 
	`míu_add_¥om±
(
P_COMMENT
, (
yyv•
[-1].
°rög
), 
NULL
);

1902 
	`¥ötd
(
DEBUG_PARSE
, "%s:%d:commít\n", 
	`zc⁄f_cu∫ame
(), 
	`zc⁄f_löío
());

1910 
	`¥ötd
(
DEBUG_PARSE
, "%s:%d:hñp\n", 
	`zc⁄f_cu∫ame
(), 
	`zc⁄f_löío
());

1911 
	`zc⁄f_°¨thñp
();

1919 i‡(
cuºít_íåy
->
hñp
) {

1920 
	`‰ì
(
cuºít_íåy
->
hñp
);

1921 
	`zc⁄Âröt
("warning: '%s' defined with moreÅhan one helpÅext -- onlyÅheÜast one will be used",

1922 
cuºít_íåy
->
sym
->
«me
 ?: "<choice>");

1926 i‡((
yyv•
[0].
°rög
)[
	`°r•n
((yyvsp[0].string), " \f\n\r\t\v")] == '\0')

1927 
	`zc⁄Âröt
("warning: '%s' defined with blank helpÅext",

1928 
cuºít_íåy
->
sym
->
«me
 ?: "<choice>");

1930 
cuºít_íåy
->
hñp
 = (
yyv•
[0].
°rög
);

1938 
	`míu_add_dï
((
yyv•
[-1].
ex¥
));

1939 
	`¥ötd
(
DEBUG_PARSE
, "%s:%d:dïíd†⁄\n", 
	`zc⁄f_cu∫ame
(), 
	`zc⁄f_löío
());

1947 
	`míu_add_visibûôy
((
yyv•
[-1].
ex¥
));

1955 
	`míu_add_¥om±
(
P_PROMPT
, (
yyv•
[-1].
°rög
), (yyv•[0].
ex¥
));

1962 { (
yyvÆ
.
°rög
) = "menu"; }

1968 { (
yyvÆ
.
°rög
) = "choice"; }

1974 { (
yyvÆ
.
°rög
) = "if"; }

1980 { (
yyvÆ
.
ex¥
Ë
NULL
; }

1986 { (
yyvÆ
.
ex¥
Ë(
yyv•
[0].expr); }

1992 { (
yyvÆ
.
ex¥
Ë
	`ex¥_Æloc_symbﬁ
((
yyv•
[0].
symbﬁ
)); }

1998 { (
yyvÆ
.
ex¥
Ë
	`ex¥_Æloc_comp
(
E_LTH
, (
yyv•
[-2].
symbﬁ
), (yyvsp[0].symbol)); }

2004 { (
yyvÆ
.
ex¥
Ë
	`ex¥_Æloc_comp
(
E_LEQ
, (
yyv•
[-2].
symbﬁ
), (yyvsp[0].symbol)); }

2010 { (
yyvÆ
.
ex¥
Ë
	`ex¥_Æloc_comp
(
E_GTH
, (
yyv•
[-2].
symbﬁ
), (yyvsp[0].symbol)); }

2016 { (
yyvÆ
.
ex¥
Ë
	`ex¥_Æloc_comp
(
E_GEQ
, (
yyv•
[-2].
symbﬁ
), (yyvsp[0].symbol)); }

2022 { (
yyvÆ
.
ex¥
Ë
	`ex¥_Æloc_comp
(
E_EQUAL
, (
yyv•
[-2].
symbﬁ
), (yyvsp[0].symbol)); }

2028 { (
yyvÆ
.
ex¥
Ë
	`ex¥_Æloc_comp
(
E_UNEQUAL
, (
yyv•
[-2].
symbﬁ
), (yyvsp[0].symbol)); }

2034 { (
yyvÆ
.
ex¥
Ë(
yyv•
[-1].expr); }

2040 { (
yyvÆ
.
ex¥
Ë
	`ex¥_Æloc_⁄e
(
E_NOT
, (
yyv•
[0].expr)); }

2046 { (
yyvÆ
.
ex¥
Ë
	`ex¥_Æloc_two
(
E_OR
, (
yyv•
[-2].expr), (yyvsp[0].expr)); }

2052 { (
yyvÆ
.
ex¥
Ë
	`ex¥_Æloc_two
(
E_AND
, (
yyv•
[-2].expr), (yyvsp[0].expr)); }

2058 { (
yyvÆ
.
symbﬁ
Ë
	`sym_lookup
((
yyv•
[0].
°rög
), 0); 
	`‰ì
((yyvsp[0].string)); }

2064 { (
yyvÆ
.
symbﬁ
Ë
	`sym_lookup
((
yyv•
[0].
°rög
), 
SYMBOL_CONST
); 
	`‰ì
((yyvsp[0].string)); }

2070 { (
yyvÆ
.
°rög
Ë
NULL
; }

2076 { 
	`v¨übÀ_add
((
yyv•
[-3].
°rög
), (yyv•[-1].°rög), (yyv•[-2].
Êav‹
)); 
	`‰ì
((yyvsp[-3].string)); free((yyvsp[-1].string)); }

2082 { (
yyvÆ
.
Êav‹
Ë
VAR_RECURSIVE
; }

2088 { (
yyvÆ
.
Êav‹
Ë
VAR_SIMPLE
; }

2094 { (
yyvÆ
.
Êav‹
Ë
VAR_APPEND
; }

2100 { (
yyvÆ
.
°rög
Ë
	`x°rdup
(""); }

2120 
	`YY_SYMBOL_PRINT
 ("-> $$ =", 
yyr1
[
yyn
], &
yyvÆ
, &
yyloc
);

2122 
	`YYPOPSTACK
 (
yyÀn
);

2123 
yyÀn
 = 0;

2124 
	`YY_STACK_PRINT
 (
yyss
, 
yys•
);

2126 *++
yyv•
 = 
yyvÆ
;

2132 c⁄° 
yylhs
 = 
yyr1
[
yyn
] - 
YYNTOKENS
;

2133 c⁄° 
yyi
 = 
yypgŸo
[
yylhs
] + *
yys•
;

2134 
yy°©e
 = (0 <
yyi
 && yyò<
YYLAST
 && 
yycheck
[yyi] =*
yys•


2135 ? 
yyèbÀ
[
yyi
]

2136 : 
yydefgŸo
[
yylhs
]);

2139 
yy√w°©e
;

2145 
yyîæab
:

2148 
yytokí
 = 
yych¨
 =
YYEMPTY
 ? YYEMPTY : 
	`YYTRANSLATE
 (yychar);

2151 i‡(!
yyîr°©us
)

2153 ++
yy√ºs
;

2154 #i‡! 
YYERROR_VERBOSE


2155 
	`yyîr‹
 (
	`YY_
("syntaxÉrror"));

2157 
	#YYSYNTAX_ERROR
 
	`yysy¡ax_îr‹
 (&
yymsg_Æloc
, &
yymsg
, \

2158 
yys•
, 
yytokí
)

	)

2160 c⁄° *
yymsgp
 = 
	`YY_
("syntaxÉrror");

2161 
yysy¡ax_îr‹_°©us
;

2162 
yysy¡ax_îr‹_°©us
 = 
YYSYNTAX_ERROR
;

2163 i‡(
yysy¡ax_îr‹_°©us
 == 0)

2164 
yymsgp
 = 
yymsg
;

2165 i‡(
yysy¡ax_îr‹_°©us
 == 1)

2167 i‡(
yymsg
 !
yymsgbuf
)

2168 
	`YYSTACK_FREE
 (
yymsg
);

2169 
yymsg
 = 
	`YY_CAST
 (*, 
	`YYSTACK_ALLOC
 (YY_CAST (
YYSIZE_T
, 
yymsg_Æloc
)));

2170 i‡(!
yymsg
)

2172 
yymsg
 = 
yymsgbuf
;

2173 
yymsg_Æloc
 =  
yymsgbuf
;

2174 
yysy¡ax_îr‹_°©us
 = 2;

2178 
yysy¡ax_îr‹_°©us
 = 
YYSYNTAX_ERROR
;

2179 
yymsgp
 = 
yymsg
;

2182 
	`yyîr‹
 (
yymsgp
);

2183 i‡(
yysy¡ax_îr‹_°©us
 == 2)

2184 
yyexhau°edœb
;

2186 #unde‡
YYSYNTAX_ERROR


2192 i‡(
yyîr°©us
 == 3)

2197 i‡(
yych¨
 <
YYEOF
)

2200 i‡(
yych¨
 =
YYEOF
)

2201 
YYABORT
;

2205 
	`yyde°ru˘
 ("Error: discarding",

2206 
yytokí
, &
yylvÆ
);

2207 
yych¨
 = 
YYEMPTY
;

2213 
yyîæab1
;

2219 
yyîr‹œb
:

2223 
YYERROR
;

2227 
	`YYPOPSTACK
 (
yyÀn
);

2228 
yyÀn
 = 0;

2229 
	`YY_STACK_PRINT
 (
yyss
, 
yys•
);

2230 
yy°©e
 = *
yys•
;

2231 
yyîæab1
;

2237 
yyîæab1
:

2238 
yyîr°©us
 = 3;

2242 
yyn
 = 
yy∑˘
[
yy°©e
];

2243 i‡(!
	`yy∑˘_vÆue_is_deÁu…
 (
yyn
))

2245 
yyn
 +
YYTERROR
;

2246 i‡(0 <
yyn
 && yy¿<
YYLAST
 && 
yycheck
[yyn] =
YYTERROR
)

2248 
yyn
 = 
yyèbÀ
[yyn];

2249 i‡(0 < 
yyn
)

2255 i‡(
yys•
 =
yyss
)

2256 
YYABORT
;

2259 
	`yyde°ru˘
 ("Error:Öopping",

2260 
yy°os
[
yy°©e
], 
yyv•
);

2261 
	`YYPOPSTACK
 (1);

2262 
yy°©e
 = *
yys•
;

2263 
	`YY_STACK_PRINT
 (
yyss
, 
yys•
);

2266 
YY_IGNORE_MAYBE_UNINITIALIZED_BEGIN


2267 *++
yyv•
 = 
yylvÆ
;

2268 
YY_IGNORE_MAYBE_UNINITIALIZED_END


2272 
	`YY_SYMBOL_PRINT
 ("Shi·ög", 
yy°os
[
yyn
], 
yyv•
, 
yyl•
);

2274 
yy°©e
 = 
yyn
;

2275 
yy√w°©e
;

2281 
yyac˚±œb
:

2282 
yyªsu…
 = 0;

2283 
yyªtu∫
;

2289 
yyab‹éab
:

2290 
yyªsu…
 = 1;

2291 
yyªtu∫
;

2294 #i‡!
deföed
 
yyovîÊow
 || 
YYERROR_VERBOSE


2298 
yyexhau°edœb
:

2299 
	`yyîr‹
 (
	`YY_
("memoryÉxhausted"));

2300 
yyªsu…
 = 2;

2308 
yyªtu∫
:

2309 i‡(
yych¨
 !
YYEMPTY
)

2313 
yytokí
 = 
	`YYTRANSLATE
 (
yych¨
);

2314 
	`yyde°ru˘
 ("Cleanup: discardingÜookahead",

2315 
yytokí
, &
yylvÆ
);

2319 
	`YYPOPSTACK
 (
yyÀn
);

2320 
	`YY_STACK_PRINT
 (
yyss
, 
yys•
);

2321 
yys•
 !
yyss
)

2323 
	`yyde°ru˘
 ("Cleanup:Öopping",

2324 
yy°os
[+*
yys•
], 
yyv•
);

2325 
	`YYPOPSTACK
 (1);

2327 #i‚de‡
yyovîÊow


2328 i‡(
yyss
 !
yysß
)

2329 
	`YYSTACK_FREE
 (
yyss
);

2331 #i‡
YYERROR_VERBOSE


2332 i‡(
yymsg
 !
yymsgbuf
)

2333 
	`YYSTACK_FREE
 (
yymsg
);

2335  
yyªsu…
;

2336 
	}
}

2340 
	$c⁄f_∑r£
(c⁄° *
«me
)

2342 
symbﬁ
 *
sym
;

2343 
i
;

2345 
	`zc⁄f_öôsˇn
(
«me
);

2347 
	`_míu_öô
();

2349 i‡(
	`gëív
("ZCONF_DEBUG"))

2350 
yydebug
 = 1;

2351 
	`yy∑r£
();

2354 
	`v¨übÀ_Æl_dñ
();

2356 i‡(
yy√ºs
)

2357 
	`exô
(1);

2358 i‡(!
moduÀs_sym
)

2359 
moduÀs_sym
 = 
	`sym_föd
( "n" );

2361 i‡(!
	`míu_has_¥om±
(&
roŸmíu
)) {

2362 
cuºít_íåy
 = &
roŸmíu
;

2363 
	`míu_add_¥om±
(
P_MENU
, "Maö míu", 
NULL
);

2366 
	`míu_föÆize
(&
roŸmíu
);

2367 
	`f‹_Æl_symbﬁs
(
i
, 
sym
) {

2368 i‡(
	`sym_check_dïs
(
sym
))

2369 
yy√ºs
++;

2371 i‡(
yy√ºs
)

2372 
	`exô
(1);

2373 
	`sym_£t_ch™ge_cou¡
(1);

2374 
	}
}

2376 
boﬁ
 
	$zc⁄f_ídtokí
(c⁄° *
tokí«me
,

2377 c⁄° *
ex≥˘ed_tokí«me
)

2379 i‡(
	`°rcmp
(
tokí«me
, 
ex≥˘ed_tokí«me
)) {

2380 
	`zc⁄f_îr‹
("unexpected '%s' within %s block",

2381 
tokí«me
, 
ex≥˘ed_tokí«me
);

2382 
yy√ºs
++;

2383  
Ál£
;

2385 i‡(
cuºít_míu
->
fûe
 !
cuºít_fûe
) {

2386 
	`zc⁄f_îr‹
("'%s' in different fileÅhan '%s'",

2387 
tokí«me
, 
ex≥˘ed_tokí«me
);

2388 
	`Ârötf
(
°dîr
, "%s:%d:Üocation ofÅhe '%s'\n",

2389 
cuºít_míu
->
fûe
->
«me
, cuºít_míu->
löío
,

2390 
ex≥˘ed_tokí«me
);

2391 
yy√ºs
++;

2392  
Ál£
;

2394  
åue
;

2395 
	}
}

2397 
	$zc⁄Âröt
(c⁄° *
îr
, ...)

2399 
va_li°
 
≠
;

2401 
	`Ârötf
(
°dîr
, "%s:%d: ", 
	`zc⁄f_cu∫ame
(), 
	`zc⁄f_löío
());

2402 
	`va_°¨t
(
≠
, 
îr
);

2403 
	`vÂrötf
(
°dîr
, 
îr
, 
≠
);

2404 
	`va_íd
(
≠
);

2405 
	`Ârötf
(
°dîr
, "\n");

2406 
	}
}

2408 
	$zc⁄f_îr‹
(c⁄° *
îr
, ...)

2410 
va_li°
 
≠
;

2412 
yy√ºs
++;

2413 
	`Ârötf
(
°dîr
, "%s:%d: ", 
	`zc⁄f_cu∫ame
(), 
	`zc⁄f_löío
());

2414 
	`va_°¨t
(
≠
, 
îr
);

2415 
	`vÂrötf
(
°dîr
, 
îr
, 
≠
);

2416 
	`va_íd
(
≠
);

2417 
	`Ârötf
(
°dîr
, "\n");

2418 
	}
}

2420 
	$yyîr‹
(c⁄° *
îr
)

2422 
	`Ârötf
(
°dîr
, "%s:%d: %s\n", 
	`zc⁄f_cu∫ame
(), 
	`zc⁄f_löío
(Ë+ 1, 
îr
);

2423 
	}
}

2425 
	$¥öt_quŸed_°rög
(
FILE
 *
out
, c⁄° *
°r
)

2427 c⁄° *
p
;

2428 
Àn
;

2430 
	`putc
('"', 
out
);

2431 (
p
 = 
	`°rchr
(
°r
, '"'))) {

2432 
Àn
 = 
p
 - 
°r
;

2433 i‡(
Àn
)

2434 
	`Ârötf
(
out
, "%.*s", 
Àn
, 
°r
);

2435 
	`Âuts
("\\\"", 
out
);

2436 
°r
 = 
p
 + 1;

2438 
	`Âuts
(
°r
, 
out
);

2439 
	`putc
('"', 
out
);

2440 
	}
}

2442 
	$¥öt_symbﬁ
(
FILE
 *
out
, 
míu
 *menu)

2444 
symbﬁ
 *
sym
 = 
míu
->sym;

2445 
¥›îty
 *
¥›
;

2447 i‡(
	`sym_is_choi˚
(
sym
))

2448 
	`Ârötf
(
out
, "\nchoice\n");

2450 
	`Ârötf
(
out
, "\nc⁄fig %s\n", 
sym
->
«me
);

2451 
sym
->
ty≥
) {

2452 
S_BOOLEAN
:

2453 
	`Âuts
(" boﬁ\n", 
out
);

2455 
S_TRISTATE
:

2456 
	`Âuts
("Åri°©e\n", 
out
);

2458 
S_STRING
:

2459 
	`Âuts
(" såög\n", 
out
);

2461 
S_INT
:

2462 
	`Âuts
(" i¡egî\n", 
out
);

2464 
S_HEX
:

2465 
	`Âuts
(" hex\n", 
out
);

2468 
	`Âuts
(" ???\n", 
out
);

2471 
¥›
 = 
sym
->¥›;Ör›;Ör› =Ör›->
√xt
) {

2472 i‡(
¥›
->
míu
 != menu)

2474 
¥›
->
ty≥
) {

2475 
P_PROMPT
:

2476 
	`Âuts
("Örom± ", 
out
);

2477 
	`¥öt_quŸed_°rög
(
out
, 
¥›
->
ãxt
);

2478 i‡(!
	`ex¥_is_yes
(
¥›
->
visibÀ
.
ex¥
)) {

2479 
	`Âuts
(" i‡", 
out
);

2480 
	`ex¥_Âröt
(
¥›
->
visibÀ
.
ex¥
, 
out
);

2482 
	`Âutc
('\n', 
out
);

2484 
P_DEFAULT
:

2485 
	`Âuts
–" deÁu… ", 
out
);

2486 
	`ex¥_Âröt
(
¥›
->
ex¥
, 
out
);

2487 i‡(!
	`ex¥_is_yes
(
¥›
->
visibÀ
.
ex¥
)) {

2488 
	`Âuts
(" i‡", 
out
);

2489 
	`ex¥_Âröt
(
¥›
->
visibÀ
.
ex¥
, 
out
);

2491 
	`Âutc
('\n', 
out
);

2493 
P_CHOICE
:

2494 
	`Âuts
(" #choi˚ vÆue\n", 
out
);

2496 
P_SELECT
:

2497 
	`Âuts
–" sñe˘ ", 
out
);

2498 
	`ex¥_Âröt
(
¥›
->
ex¥
, 
out
);

2499 
	`Âutc
('\n', 
out
);

2501 
P_IMPLY
:

2502 
	`Âuts
–" im∂y ", 
out
);

2503 
	`ex¥_Âröt
(
¥›
->
ex¥
, 
out
);

2504 
	`Âutc
('\n', 
out
);

2506 
P_RANGE
:

2507 
	`Âuts
–"Ñ™gê", 
out
);

2508 
	`ex¥_Âröt
(
¥›
->
ex¥
, 
out
);

2509 
	`Âutc
('\n', 
out
);

2511 
P_MENU
:

2512 
	`Âuts
–" míu ", 
out
);

2513 
	`¥öt_quŸed_°rög
(
out
, 
¥›
->
ãxt
);

2514 
	`Âutc
('\n', 
out
);

2516 
P_SYMBOL
:

2517 
	`Âuts
–" symbﬁ ", 
out
);

2518 
	`Ârötf
(
out
, "%s\n", 
¥›
->
míu
->
sym
->
«me
);

2521 
	`Ârötf
(
out
, " unknow¿¥› %d!\n", 
¥›
->
ty≥
);

2525 i‡(
míu
->
hñp
) {

2526 
Àn
 = 
	`°æí
(
míu
->
hñp
);

2527 
míu
->
hñp
[--
Àn
] == '\n')

2528 
míu
->
hñp
[
Àn
] = 0;

2529 
	`Ârötf
(
out
, " hñp\n%s\n", 
míu
->
hñp
);

2531 
	}
}

2533 
	$zc⁄fdump
(
FILE
 *
out
)

2535 
¥›îty
 *
¥›
;

2536 
symbﬁ
 *
sym
;

2537 
míu
 *menu;

2539 
míu
 = 
roŸmíu
.
li°
;

2540 
míu
) {

2541 i‡((
sym
 = 
míu
->sym))

2542 
	`¥öt_symbﬁ
(
out
, 
míu
);

2543 i‡((
¥›
 = 
míu
->
¥om±
)) {

2544 
¥›
->
ty≥
) {

2545 
P_COMMENT
:

2546 
	`Âuts
("\ncommíà", 
out
);

2547 
	`¥öt_quŸed_°rög
(
out
, 
¥›
->
ãxt
);

2548 
	`Âuts
("\n", 
out
);

2550 
P_MENU
:

2551 
	`Âuts
("\nmíu ", 
out
);

2552 
	`¥öt_quŸed_°rög
(
out
, 
¥›
->
ãxt
);

2553 
	`Âuts
("\n", 
out
);

2558 i‡(!
	`ex¥_is_yes
(
¥›
->
visibÀ
.
ex¥
)) {

2559 
	`Âuts
(" dïíd†", 
out
);

2560 
	`ex¥_Âröt
(
¥›
->
visibÀ
.
ex¥
, 
out
);

2561 
	`Âutc
('\n', 
out
);

2565 i‡(
míu
->
li°
)

2566 
míu
 = míu->
li°
;

2567 i‡(
míu
->
√xt
)

2568 
míu
 = míu->
√xt
;

2569 (
míu
 = míu->
∑ª¡
)) {

2570 i‡(
míu
->
¥om±
 && míu->¥om±->
ty≥
 =
P_MENU
)

2571 
	`Âuts
("\√ndmíu\n", 
out
);

2572 i‡(
míu
->
√xt
) {

2573 
míu
 = míu->
√xt
;

2578 
	}
}

2580 
	~"míu.c
"

	@nemu/tools/kconfig/build/parser.tab.h

37 #i‚de‡
YY_YY_BUILD_PARSER_TAB_H_INCLUDED


38 
	#YY_YY_BUILD_PARSER_TAB_H_INCLUDED


	)

40 #i‚de‡
YYDEBUG


41 
	#YYDEBUG
 0

	)

43 #i‡
YYDEBUG


44 
yydebug
;

48 #i‚de‡
YYTOKENTYPE


49 
	#YYTOKENTYPE


	)

50 
	eyytokíty≥


52 
	mT_HELPTEXT
 = 258,

53 
	mT_WORD
 = 259,

54 
	mT_WORD_QUOTE
 = 260,

55 
	mT_ALLNOCONFIG_Y
 = 261,

56 
	mT_BOOL
 = 262,

57 
	mT_CHOICE
 = 263,

58 
	mT_CLOSE_PAREN
 = 264,

59 
	mT_COLON_EQUAL
 = 265,

60 
	mT_COMMENT
 = 266,

61 
	mT_CONFIG
 = 267,

62 
	mT_DEFAULT
 = 268,

63 
	mT_DEFCONFIG_LIST
 = 269,

64 
	mT_DEF_BOOL
 = 270,

65 
	mT_DEF_TRISTATE
 = 271,

66 
	mT_DEPENDS
 = 272,

67 
	mT_ENDCHOICE
 = 273,

68 
	mT_ENDIF
 = 274,

69 
	mT_ENDMENU
 = 275,

70 
	mT_HELP
 = 276,

71 
	mT_HEX
 = 277,

72 
	mT_IF
 = 278,

73 
	mT_IMPLY
 = 279,

74 
	mT_INT
 = 280,

75 
	mT_MAINMENU
 = 281,

76 
	mT_MENU
 = 282,

77 
	mT_MENUCONFIG
 = 283,

78 
	mT_MODULES
 = 284,

79 
	mT_ON
 = 285,

80 
	mT_OPEN_PAREN
 = 286,

81 
	mT_OPTION
 = 287,

82 
	mT_OPTIONAL
 = 288,

83 
	mT_PLUS_EQUAL
 = 289,

84 
	mT_PROMPT
 = 290,

85 
	mT_RANGE
 = 291,

86 
	mT_SELECT
 = 292,

87 
	mT_SOURCE
 = 293,

88 
	mT_STRING
 = 294,

89 
	mT_TRISTATE
 = 295,

90 
	mT_VISIBLE
 = 296,

91 
	mT_EOL
 = 297,

92 
	mT_ASSIGN_VAL
 = 298,

93 
	mT_OR
 = 299,

94 
	mT_AND
 = 300,

95 
	mT_EQUAL
 = 301,

96 
	mT_UNEQUAL
 = 302,

97 
	mT_LESS
 = 303,

98 
	mT_LESS_EQUAL
 = 304,

99 
	mT_GREATER
 = 305,

100 
	mT_GREATER_EQUAL
 = 306,

101 
	mT_NOT
 = 307

106 #i‡! 
deföed
 
YYSTYPE
 && ! deföed 
YYSTYPE_IS_DECLARED


107 
	uYYSTYPE


111 *
	m°rög
;

112 
symbﬁ
 *
	msymbﬁ
;

113 
ex¥
 *
	mex¥
;

114 
míu
 *
	mmíu
;

115 
symbﬁ_ty≥
 
	mty≥
;

116 
v¨übÀ_Êav‹
 
	mÊav‹
;

121 
YYSTYPE
 
	tYYSTYPE
;

122 
	#YYSTYPE_IS_TRIVIAL
 1

	)

123 
	#YYSTYPE_IS_DECLARED
 1

	)

127 
YYSTYPE
 
yylvÆ
;

129 
yy∑r£
 ();

	@nemu/tools/kconfig/conf.c

6 
	~<˘y≥.h
>

7 
	~<limôs.h
>

8 
	~<°dio.h
>

9 
	~<°dlib.h
>

10 
	~<°rög.h
>

11 
	~<time.h
>

12 
	~<uni°d.h
>

13 
	~<gë›t.h
>

14 
	~<sys/°©.h
>

15 
	~<sys/time.h
>

16 
	~<î∫o.h
>

18 
	~"lkc.h
"

20 
c⁄f
(
míu
 *menu);

21 
check_c⁄f
(
míu
 *menu);

23 
	eöput_mode
 {

24 
	mﬁdaskc⁄fig
,

25 
	msyncc⁄fig
,

26 
	mﬁdc⁄fig
,

27 
	mÆ oc⁄fig
,

28 
	mÆlyesc⁄fig
,

29 
	mÆlmodc⁄fig
,

30 
	mÆldefc⁄fig
,

31 
	møndc⁄fig
,

32 
	mdefc⁄fig
,

33 
	mßvedefc⁄fig
,

34 
	mli°√wc⁄fig
,

35 
	mhñ≤ewc⁄fig
,

36 
	mﬁddefc⁄fig
,

37 
	myes2modc⁄fig
,

38 
	mmod2yesc⁄fig
,

40 
öput_mode
 
	göput_mode
 = 
ﬁdaskc⁄fig
;

42 
	gödít
 = 1;

43 
	gây_°dio
;

44 
	gsync_kc⁄fig
;

45 
	gc⁄f_˙t
;

46 
	glöe
[
PATH_MAX
];

47 
míu
 *
	groŸE¡ry
;

49 
	$¥öt_hñp
(
míu
 *menu)

51 
g°r
 
hñp
 = 
	`°r_√w
();

53 
	`míu_gë_ext_hñp
(
míu
, &
hñp
);

55 
	`¥ötf
("\n%s\n", 
	`°r_gë
(&
hñp
));

56 
	`°r_‰ì
(&
hñp
);

57 
	}
}

59 
	$°rù
(*
°r
)

61 *
p
 = 
°r
;

62 
l
;

64 (
	`is•a˚
(*
p
)))

65 
p
++;

66 
l
 = 
	`°æí
(
p
);

67 i‡(
p
 !
°r
)

68 
	`memmove
(
°r
, 
p
, 
l
 + 1);

69 i‡(!
l
)

71 
p
 = 
°r
 + 
l
 - 1;

72 (
	`is•a˚
(*
p
)))

73 *
p
-- = 0;

74 
	}
}

77 
	$xfgës
(*
°r
, 
size
, 
FILE
 *
ö
)

79 i‡(!
	`fgës
(
°r
, 
size
, 
ö
))

80 
	`Ârötf
(
°dîr
, "\nError inÑeading orÉnd of file.\n");

82 i‡(!
ây_°dio
)

83 
	`¥ötf
("%s", 
°r
);

84 
	}
}

86 
	$c⁄f_askvÆue
(
symbﬁ
 *
sym
, c⁄° *
def
)

88 
symbﬁ_ty≥
 
ty≥
 = 
	`sym_gë_ty≥
(
sym
);

90 i‡(!
	`sym_has_vÆue
(
sym
))

91 
	`¥ötf
("(NEW) ");

93 
löe
[0] = '\n';

94 
löe
[1] = 0;

96 i‡(!
	`sym_is_ch™góbÀ
(
sym
)) {

97 
	`¥ötf
("%s\n", 
def
);

98 
löe
[0] = '\n';

99 
löe
[1] = 0;

103 
öput_mode
) {

104 
ﬁdc⁄fig
:

105 
syncc⁄fig
:

106 i‡(
	`sym_has_vÆue
(
sym
)) {

107 
	`¥ötf
("%s\n", 
def
);

111 
ﬁdaskc⁄fig
:

112 
	`fÊush
(
°dout
);

113 
	`xfgës
(
löe
, ÷öe), 
°dö
);

119 
ty≥
) {

120 
S_INT
:

121 
S_HEX
:

122 
S_STRING
:

123 
	`¥ötf
("%s\n", 
def
);

128 
	`¥ötf
("%s", 
löe
);

130 
	}
}

132 
	$c⁄f_°rög
(
míu
 *menu)

134 
symbﬁ
 *
sym
 = 
míu
->sym;

135 c⁄° *
def
;

138 
	`¥ötf
("%*s%†", 
ödít
 - 1, "", 
míu
->
¥om±
->
ãxt
);

139 
	`¥ötf
("(%sË", 
sym
->
«me
);

140 
def
 = 
	`sym_gë_°rög_vÆue
(
sym
);

141 i‡(
	`sym_gë_°rög_vÆue
(
sym
))

142 
	`¥ötf
("[%s] ", 
def
);

143 i‡(!
	`c⁄f_askvÆue
(
sym
, 
def
))

145 
löe
[0]) {

150 i‡(
löe
[1] == '\n') {

151 
	`¥öt_hñp
(
míu
);

152 
def
 = 
NULL
;

157 
löe
[
	`°æí
(line)-1] = 0;

158 
def
 = 
löe
;

160 i‡(
def
 && 
	`sym_£t_°rög_vÆue
(
sym
, def))

163 
	}
}

165 
	$c⁄f_sym
(
míu
 *menu)

167 
symbﬁ
 *
sym
 = 
míu
->sym;

168 
åi°©e
 
ﬁdvÆ
, 
√wvÆ
;

171 
	`¥ötf
("%*s%†", 
ödít
 - 1, "", 
míu
->
¥om±
->
ãxt
);

172 i‡(
sym
->
«me
)

173 
	`¥ötf
("(%sË", 
sym
->
«me
);

174 
	`putch¨
('[');

175 
ﬁdvÆ
 = 
	`sym_gë_åi°©e_vÆue
(
sym
);

176 
ﬁdvÆ
) {

177 
no
:

178 
	`putch¨
('N');

180 
mod
:

181 
	`putch¨
('M');

183 
yes
:

184 
	`putch¨
('Y');

187 i‡(
ﬁdvÆ
 !
no
 && 
	`sym_åi°©e_wôhö_ønge
(
sym
,Ço))

188 
	`¥ötf
("/n");

189 i‡(
ﬁdvÆ
 !
mod
 && 
	`sym_åi°©e_wôhö_ønge
(
sym
, mod))

190 
	`¥ötf
("/m");

191 i‡(
ﬁdvÆ
 !
yes
 && 
	`sym_åi°©e_wôhö_ønge
(
sym
, yes))

192 
	`¥ötf
("/y");

193 
	`¥ötf
("/?] ");

194 i‡(!
	`c⁄f_askvÆue
(
sym
, 
	`sym_gë_°rög_vÆue
(sym)))

196 
	`°rù
(
löe
);

198 
löe
[0]) {

201 
√wvÆ
 = 
no
;

202 i‡(!
löe
[1] || !
	`°rcmp
(&line[1], "o"))

207 
√wvÆ
 = 
mod
;

208 i‡(!
löe
[1])

213 
√wvÆ
 = 
yes
;

214 i‡(!
löe
[1] || !
	`°rcmp
(&line[1], "es"))

218 
√wvÆ
 = 
ﬁdvÆ
;

221 
hñp
;

225 i‡(
	`sym_£t_åi°©e_vÆue
(
sym
, 
√wvÆ
))

227 
hñp
:

228 
	`¥öt_hñp
(
míu
);

230 
	}
}

232 
	$c⁄f_choi˚
(
míu
 *menu)

234 
symbﬁ
 *
sym
, *
def_sym
;

235 
míu
 *
chûd
;

236 
boﬁ
 
is_√w
;

238 
sym
 = 
míu
->sym;

239 
is_√w
 = !
	`sym_has_vÆue
(
sym
);

240 i‡(
	`sym_is_ch™góbÀ
(
sym
)) {

241 
	`c⁄f_sym
(
míu
);

242 
	`sym_ˇlc_vÆue
(
sym
);

243 
	`sym_gë_åi°©e_vÆue
(
sym
)) {

244 
no
:

246 
mod
:

248 
yes
:

252 
	`sym_gë_åi°©e_vÆue
(
sym
)) {

253 
no
:

255 
mod
:

256 
	`¥ötf
("%*s%s\n", 
ödít
 - 1, "", 
	`míu_gë_¥om±
(
míu
));

258 
yes
:

264 
˙t
, 
def
;

266 
	`¥ötf
("%*s%s\n", 
ödít
 - 1, "", 
	`míu_gë_¥om±
(
míu
));

267 
def_sym
 = 
	`sym_gë_choi˚_vÆue
(
sym
);

268 
˙t
 = 
def
 = 0;

269 
löe
[0] = 0;

270 
chûd
 = 
míu
->
li°
; chûd; chûd = chûd->
√xt
) {

271 i‡(!
	`míu_is_visibÀ
(
chûd
))

273 i‡(!
chûd
->
sym
) {

274 
	`¥ötf
("%*¯%s\n", 
ödít
, '*', 
	`míu_gë_¥om±
(
chûd
));

277 
˙t
++;

278 i‡(
chûd
->
sym
 =
def_sym
) {

279 
def
 = 
˙t
;

280 
	`¥ötf
("%*c", 
ödít
, '>');

282 
	`¥ötf
("%*c", 
ödít
, ' ');

283 
	`¥ötf
(" %d. %s", 
˙t
, 
	`míu_gë_¥om±
(
chûd
));

284 i‡(
chûd
->
sym
->
«me
)

285 
	`¥ötf
(" (%s)", 
chûd
->
sym
->
«me
);

286 i‡(!
	`sym_has_vÆue
(
chûd
->
sym
))

287 
	`¥ötf
(" (NEW)");

288 
	`¥ötf
("\n");

290 
	`¥ötf
("%*schoi˚", 
ödít
 - 1, "");

291 i‡(
˙t
 == 1) {

292 
	`¥ötf
("[1]: 1\n");

293 
c⁄f_chûds
;

295 
	`¥ötf
("[1-%d?]: ", 
˙t
);

296 
öput_mode
) {

297 
ﬁdc⁄fig
:

298 
syncc⁄fig
:

299 i‡(!
is_√w
) {

300 
˙t
 = 
def
;

301 
	`¥ötf
("%d\n", 
˙t
);

305 
ﬁdaskc⁄fig
:

306 
	`fÊush
(
°dout
);

307 
	`xfgës
(
löe
, ÷öe), 
°dö
);

308 
	`°rù
(
löe
);

309 i‡(
löe
[0] == '?') {

310 
	`¥öt_hñp
(
míu
);

313 i‡(!
löe
[0])

314 
˙t
 = 
def
;

315 i‡(
	`isdigô
(
löe
[0]))

316 
˙t
 = 
	`©oi
(
löe
);

324 
c⁄f_chûds
:

325 
chûd
 = 
míu
->
li°
; chûd; chûd = chûd->
√xt
) {

326 i‡(!
chûd
->
sym
 || !
	`míu_is_visibÀ
(child))

328 i‡(!--
˙t
)

331 i‡(!
chûd
)

333 i‡(
löe
[0] &&Üöe[
	`°æí
(line) - 1] == '?') {

334 
	`¥öt_hñp
(
chûd
);

337 
	`sym_£t_choi˚_vÆue
(
sym
, 
chûd
->sym);

338 
chûd
 = chûd->
li°
; chûd; chûd = chûd->
√xt
) {

339 
ödít
 += 2;

340 
	`c⁄f
(
chûd
);

341 
ödít
 -= 2;

345 
	}
}

347 
	$c⁄f
(
míu
 *menu)

349 
symbﬁ
 *
sym
;

350 
¥›îty
 *
¥›
;

351 
míu
 *
chûd
;

353 i‡(!
	`míu_is_visibÀ
(
míu
))

356 
sym
 = 
míu
->sym;

357 
¥›
 = 
míu
->
¥om±
;

358 i‡(
¥›
) {

359 c⁄° *
¥om±
;

361 
¥›
->
ty≥
) {

362 
P_MENU
:

367 i‡(
öput_mode
 !
ﬁdaskc⁄fig
 && 
roŸE¡ry
 !
míu
) {

368 
	`check_c⁄f
(
míu
);

372 
P_COMMENT
:

373 
¥om±
 = 
	`míu_gë_¥om±
(
míu
);

374 i‡(
¥om±
)

375 
	`¥ötf
("%*c\n%*c %s\n%*c\n",

376 
ödít
, '*',

377 
ödít
, '*', 
¥om±
,

378 
ödít
, '*');

384 i‡(!
sym
)

385 
c⁄f_chûds
;

387 i‡(
	`sym_is_choi˚
(
sym
)) {

388 
	`c⁄f_choi˚
(
míu
);

389 i‡(
sym
->
cuº
.
åi
 !
mod
)

391 
c⁄f_chûds
;

394 
sym
->
ty≥
) {

395 
S_INT
:

396 
S_HEX
:

397 
S_STRING
:

398 
	`c⁄f_°rög
(
míu
);

401 
	`c⁄f_sym
(
míu
);

405 
c⁄f_chûds
:

406 i‡(
sym
)

407 
ödít
 += 2;

408 
chûd
 = 
míu
->
li°
; chûd; chûd = chûd->
√xt
)

409 
	`c⁄f
(
chûd
);

410 i‡(
sym
)

411 
ödít
 -= 2;

412 
	}
}

414 
	$check_c⁄f
(
míu
 *menu)

416 
symbﬁ
 *
sym
;

417 
míu
 *
chûd
;

419 i‡(!
	`míu_is_visibÀ
(
míu
))

422 
sym
 = 
míu
->sym;

423 i‡(
sym
 && !
	`sym_has_vÆue
(sym)) {

424 i‡(
	`sym_is_ch™góbÀ
(
sym
) ||

425 (
	`sym_is_choi˚
(
sym
Ë&& 
	`sym_gë_åi°©e_vÆue
(symË=
yes
)) {

426 i‡(
öput_mode
 =
li°√wc⁄fig
) {

427 i‡(
sym
->
«me
) {

428 c⁄° *
°r
;

430 i‡(
sym
->
ty≥
 =
S_STRING
) {

431 
°r
 = 
	`sym_gë_°rög_vÆue
(
sym
);

432 
°r
 = 
	`sym_esˇ≥_°rög_vÆue
(str);

433 
	`¥ötf
("%s%s=%s\n", 
CONFIG_
, 
sym
->
«me
, 
°r
);

434 
	`‰ì
((*)
°r
);

436 
°r
 = 
	`sym_gë_°rög_vÆue
(
sym
);

437 
	`¥ötf
("%s%s=%s\n", 
CONFIG_
, 
sym
->
«me
, 
°r
);

440 } i‡(
öput_mode
 =
hñ≤ewc⁄fig
) {

441 
	`¥ötf
("-----\n");

442 
	`¥öt_hñp
(
míu
);

443 
	`¥ötf
("-----\n");

446 i‡(!
c⁄f_˙t
++)

447 
	`¥ötf
("*\n* Restart config...\n*\n");

448 
roŸE¡ry
 = 
	`míu_gë_∑ª¡_míu
(
míu
);

449 
	`c⁄f
(
roŸE¡ry
);

454 
chûd
 = 
míu
->
li°
; chûd; chûd = chûd->
√xt
)

455 
	`check_c⁄f
(
chûd
);

456 
	}
}

458 
›ti⁄
 
	gl⁄g_›ts
[] = {

459 {"ﬁdaskc⁄fig", 
no_¨gumít
, 
NULL
, 
ﬁdaskc⁄fig
},

460 {"ﬁdc⁄fig", 
no_¨gumít
, 
NULL
, 
ﬁdc⁄fig
},

461 {"syncc⁄fig", 
no_¨gumít
, 
NULL
, 
syncc⁄fig
},

462 {"defc⁄fig", 
ªquúed_¨gumít
, 
NULL
, 
defc⁄fig
},

463 {"ßvedefc⁄fig", 
ªquúed_¨gumít
, 
NULL
, 
ßvedefc⁄fig
},

464 {"Æ oc⁄fig", 
no_¨gumít
, 
NULL
, 
Æ oc⁄fig
},

465 {"Ælyesc⁄fig", 
no_¨gumít
, 
NULL
, 
Ælyesc⁄fig
},

466 {"Ælmodc⁄fig", 
no_¨gumít
, 
NULL
, 
Ælmodc⁄fig
},

467 {"Ældefc⁄fig", 
no_¨gumít
, 
NULL
, 
Ældefc⁄fig
},

468 {"øndc⁄fig", 
no_¨gumít
, 
NULL
, 
øndc⁄fig
},

469 {"li°√wc⁄fig", 
no_¨gumít
, 
NULL
, 
li°√wc⁄fig
},

470 {"hñ≤ewc⁄fig", 
no_¨gumít
, 
NULL
, 
hñ≤ewc⁄fig
},

471 {"ﬁddefc⁄fig", 
no_¨gumít
, 
NULL
, 
ﬁddefc⁄fig
},

472 {"yes2modc⁄fig", 
no_¨gumít
, 
NULL
, 
yes2modc⁄fig
},

473 {"mod2yesc⁄fig", 
no_¨gumít
, 
NULL
, 
mod2yesc⁄fig
},

474 {
NULL
, 0, NULL, 0}

477 
	$c⁄f_ußge
(c⁄° *
¥og«me
)

480 
	`¥ötf
("Ußge: %†[-s] [›ti⁄] <kc⁄fig-fûe>\n", 
¥og«me
);

481 
	`¥ötf
("[option] is _one_ ofÅhe following:\n");

482 
	`¥ötf
(" --listnewconfig ListÇew options\n");

483 
	`¥ötf
(" --helpnewconfig ListÇew optionsánd helpÅext\n");

484 
	`¥ötf
(" --oldaskconfig StartáÇew configuration usingáÜine-orientedÖrogram\n");

485 
	`¥ötf
(" --oldconfig Updateá configuration usingáÖrovided .configás base\n");

486 
	`¥ötf
(" --syncconfig SimilarÅo oldconfig but generates configuration in\n"

488 
	`¥ötf
(" --olddefconfig Sameás oldconfig but setsÇew symbolsÅoÅheir default value\n");

489 
	`¥ötf
(" --defconfig <file> New config with default defined in <file>\n");

490 
	`¥ötf
(" --savedefconfig <file> SaveÅhe minimal current configurationÅo <file>\n");

491 
	`¥ötf
(" --allnoconfig New config whereáll optionsáreánswered withÇo\n");

492 
	`¥ötf
(" --allyesconfig New config whereáll optionsáreánswered with yes\n");

493 
	`¥ötf
(" --allmodconfig New config whereáll optionsáreánswered with mod\n");

494 
	`¥ötf
(" --alldefconfig New config witháll symbols setÅo default\n");

495 
	`¥ötf
(" --randconfig New config withÑandománswerÅoáll options\n");

496 
	`¥ötf
(" --yes2modconfig Changeánswers from yesÅo mod ifÖossible\n");

497 
	`¥ötf
(" --mod2yesconfig Changeánswers from modÅo yes ifÖossible\n");

498 
	}
}

500 
	$maö
(
ac
, **
av
)

502 c⁄° *
¥og«me
 = 
av
[0];

503 
›t
;

504 c⁄° *
«me
, *
defc⁄fig_fûe
 = 
NULL
 ;

505 
no_c⁄f_wrôe
 = 0;

507 
ây_°dio
 = 
	`ißây
(0) && isatty(1);

509 (
›t
 = 
	`gë›t_l⁄g
(
ac
, 
av
, "s", 
l⁄g_›ts
, 
NULL
)) != -1) {

510 i‡(
›t
 == 's') {

511 
	`c⁄f_£t_mesßge_ˇŒback
(
NULL
);

514 
öput_mode
 = (öput_mode)
›t
;

515 
›t
) {

516 
syncc⁄fig
:

521 
	`c⁄f_£t_mesßge_ˇŒback
(
NULL
);

522 
sync_kc⁄fig
 = 1;

524 
defc⁄fig
:

525 
ßvedefc⁄fig
:

526 
defc⁄fig_fûe
 = 
›èrg
;

528 
øndc⁄fig
:

530 
timevÆ
 
now
;

531 
£ed
;

532 *
£ed_ív
;

538 
	`gëtimeofday
(&
now
, 
NULL
);

539 
£ed
 = ()((
now
.
tv_£c
 + 1Ë* (now.
tv_u£c
 + 1));

541 
£ed_ív
 = 
	`gëív
("KCONFIG_SEED");

542 if–
£ed_ív
 && *seed_env ) {

543 *
ídp
;

544 
tmp
 = ()
	`°πﬁ
(
£ed_ív
, &
ídp
, 0);

545 i‡(*
ídp
 == '\0') {

546 
£ed
 = 
tmp
;

549 
	`Ârötf
–
°dîr
, "KCONFIG_SEED=0x%X\n", 
£ed
 );

550 
	`§™d
(
£ed
);

553 
ﬁdaskc⁄fig
:

554 
ﬁdc⁄fig
:

555 
Æ oc⁄fig
:

556 
Ælyesc⁄fig
:

557 
Ælmodc⁄fig
:

558 
Ældefc⁄fig
:

559 
li°√wc⁄fig
:

560 
hñ≤ewc⁄fig
:

561 
ﬁddefc⁄fig
:

562 
yes2modc⁄fig
:

563 
mod2yesc⁄fig
:

566 
	`c⁄f_ußge
(
¥og«me
);

567 
	`exô
(1);

571 i‡(
ac
 =
›töd
) {

572 
	`Ârötf
(
°dîr
, "%s: Kc⁄fig fûêmissög\n", 
av
[0]);

573 
	`c⁄f_ußge
(
¥og«me
);

574 
	`exô
(1);

576 
«me
 = 
av
[
›töd
];

577 
	`c⁄f_∑r£
(
«me
);

580 
öput_mode
) {

581 
defc⁄fig
:

582 i‡(
	`c⁄f_ªad
(
defc⁄fig_fûe
)) {

583 
	`Ârötf
(
°dîr
,

587 
defc⁄fig_fûe
);

588 
	`exô
(1);

591 
ßvedefc⁄fig
:

592 
syncc⁄fig
:

593 
ﬁdaskc⁄fig
:

594 
ﬁdc⁄fig
:

595 
li°√wc⁄fig
:

596 
hñ≤ewc⁄fig
:

597 
ﬁddefc⁄fig
:

598 
yes2modc⁄fig
:

599 
mod2yesc⁄fig
:

600 
	`c⁄f_ªad
(
NULL
);

602 
Æ oc⁄fig
:

603 
Ælyesc⁄fig
:

604 
Ælmodc⁄fig
:

605 
Ældefc⁄fig
:

606 
øndc⁄fig
:

607 
«me
 = 
	`gëív
("KCONFIG_ALLCONFIG");

608 i‡(!
«me
)

610 i‡((
	`°rcmp
(
«me
, "") != 0) && (strcmp(name, "1") != 0)) {

611 i‡(
	`c⁄f_ªad_sim∂e
(
«me
, 
S_DEF_USER
)) {

612 
	`Ârötf
(
°dîr
,

614 
«me
);

615 
	`exô
(1);

619 
öput_mode
) {

620 
Æ oc⁄fig
: 
«me
 = "allno.config"; ;

621 
Ælyesc⁄fig
: 
«me
 = "allyes.config"; ;

622 
Ælmodc⁄fig
: 
«me
 = "allmod.config"; ;

623 
Ældefc⁄fig
: 
«me
 = "alldef.config"; ;

624 
øndc⁄fig
: 
«me
 = "allrandom.config"; ;

627 i‡(
	`c⁄f_ªad_sim∂e
(
«me
, 
S_DEF_USER
) &&

628 
	`c⁄f_ªad_sim∂e
("Æl.c⁄fig", 
S_DEF_USER
)) {

629 
	`Ârötf
(
°dîr
,

631 
«me
);

632 
	`exô
(1);

639 i‡(
sync_kc⁄fig
) {

640 
«me
 = 
	`gëív
("KCONFIG_NOSILENTUPDATE");

641 i‡(
«me
 && *name) {

642 i‡(
	`c⁄f_gë_ch™ged
()) {

643 
	`Ârötf
(
°dîr
,

647 
no_c⁄f_wrôe
 = 1;

651 
öput_mode
) {

652 
Æ oc⁄fig
:

653 
	`c⁄f_£t_Æl_√w_symbﬁs
(
def_no
);

655 
Ælyesc⁄fig
:

656 
	`c⁄f_£t_Æl_√w_symbﬁs
(
def_yes
);

658 
Ælmodc⁄fig
:

659 
	`c⁄f_£t_Æl_√w_symbﬁs
(
def_mod
);

661 
Ældefc⁄fig
:

662 
	`c⁄f_£t_Æl_√w_symbﬁs
(
def_deÁu…
);

664 
øndc⁄fig
:

666 
	`c⁄f_£t_Æl_√w_symbﬁs
(
def_øndom
)) ;

668 
defc⁄fig
:

669 
	`c⁄f_£t_Æl_√w_symbﬁs
(
def_deÁu…
);

671 
ßvedefc⁄fig
:

673 
yes2modc⁄fig
:

674 
	`c⁄f_ªwrôe_mod_‹_yes
(
def_y2m
);

676 
mod2yesc⁄fig
:

677 
	`c⁄f_ªwrôe_mod_‹_yes
(
def_m2y
);

679 
ﬁdaskc⁄fig
:

680 
roŸE¡ry
 = &
roŸmíu
;

681 
	`c⁄f
(&
roŸmíu
);

682 
öput_mode
 = 
ﬁdc⁄fig
;

684 
ﬁdc⁄fig
:

685 
li°√wc⁄fig
:

686 
hñ≤ewc⁄fig
:

687 
syncc⁄fig
:

690 
c⁄f_˙t
 = 0;

691 
	`check_c⁄f
(&
roŸmíu
);

692 } 
c⁄f_˙t
);

694 
ﬁddefc⁄fig
:

699 i‡(
öput_mode
 =
ßvedefc⁄fig
) {

700 i‡(
	`c⁄f_wrôe_defc⁄fig
(
defc⁄fig_fûe
)) {

701 
	`Ârötf
(
°dîr
, "n*** Error while saving defconfigÅo: %s\n\n",

702 
defc⁄fig_fûe
);

705 } i‡(
öput_mode
 !
li°√wc⁄fig
 && i≈ut_modê!
hñ≤ewc⁄fig
) {

706 i‡(!
no_c⁄f_wrôe
 && 
	`c⁄f_wrôe
(
NULL
)) {

707 
	`Ârötf
(
°dîr
, "\n*** Error during writing ofÅhe configuration.\n\n");

708 
	`exô
(1);

720 i‡(
	`c⁄f_wrôe_autoc⁄f
(
sync_kc⁄fig
) && sync_kconfig) {

721 
	`Ârötf
(
°dîr
,

727 
	}
}

	@nemu/tools/kconfig/confdata.c

6 
	~<sys/mm™.h
>

7 
	~<sys/°©.h
>

8 
	~<˘y≥.h
>

9 
	~<î∫o.h
>

10 
	~<f˙é.h
>

11 
	~<limôs.h
>

12 
	~<°d¨g.h
>

13 
	~<°dio.h
>

14 
	~<°dlib.h
>

15 
	~<°rög.h
>

16 
	~<time.h
>

17 
	~<uni°d.h
>

19 
	~"lkc.h
"

22 
boﬁ
 
	$is_¥e£¡
(c⁄° *
∑th
)

24 
°©
 
°
;

26  !
	`°©
(
∑th
, &
°
);

27 
	}
}

30 
boﬁ
 
	$is_dú
(c⁄° *
∑th
)

32 
°©
 
°
;

34 i‡(
	`°©
(
∑th
, &
°
))

37  
	`S_ISDIR
(
°
.
°_mode
);

38 
	}
}

41 
boﬁ
 
	$is_ßme
(c⁄° *
fûe1
, c⁄° *
fûe2
)

43 
fd1
, 
fd2
;

44 
°©
 
°1
, 
°2
;

45 *
m≠1
, *
m≠2
;

46 
boﬁ
 
ªt
 = 
Ál£
;

48 
fd1
 = 
	`›í
(
fûe1
, 
O_RDONLY
);

49 i‡(
fd1
 < 0)

50  
ªt
;

52 
fd2
 = 
	`›í
(
fûe2
, 
O_RDONLY
);

53 i‡(
fd2
 < 0)

54 
˛o£1
;

56 
ªt
 = 
	`f°©
(
fd1
, &
°1
);

57 i‡(
ªt
)

58 
˛o£2
;

59 
ªt
 = 
	`f°©
(
fd2
, &
°2
);

60 i‡(
ªt
)

61 
˛o£2
;

63 i‡(
°1
.
°_size
 !
°2
.st_size)

64 
˛o£2
;

66 
m≠1
 = 
	`mm≠
(
NULL
, 
°1
.
°_size
, 
PROT_READ
, 
MAP_PRIVATE
, 
fd1
, 0);

67 i‡(
m≠1
 =
MAP_FAILED
)

68 
˛o£2
;

70 
m≠2
 = 
	`mm≠
(
NULL
, 
°2
.
°_size
, 
PROT_READ
, 
MAP_PRIVATE
, 
fd2
, 0);

71 i‡(
m≠2
 =
MAP_FAILED
)

72 
˛o£2
;

74 i‡(
	`bcmp
(
m≠1
, 
m≠2
, 
°1
.
°_size
))

75 
˛o£2
;

77 
ªt
 = 
åue
;

78 
˛o£2
:

79 
	`˛o£
(
fd2
);

80 
˛o£1
:

81 
	`˛o£
(
fd1
);

83  
ªt
;

84 
	}
}

91 
	$make_∑ª¡_dú
(c⁄° *
∑th
)

93 
tmp
[
PATH_MAX
 + 1];

94 *
p
;

96 
	`°∫˝y
(
tmp
, 
∑th
, (tmp));

97 
tmp
[(tmp) - 1] = 0;

100 
p
 = 
	`°ºchr
(
tmp
, '/');

101 i‡(!
p
)

103 *(
p
 + 1) = 0;

106 
p
 = 
tmp
;

107 *
p
 == '/')

108 
p
++;

110 (
p
 = 
	`°rchr
(p, '/'))) {

111 *
p
 = 0;

114 i‡(!
	`is_dú
(
tmp
Ë&& 
	`mkdú
(tmp, 0755))

117 *
p
 = '/';

118 *
p
 == '/')

119 
p
++;

123 
	}
}

125 
	gdïfûe_∑th
[
PATH_MAX
];

126 
size_t
 
	gdïfûe_¥efix_Àn
;

129 
	$c⁄f_touch_dï
(c⁄° *
«me
)

131 
fd
, 
ªt
;

132 c⁄° *
s
;

133 *
d
, 
c
;

136 i‡(
dïfûe_¥efix_Àn
 + 
	`°æí
(
«me
Ë+ 3 > (
dïfûe_∑th
))

139 
d
 = 
dïfûe_∑th
 + 
dïfûe_¥efix_Àn
;

140 
s
 = 
«me
;

142 (
c
 = *
s
++))

143 *
d
++ = (
c
 ='_'Ë? '/' : 
	`tﬁowî
(c);

144 
	`°r˝y
(
d
, ".h");

147 
fd
 = 
	`›í
(
dïfûe_∑th
, 
O_WRONLY
 | 
O_CREAT
 | 
O_TRUNC
, 0644);

148 i‡(
fd
 == -1) {

149 i‡(
î∫o
 !
ENOENT
)

152 
ªt
 = 
	`make_∑ª¡_dú
(
dïfûe_∑th
);

153 i‡(
ªt
)

154  
ªt
;

157 
fd
 = 
	`›í
(
dïfûe_∑th
, 
O_WRONLY
 | 
O_CREAT
 | 
O_TRUNC
, 0644);

158 i‡(
fd
 == -1)

161 
	`˛o£
(
fd
);

164 
	}
}

166 
	sc⁄f_¥öãr
 {

167 (*
	m¥öt_symbﬁ
)(
	mFILE
 *, 
	msymbﬁ
 *, const *, *);

168 (*
	m¥öt_commít
)(
	mFILE
 *, const *, *);

171 
	$c⁄f_w¨nög
(c⁄° *
fmt
, ...)

172 
	`__©åibuã__
 ((
	`f‹m©
 (
¥ötf
, 1, 2)));

174 
	$c⁄f_mesßge
(c⁄° *
fmt
, ...)

175 
	`__©åibuã__
 ((
	`f‹m©
 (
¥ötf
, 1, 2)));

177 c⁄° *
c⁄f_fûíame
;

178 
c⁄f_löío
, 
c⁄f_w¨nögs
;

180 
	$c⁄f_w¨nög
(c⁄° *
fmt
, ...)

182 
va_li°
 
≠
;

183 
	`va_°¨t
(
≠
, 
fmt
);

184 
	`Ârötf
(
°dîr
, "%s:%d:w¨nög: ", 
c⁄f_fûíame
, 
c⁄f_löío
);

185 
	`vÂrötf
(
°dîr
, 
fmt
, 
≠
);

186 
	`Ârötf
(
°dîr
, "\n");

187 
	`va_íd
(
≠
);

188 
c⁄f_w¨nögs
++;

189 
	}
}

191 
	$c⁄f_deÁu…_mesßge_ˇŒback
(c⁄° *
s
)

193 
	`¥ötf
("#\n# ");

194 
	`¥ötf
("%s", 
s
);

195 
	`¥ötf
("\n#\n");

196 
	}
}

198 (*
c⁄f_mesßge_ˇŒback
)(c⁄° *
s
) =

199 
c⁄f_deÁu…_mesßge_ˇŒback
;

200 
	$c⁄f_£t_mesßge_ˇŒback
((*
‚
)(c⁄° *
s
))

202 
c⁄f_mesßge_ˇŒback
 = 
‚
;

203 
	}
}

205 
	$c⁄f_mesßge
(c⁄° *
fmt
, ...)

207 
va_li°
 
≠
;

208 
buf
[4096];

210 i‡(!
c⁄f_mesßge_ˇŒback
)

213 
	`va_°¨t
(
≠
, 
fmt
);

215 
	`v¢¥ötf
(
buf
, (buf), 
fmt
, 
≠
);

216 
	`c⁄f_mesßge_ˇŒback
(
buf
);

217 
	`va_íd
(
≠
);

218 
	}
}

220 c⁄° *
	$c⁄f_gë_c⁄fig«me
()

222 *
«me
 = 
	`gëív
("KCONFIG_CONFIG");

224  
«me
 ?Çame : ".config";

225 
	}
}

227 c⁄° *
	$c⁄f_gë_autoc⁄fig_«me
()

229 *
«me
 = 
	`gëív
("KCONFIG_AUTOCONFIG");

231  
«me
 ?Çame : "include/config/auto.conf";

232 
	}
}

234 
	$c⁄f_£t_sym_vÆ
(
symbﬁ
 *
sym
, 
def
, 
def_Êags
, *
p
)

236 *
p2
;

238 
sym
->
ty≥
) {

239 
S_TRISTATE
:

240 i‡(
p
[0] == 'm') {

241 
sym
->
def
[def].
åi
 = 
mod
;

242 
sym
->
Êags
 |
def_Êags
;

246 
S_BOOLEAN
:

247 i‡(
p
[0] == 'y') {

248 
sym
->
def
[def].
åi
 = 
yes
;

249 
sym
->
Êags
 |
def_Êags
;

252 i‡(
p
[0] == 'n') {

253 
sym
->
def
[def].
åi
 = 
no
;

254 
sym
->
Êags
 |
def_Êags
;

257 i‡(
def
 !
S_DEF_AUTO
)

258 
	`c⁄f_w¨nög
("symbol value '%s' invalid for %s",

259 
p
, 
sym
->
«me
);

261 
S_STRING
:

262 i‡(*
p
++ != '"')

264 
p2
 = 
p
; (p2 = 
	`°Ωbrk
(p2, "\"\\"));Ö2++) {

265 i‡(*
p2
 == '"') {

266 *
p2
 = 0;

269 
	`memmove
(
p2
,Ö2 + 1, 
	`°æí
(p2));

271 i‡(!
p2
) {

272 i‡(
def
 !
S_DEF_AUTO
)

273 
	`c⁄f_w¨nög
("invalid string found");

277 
S_INT
:

278 
S_HEX
:

279 i‡(
	`sym_°rög_vÆid
(
sym
, 
p
)) {

280 
sym
->
def
[def].
vÆ
 = 
	`x°rdup
(
p
);

281 
sym
->
Êags
 |
def_Êags
;

283 i‡(
def
 !
S_DEF_AUTO
)

284 
	`c⁄f_w¨nög
("symbol value '%s' invalid for %s",

285 
p
, 
sym
->
«me
);

293 
	}
}

295 
	#LINE_GROWTH
 16

	)

296 
	$add_byã
(
c
, **
löïå
, 
size_t
 
¶í
, size_à*
n
)

298 *
∆öe
;

299 
size_t
 
√w_size
 = 
¶í
 + 1;

300 i‡(
√w_size
 > *
n
) {

301 
√w_size
 +
LINE_GROWTH
 - 1;

302 
√w_size
 *= 2;

303 
∆öe
 = 
	`xªÆloc
(*
löïå
, 
√w_size
);

304 i‡(!
∆öe
)

307 *
löïå
 = 
∆öe
;

308 *
n
 = 
√w_size
;

311 (*
löïå
)[
¶í
] = 
c
;

314 
	}
}

316 
ssize_t
 
	$com∑t_gëlöe
(**
löïå
, 
size_t
 *
n
, 
FILE
 *
°ªam
)

318 *
löe
 = *
löïå
;

319 
size_t
 
¶í
 = 0;

322 
c
 = 
	`gëc
(
°ªam
);

324 
c
) {

326 i‡(
	`add_byã
(
c
, &
löe
, 
¶í
, 
n
) < 0)

327 
e_out
;

328 
¶í
++;

330 
EOF
:

331 i‡(
	`add_byã
('\0', &
löe
, 
¶í
, 
n
) < 0)

332 
e_out
;

333 *
löïå
 = 
löe
;

334 i‡(
¶í
 == 0)

336  
¶í
;

338 i‡(
	`add_byã
(
c
, &
löe
, 
¶í
, 
n
) < 0)

339 
e_out
;

340 
¶í
++;

344 
e_out
:

345 
löe
[
¶í
-1] = '\0';

346 *
löïå
 = 
löe
;

348 
	}
}

350 
	$c⁄f_ªad_sim∂e
(c⁄° *
«me
, 
def
)

352 
FILE
 *
ö
 = 
NULL
;

353 *
löe
 = 
NULL
;

354 
size_t
 
löe_asize
 = 0;

355 *
p
, *
p2
;

356 
symbﬁ
 *
sym
;

357 
i
, 
def_Êags
;

359 i‡(
«me
) {

360 
ö
 = 
	`zc⁄f_f›í
(
«me
);

362 
¥›îty
 *
¥›
;

364 
«me
 = 
	`c⁄f_gë_c⁄fig«me
();

365 
ö
 = 
	`zc⁄f_f›í
(
«me
);

366 i‡(
ö
)

367 
lﬂd
;

368 
	`sym_add_ch™ge_cou¡
(1);

369 i‡(!
sym_defc⁄fig_li°
)

372 
	`f‹_Æl_deÁu…s
(
sym_defc⁄fig_li°
, 
¥›
) {

373 i‡(
	`ex¥_ˇlc_vÆue
(
¥›
->
visibÀ
.
ex¥
Ë=
no
 ||

374 
¥›
->
ex¥
->
ty≥
 !
E_SYMBOL
)

376 
	`sym_ˇlc_vÆue
(
¥›
->
ex¥
->
À·
.
sym
);

377 
«me
 = 
	`sym_gë_°rög_vÆue
(
¥›
->
ex¥
->
À·
.
sym
);

378 
ö
 = 
	`zc⁄f_f›í
(
«me
);

379 i‡(
ö
) {

380 
	`c⁄f_mesßge
("using defaults found in %s",

381 
«me
);

382 
lﬂd
;

386 i‡(!
ö
)

389 
lﬂd
:

390 
c⁄f_fûíame
 = 
«me
;

391 
c⁄f_löío
 = 0;

392 
c⁄f_w¨nögs
 = 0;

394 
def_Êags
 = 
SYMBOL_DEF
 << 
def
;

395 
	`f‹_Æl_symbﬁs
(
i
, 
sym
) {

396 
sym
->
Êags
 |
SYMBOL_CHANGED
;

397 
sym
->
Êags
 &~(
def_Êags
|
SYMBOL_VALID
);

398 i‡(
	`sym_is_choi˚
(
sym
))

399 
sym
->
Êags
 |
def_Êags
;

400 
sym
->
ty≥
) {

401 
S_INT
:

402 
S_HEX
:

403 
S_STRING
:

404 i‡(
sym
->
def
[def].
vÆ
)

405 
	`‰ì
(
sym
->
def
[def].
vÆ
);

408 
sym
->
def
[def].
vÆ
 = 
NULL
;

409 
sym
->
def
[def].
åi
 = 
no
;

413 
	`com∑t_gëlöe
(&
löe
, &
löe_asize
, 
ö
) != -1) {

414 
c⁄f_löío
++;

415 
sym
 = 
NULL
;

416 i‡(
löe
[0] == '#') {

417 i‡(
	`memcmp
(
löe
 + 2, 
CONFIG_
, 
	`°æí
(CONFIG_)))

419 
p
 = 
	`°rchr
(
löe
 + 2 + 
	`°æí
(
CONFIG_
), ' ');

420 i‡(!
p
)

422 *
p
++ = 0;

423 i‡(
	`°∫cmp
(
p
, "isÇot set", 10))

425 i‡(
def
 =
S_DEF_USER
) {

426 
sym
 = 
	`sym_föd
(
löe
 + 2 + 
	`°æí
(
CONFIG_
));

427 i‡(!
sym
) {

428 
	`sym_add_ch™ge_cou¡
(1);

432 
sym
 = 
	`sym_lookup
(
löe
 + 2 + 
	`°æí
(
CONFIG_
), 0);

433 i‡(
sym
->
ty≥
 =
S_UNKNOWN
)

434 
sym
->
ty≥
 = 
S_BOOLEAN
;

436 i‡(
sym
->
Êags
 & 
def_Êags
) {

437 
	`c⁄f_w¨nög
("ovîride:ÑóssignögÅÿsymbﬁ %s", 
sym
->
«me
);

439 
sym
->
ty≥
) {

440 
S_BOOLEAN
:

441 
S_TRISTATE
:

442 
sym
->
def
[def].
åi
 = 
no
;

443 
sym
->
Êags
 |
def_Êags
;

448 } i‡(
	`memcmp
(
löe
, 
CONFIG_
, 
	`°æí
(CONFIG_)) == 0) {

449 
p
 = 
	`°rchr
(
löe
 + 
	`°æí
(
CONFIG_
), '=');

450 i‡(!
p
)

452 *
p
++ = 0;

453 
p2
 = 
	`°rchr
(
p
, '\n');

454 i‡(
p2
) {

455 *
p2
-- = 0;

456 i‡(*
p2
 == '\r')

457 *
p2
 = 0;

460 
sym
 = 
	`sym_föd
(
löe
 + 
	`°æí
(
CONFIG_
));

461 i‡(!
sym
) {

462 i‡(
def
 =
S_DEF_AUTO
)

469 
	`c⁄f_touch_dï
(
löe
 + 
	`°æí
(
CONFIG_
));

471 
	`sym_add_ch™ge_cou¡
(1);

475 i‡(
sym
->
Êags
 & 
def_Êags
) {

476 
	`c⁄f_w¨nög
("ovîride:ÑóssignögÅÿsymbﬁ %s", 
sym
->
«me
);

478 i‡(
	`c⁄f_£t_sym_vÆ
(
sym
, 
def
, 
def_Êags
, 
p
))

481 i‡(
löe
[0] != '\r' &&Üine[0] != '\n')

482 
	`c⁄f_w¨nög
("unexpected data: %.*s",

483 ()
	`°rc•n
(
löe
, "\r\n"),Üine);

488 i‡(
sym
 && 
	`sym_is_choi˚_vÆue
(sym)) {

489 
symbﬁ
 *
cs
 = 
	`¥›_gë_symbﬁ
(
	`sym_gë_choi˚_¥›
(
sym
));

490 
sym
->
def
[def].
åi
) {

491 
no
:

493 
mod
:

494 i‡(
cs
->
def
[def].
åi
 =
yes
) {

495 
	`c⁄f_w¨nög
("%†¸óã†öc⁄si°íàchoi˚ sèã", 
sym
->
«me
);

496 
cs
->
Êags
 &~
def_Êags
;

499 
yes
:

500 i‡(
cs
->
def
[def].
åi
 !
no
)

501 
	`c⁄f_w¨nög
("ovîride: %†ch™ge†choi˚ sèã", 
sym
->
«me
);

502 
cs
->
def
[def].
vÆ
 = 
sym
;

505 
cs
->
def
[def].
åi
 = 
	`EXPR_OR
(cs->def[def].åi, 
sym
->def[def].tri);

508 
	`‰ì
(
löe
);

509 
	`f˛o£
(
ö
);

511 
	}
}

513 
	$c⁄f_ªad
(c⁄° *
«me
)

515 
symbﬁ
 *
sym
;

516 
c⁄f_unßved
 = 0;

517 
i
;

519 
	`sym_£t_ch™ge_cou¡
(0);

521 i‡(
	`c⁄f_ªad_sim∂e
(
«me
, 
S_DEF_USER
)) {

522 
	`sym_ˇlc_vÆue
(
moduÀs_sym
);

526 
	`sym_ˇlc_vÆue
(
moduÀs_sym
);

528 
	`f‹_Æl_symbﬁs
(
i
, 
sym
) {

529 
	`sym_ˇlc_vÆue
(
sym
);

530 i‡(
	`sym_is_choi˚
(
sym
Ë|| (sym->
Êags
 & 
SYMBOL_NO_WRITE
))

532 i‡(
	`sym_has_vÆue
(
sym
Ë&& (sym->
Êags
 & 
SYMBOL_WRITE
)) {

534 
sym
->
ty≥
) {

535 
S_BOOLEAN
:

536 
S_TRISTATE
:

537 i‡(
sym
->
def
[
S_DEF_USER
].
åi
 =
	`sym_gë_åi°©e_vÆue
(sym))

541 i‡(!
	`°rcmp
(
sym
->
cuº
.
vÆ
, sym->
def
[
S_DEF_USER
].val))

545 } i‡(!
	`sym_has_vÆue
(
sym
Ë&& !(sym->
Êags
 & 
SYMBOL_WRITE
))

548 
c⁄f_unßved
++;

552 
	`f‹_Æl_symbﬁs
(
i
, 
sym
) {

553 i‡(
	`sym_has_vÆue
(
sym
Ë&& !
	`sym_is_choi˚_vÆue
(sym)) {

559 i‡(
sym
->
visibÀ
 =
no
 && !
c⁄f_unßved
)

560 
sym
->
Êags
 &~
SYMBOL_DEF_USER
;

561 
sym
->
ty≥
) {

562 
S_STRING
:

563 
S_INT
:

564 
S_HEX
:

566 i‡(
	`sym_°rög_wôhö_ønge
(
sym
, sym->
def
[
S_DEF_USER
].
vÆ
))

568 
sym
->
Êags
 &~(
SYMBOL_VALID
|
SYMBOL_DEF_USER
);

569 
c⁄f_unßved
++;

577 
	`sym_add_ch™ge_cou¡
(
c⁄f_w¨nögs
 || 
c⁄f_unßved
);

580 
	}
}

591 
	$kc⁄fig_¥öt_symbﬁ
(
FILE
 *
Â
, 
symbﬁ
 *
sym
, c⁄° *
vÆue
, *
¨g
)

594 
sym
->
ty≥
) {

595 
S_BOOLEAN
:

596 
S_TRISTATE
:

597 i‡(*
vÆue
 == 'n') {

598 
boﬁ
 
skù_un£t
 = (
¨g
 !
NULL
);

600 i‡(!
skù_un£t
)

601 
	`Ârötf
(
Â
, "# %s%s isÇot set\n",

602 
CONFIG_
, 
sym
->
«me
);

610 
	`Ârötf
(
Â
, "%s%s=%s\n", 
CONFIG_
, 
sym
->
«me
, 
vÆue
);

611 
	}
}

614 
	$kc⁄fig_¥öt_commít
(
FILE
 *
Â
, c⁄° *
vÆue
, *
¨g
)

616 c⁄° *
p
 = 
vÆue
;

617 
size_t
 
l
;

620 
l
 = 
	`°rc•n
(
p
, "\n");

621 
	`Ârötf
(
Â
, "#");

622 i‡(
l
) {

623 
	`Ârötf
(
Â
, " ");

624 
	`xfwrôe
(
p
, 
l
, 1, 
Â
);

625 
p
 +
l
;

627 
	`Ârötf
(
Â
, "\n");

628 i‡(*
p
++ == '\0')

631 
	}
}

633 
c⁄f_¥öãr
 
	gkc⁄fig_¥öãr_cb
 =

635 .
¥öt_symbﬁ
 = 
kc⁄fig_¥öt_symbﬁ
,

636 .
	g¥öt_commít
 = 
kc⁄fig_¥öt_commít
,

645 
	$hódî_¥öt_symbﬁ
(
FILE
 *
Â
, 
symbﬁ
 *
sym
, c⁄° *
vÆue
, *
¨g
)

648 
sym
->
ty≥
) {

649 
S_BOOLEAN
:

650 
S_TRISTATE
: {

651 c⁄° *
suffix
 = "";

653 *
vÆue
) {

657 
suffix
 = "_MODULE";

660 
	`Ârötf
(
Â
, "#define %s%s%s 1\n",

661 
CONFIG_
, 
sym
->
«me
, 
suffix
);

665 
S_HEX
: {

666 c⁄° *
¥efix
 = "";

668 i‡(
vÆue
[0] != '0' || (value[1] != 'x' && value[1] != 'X'))

669 
¥efix
 = "0x";

670 
	`Ârötf
(
Â
, "#define %s%s %s%s\n",

671 
CONFIG_
, 
sym
->
«me
, 
¥efix
, 
vÆue
);

674 
S_STRING
:

675 
S_INT
:

676 
	`Ârötf
(
Â
, "#define %s%s %s\n",

677 
CONFIG_
, 
sym
->
«me
, 
vÆue
);

683 
	}
}

686 
	$hódî_¥öt_commít
(
FILE
 *
Â
, c⁄° *
vÆue
, *
¨g
)

688 c⁄° *
p
 = 
vÆue
;

689 
size_t
 
l
;

691 
	`Ârötf
(
Â
, "/*\n");

693 
l
 = 
	`°rc•n
(
p
, "\n");

694 
	`Ârötf
(
Â
, " *");

695 i‡(
l
) {

696 
	`Ârötf
(
Â
, " ");

697 
	`xfwrôe
(
p
, 
l
, 1, 
Â
);

698 
p
 +
l
;

700 
	`Ârötf
(
Â
, "\n");

701 i‡(*
p
++ == '\0')

704 
	`Ârötf
(
Â
, " */\n");

705 
	}
}

707 
c⁄f_¥öãr
 
	ghódî_¥öãr_cb
 =

709 .
¥öt_symbﬁ
 = 
hódî_¥öt_symbﬁ
,

710 .
	g¥öt_commít
 = 
hódî_¥öt_commít
,

713 
	$c⁄f_wrôe_symbﬁ
(
FILE
 *
Â
, 
symbﬁ
 *
sym
,

714 
c⁄f_¥öãr
 *
¥öãr
, *
¥öãr_¨g
)

716 c⁄° *
°r
;

718 
sym
->
ty≥
) {

719 
S_UNKNOWN
:

721 
S_STRING
:

722 
°r
 = 
	`sym_gë_°rög_vÆue
(
sym
);

723 
°r
 = 
	`sym_esˇ≥_°rög_vÆue
(str);

724 
¥öãr
->
	`¥öt_symbﬁ
(
Â
, 
sym
, 
°r
, 
¥öãr_¨g
);

725 
	`‰ì
((*)
°r
);

728 
°r
 = 
	`sym_gë_°rög_vÆue
(
sym
);

729 
¥öãr
->
	`¥öt_symbﬁ
(
Â
, 
sym
, 
°r
, 
¥öãr_¨g
);

731 
	}
}

734 
	$c⁄f_wrôe_hódög
(
FILE
 *
Â
, 
c⁄f_¥öãr
 *
¥öãr
, *
¥öãr_¨g
)

736 
buf
[256];

738 
	`¢¥ötf
(
buf
, (buf),

742 
roŸmíu
.
¥om±
->
ãxt
);

744 
¥öãr
->
	`¥öt_commít
(
Â
, 
buf
, 
¥öãr_¨g
);

745 
	}
}

751 
	$c⁄f_wrôe_defc⁄fig
(c⁄° *
fûíame
)

753 
symbﬁ
 *
sym
;

754 
míu
 *menu;

755 
FILE
 *
out
;

757 
out
 = 
	`f›í
(
fûíame
, "w");

758 i‡(!
out
)

761 
	`sym_˛ór_Æl_vÆid
();

764 
míu
 = 
roŸmíu
.
li°
;

766 
míu
 !
NULL
)

768 
sym
 = 
míu
->sym;

769 i‡(
sym
 =
NULL
) {

770 i‡(!
	`míu_is_visibÀ
(
míu
))

771 
√xt_míu
;

772 } i‡(!
	`sym_is_choi˚
(
sym
)) {

773 
	`sym_ˇlc_vÆue
(
sym
);

774 i‡(!(
sym
->
Êags
 & 
SYMBOL_WRITE
))

775 
√xt_míu
;

776 
sym
->
Êags
 &~
SYMBOL_WRITE
;

778 i‡(!
	`sym_is_ch™góbÀ
(
sym
))

779 
√xt_míu
;

781 i‡(
	`°rcmp
(
	`sym_gë_°rög_vÆue
(
sym
), 
	`sym_gë_°rög_deÁu…
(sym)) == 0)

782 
√xt_míu
;

791 i‡(
	`sym_is_choi˚_vÆue
(
sym
)) {

792 
symbﬁ
 *
cs
;

793 
symbﬁ
 *
ds
;

795 
cs
 = 
	`¥›_gë_symbﬁ
(
	`sym_gë_choi˚_¥›
(
sym
));

796 
ds
 = 
	`sym_choi˚_deÁu…
(
cs
);

797 i‡(!
	`sym_is_›ti⁄Æ
(
cs
Ë&& 
sym
 =
ds
) {

798 i‡((
sym
->
ty≥
 =
S_BOOLEAN
) &&

799 
	`sym_gë_åi°©e_vÆue
(
sym
Ë=
yes
)

800 
√xt_míu
;

803 
	`c⁄f_wrôe_symbﬁ
(
out
, 
sym
, &
kc⁄fig_¥öãr_cb
, 
NULL
);

805 
√xt_míu
:

806 i‡(
míu
->
li°
 !
NULL
) {

807 
míu
 = míu->
li°
;

809 i‡(
míu
->
√xt
 !
NULL
) {

810 
míu
 = míu->
√xt
;

812 (
míu
 = míu->
∑ª¡
)) {

813 i‡(
míu
->
√xt
 !
NULL
) {

814 
míu
 = míu->
√xt
;

820 
	`f˛o£
(
out
);

822 
	}
}

824 
	$c⁄f_wrôe
(c⁄° *
«me
)

826 
FILE
 *
out
;

827 
symbﬁ
 *
sym
;

828 
míu
 *menu;

829 c⁄° *
°r
;

830 
tm≤ame
[
PATH_MAX
 + 1], 
ﬁd«me
[PATH_MAX + 1];

831 *
ív
;

832 
i
;

833 
boﬁ
 
√ed_√wlöe
 = 
Ál£
;

835 i‡(!
«me
)

836 
«me
 = 
	`c⁄f_gë_c⁄fig«me
();

838 i‡(!*
«me
) {

839 
	`Ârötf
(
°dîr
, "configÇame isÉmpty\n");

843 i‡(
	`is_dú
(
«me
)) {

844 
	`Ârötf
(
°dîr
, "%s: I†®dúe˘‹y\n", 
«me
);

848 i‡(
	`make_∑ª¡_dú
(
«me
))

851 
ív
 = 
	`gëív
("KCONFIG_OVERWRITECONFIG");

852 i‡(
ív
 && *env) {

853 *
tm≤ame
 = 0;

854 
out
 = 
	`f›í
(
«me
, "w");

856 
	`¢¥ötf
(
tm≤ame
, (tmpname), "%s.%d.tmp",

857 
«me
, ()
	`gëpid
());

858 
out
 = 
	`f›í
(
tm≤ame
, "w");

860 i‡(!
out
)

863 
	`c⁄f_wrôe_hódög
(
out
, &
kc⁄fig_¥öãr_cb
, 
NULL
);

865 i‡(!
	`c⁄f_gë_ch™ged
())

866 
	`sym_˛ór_Æl_vÆid
();

868 
míu
 = 
roŸmíu
.
li°
;

869 
míu
) {

870 
sym
 = 
míu
->sym;

871 i‡(!
sym
) {

872 i‡(!
	`míu_is_visibÀ
(
míu
))

873 
√xt
;

874 
°r
 = 
	`míu_gë_¥om±
(
míu
);

875 
	`Ârötf
(
out
, "\n"

878 "#\n", 
°r
);

879 
√ed_√wlöe
 = 
Ál£
;

880 } i‡(!(
sym
->
Êags
 & 
SYMBOL_CHOICE
) &&

881 !(
sym
->
Êags
 & 
SYMBOL_WRITTEN
)) {

882 
	`sym_ˇlc_vÆue
(
sym
);

883 i‡(!(
sym
->
Êags
 & 
SYMBOL_WRITE
))

884 
√xt
;

885 i‡(
√ed_√wlöe
) {

886 
	`Ârötf
(
out
, "\n");

887 
√ed_√wlöe
 = 
Ál£
;

889 
sym
->
Êags
 |
SYMBOL_WRITTEN
;

890 
	`c⁄f_wrôe_symbﬁ
(
out
, 
sym
, &
kc⁄fig_¥öãr_cb
, 
NULL
);

893 
√xt
:

894 i‡(
míu
->
li°
) {

895 
míu
 = míu->
li°
;

898 i‡(
míu
->
√xt
)

899 
míu
 = míu->
√xt
;

900 (
míu
 = míu->
∑ª¡
)) {

901 i‡(!
míu
->
sym
 && 
	`míu_is_visibÀ
(menu) &&

902 
míu
 !&
roŸmíu
) {

903 
°r
 = 
	`míu_gë_¥om±
(
míu
);

904 
	`Ârötf
(
out
, "#Énd o‡%s\n", 
°r
);

905 
√ed_√wlöe
 = 
åue
;

907 i‡(
míu
->
√xt
) {

908 
míu
 = míu->
√xt
;

913 
	`f˛o£
(
out
);

915 
	`f‹_Æl_symbﬁs
(
i
, 
sym
)

916 
sym
->
Êags
 &~
SYMBOL_WRITTEN
;

918 i‡(*
tm≤ame
) {

919 i‡(
	`is_ßme
(
«me
, 
tm≤ame
)) {

920 
	`c⁄f_mesßge
("Nÿch™gêtÿ%s", 
«me
);

921 
	`u∆ök
(
tm≤ame
);

922 
	`sym_£t_ch™ge_cou¡
(0);

926 
	`¢¥ötf
(
ﬁd«me
, (ﬁd«me), "%s.ﬁd", 
«me
);

927 
	`ª«me
(
«me
, 
ﬁd«me
);

928 i‡(
	`ª«me
(
tm≤ame
, 
«me
))

932 
	`c⁄f_mesßge
("c⁄figuøti⁄ wrôã¿tÿ%s", 
«me
);

934 
	`sym_£t_ch™ge_cou¡
(0);

937 
	}
}

940 
	$c⁄f_wrôe_dï
(c⁄° *
«me
)

942 
fûe
 *file;

943 
FILE
 *
out
;

945 
out
 = 
	`f›í
("..config.tmp", "w");

946 i‡(!
out
)

948 
	`Ârötf
(
out
, "deps_config := \\\n");

949 
fûe
 = 
fûe_li°
; fûe; fûêfûe->
√xt
) {

950 i‡(
fûe
->
√xt
)

951 
	`Ârötf
(
out
, "\t%†\\\n", 
fûe
->
«me
);

953 
	`Ârötf
(
out
, "\t%s\n", 
fûe
->
«me
);

955 
	`Ârötf
(
out
, "\n%s: \\\n"

956 "\t$(dïs_c⁄fig)\n\n", 
	`c⁄f_gë_autoc⁄fig_«me
());

958 
	`ív_wrôe_dï
(
out
, 
	`c⁄f_gë_autoc⁄fig_«me
());

960 
	`Ârötf
(
out
, "\n$(deps_config): ;\n");

961 
	`f˛o£
(
out
);

963 i‡(
	`make_∑ª¡_dú
(
«me
))

965 
	`ª«me
("..c⁄fig.tmp", 
«me
);

967 
	}
}

969 
	$c⁄f_touch_dïs
()

971 c⁄° *
«me
;

972 
symbﬁ
 *
sym
;

973 
ªs
, 
i
;

975 
	`°r˝y
(
dïfûe_∑th
, "include/config/");

976 
dïfûe_¥efix_Àn
 = 
	`°æí
(
dïfûe_∑th
);

978 
«me
 = 
	`c⁄f_gë_autoc⁄fig_«me
();

979 
	`c⁄f_ªad_sim∂e
(
«me
, 
S_DEF_AUTO
);

980 
	`sym_ˇlc_vÆue
(
moduÀs_sym
);

982 
	`f‹_Æl_symbﬁs
(
i
, 
sym
) {

983 
	`sym_ˇlc_vÆue
(
sym
);

984 i‡((
sym
->
Êags
 & 
SYMBOL_NO_WRITE
Ë|| !sym->
«me
)

986 i‡(
sym
->
Êags
 & 
SYMBOL_WRITE
) {

987 i‡(
sym
->
Êags
 & 
SYMBOL_DEF_AUTO
) {

992 
sym
->
ty≥
) {

993 
S_BOOLEAN
:

994 
S_TRISTATE
:

995 i‡(
	`sym_gë_åi°©e_vÆue
(
sym
) ==

996 
sym
->
def
[
S_DEF_AUTO
].
åi
)

999 
S_STRING
:

1000 
S_HEX
:

1001 
S_INT
:

1002 i‡(!
	`°rcmp
(
	`sym_gë_°rög_vÆue
(
sym
),

1003 
sym
->
def
[
S_DEF_AUTO
].
vÆ
))

1014 
sym
->
ty≥
) {

1015 
S_BOOLEAN
:

1016 
S_TRISTATE
:

1017 i‡(
	`sym_gë_åi°©e_vÆue
(
sym
Ë=
no
)

1024 } i‡(!(
sym
->
Êags
 & 
SYMBOL_DEF_AUTO
))

1033 
ªs
 = 
	`c⁄f_touch_dï
(
sym
->
«me
);

1034 i‡(
ªs
)

1035  
ªs
;

1039 
	}
}

1041 
	$c⁄f_wrôe_autoc⁄f
(
ovîwrôe
)

1043 
symbﬁ
 *
sym
;

1044 c⁄° *
«me
;

1045 c⁄° *
autoc⁄f_«me
 = 
	`c⁄f_gë_autoc⁄fig_«me
();

1046 
FILE
 *
out
, *
out_h
;

1047 
i
;

1049 i‡(!
ovîwrôe
 && 
	`is_¥e£¡
(
autoc⁄f_«me
))

1052 
	`c⁄f_wrôe_dï
("include/config/auto.conf.cmd");

1054 i‡(
	`c⁄f_touch_dïs
())

1057 
out
 = 
	`f›í
(".tmpconfig", "w");

1058 i‡(!
out
)

1061 
out_h
 = 
	`f›í
(".tmpconfig.h", "w");

1062 i‡(!
out_h
) {

1063 
	`f˛o£
(
out
);

1067 
	`c⁄f_wrôe_hódög
(
out
, &
kc⁄fig_¥öãr_cb
, 
NULL
);

1068 
	`c⁄f_wrôe_hódög
(
out_h
, &
hódî_¥öãr_cb
, 
NULL
);

1070 
	`f‹_Æl_symbﬁs
(
i
, 
sym
) {

1071 
	`sym_ˇlc_vÆue
(
sym
);

1072 i‡(!(
sym
->
Êags
 & 
SYMBOL_WRITE
Ë|| !sym->
«me
)

1076 
	`c⁄f_wrôe_symbﬁ
(
out
, 
sym
, &
kc⁄fig_¥öãr_cb
, (*)1);

1077 
	`c⁄f_wrôe_symbﬁ
(
out_h
, 
sym
, &
hódî_¥öãr_cb
, 
NULL
);

1079 
	`f˛o£
(
out
);

1080 
	`f˛o£
(
out_h
);

1082 
«me
 = 
	`gëív
("KCONFIG_AUTOHEADER");

1083 i‡(!
«me
)

1084 
«me
 = "include/generated/autoconf.h";

1085 i‡(
	`make_∑ª¡_dú
(
«me
))

1087 i‡(
	`ª«me
(".tmpc⁄fig.h", 
«me
))

1090 i‡(
	`make_∑ª¡_dú
(
autoc⁄f_«me
))

1096 i‡(
	`ª«me
(".tmpc⁄fig", 
autoc⁄f_«me
))

1100 
	}
}

1102 
	gsym_ch™ge_cou¡
;

1103 (*
c⁄f_ch™ged_ˇŒback
)();

1105 
	$sym_£t_ch™ge_cou¡
(
cou¡
)

1107 
_sym_ch™ge_cou¡
 = 
sym_ch™ge_cou¡
;

1108 
sym_ch™ge_cou¡
 = 
cou¡
;

1109 i‡(
c⁄f_ch™ged_ˇŒback
 &&

1110 (
boﬁ
)
_sym_ch™ge_cou¡
 !(boﬁ)
cou¡
)

1111 
	`c⁄f_ch™ged_ˇŒback
();

1112 
	}
}

1114 
	$sym_add_ch™ge_cou¡
(
cou¡
)

1116 
	`sym_£t_ch™ge_cou¡
(
cou¡
 + 
sym_ch™ge_cou¡
);

1117 
	}
}

1119 
boﬁ
 
	$c⁄f_gë_ch™ged
()

1121  
sym_ch™ge_cou¡
;

1122 
	}
}

1124 
	$c⁄f_£t_ch™ged_ˇŒback
((*
‚
)())

1126 
c⁄f_ch™ged_ˇŒback
 = 
‚
;

1127 
	}
}

1129 
boﬁ
 
	$øndomize_choi˚_vÆues
(
symbﬁ
 *
csym
)

1131 
¥›îty
 *
¥›
;

1132 
symbﬁ
 *
sym
;

1133 
ex¥
 *
e
;

1134 
˙t
, 
def
;

1141 i‡(
csym
->
cuº
.
åi
 !
yes
)

1142  
Ál£
;

1144 
¥›
 = 
	`sym_gë_choi˚_¥›
(
csym
);

1147 
˙t
 = 0;

1148 
	`ex¥_li°_f‹_óch_sym
(
¥›
->
ex¥
, 
e
, 
sym
)

1149 
˙t
++;

1155 
def
 = (
	`ønd
(Ë% 
˙t
);

1157 
˙t
 = 0;

1158 
	`ex¥_li°_f‹_óch_sym
(
¥›
->
ex¥
, 
e
, 
sym
) {

1159 i‡(
def
 =
˙t
++) {

1160 
sym
->
def
[
S_DEF_USER
].
åi
 = 
yes
;

1161 
csym
->
def
[
S_DEF_USER
].
vÆ
 = 
sym
;

1164 
sym
->
def
[
S_DEF_USER
].
åi
 = 
no
;

1166 
sym
->
Êags
 |
SYMBOL_DEF_USER
;

1168 
sym
->
Êags
 &~
SYMBOL_VALID
;

1170 
csym
->
Êags
 |
SYMBOL_DEF_USER
;

1172 
csym
->
Êags
 &~(
SYMBOL_VALID
);

1174  
åue
;

1175 
	}
}

1177 
	$£t_Æl_choi˚_vÆues
(
symbﬁ
 *
csym
)

1179 
¥›îty
 *
¥›
;

1180 
symbﬁ
 *
sym
;

1181 
ex¥
 *
e
;

1183 
¥›
 = 
	`sym_gë_choi˚_¥›
(
csym
);

1188 
	`ex¥_li°_f‹_óch_sym
(
¥›
->
ex¥
, 
e
, 
sym
) {

1189 i‡(!
	`sym_has_vÆue
(
sym
))

1190 
sym
->
def
[
S_DEF_USER
].
åi
 = 
no
;

1192 
csym
->
Êags
 |
SYMBOL_DEF_USER
;

1194 
csym
->
Êags
 &~(
SYMBOL_VALID
 | 
SYMBOL_NEED_SET_CHOICE_VALUES
);

1195 
	}
}

1197 
boﬁ
 
	$c⁄f_£t_Æl_√w_symbﬁs
(
c⁄f_def_mode
 
mode
)

1199 
symbﬁ
 *
sym
, *
csym
;

1200 
i
, 
˙t
, 
pby
, 
±y
, 
±m
;

1205 
pby
 = 50; 
±y
 = 
±m
 = 33;

1208 i‡(
mode
 =
def_øndom
) {

1209 
n
, 
p
[3];

1210 *
ív
 = 
	`gëív
("KCONFIG_PROBABILITY");

1211 
n
 = 0;

1212  
ív
 && *env ) {

1213 *
ídp
;

1214 
tmp
 = 
	`°πﬁ
–
ív
, &
ídp
, 10 );

1215 if–
tmp
 >= 0 &&Åmp <= 100 ) {

1216 
p
[
n
++] = 
tmp
;

1218 
î∫o
 = 
ERANGE
;

1219 
	`≥º‹
( "KCONFIG_PROBABILITY" );

1220 
	`exô
( 1 );

1222 
ív
 = (*
ídp
 == ':') ?Éndp+1 :Éndp;

1223 if–
n
 >=3 ) {

1227  
n
 ) {

1229 
pby
 = 
p
[0]; 
±m
 =Öby/2; 
±y
 =Öby-ptm;

1232 
±y
 = 
p
[0]; 
±m
 =Ö[1]; 
pby
 =Öty +Ötm;

1235 
pby
 = 
p
[0]; 
±y
 =Ö[1]; 
±m
 =Ö[2];

1239 if–
±y
+
±m
 > 100 ) {

1240 
î∫o
 = 
ERANGE
;

1241 
	`≥º‹
( "KCONFIG_PROBABILITY" );

1242 
	`exô
( 1 );

1245 
boﬁ
 
has_ch™ged
 = 
Ál£
;

1247 
	`f‹_Æl_symbﬁs
(
i
, 
sym
) {

1248 i‡(
	`sym_has_vÆue
(
sym
Ë|| (sym->
Êags
 & 
SYMBOL_VALID
))

1250 
	`sym_gë_ty≥
(
sym
)) {

1251 
S_BOOLEAN
:

1252 
S_TRISTATE
:

1253 
has_ch™ged
 = 
åue
;

1254 
mode
) {

1255 
def_yes
:

1256 
sym
->
def
[
S_DEF_USER
].
åi
 = 
yes
;

1258 
def_mod
:

1259 
sym
->
def
[
S_DEF_USER
].
åi
 = 
mod
;

1261 
def_no
:

1262 i‡(
sym
->
Êags
 & 
SYMBOL_ALLNOCONFIG_Y
)

1263 
sym
->
def
[
S_DEF_USER
].
åi
 = 
yes
;

1265 
sym
->
def
[
S_DEF_USER
].
åi
 = 
no
;

1267 
def_øndom
:

1268 
sym
->
def
[
S_DEF_USER
].
åi
 = 
no
;

1269 
˙t
 = 
	`ønd
() % 100;

1270 i‡(
sym
->
ty≥
 =
S_TRISTATE
) {

1271 i‡(
˙t
 < 
±y
)

1272 
sym
->
def
[
S_DEF_USER
].
åi
 = 
yes
;

1273 i‡(
˙t
 < (
±y
+
±m
))

1274 
sym
->
def
[
S_DEF_USER
].
åi
 = 
mod
;

1275 } i‡(
˙t
 < 
pby
)

1276 
sym
->
def
[
S_DEF_USER
].
åi
 = 
yes
;

1281 i‡(!(
	`sym_is_choi˚
(
sym
Ë&& 
mode
 =
def_øndom
))

1282 
sym
->
Êags
 |
SYMBOL_DEF_USER
;

1290 
	`sym_˛ór_Æl_vÆid
();

1301 i‡(
mode
 !
def_øndom
) {

1302 
	`f‹_Æl_symbﬁs
(
i
, 
csym
) {

1303 i‡((
	`sym_is_choi˚
(
csym
Ë&& !
	`sym_has_vÆue
(csym)) ||

1304 
	`sym_is_choi˚_vÆue
(
csym
))

1305 
csym
->
Êags
 |
SYMBOL_NEED_SET_CHOICE_VALUES
;

1309 
	`f‹_Æl_symbﬁs
(
i
, 
csym
) {

1310 i‡(
	`sym_has_vÆue
(
csym
Ë|| !
	`sym_is_choi˚
(csym))

1313 
	`sym_ˇlc_vÆue
(
csym
);

1314 i‡(
mode
 =
def_øndom
)

1315 
has_ch™ged
 |
	`øndomize_choi˚_vÆues
(
csym
);

1317 
	`£t_Æl_choi˚_vÆues
(
csym
);

1318 
has_ch™ged
 = 
åue
;

1322  
has_ch™ged
;

1323 
	}
}

1325 
	$c⁄f_ªwrôe_mod_‹_yes
(
c⁄f_def_mode
 
mode
)

1327 
symbﬁ
 *
sym
;

1328 
i
;

1329 
åi°©e
 
ﬁd_vÆ
 = (
mode
 =
def_y2m
Ë? 
yes
 : 
mod
;

1330 
åi°©e
 
√w_vÆ
 = (
mode
 =
def_y2m
Ë? 
mod
 : 
yes
;

1332 
	`f‹_Æl_symbﬁs
(
i
, 
sym
) {

1333 i‡(
	`sym_gë_ty≥
(
sym
Ë=
S_TRISTATE
 &&

1334 
sym
->
def
[
S_DEF_USER
].
åi
 =
ﬁd_vÆ
)

1335 
sym
->
def
[
S_DEF_USER
].
åi
 = 
√w_vÆ
;

1337 
	`sym_˛ór_Æl_vÆid
();

1338 
	}
}

	@nemu/tools/kconfig/expr.c

6 
	~<˘y≥.h
>

7 
	~<î∫o.h
>

8 
	~<°dio.h
>

9 
	~<°dlib.h
>

10 
	~<°rög.h
>

12 
	~"lkc.h
"

14 
	#DEBUG_EXPR
 0

	)

16 
ex¥
 *
ex¥_ñimö©e_yn
(ex¥ *
e
);

18 
ex¥
 *
	$ex¥_Æloc_symbﬁ
(
symbﬁ
 *
sym
)

20 
ex¥
 *
e
 = 
	`xˇŒoc
(1, (*e));

21 
e
->
ty≥
 = 
E_SYMBOL
;

22 
e
->
À·
.
sym
 = sym;

23  
e
;

24 
	}
}

26 
ex¥
 *
	$ex¥_Æloc_⁄e
(
ex¥_ty≥
 
ty≥
, 
ex¥
 *
˚
)

28 
ex¥
 *
e
 = 
	`xˇŒoc
(1, (*e));

29 
e
->
ty≥
 =Åype;

30 
e
->
À·
.
ex¥
 = 
˚
;

31  
e
;

32 
	}
}

34 
ex¥
 *
	$ex¥_Æloc_two
(
ex¥_ty≥
 
ty≥
, 
ex¥
 *
e1
, ex¥ *
e2
)

36 
ex¥
 *
e
 = 
	`xˇŒoc
(1, (*e));

37 
e
->
ty≥
 =Åype;

38 
e
->
À·
.
ex¥
 = 
e1
;

39 
e
->
right
.
ex¥
 = 
e2
;

40  
e
;

41 
	}
}

43 
ex¥
 *
	$ex¥_Æloc_comp
(
ex¥_ty≥
 
ty≥
, 
symbﬁ
 *
s1
, symbﬁ *
s2
)

45 
ex¥
 *
e
 = 
	`xˇŒoc
(1, (*e));

46 
e
->
ty≥
 =Åype;

47 
e
->
À·
.
sym
 = 
s1
;

48 
e
->
right
.
sym
 = 
s2
;

49  
e
;

50 
	}
}

52 
ex¥
 *
	$ex¥_Æloc_™d
(
ex¥
 *
e1
, ex¥ *
e2
)

54 i‡(!
e1
)

55  
e2
;

56  
e2
 ? 
	`ex¥_Æloc_two
(
E_AND
, 
e1
,É2) :É1;

57 
	}
}

59 
ex¥
 *
	$ex¥_Æloc_‹
(
ex¥
 *
e1
, ex¥ *
e2
)

61 i‡(!
e1
)

62  
e2
;

63  
e2
 ? 
	`ex¥_Æloc_two
(
E_OR
, 
e1
,É2) :É1;

64 
	}
}

66 
ex¥
 *
	$ex¥_c›y
(c⁄° 
ex¥
 *
‹g
)

68 
ex¥
 *
e
;

70 i‡(!
‹g
)

71  
NULL
;

73 
e
 = 
	`xmÆloc
((*
‹g
));

74 
	`mem˝y
(
e
, 
‹g
, (*org));

75 
‹g
->
ty≥
) {

76 
E_SYMBOL
:

77 
e
->
À·
 = 
‹g
->left;

79 
E_NOT
:

80 
e
->
À·
.
ex¥
 = 
	`ex¥_c›y
(
‹g
->left.expr);

82 
E_EQUAL
:

83 
E_GEQ
:

84 
E_GTH
:

85 
E_LEQ
:

86 
E_LTH
:

87 
E_UNEQUAL
:

88 
e
->
À·
.
sym
 = 
‹g
->left.sym;

89 
e
->
right
.
sym
 = 
‹g
->right.sym;

91 
E_AND
:

92 
E_OR
:

93 
E_LIST
:

94 
e
->
À·
.
ex¥
 = 
	`ex¥_c›y
(
‹g
->left.expr);

95 
e
->
right
.
ex¥
 = 
	`ex¥_c›y
(
‹g
->right.expr);

98 
	`Ârötf
(
°dîr
, "ˇn'àc›yÅy≥ %d\n", 
e
->
ty≥
);

99 
	`‰ì
(
e
);

100 
e
 = 
NULL
;

104  
e
;

105 
	}
}

107 
	$ex¥_‰ì
(
ex¥
 *
e
)

109 i‡(!
e
)

112 
e
->
ty≥
) {

113 
E_SYMBOL
:

115 
E_NOT
:

116 
	`ex¥_‰ì
(
e
->
À·
.
ex¥
);

118 
E_EQUAL
:

119 
E_GEQ
:

120 
E_GTH
:

121 
E_LEQ
:

122 
E_LTH
:

123 
E_UNEQUAL
:

125 
E_OR
:

126 
E_AND
:

127 
	`ex¥_‰ì
(
e
->
À·
.
ex¥
);

128 
	`ex¥_‰ì
(
e
->
right
.
ex¥
);

131 
	`Ârötf
(
°dîr
, "howÅÿ‰ìÅy≥ %d?\n", 
e
->
ty≥
);

134 
	`‰ì
(
e
);

135 
	}
}

137 
	gå™s_cou¡
;

139 
	#e1
 (*
ï1
)

	)

140 
	#e2
 (*
ï2
)

	)

150 
	$__ex¥_ñimö©e_eq
(
ex¥_ty≥
 
ty≥
, 
ex¥
 **
ï1
, ex¥ **
ï2
)

154 i‡(
e1
->
ty≥
 ==Åype) {

155 
	`__ex¥_ñimö©e_eq
(
ty≥
, &
e1
->
À·
.
ex¥
, &
e2
);

156 
	`__ex¥_ñimö©e_eq
(
ty≥
, &
e1
->
right
.
ex¥
, &
e2
);

159 i‡(
e2
->
ty≥
 ==Åype) {

160 
	`__ex¥_ñimö©e_eq
(
ty≥
, &
e1
, &
e2
->
À·
.
ex¥
);

161 
	`__ex¥_ñimö©e_eq
(
ty≥
, &
e1
, &
e2
->
right
.
ex¥
);

167 i‡(
e1
->
ty≥
 =
E_SYMBOL
 && 
e2
->type == E_SYMBOL &&

168 
e1
->
À·
.
sym
 =
e2
->left.sym &&

169 (
e1
->
À·
.
sym
 =&
symbﬁ_yes
 ||É1->À·.sym =&
symbﬁ_no
))

171 i‡(!
	`ex¥_eq
(
e1
, 
e2
))

176 
å™s_cou¡
++;

177 
	`ex¥_‰ì
(
e1
);Éx¥_‰ì(
e2
);

178 
ty≥
) {

179 
E_OR
:

180 
e1
 = 
	`ex¥_Æloc_symbﬁ
(&
symbﬁ_no
);

181 
e2
 = 
	`ex¥_Æloc_symbﬁ
(&
symbﬁ_no
);

183 
E_AND
:

184 
e1
 = 
	`ex¥_Æloc_symbﬁ
(&
symbﬁ_yes
);

185 
e2
 = 
	`ex¥_Æloc_symbﬁ
(&
symbﬁ_yes
);

190 
	}
}

221 
	$ex¥_ñimö©e_eq
(
ex¥
 **
ï1
, ex¥ **
ï2
)

223 i‡(!
e1
 || !
e2
)

225 
e1
->
ty≥
) {

226 
E_OR
:

227 
E_AND
:

228 
	`__ex¥_ñimö©e_eq
(
e1
->
ty≥
, 
ï1
, 
ï2
);

232 i‡(
e1
->
ty≥
 !
e2
->type) e2->type) {

233 
E_OR
:

234 
E_AND
:

235 
	`__ex¥_ñimö©e_eq
(
e2
->
ty≥
, 
ï1
, 
ï2
);

239 
e1
 = 
	`ex¥_ñimö©e_yn
(e1);

240 
e2
 = 
	`ex¥_ñimö©e_yn
(e2);

241 
	}
}

243 #unde‡
e1


244 #unde‡
e2


252 
	$ex¥_eq
(
ex¥
 *
e1
, ex¥ *
e2
)

254 
ªs
, 
ﬁd_cou¡
;

260 i‡(!
e1
 || !
e2
)

261  
	`ex¥_is_yes
(
e1
Ë&&Éx¥_is_yes(
e2
);

263 i‡(
e1
->
ty≥
 !
e2
->type)

265 
e1
->
ty≥
) {

266 
E_EQUAL
:

267 
E_GEQ
:

268 
E_GTH
:

269 
E_LEQ
:

270 
E_LTH
:

271 
E_UNEQUAL
:

272  
e1
->
À·
.
sym
 =
e2
->À·.sym &&É1->
right
.sym ==É2->right.sym;

273 
E_SYMBOL
:

274  
e1
->
À·
.
sym
 =
e2
->left.sym;

275 
E_NOT
:

276  
	`ex¥_eq
(
e1
->
À·
.
ex¥
, 
e2
->left.expr);

277 
E_AND
:

278 
E_OR
:

279 
e1
 = 
	`ex¥_c›y
(e1);

280 
e2
 = 
	`ex¥_c›y
(e2);

281 
ﬁd_cou¡
 = 
å™s_cou¡
;

282 
	`ex¥_ñimö©e_eq
(&
e1
, &
e2
);

283 
ªs
 = (
e1
->
ty≥
 =
E_SYMBOL
 && 
e2
->type == E_SYMBOL &&

284 
e1
->
À·
.
sym
 =
e2
->left.sym);

285 
	`ex¥_‰ì
(
e1
);

286 
	`ex¥_‰ì
(
e2
);

287 
å™s_cou¡
 = 
ﬁd_cou¡
;

288  
ªs
;

289 
E_LIST
:

290 
E_RANGE
:

291 
E_NONE
:

295 i‡(
DEBUG_EXPR
) {

296 
	`ex¥_Âröt
(
e1
, 
°dout
);

297 
	`¥ötf
(" = ");

298 
	`ex¥_Âröt
(
e2
, 
°dout
);

299 
	`¥ötf
(" ?\n");

303 
	}
}

316 
ex¥
 *
	$ex¥_ñimö©e_yn
(
ex¥
 *
e
)

318 
ex¥
 *
tmp
;

320 i‡(
e
Ëe->
ty≥
) {

321 
E_AND
:

322 
e
->
À·
.
ex¥
 = 
	`ex¥_ñimö©e_yn
(e->left.expr);

323 
e
->
right
.
ex¥
 = 
	`ex¥_ñimö©e_yn
(e->right.expr);

324 i‡(
e
->
À·
.
ex¥
->
ty≥
 =
E_SYMBOL
) {

325 i‡(
e
->
À·
.
ex¥
->À·.
sym
 =&
symbﬁ_no
) {

326 
	`ex¥_‰ì
(
e
->
À·
.
ex¥
);

327 
	`ex¥_‰ì
(
e
->
right
.
ex¥
);

328 
e
->
ty≥
 = 
E_SYMBOL
;

329 
e
->
À·
.
sym
 = &
symbﬁ_no
;

330 
e
->
right
.
ex¥
 = 
NULL
;

331  
e
;

332 } i‡(
e
->
À·
.
ex¥
->À·.
sym
 =&
symbﬁ_yes
) {

333 
	`‰ì
(
e
->
À·
.
ex¥
);

334 
tmp
 = 
e
->
right
.
ex¥
;

335 *
e
 = *”->
right
.
ex¥
);

336 
	`‰ì
(
tmp
);

337  
e
;

340 i‡(
e
->
right
.
ex¥
->
ty≥
 =
E_SYMBOL
) {

341 i‡(
e
->
right
.
ex¥
->
À·
.
sym
 =&
symbﬁ_no
) {

342 
	`ex¥_‰ì
(
e
->
À·
.
ex¥
);

343 
	`ex¥_‰ì
(
e
->
right
.
ex¥
);

344 
e
->
ty≥
 = 
E_SYMBOL
;

345 
e
->
À·
.
sym
 = &
symbﬁ_no
;

346 
e
->
right
.
ex¥
 = 
NULL
;

347  
e
;

348 } i‡(
e
->
right
.
ex¥
->
À·
.
sym
 =&
symbﬁ_yes
) {

349 
	`‰ì
(
e
->
right
.
ex¥
);

350 
tmp
 = 
e
->
À·
.
ex¥
;

351 *
e
 = *”->
À·
.
ex¥
);

352 
	`‰ì
(
tmp
);

353  
e
;

357 
E_OR
:

358 
e
->
À·
.
ex¥
 = 
	`ex¥_ñimö©e_yn
(e->left.expr);

359 
e
->
right
.
ex¥
 = 
	`ex¥_ñimö©e_yn
(e->right.expr);

360 i‡(
e
->
À·
.
ex¥
->
ty≥
 =
E_SYMBOL
) {

361 i‡(
e
->
À·
.
ex¥
->À·.
sym
 =&
symbﬁ_no
) {

362 
	`‰ì
(
e
->
À·
.
ex¥
);

363 
tmp
 = 
e
->
right
.
ex¥
;

364 *
e
 = *”->
right
.
ex¥
);

365 
	`‰ì
(
tmp
);

366  
e
;

367 } i‡(
e
->
À·
.
ex¥
->À·.
sym
 =&
symbﬁ_yes
) {

368 
	`ex¥_‰ì
(
e
->
À·
.
ex¥
);

369 
	`ex¥_‰ì
(
e
->
right
.
ex¥
);

370 
e
->
ty≥
 = 
E_SYMBOL
;

371 
e
->
À·
.
sym
 = &
symbﬁ_yes
;

372 
e
->
right
.
ex¥
 = 
NULL
;

373  
e
;

376 i‡(
e
->
right
.
ex¥
->
ty≥
 =
E_SYMBOL
) {

377 i‡(
e
->
right
.
ex¥
->
À·
.
sym
 =&
symbﬁ_no
) {

378 
	`‰ì
(
e
->
right
.
ex¥
);

379 
tmp
 = 
e
->
À·
.
ex¥
;

380 *
e
 = *”->
À·
.
ex¥
);

381 
	`‰ì
(
tmp
);

382  
e
;

383 } i‡(
e
->
right
.
ex¥
->
À·
.
sym
 =&
symbﬁ_yes
) {

384 
	`ex¥_‰ì
(
e
->
À·
.
ex¥
);

385 
	`ex¥_‰ì
(
e
->
right
.
ex¥
);

386 
e
->
ty≥
 = 
E_SYMBOL
;

387 
e
->
À·
.
sym
 = &
symbﬁ_yes
;

388 
e
->
right
.
ex¥
 = 
NULL
;

389  
e
;

396  
e
;

397 
	}
}

402 
ex¥
 *
	$ex¥_å™s_boﬁ
(
ex¥
 *
e
)

404 i‡(!
e
)

405  
NULL
;

406 
e
->
ty≥
) {

407 
E_AND
:

408 
E_OR
:

409 
E_NOT
:

410 
e
->
À·
.
ex¥
 = 
	`ex¥_å™s_boﬁ
(e->left.expr);

411 
e
->
right
.
ex¥
 = 
	`ex¥_å™s_boﬁ
(e->right.expr);

413 
E_UNEQUAL
:

415 i‡(
e
->
À·
.
sym
->
ty≥
 =
S_TRISTATE
) {

416 i‡(
e
->
right
.
sym
 =&
symbﬁ_no
) {

417 
e
->
ty≥
 = 
E_SYMBOL
;

418 
e
->
right
.
sym
 = 
NULL
;

425  
e
;

426 
	}
}

431 
ex¥
 *
	$ex¥_joö_‹
(
ex¥
 *
e1
, ex¥ *
e2
)

433 
ex¥
 *
tmp
;

434 
symbﬁ
 *
sym1
, *
sym2
;

436 i‡(
	`ex¥_eq
(
e1
, 
e2
))

437  
	`ex¥_c›y
(
e1
);

438 i‡(
e1
->
ty≥
 !
E_EQUAL
 &&É1->ty≥ !
E_UNEQUAL
 &&É1->ty≥ !
E_SYMBOL
 &&É1->ty≥ !
E_NOT
)

439  
NULL
;

440 i‡(
e2
->
ty≥
 !
E_EQUAL
 &&É2->ty≥ !
E_UNEQUAL
 &&É2->ty≥ !
E_SYMBOL
 &&É2->ty≥ !
E_NOT
)

441  
NULL
;

442 i‡(
e1
->
ty≥
 =
E_NOT
) {

443 
tmp
 = 
e1
->
À·
.
ex¥
;

444 i‡(
tmp
->
ty≥
 !
E_EQUAL
 &&Åmp->ty≥ !
E_UNEQUAL
 &&Åmp->ty≥ !
E_SYMBOL
)

445  
NULL
;

446 
sym1
 = 
tmp
->
À·
.
sym
;

448 
sym1
 = 
e1
->
À·
.
sym
;

449 i‡(
e2
->
ty≥
 =
E_NOT
) {

450 i‡(
e2
->
À·
.
ex¥
->
ty≥
 !
E_SYMBOL
)

451  
NULL
;

452 
sym2
 = 
e2
->
À·
.
ex¥
->À·.
sym
;

454 
sym2
 = 
e2
->
À·
.
sym
;

455 i‡(
sym1
 !
sym2
)

456  
NULL
;

457 i‡(
sym1
->
ty≥
 !
S_BOOLEAN
 && sym1->ty≥ !
S_TRISTATE
)

458  
NULL
;

459 i‡(
sym1
->
ty≥
 =
S_TRISTATE
) {

460 i‡(
e1
->
ty≥
 =
E_EQUAL
 && 
e2
->type == E_EQUAL &&

461 ((
e1
->
right
.
sym
 =&
symbﬁ_yes
 && 
e2
->right.sym =&
symbﬁ_mod
) ||

462 (
e1
->
right
.
sym
 =&
symbﬁ_mod
 && 
e2
->right.sym =&
symbﬁ_yes
))) {

464  
	`ex¥_Æloc_comp
(
E_UNEQUAL
, 
sym1
, &
symbﬁ_no
);

466 i‡(
e1
->
ty≥
 =
E_EQUAL
 && 
e2
->type == E_EQUAL &&

467 ((
e1
->
right
.
sym
 =&
symbﬁ_yes
 && 
e2
->right.sym =&
symbﬁ_no
) ||

468 (
e1
->
right
.
sym
 =&
symbﬁ_no
 && 
e2
->right.sym =&
symbﬁ_yes
))) {

470  
	`ex¥_Æloc_comp
(
E_UNEQUAL
, 
sym1
, &
symbﬁ_mod
);

472 i‡(
e1
->
ty≥
 =
E_EQUAL
 && 
e2
->type == E_EQUAL &&

473 ((
e1
->
right
.
sym
 =&
symbﬁ_mod
 && 
e2
->right.sym =&
symbﬁ_no
) ||

474 (
e1
->
right
.
sym
 =&
symbﬁ_no
 && 
e2
->right.sym =&
symbﬁ_mod
))) {

476  
	`ex¥_Æloc_comp
(
E_UNEQUAL
, 
sym1
, &
symbﬁ_yes
);

479 i‡(
sym1
->
ty≥
 =
S_BOOLEAN
 && sym1 =
sym2
) {

480 i‡((
e1
->
ty≥
 =
E_NOT
 &&É1->
À·
.
ex¥
->ty≥ =
E_SYMBOL
 && 
e2
->type == E_SYMBOL) ||

481 (
e2
->
ty≥
 =
E_NOT
 &&É2->
À·
.
ex¥
->ty≥ =
E_SYMBOL
 && 
e1
->type == E_SYMBOL))

482  
	`ex¥_Æloc_symbﬁ
(&
symbﬁ_yes
);

485 i‡(
DEBUG_EXPR
) {

486 
	`¥ötf
("optimize (");

487 
	`ex¥_Âröt
(
e1
, 
°dout
);

488 
	`¥ötf
(") || (");

489 
	`ex¥_Âröt
(
e2
, 
°dout
);

490 
	`¥ötf
(")?\n");

492  
NULL
;

493 
	}
}

495 
ex¥
 *
	$ex¥_joö_™d
(
ex¥
 *
e1
, ex¥ *
e2
)

497 
ex¥
 *
tmp
;

498 
symbﬁ
 *
sym1
, *
sym2
;

500 i‡(
	`ex¥_eq
(
e1
, 
e2
))

501  
	`ex¥_c›y
(
e1
);

502 i‡(
e1
->
ty≥
 !
E_EQUAL
 &&É1->ty≥ !
E_UNEQUAL
 &&É1->ty≥ !
E_SYMBOL
 &&É1->ty≥ !
E_NOT
)

503  
NULL
;

504 i‡(
e2
->
ty≥
 !
E_EQUAL
 &&É2->ty≥ !
E_UNEQUAL
 &&É2->ty≥ !
E_SYMBOL
 &&É2->ty≥ !
E_NOT
)

505  
NULL
;

506 i‡(
e1
->
ty≥
 =
E_NOT
) {

507 
tmp
 = 
e1
->
À·
.
ex¥
;

508 i‡(
tmp
->
ty≥
 !
E_EQUAL
 &&Åmp->ty≥ !
E_UNEQUAL
 &&Åmp->ty≥ !
E_SYMBOL
)

509  
NULL
;

510 
sym1
 = 
tmp
->
À·
.
sym
;

512 
sym1
 = 
e1
->
À·
.
sym
;

513 i‡(
e2
->
ty≥
 =
E_NOT
) {

514 i‡(
e2
->
À·
.
ex¥
->
ty≥
 !
E_SYMBOL
)

515  
NULL
;

516 
sym2
 = 
e2
->
À·
.
ex¥
->À·.
sym
;

518 
sym2
 = 
e2
->
À·
.
sym
;

519 i‡(
sym1
 !
sym2
)

520  
NULL
;

521 i‡(
sym1
->
ty≥
 !
S_BOOLEAN
 && sym1->ty≥ !
S_TRISTATE
)

522  
NULL
;

524 i‡((
e1
->
ty≥
 =
E_SYMBOL
 && 
e2
->ty≥ =
E_EQUAL
 &&É2->
right
.
sym
 =&
symbﬁ_yes
) ||

525 (
e2
->
ty≥
 =
E_SYMBOL
 && 
e1
->ty≥ =
E_EQUAL
 &&É1->
right
.
sym
 =&
symbﬁ_yes
))

527  
	`ex¥_Æloc_comp
(
E_EQUAL
, 
sym1
, &
symbﬁ_yes
);

529 i‡((
e1
->
ty≥
 =
E_SYMBOL
 && 
e2
->ty≥ =
E_UNEQUAL
 &&É2->
right
.
sym
 =&
symbﬁ_no
) ||

530 (
e2
->
ty≥
 =
E_SYMBOL
 && 
e1
->ty≥ =
E_UNEQUAL
 &&É1->
right
.
sym
 =&
symbﬁ_no
))

532  
	`ex¥_Æloc_symbﬁ
(
sym1
);

534 i‡((
e1
->
ty≥
 =
E_SYMBOL
 && 
e2
->ty≥ =
E_UNEQUAL
 &&É2->
right
.
sym
 =&
symbﬁ_mod
) ||

535 (
e2
->
ty≥
 =
E_SYMBOL
 && 
e1
->ty≥ =
E_UNEQUAL
 &&É1->
right
.
sym
 =&
symbﬁ_mod
))

537  
	`ex¥_Æloc_comp
(
E_EQUAL
, 
sym1
, &
symbﬁ_yes
);

539 i‡(
sym1
->
ty≥
 =
S_TRISTATE
) {

540 i‡(
e1
->
ty≥
 =
E_EQUAL
 && 
e2
->ty≥ =
E_UNEQUAL
) {

542 
sym2
 = 
e1
->
right
.
sym
;

543 i‡((
e2
->
right
.
sym
->
Êags
 & 
SYMBOL_CONST
Ë&& (
sym2
->flags & SYMBOL_CONST))

544  
sym2
 !
e2
->
right
.
sym
 ? 
	`ex¥_Æloc_comp
(
E_EQUAL
, 
sym1
, sym2)

545 : 
	`ex¥_Æloc_symbﬁ
(&
symbﬁ_no
);

547 i‡(
e1
->
ty≥
 =
E_UNEQUAL
 && 
e2
->ty≥ =
E_EQUAL
) {

549 
sym2
 = 
e2
->
right
.
sym
;

550 i‡((
e1
->
right
.
sym
->
Êags
 & 
SYMBOL_CONST
Ë&& (
sym2
->flags & SYMBOL_CONST))

551  
sym2
 !
e1
->
right
.
sym
 ? 
	`ex¥_Æloc_comp
(
E_EQUAL
, 
sym1
, sym2)

552 : 
	`ex¥_Æloc_symbﬁ
(&
symbﬁ_no
);

554 i‡(
e1
->
ty≥
 =
E_UNEQUAL
 && 
e2
->type == E_UNEQUAL &&

555 ((
e1
->
right
.
sym
 =&
symbﬁ_yes
 && 
e2
->right.sym =&
symbﬁ_no
) ||

556 (
e1
->
right
.
sym
 =&
symbﬁ_no
 && 
e2
->right.sym =&
symbﬁ_yes
)))

558  
	`ex¥_Æloc_comp
(
E_EQUAL
, 
sym1
, &
symbﬁ_mod
);

560 i‡(
e1
->
ty≥
 =
E_UNEQUAL
 && 
e2
->type == E_UNEQUAL &&

561 ((
e1
->
right
.
sym
 =&
symbﬁ_yes
 && 
e2
->right.sym =&
symbﬁ_mod
) ||

562 (
e1
->
right
.
sym
 =&
symbﬁ_mod
 && 
e2
->right.sym =&
symbﬁ_yes
)))

564  
	`ex¥_Æloc_comp
(
E_EQUAL
, 
sym1
, &
symbﬁ_no
);

566 i‡(
e1
->
ty≥
 =
E_UNEQUAL
 && 
e2
->type == E_UNEQUAL &&

567 ((
e1
->
right
.
sym
 =&
symbﬁ_mod
 && 
e2
->right.sym =&
symbﬁ_no
) ||

568 (
e1
->
right
.
sym
 =&
symbﬁ_no
 && 
e2
->right.sym =&
symbﬁ_mod
)))

570  
	`ex¥_Æloc_comp
(
E_EQUAL
, 
sym1
, &
symbﬁ_yes
);

572 i‡((
e1
->
ty≥
 =
E_SYMBOL
 && 
e2
->ty≥ =
E_EQUAL
 &&É2->
right
.
sym
 =&
symbﬁ_mod
) ||

573 (
e2
->
ty≥
 =
E_SYMBOL
 && 
e1
->ty≥ =
E_EQUAL
 &&É1->
right
.
sym
 =&
symbﬁ_mod
) ||

574 (
e1
->
ty≥
 =
E_SYMBOL
 && 
e2
->ty≥ =
E_UNEQUAL
 &&É2->
right
.
sym
 =&
symbﬁ_yes
) ||

575 (
e2
->
ty≥
 =
E_SYMBOL
 && 
e1
->ty≥ =
E_UNEQUAL
 &&É1->
right
.
sym
 =&
symbﬁ_yes
))

576  
NULL
;

579 i‡(
DEBUG_EXPR
) {

580 
	`¥ötf
("optimize (");

581 
	`ex¥_Âröt
(
e1
, 
°dout
);

582 
	`¥ötf
(") && (");

583 
	`ex¥_Âröt
(
e2
, 
°dout
);

584 
	`¥ötf
(")?\n");

586  
NULL
;

587 
	}
}

596 
	$ex¥_ñimö©e_dups1
(
ex¥_ty≥
 
ty≥
, 
ex¥
 **
ï1
, ex¥ **
ï2
)

598 
	#e1
 (*
ï1
)

	)

599 
	#e2
 (*
ï2
)

	)

600 
ex¥
 *
tmp
;

604 i‡(
e1
->
ty≥
 ==Åype) {

605 
	`ex¥_ñimö©e_dups1
(
ty≥
, &
e1
->
À·
.
ex¥
, &
e2
);

606 
	`ex¥_ñimö©e_dups1
(
ty≥
, &
e1
->
right
.
ex¥
, &
e2
);

609 i‡(
e2
->
ty≥
 ==Åype) {

610 
	`ex¥_ñimö©e_dups1
(
ty≥
, &
e1
, &
e2
->
À·
.
ex¥
);

611 
	`ex¥_ñimö©e_dups1
(
ty≥
, &
e1
, &
e2
->
right
.
ex¥
);

617 i‡(
e1
 =
e2
)

620 
e1
->
ty≥
) {

621 
E_OR
: 
E_AND
:

622 
	`ex¥_ñimö©e_dups1
(
e1
->
ty≥
, &e1, &e1);

627 
ty≥
) {

628 
E_OR
:

629 
tmp
 = 
	`ex¥_joö_‹
(
e1
, 
e2
);

630 i‡(
tmp
) {

631 
	`ex¥_‰ì
(
e1
);Éx¥_‰ì(
e2
);

632 
e1
 = 
	`ex¥_Æloc_symbﬁ
(&
symbﬁ_no
);

633 
e2
 = 
tmp
;

634 
å™s_cou¡
++;

637 
E_AND
:

638 
tmp
 = 
	`ex¥_joö_™d
(
e1
, 
e2
);

639 i‡(
tmp
) {

640 
	`ex¥_‰ì
(
e1
);Éx¥_‰ì(
e2
);

641 
e1
 = 
	`ex¥_Æloc_symbﬁ
(&
symbﬁ_yes
);

642 
e2
 = 
tmp
;

643 
å™s_cou¡
++;

649 #unde‡
e1


650 #unde‡
e2


651 
	}
}

664 
ex¥
 *
	$ex¥_ñimö©e_dups
(
ex¥
 *
e
)

666 
ﬁdcou¡
;

667 i‡(!
e
)

668  
e
;

670 
ﬁdcou¡
 = 
å™s_cou¡
;

672 
å™s_cou¡
 = 0;

673 
e
->
ty≥
) {

674 
E_OR
: 
E_AND
:

675 
	`ex¥_ñimö©e_dups1
(
e
->
ty≥
, &e, &e);

679 i‡(!
å™s_cou¡
)

682 
e
 = 
	`ex¥_ñimö©e_yn
(e);

684 
å™s_cou¡
 = 
ﬁdcou¡
;

685  
e
;

686 
	}
}

694 
ex¥
 *
	$ex¥_å™sf‹m
(
ex¥
 *
e
)

696 
ex¥
 *
tmp
;

698 i‡(!
e
)

699  
NULL
;

700 
e
->
ty≥
) {

701 
E_EQUAL
:

702 
E_GEQ
:

703 
E_GTH
:

704 
E_LEQ
:

705 
E_LTH
:

706 
E_UNEQUAL
:

707 
E_SYMBOL
:

708 
E_LIST
:

711 
e
->
À·
.
ex¥
 = 
	`ex¥_å™sf‹m
(e->left.expr);

712 
e
->
right
.
ex¥
 = 
	`ex¥_å™sf‹m
(e->right.expr);

715 
e
->
ty≥
) {

716 
E_EQUAL
:

717 i‡(
e
->
À·
.
sym
->
ty≥
 !
S_BOOLEAN
)

719 i‡(
e
->
right
.
sym
 =&
symbﬁ_no
) {

720 
e
->
ty≥
 = 
E_NOT
;

721 
e
->
À·
.
ex¥
 = 
	`ex¥_Æloc_symbﬁ
”->À·.
sym
);

722 
e
->
right
.
sym
 = 
NULL
;

725 i‡(
e
->
right
.
sym
 =&
symbﬁ_mod
) {

726 
	`¥ötf
("boﬁó¿symbﬁ %†ã°ed f‹ 'm'?Åe° f‹˚dÅÿ'n'\n", 
e
->
À·
.
sym
->
«me
);

727 
e
->
ty≥
 = 
E_SYMBOL
;

728 
e
->
À·
.
sym
 = &
symbﬁ_no
;

729 
e
->
right
.
sym
 = 
NULL
;

732 i‡(
e
->
right
.
sym
 =&
symbﬁ_yes
) {

733 
e
->
ty≥
 = 
E_SYMBOL
;

734 
e
->
right
.
sym
 = 
NULL
;

738 
E_UNEQUAL
:

739 i‡(
e
->
À·
.
sym
->
ty≥
 !
S_BOOLEAN
)

741 i‡(
e
->
right
.
sym
 =&
symbﬁ_no
) {

742 
e
->
ty≥
 = 
E_SYMBOL
;

743 
e
->
right
.
sym
 = 
NULL
;

746 i‡(
e
->
right
.
sym
 =&
symbﬁ_mod
) {

747 
	`¥ötf
("boﬁó¿symbﬁ %†ã°ed f‹ 'm'?Åe° f‹˚dÅÿ'y'\n", 
e
->
À·
.
sym
->
«me
);

748 
e
->
ty≥
 = 
E_SYMBOL
;

749 
e
->
À·
.
sym
 = &
symbﬁ_yes
;

750 
e
->
right
.
sym
 = 
NULL
;

753 i‡(
e
->
right
.
sym
 =&
symbﬁ_yes
) {

754 
e
->
ty≥
 = 
E_NOT
;

755 
e
->
À·
.
ex¥
 = 
	`ex¥_Æloc_symbﬁ
”->À·.
sym
);

756 
e
->
right
.
sym
 = 
NULL
;

760 
E_NOT
:

761 
e
->
À·
.
ex¥
->
ty≥
) {

762 
E_NOT
:

764 
tmp
 = 
e
->
À·
.
ex¥
->left.expr;

765 
	`‰ì
(
e
->
À·
.
ex¥
);

766 
	`‰ì
(
e
);

767 
e
 = 
tmp
;

768 
e
 = 
	`ex¥_å™sf‹m
(e);

770 
E_EQUAL
:

771 
E_UNEQUAL
:

773 
tmp
 = 
e
->
À·
.
ex¥
;

774 
	`‰ì
(
e
);

775 
e
 = 
tmp
;

776 
e
->
ty≥
 =É->ty≥ =
E_EQUAL
 ? 
E_UNEQUAL
 : E_EQUAL;

778 
E_LEQ
:

779 
E_GEQ
:

781 
tmp
 = 
e
->
À·
.
ex¥
;

782 
	`‰ì
(
e
);

783 
e
 = 
tmp
;

784 
e
->
ty≥
 =É->ty≥ =
E_LEQ
 ? 
E_GTH
 : 
E_LTH
;

786 
E_LTH
:

787 
E_GTH
:

789 
tmp
 = 
e
->
À·
.
ex¥
;

790 
	`‰ì
(
e
);

791 
e
 = 
tmp
;

792 
e
->
ty≥
 =É->ty≥ =
E_LTH
 ? 
E_GEQ
 : 
E_LEQ
;

794 
E_OR
:

796 
tmp
 = 
e
->
À·
.
ex¥
;

797 
e
->
ty≥
 = 
E_AND
;

798 
e
->
right
.
ex¥
 = 
	`ex¥_Æloc_⁄e
(
E_NOT
, 
tmp
->right.expr);

799 
tmp
->
ty≥
 = 
E_NOT
;

800 
tmp
->
right
.
ex¥
 = 
NULL
;

801 
e
 = 
	`ex¥_å™sf‹m
(e);

803 
E_AND
:

805 
tmp
 = 
e
->
À·
.
ex¥
;

806 
e
->
ty≥
 = 
E_OR
;

807 
e
->
right
.
ex¥
 = 
	`ex¥_Æloc_⁄e
(
E_NOT
, 
tmp
->right.expr);

808 
tmp
->
ty≥
 = 
E_NOT
;

809 
tmp
->
right
.
ex¥
 = 
NULL
;

810 
e
 = 
	`ex¥_å™sf‹m
(e);

812 
E_SYMBOL
:

813 i‡(
e
->
À·
.
ex¥
->À·.
sym
 =&
symbﬁ_yes
) {

815 
tmp
 = 
e
->
À·
.
ex¥
;

816 
	`‰ì
(
e
);

817 
e
 = 
tmp
;

818 
e
->
ty≥
 = 
E_SYMBOL
;

819 
e
->
À·
.
sym
 = &
symbﬁ_no
;

822 i‡(
e
->
À·
.
ex¥
->À·.
sym
 =&
symbﬁ_mod
) {

824 
tmp
 = 
e
->
À·
.
ex¥
;

825 
	`‰ì
(
e
);

826 
e
 = 
tmp
;

827 
e
->
ty≥
 = 
E_SYMBOL
;

828 
e
->
À·
.
sym
 = &
symbﬁ_mod
;

831 i‡(
e
->
À·
.
ex¥
->À·.
sym
 =&
symbﬁ_no
) {

833 
tmp
 = 
e
->
À·
.
ex¥
;

834 
	`‰ì
(
e
);

835 
e
 = 
tmp
;

836 
e
->
ty≥
 = 
E_SYMBOL
;

837 
e
->
À·
.
sym
 = &
symbﬁ_yes
;

848  
e
;

849 
	}
}

851 
	$ex¥_c⁄èös_symbﬁ
(
ex¥
 *
dï
, 
symbﬁ
 *
sym
)

853 i‡(!
dï
)

856 
dï
->
ty≥
) {

857 
E_AND
:

858 
E_OR
:

859  
	`ex¥_c⁄èös_symbﬁ
(
dï
->
À·
.
ex¥
, 
sym
) ||

860 
	`ex¥_c⁄èös_symbﬁ
(
dï
->
right
.
ex¥
, 
sym
);

861 
E_SYMBOL
:

862  
dï
->
À·
.
sym
 == sym;

863 
E_EQUAL
:

864 
E_GEQ
:

865 
E_GTH
:

866 
E_LEQ
:

867 
E_LTH
:

868 
E_UNEQUAL
:

869  
dï
->
À·
.
sym
 == sym ||

870 
dï
->
right
.
sym
 == sym;

871 
E_NOT
:

872  
	`ex¥_c⁄èös_symbﬁ
(
dï
->
À·
.
ex¥
, 
sym
);

877 
	}
}

879 
boﬁ
 
	$ex¥_dïíds_symbﬁ
(
ex¥
 *
dï
, 
symbﬁ
 *
sym
)

881 i‡(!
dï
)

882  
Ál£
;

884 
dï
->
ty≥
) {

885 
E_AND
:

886  
	`ex¥_dïíds_symbﬁ
(
dï
->
À·
.
ex¥
, 
sym
) ||

887 
	`ex¥_dïíds_symbﬁ
(
dï
->
right
.
ex¥
, 
sym
);

888 
E_SYMBOL
:

889  
dï
->
À·
.
sym
 == sym;

890 
E_EQUAL
:

891 i‡(
dï
->
À·
.
sym
 == sym) {

892 i‡(
dï
->
right
.
sym
 =&
symbﬁ_yes
 || dï->right.sym =&
symbﬁ_mod
)

893  
åue
;

896 
E_UNEQUAL
:

897 i‡(
dï
->
À·
.
sym
 == sym) {

898 i‡(
dï
->
right
.
sym
 =&
symbﬁ_no
)

899  
åue
;

905  
Ál£
;

906 
	}
}

922 
ex¥
 *
	$ex¥_å™s_com∑ª
(
ex¥
 *
e
, 
ex¥_ty≥
 
ty≥
, 
symbﬁ
 *
sym
)

924 
ex¥
 *
e1
, *
e2
;

926 i‡(!
e
) {

927 
e
 = 
	`ex¥_Æloc_symbﬁ
(
sym
);

928 i‡(
ty≥
 =
E_UNEQUAL
)

929 
e
 = 
	`ex¥_Æloc_⁄e
(
E_NOT
,É);

930  
e
;

932 
e
->
ty≥
) {

933 
E_AND
:

934 
e1
 = 
	`ex¥_å™s_com∑ª
(
e
->
À·
.
ex¥
, 
E_EQUAL
, 
sym
);

935 
e2
 = 
	`ex¥_å™s_com∑ª
(
e
->
right
.
ex¥
, 
E_EQUAL
, 
sym
);

936 i‡(
sym
 =&
symbﬁ_yes
)

937 
e
 = 
	`ex¥_Æloc_two
(
E_AND
, 
e1
, 
e2
);

938 i‡(
sym
 =&
symbﬁ_no
)

939 
e
 = 
	`ex¥_Æloc_two
(
E_OR
, 
e1
, 
e2
);

940 i‡(
ty≥
 =
E_UNEQUAL
)

941 
e
 = 
	`ex¥_Æloc_⁄e
(
E_NOT
,É);

942  
e
;

943 
E_OR
:

944 
e1
 = 
	`ex¥_å™s_com∑ª
(
e
->
À·
.
ex¥
, 
E_EQUAL
, 
sym
);

945 
e2
 = 
	`ex¥_å™s_com∑ª
(
e
->
right
.
ex¥
, 
E_EQUAL
, 
sym
);

946 i‡(
sym
 =&
symbﬁ_yes
)

947 
e
 = 
	`ex¥_Æloc_two
(
E_OR
, 
e1
, 
e2
);

948 i‡(
sym
 =&
symbﬁ_no
)

949 
e
 = 
	`ex¥_Æloc_two
(
E_AND
, 
e1
, 
e2
);

950 i‡(
ty≥
 =
E_UNEQUAL
)

951 
e
 = 
	`ex¥_Æloc_⁄e
(
E_NOT
,É);

952  
e
;

953 
E_NOT
:

954  
	`ex¥_å™s_com∑ª
(
e
->
À·
.
ex¥
, 
ty≥
 =
E_EQUAL
 ? 
E_UNEQUAL
 : E_EQUAL, 
sym
);

955 
E_UNEQUAL
:

956 
E_LTH
:

957 
E_LEQ
:

958 
E_GTH
:

959 
E_GEQ
:

960 
E_EQUAL
:

961 i‡(
ty≥
 =
E_EQUAL
) {

962 i‡(
sym
 =&
symbﬁ_yes
)

963  
	`ex¥_c›y
(
e
);

964 i‡(
sym
 =&
symbﬁ_mod
)

965  
	`ex¥_Æloc_symbﬁ
(&
symbﬁ_no
);

966 i‡(
sym
 =&
symbﬁ_no
)

967  
	`ex¥_Æloc_⁄e
(
E_NOT
, 
	`ex¥_c›y
(
e
));

969 i‡(
sym
 =&
symbﬁ_yes
)

970  
	`ex¥_Æloc_⁄e
(
E_NOT
, 
	`ex¥_c›y
(
e
));

971 i‡(
sym
 =&
symbﬁ_mod
)

972  
	`ex¥_Æloc_symbﬁ
(&
symbﬁ_yes
);

973 i‡(
sym
 =&
symbﬁ_no
)

974  
	`ex¥_c›y
(
e
);

977 
E_SYMBOL
:

978  
	`ex¥_Æloc_comp
(
ty≥
, 
e
->
À·
.
sym
, sym);

979 
E_LIST
:

980 
E_RANGE
:

981 
E_NONE
:

984  
NULL
;

985 
	}
}

987 
	e°rög_vÆue_köd
 {

988 
	mk_°rög
,

989 
	mk_sig√d
,

990 
	mk_unsig√d
,

993 
	u°rög_vÆue
 {

994 
	mu
;

995 sig√d 
	ms
;

998 
°rög_vÆue_köd
 
	$ex¥_∑r£_°rög
(c⁄° *
°r
,

999 
symbﬁ_ty≥
 
ty≥
,

1000 
°rög_vÆue
 *
vÆ
)

1002 *
èû
;

1003 
°rög_vÆue_köd
 
köd
;

1005 
î∫o
 = 0;

1006 
ty≥
) {

1007 
S_BOOLEAN
:

1008 
S_TRISTATE
:

1009 
vÆ
->
s
 = !
	`°rcmp
(
°r
, "n") ? 0 :

1010 !
	`°rcmp
(
°r
, "m") ? 1 :

1011 !
	`°rcmp
(
°r
, "y") ? 2 : -1;

1012  
k_sig√d
;

1013 
S_INT
:

1014 
vÆ
->
s
 = 
	`°πﬁl
(
°r
, &
èû
, 10);

1015 
köd
 = 
k_sig√d
;

1017 
S_HEX
:

1018 
vÆ
->
u
 = 
	`°πouŒ
(
°r
, &
èû
, 16);

1019 
köd
 = 
k_unsig√d
;

1022 
vÆ
->
s
 = 
	`°πﬁl
(
°r
, &
èû
, 0);

1023 
köd
 = 
k_sig√d
;

1026  !
î∫o
 && !*
èû
 &&Åaû > 
°r
 && 
	`isxdigô
(tail[-1])

1027 ? 
köd
 : 
k_°rög
;

1028 
	}
}

1030 
åi°©e
 
	$ex¥_ˇlc_vÆue
(
ex¥
 *
e
)

1032 
åi°©e
 
vÆ1
, 
vÆ2
;

1033 c⁄° *
°r1
, *
°r2
;

1034 
°rög_vÆue_köd
 
k1
 = 
k_°rög
, 
k2
 = k_string;

1035 
°rög_vÆue
 
lvÆ
 = {}, 
rvÆ
 = {};

1036 
ªs
;

1038 i‡(!
e
)

1039  
yes
;

1041 
e
->
ty≥
) {

1042 
E_SYMBOL
:

1043 
	`sym_ˇlc_vÆue
(
e
->
À·
.
sym
);

1044  
e
->
À·
.
sym
->
cuº
.
åi
;

1045 
E_AND
:

1046 
vÆ1
 = 
	`ex¥_ˇlc_vÆue
(
e
->
À·
.
ex¥
);

1047 
vÆ2
 = 
	`ex¥_ˇlc_vÆue
(
e
->
right
.
ex¥
);

1048  
	`EXPR_AND
(
vÆ1
, 
vÆ2
);

1049 
E_OR
:

1050 
vÆ1
 = 
	`ex¥_ˇlc_vÆue
(
e
->
À·
.
ex¥
);

1051 
vÆ2
 = 
	`ex¥_ˇlc_vÆue
(
e
->
right
.
ex¥
);

1052  
	`EXPR_OR
(
vÆ1
, 
vÆ2
);

1053 
E_NOT
:

1054 
vÆ1
 = 
	`ex¥_ˇlc_vÆue
(
e
->
À·
.
ex¥
);

1055  
	`EXPR_NOT
(
vÆ1
);

1056 
E_EQUAL
:

1057 
E_GEQ
:

1058 
E_GTH
:

1059 
E_LEQ
:

1060 
E_LTH
:

1061 
E_UNEQUAL
:

1064 
	`¥ötf
("ex¥_ˇlc_vÆue: %d?\n", 
e
->
ty≥
);

1065  
no
;

1068 
	`sym_ˇlc_vÆue
(
e
->
À·
.
sym
);

1069 
	`sym_ˇlc_vÆue
(
e
->
right
.
sym
);

1070 
°r1
 = 
	`sym_gë_°rög_vÆue
(
e
->
À·
.
sym
);

1071 
°r2
 = 
	`sym_gë_°rög_vÆue
(
e
->
right
.
sym
);

1073 i‡(
e
->
À·
.
sym
->
ty≥
 !
S_STRING
 ||É->
right
.sym->type != S_STRING) {

1074 
k1
 = 
	`ex¥_∑r£_°rög
(
°r1
, 
e
->
À·
.
sym
->
ty≥
, &
lvÆ
);

1075 
k2
 = 
	`ex¥_∑r£_°rög
(
°r2
, 
e
->
right
.
sym
->
ty≥
, &
rvÆ
);

1078 i‡(
k1
 =
k_°rög
 || 
k2
 == k_string)

1079 
ªs
 = 
	`°rcmp
(
°r1
, 
°r2
);

1080 i‡(
k1
 =
k_unsig√d
 || 
k2
 == k_unsigned)

1081 
ªs
 = (
lvÆ
.
u
 > 
rvÆ
.u) - (lval.u <Ñval.u);

1083 
ªs
 = (
lvÆ
.
s
 > 
rvÆ
.s) - (lval.s <Ñval.s);

1085 
e
->
ty≥
) {

1086 
E_EQUAL
:

1087  
ªs
 ? 
no
 : 
yes
;

1088 
E_GEQ
:

1089  
ªs
 >0 ? 
yes
 : 
no
;

1090 
E_GTH
:

1091  
ªs
 > 0 ? 
yes
 : 
no
;

1092 
E_LEQ
:

1093  
ªs
 <0 ? 
yes
 : 
no
;

1094 
E_LTH
:

1095  
ªs
 < 0 ? 
yes
 : 
no
;

1096 
E_UNEQUAL
:

1097  
ªs
 ? 
yes
 : 
no
;

1099 
	`¥ötf
("ex¥_ˇlc_vÆue:Ññ©i⁄ %d?\n", 
e
->
ty≥
);

1100  
no
;

1102 
	}
}

1104 
	$ex¥_com∑ª_ty≥
(
ex¥_ty≥
 
t1
, ex¥_ty≥ 
t2
)

1106 i‡(
t1
 =
t2
)

1108 
t1
) {

1109 
E_LEQ
:

1110 
E_LTH
:

1111 
E_GEQ
:

1112 
E_GTH
:

1113 i‡(
t2
 =
E_EQUAL
 ||Å2 =
E_UNEQUAL
)

1115 
E_EQUAL
:

1116 
E_UNEQUAL
:

1117 i‡(
t2
 =
E_NOT
)

1119 
E_NOT
:

1120 i‡(
t2
 =
E_AND
)

1122 
E_AND
:

1123 i‡(
t2
 =
E_OR
)

1125 
E_OR
:

1126 i‡(
t2
 =
E_LIST
)

1128 
E_LIST
:

1129 i‡(
t2
 == 0)

1134 
	`¥ötf
("[%dgt%d?]", 
t1
, 
t2
);

1136 
	}
}

1138 
	$ex¥_¥öt
(
ex¥
 *
e
,

1139 (*
‚
)(*, 
symbﬁ
 *, const *),

1140 *
d©a
, 
¥evtokí
)

1142 i‡(!
e
) {

1143 
	`‚
(
d©a
, 
NULL
, "y");

1147 i‡(
	`ex¥_com∑ª_ty≥
(
¥evtokí
, 
e
->
ty≥
) > 0)

1148 
	`‚
(
d©a
, 
NULL
, "(");

1149 
e
->
ty≥
) {

1150 
E_SYMBOL
:

1151 i‡(
e
->
À·
.
sym
->
«me
)

1152 
	`‚
(
d©a
, 
e
->
À·
.
sym
,É->À·.sym->
«me
);

1154 
	`‚
(
d©a
, 
NULL
, "<choice>");

1156 
E_NOT
:

1157 
	`‚
(
d©a
, 
NULL
, "!");

1158 
	`ex¥_¥öt
(
e
->
À·
.
ex¥
, 
‚
, 
d©a
, 
E_NOT
);

1160 
E_EQUAL
:

1161 i‡(
e
->
À·
.
sym
->
«me
)

1162 
	`‚
(
d©a
, 
e
->
À·
.
sym
,É->À·.sym->
«me
);

1164 
	`‚
(
d©a
, 
NULL
, "<choice>");

1165 
	`‚
(
d©a
, 
NULL
, "=");

1166 
	`‚
(
d©a
, 
e
->
right
.
sym
,É->right.sym->
«me
);

1168 
E_LEQ
:

1169 
E_LTH
:

1170 i‡(
e
->
À·
.
sym
->
«me
)

1171 
	`‚
(
d©a
, 
e
->
À·
.
sym
,É->À·.sym->
«me
);

1173 
	`‚
(
d©a
, 
NULL
, "<choice>");

1174 
	`‚
(
d©a
, 
NULL
, 
e
->
ty≥
 =
E_LEQ
 ? "<=" : "<");

1175 
	`‚
(
d©a
, 
e
->
right
.
sym
,É->right.sym->
«me
);

1177 
E_GEQ
:

1178 
E_GTH
:

1179 i‡(
e
->
À·
.
sym
->
«me
)

1180 
	`‚
(
d©a
, 
e
->
À·
.
sym
,É->À·.sym->
«me
);

1182 
	`‚
(
d©a
, 
NULL
, "<choice>");

1183 
	`‚
(
d©a
, 
NULL
, 
e
->
ty≥
 =
E_GEQ
 ? ">=" : ">");

1184 
	`‚
(
d©a
, 
e
->
right
.
sym
,É->right.sym->
«me
);

1186 
E_UNEQUAL
:

1187 i‡(
e
->
À·
.
sym
->
«me
)

1188 
	`‚
(
d©a
, 
e
->
À·
.
sym
,É->À·.sym->
«me
);

1190 
	`‚
(
d©a
, 
NULL
, "<choice>");

1191 
	`‚
(
d©a
, 
NULL
, "!=");

1192 
	`‚
(
d©a
, 
e
->
right
.
sym
,É->right.sym->
«me
);

1194 
E_OR
:

1195 
	`ex¥_¥öt
(
e
->
À·
.
ex¥
, 
‚
, 
d©a
, 
E_OR
);

1196 
	`‚
(
d©a
, 
NULL
, " || ");

1197 
	`ex¥_¥öt
(
e
->
right
.
ex¥
, 
‚
, 
d©a
, 
E_OR
);

1199 
E_AND
:

1200 
	`ex¥_¥öt
(
e
->
À·
.
ex¥
, 
‚
, 
d©a
, 
E_AND
);

1201 
	`‚
(
d©a
, 
NULL
, " && ");

1202 
	`ex¥_¥öt
(
e
->
right
.
ex¥
, 
‚
, 
d©a
, 
E_AND
);

1204 
E_LIST
:

1205 
	`‚
(
d©a
, 
e
->
right
.
sym
,É->right.sym->
«me
);

1206 i‡(
e
->
À·
.
ex¥
) {

1207 
	`‚
(
d©a
, 
NULL
, " ^ ");

1208 
	`ex¥_¥öt
(
e
->
À·
.
ex¥
, 
‚
, 
d©a
, 
E_LIST
);

1211 
E_RANGE
:

1212 
	`‚
(
d©a
, 
NULL
, "[");

1213 
	`‚
(
d©a
, 
e
->
À·
.
sym
,É->À·.sym->
«me
);

1214 
	`‚
(
d©a
, 
NULL
, " ");

1215 
	`‚
(
d©a
, 
e
->
right
.
sym
,É->right.sym->
«me
);

1216 
	`‚
(
d©a
, 
NULL
, "]");

1220 
buf
[32];

1221 
	`•rötf
(
buf
, "<unknow¿ty≥ %d>", 
e
->
ty≥
);

1222 
	`‚
(
d©a
, 
NULL
, 
buf
);

1226 i‡(
	`ex¥_com∑ª_ty≥
(
¥evtokí
, 
e
->
ty≥
) > 0)

1227 
	`‚
(
d©a
, 
NULL
, ")");

1228 
	}
}

1230 
	$ex¥_¥öt_fûe_hñ≥r
(*
d©a
, 
symbﬁ
 *
sym
, c⁄° *
°r
)

1232 
	`xfwrôe
(
°r
, 
	`°æí
(°r), 1, 
d©a
);

1233 
	}
}

1235 
	$ex¥_Âröt
(
ex¥
 *
e
, 
FILE
 *
out
)

1237 
	`ex¥_¥öt
(
e
, 
ex¥_¥öt_fûe_hñ≥r
, 
out
, 
E_NONE
);

1238 
	}
}

1240 
	$ex¥_¥öt_g°r_hñ≥r
(*
d©a
, 
symbﬁ
 *
sym
, c⁄° *
°r
)

1242 
g°r
 *
gs
 = (g°r*)
d©a
;

1243 c⁄° *
sym_°r
 = 
NULL
;

1245 i‡(
sym
)

1246 
sym_°r
 = 
	`sym_gë_°rög_vÆue
(
sym
);

1248 i‡(
gs
->
max_width
) {

1249 
exåa_Àngth
 = 
	`°æí
(
°r
);

1250 c⁄° *
œ°_¸
 = 
	`°ºchr
(
gs
->
s
, '\n');

1251 
œ°_löe_Àngth
;

1253 i‡(
sym_°r
)

1254 
exåa_Àngth
 +4 + 
	`°æí
(
sym_°r
);

1256 i‡(!
œ°_¸
)

1257 
œ°_¸
 = 
gs
->
s
;

1259 
œ°_löe_Àngth
 = 
	`°æí
(
gs
->
s
Ë- (
œ°_¸
 - gs->s);

1261 i‡((
œ°_löe_Àngth
 + 
exåa_Àngth
Ë> 
gs
->
max_width
)

1262 
	`°r_≠≥nd
(
gs
, "\\\n");

1265 
	`°r_≠≥nd
(
gs
, 
°r
);

1266 i‡(
sym
 && sym->
ty≥
 !
S_UNKNOWN
)

1267 
	`°r_¥ötf
(
gs
, " [=%s]", 
sym_°r
);

1268 
	}
}

1270 
	$ex¥_g°r_¥öt
(
ex¥
 *
e
, 
g°r
 *
gs
)

1272 
	`ex¥_¥öt
(
e
, 
ex¥_¥öt_g°r_hñ≥r
, 
gs
, 
E_NONE
);

1273 
	}
}

1280 
	$ex¥_¥öt_ªvdï
(
ex¥
 *
e
,

1281 (*
‚
)(*, 
symbﬁ
 *, const *),

1282 *
d©a
, 
åi°©e
 
¥_ty≥
, c⁄° **
tôÀ
)

1284 i‡(
e
->
ty≥
 =
E_OR
) {

1285 
	`ex¥_¥öt_ªvdï
(
e
->
À·
.
ex¥
, 
‚
, 
d©a
, 
¥_ty≥
, 
tôÀ
);

1286 
	`ex¥_¥öt_ªvdï
(
e
->
right
.
ex¥
, 
‚
, 
d©a
, 
¥_ty≥
, 
tôÀ
);

1287 } i‡(
	`ex¥_ˇlc_vÆue
(
e
Ë=
¥_ty≥
) {

1288 i‡(*
tôÀ
) {

1289 
	`‚
(
d©a
, 
NULL
, *
tôÀ
);

1290 *
tôÀ
 = 
NULL
;

1293 
	`‚
(
d©a
, 
NULL
, " - ");

1294 
	`ex¥_¥öt
(
e
, 
‚
, 
d©a
, 
E_NONE
);

1295 
	`‚
(
d©a
, 
NULL
, "\n");

1297 
	}
}

1299 
	$ex¥_g°r_¥öt_ªvdï
(
ex¥
 *
e
, 
g°r
 *
gs
,

1300 
åi°©e
 
¥_ty≥
, c⁄° *
tôÀ
)

1302 
	`ex¥_¥öt_ªvdï
(
e
, 
ex¥_¥öt_g°r_hñ≥r
, 
gs
, 
¥_ty≥
, &
tôÀ
);

1303 
	}
}

	@nemu/tools/kconfig/expr.h

6 #i‚de‡
EXPR_H


7 
	#EXPR_H


	)

9 #ifde‡
__˝lu•lus


13 
	~<as£π.h
>

14 
	~<°dio.h
>

15 
	~"li°.h
"

16 #i‚de‡
__˝lu•lus


17 
	~<°dboﬁ.h
>

20 
	sfûe
 {

21 
fûe
 *
√xt
;

22 
fûe
 *
∑ª¡
;

23 c⁄° *
«me
;

24 
löío
;

27 
	eåi°©e
 {

28 
no
, 
mod
, 
yes


29 } 
	tåi°©e
;

31 
	eex¥_ty≥
 {

32 
E_NONE
, 
E_OR
, 
E_AND
, 
E_NOT
,

33 
E_EQUAL
, 
E_UNEQUAL
, 
E_LTH
, 
E_LEQ
, 
E_GTH
, 
E_GEQ
,

34 
E_LIST
, 
E_SYMBOL
, 
E_RANGE


37 
	uex¥_d©a
 {

38 
ex¥
 *expr;

39 
symbﬁ
 *
sym
;

42 
	sex¥
 {

43 
ex¥_ty≥
 
ty≥
;

44 
ex¥_d©a
 
À·
, 
right
;

47 
	#EXPR_OR
(
dï1
, 
dï2
Ë(((dï1)>(dï2))?(dï1):(dï2))

	)

48 
	#EXPR_AND
(
dï1
, 
dï2
Ë(((dï1)<(dï2))?(dï1):(dï2))

	)

49 
	#EXPR_NOT
(
dï
Ë(2-(dï))

	)

51 
	#ex¥_li°_f‹_óch_sym
(
l
, 
e
, 
s
) \

52 
e
 = (
l
);É && (
s
 =É->
right
.
sym
);É =É->
À·
.
ex¥
)

	)

54 
	sex¥_vÆue
 {

55 
ex¥
 *expr;

56 
åi°©e
 
åi
;

59 
	ssymbﬁ_vÆue
 {

60 *
vÆ
;

61 
åi°©e
 
åi
;

64 
	esymbﬁ_ty≥
 {

65 
S_UNKNOWN
, 
S_BOOLEAN
, 
S_TRISTATE
, 
S_INT
, 
S_HEX
, 
S_STRING


70 
S_DEF_USER
,

71 
S_DEF_AUTO
,

72 
S_DEF_DEF3
,

73 
S_DEF_DEF4
,

74 
S_DEF_COUNT


83 
	ssymbﬁ
 {

85 
symbﬁ
 *
√xt
;

88 *
«me
;

91 
symbﬁ_ty≥
 
ty≥
;

98 
symbﬁ_vÆue
 
cuº
;

104 
symbﬁ_vÆue
 
def
[
S_DEF_COUNT
];

114 
åi°©e
 
visibÀ
;

117 
Êags
;

120 
¥›îty
 *
¥›
;

123 
ex¥_vÆue
 
dú_dï
;

126 
ex¥_vÆue
 
ªv_dï
;

131 
ex¥_vÆue
 
im∂õd
;

134 
	#f‹_Æl_symbﬁs
(
i
, 
sym
Ëò0; i < 
SYMBOL_HASHSIZE
; i++Ësym = 
symbﬁ_hash
[i]; sym; sym = sym->
√xt
)

	)

136 
	#SYMBOL_CONST
 0x0001

	)

137 
	#SYMBOL_CHECK
 0x0008

	)

138 
	#SYMBOL_CHOICE
 0x0010

	)

139 
	#SYMBOL_CHOICEVAL
 0x0020

	)

140 
	#SYMBOL_VALID
 0x0080

	)

141 
	#SYMBOL_OPTIONAL
 0x0100

	)

142 
	#SYMBOL_WRITE
 0x0200

	)

143 
	#SYMBOL_CHANGED
 0x0400

	)

144 
	#SYMBOL_WRITTEN
 0x0800

	)

145 
	#SYMBOL_NO_WRITE
 0x1000

	)

146 
	#SYMBOL_CHECKED
 0x2000

	)

147 
	#SYMBOL_WARNED
 0x8000

	)

150 
	#SYMBOL_DEF
 0x10000

	)

151 
	#SYMBOL_DEF_USER
 0x10000

	)

152 
	#SYMBOL_DEF_AUTO
 0x20000

	)

153 
	#SYMBOL_DEF3
 0x40000

	)

154 
	#SYMBOL_DEF4
 0x80000

	)

157 
	#SYMBOL_NEED_SET_CHOICE_VALUES
 0x100000

	)

160 
	#SYMBOL_ALLNOCONFIG_Y
 0x200000

	)

162 
	#SYMBOL_MAXLENGTH
 256

	)

163 
	#SYMBOL_HASHSIZE
 9973

	)

179 
	e¥›_ty≥
 {

180 
P_UNKNOWN
,

181 
P_PROMPT
,

182 
P_COMMENT
,

183 
P_MENU
,

184 
P_DEFAULT
,

185 
P_CHOICE
,

186 
P_SELECT
,

187 
P_IMPLY
,

188 
P_RANGE
,

189 
P_SYMBOL
,

192 
	s¥›îty
 {

193 
¥›îty
 *
√xt
;

194 
¥›_ty≥
 
ty≥
;

195 c⁄° *
ãxt
;

196 
ex¥_vÆue
 
visibÀ
;

197 
ex¥
 *expr;

198 
míu
 *menu;

201 
fûe
 *file;

202 
löío
;

205 
	#f‹_Æl_¥›îtõs
(
sym
, 
°
, 
tok
) \

206 
°
 = 
sym
->
¥›
; st; sà°->
√xt
) \

207 i‡(
°
->
ty≥
 =(
tok
))

	)

208 
	#f‹_Æl_deÁu…s
(
sym
, 
°
Ë
	`f‹_Æl_¥›îtõs
(sym, st, 
P_DEFAULT
)

	)

209 
	#f‹_Æl_choi˚s
(
sym
, 
°
Ë
	`f‹_Æl_¥›îtõs
(sym, st, 
P_CHOICE
)

	)

210 
	#f‹_Æl_¥om±s
(
sym
, 
°
) \

211 
°
 = 
sym
->
¥›
; st; sà°->
√xt
) \

212 i‡(
°
->
ãxt
)

	)

220 
	smíu
 {

222 
míu
 *
√xt
;

225 
míu
 *
∑ª¡
;

228 
míu
 *
li°
;

234 
symbﬁ
 *
sym
;

241 
¥›îty
 *
¥om±
;

247 
ex¥
 *
visibûôy
;

253 
ex¥
 *
dï
;

256 
Êags
;

259 *
hñp
;

262 
fûe
 *file;

263 
löío
;

266 *
d©a
;

273 
	#MENU_CHANGED
 0x0001

	)

275 
	#MENU_ROOT
 0x0002

	)

277 
	sjump_key
 {

278 
li°_hód
 
íåõs
;

279 
size_t
 
off£t
;

280 
míu
 *
èrgë
;

281 
ödex
;

284 
	#JUMP_NB
 9

	)

286 
fûe
 *
fûe_li°
;

287 
fûe
 *
cuºít_fûe
;

288 
fûe
 *
lookup_fûe
(c⁄° *
«me
);

290 
symbﬁ
 
symbﬁ_yes
, 
symbﬁ_no
, 
symbﬁ_mod
;

291 
symbﬁ
 *
moduÀs_sym
;

292 
symbﬁ
 *
sym_defc⁄fig_li°
;

293 
cdebug
;

294 
ex¥
 *
ex¥_Æloc_symbﬁ
(
symbﬁ
 *
sym
);

295 
ex¥
 *
ex¥_Æloc_⁄e
(
ex¥_ty≥
 
ty≥
, ex¥ *
˚
);

296 
ex¥
 *
ex¥_Æloc_two
(
ex¥_ty≥
 
ty≥
, ex¥ *
e1
, ex¥ *
e2
);

297 
ex¥
 *
ex¥_Æloc_comp
(
ex¥_ty≥
 
ty≥
, 
symbﬁ
 *
s1
, symbﬁ *
s2
);

298 
ex¥
 *
ex¥_Æloc_™d
(ex¥ *
e1
, ex¥ *
e2
);

299 
ex¥
 *
ex¥_Æloc_‹
(ex¥ *
e1
, ex¥ *
e2
);

300 
ex¥
 *
ex¥_c›y
(c⁄° ex¥ *
‹g
);

301 
ex¥_‰ì
(
ex¥
 *
e
);

302 
ex¥_ñimö©e_eq
(
ex¥
 **
ï1
, ex¥ **
ï2
);

303 
ex¥_eq
(
ex¥
 *
e1
, ex¥ *
e2
);

304 
åi°©e
 
ex¥_ˇlc_vÆue
(
ex¥
 *
e
);

305 
ex¥
 *
ex¥_å™s_boﬁ
(ex¥ *
e
);

306 
ex¥
 *
ex¥_ñimö©e_dups
(ex¥ *
e
);

307 
ex¥
 *
ex¥_å™sf‹m
(ex¥ *
e
);

308 
ex¥_c⁄èös_symbﬁ
(
ex¥
 *
dï
, 
symbﬁ
 *
sym
);

309 
boﬁ
 
ex¥_dïíds_symbﬁ
(
ex¥
 *
dï
, 
symbﬁ
 *
sym
);

310 
ex¥
 *
ex¥_å™s_com∑ª
(ex¥ *
e
, 
ex¥_ty≥
 
ty≥
, 
symbﬁ
 *
sym
);

312 
ex¥_Âröt
(
ex¥
 *
e
, 
FILE
 *
out
);

313 
	gg°r
;

314 
ex¥_g°r_¥öt
(
ex¥
 *
e
, 
g°r
 *
gs
);

315 
ex¥_g°r_¥öt_ªvdï
(
ex¥
 *
e
, 
g°r
 *
gs
,

316 
åi°©e
 
¥_ty≥
, c⁄° *
tôÀ
);

318 
ölöe
 
ex¥_is_yes
(
ex¥
 *
e
)

320  !
	ge
 || (e->
	gty≥
 =
E_SYMBOL
 && 
e
->
À·
.
sym
 =&
symbﬁ_yes
);

323 
ölöe
 
ex¥_is_no
(
ex¥
 *
e
)

325  
	ge
 && (e->
	gty≥
 =
E_SYMBOL
 && 
e
->
À·
.
sym
 =&
symbﬁ_no
);

328 #ifde‡
__˝lu•lus


	@nemu/tools/kconfig/list.h

2 #i‚de‡
LIST_H


3 
	#LIST_H


	)

9 #unde‡
off£tof


10 
	#off£tof
(
TYPE
, 
MEMBER
Ë((
size_t
Ë&((TYPE *)0)->MEMBER)

	)

19 
	#c⁄èöî_of
(
±r
, 
ty≥
, 
membî
) ({ \

20 c⁄° 
	`ty≥of
–((
ty≥
 *)0)->
membî
 ) *
__m±r
 = (
±r
); \

21 (
ty≥
 *)–(*)
__m±r
 - 
	`off£tof
—y≥,
membî
Ë);})

	)

24 
	sli°_hód
 {

25 
li°_hód
 *
	m√xt
, *
	m¥ev
;

29 
	#LIST_HEAD_INIT
(
«me
Ë{ &“ame), &“ameË}

	)

31 
	#LIST_HEAD
(
«me
) \

32 
li°_hód
 
«me
 = 
	`LIST_HEAD_INIT
“ame)

	)

40 
	#li°_íåy
(
±r
, 
ty≥
, 
membî
) \

41 
	`c⁄èöî_of
(
±r
, 
ty≥
, 
membî
)

	)

49 
	#li°_f‹_óch_íåy
(
pos
, 
hód
, 
membî
) \

50 
pos
 = 
	`li°_íåy
((
hód
)->
√xt
, 
	`ty≥of
(*pos), 
membî
); \

51 &
pos
->
membî
 !(
hód
); \

52 
pos
 = 
	`li°_íåy
’os->
membî
.
√xt
, 
	`ty≥of
(*pos), membî))

	)

61 
	#li°_f‹_óch_íåy_ß„
(
pos
, 
n
, 
hód
, 
membî
) \

62 
pos
 = 
	`li°_íåy
((
hód
)->
√xt
, 
	`ty≥of
(*pos), 
membî
), \

63 
n
 = 
	`li°_íåy
(
pos
->
membî
.
√xt
, 
	`ty≥of
(*pos), member); \

64 &
pos
->
membî
 !(
hód
); \

65 
pos
 = 
n
,Ç = 
	`li°_íåy
“->
membî
.
√xt
, 
	`ty≥of
(*n), membî))

	)

71 
ölöe
 
	$li°_em±y
(c⁄° 
li°_hód
 *
hód
)

73  
hód
->
√xt
 == head;

74 
	}
}

82 
ölöe
 
	$__li°_add
(
li°_hód
 *
_√w
,

83 
li°_hód
 *
¥ev
,

84 
li°_hód
 *
√xt
)

86 
√xt
->
¥ev
 = 
_√w
;

87 
_√w
->
√xt
 =Çext;

88 
_√w
->
¥ev
 =Örev;

89 
¥ev
->
√xt
 = 
_√w
;

90 
	}
}

100 
ölöe
 
	$li°_add_èû
(
li°_hód
 *
_√w
, li°_hód *
hód
)

102 
	`__li°_add
(
_√w
, 
hód
->
¥ev
, head);

103 
	}
}

112 
ölöe
 
	$__li°_dñ
(
li°_hód
 *
¥ev
, li°_hód *
√xt
)

114 
√xt
->
¥ev
 =Örev;

115 
¥ev
->
√xt
 =Çext;

116 
	}
}

118 
	#LIST_POISON1
 ((*Ë0x00100100)

	)

119 
	#LIST_POISON2
 ((*Ë0x00200200)

	)

126 
ölöe
 
	$li°_dñ
(
li°_hód
 *
íåy
)

128 
	`__li°_dñ
(
íåy
->
¥ev
,É¡ry->
√xt
);

129 
íåy
->
√xt
 = (
li°_hód
*)
LIST_POISON1
;

130 
íåy
->
¥ev
 = (
li°_hód
*)
LIST_POISON2
;

131 
	}
}

	@nemu/tools/kconfig/lkc.h

6 #i‚de‡
LKC_H


7 
	#LKC_H


	)

9 
	~"ex¥.h
"

11 #ifde‡
__˝lu•lus


15 
	~"lkc_¥Ÿo.h
"

17 
	#SRCTREE
 "§˘ªe"

	)

19 #i‚de‡
PACKAGE


20 
	#PACKAGE
 "löux"

	)

23 #i‚de‡
CONFIG_


24 
	#CONFIG_
 "CONFIG_"

	)

26 
ölöe
 c⁄° *
CONFIG_¥efix
()

28  
gëív
–"CONFIG_" ) ?: 
CONFIG_
;

30 #unde‡
CONFIG_


31 
	#CONFIG_
 
	`CONFIG_¥efix
()

	)

33 
	ec⁄f_def_mode
 {

34 
def_deÁu…
,

35 
def_yes
,

36 
def_mod
,

37 
def_y2m
,

38 
def_m2y
,

39 
def_no
,

40 
def_øndom


43 
yylöío
;

44 
zc⁄fdump
(
FILE
 *
out
);

45 
zc⁄f_°¨thñp
();

46 
FILE
 *
zc⁄f_f›í
(c⁄° *
«me
);

47 
zc⁄f_öôsˇn
(c⁄° *
«me
);

48 
zc⁄f_√xtfûe
(c⁄° *
«me
);

49 
zc⁄f_löío
();

50 c⁄° *
zc⁄f_cu∫ame
();

53 c⁄° *
c⁄f_gë_c⁄fig«me
();

54 
sym_£t_ch™ge_cou¡
(
cou¡
);

55 
sym_add_ch™ge_cou¡
(
cou¡
);

56 
boﬁ
 
c⁄f_£t_Æl_√w_symbﬁs
(
c⁄f_def_mode
 
mode
);

57 
c⁄f_ªwrôe_mod_‹_yes
(
c⁄f_def_mode
 
mode
);

58 
£t_Æl_choi˚_vÆues
(
symbﬁ
 *
csym
);

61 
ölöe
 
xfwrôe
(c⁄° *
°r
, 
size_t
 
Àn
, size_à
cou¡
, 
FILE
 *
out
)

63 
as£π
(
Àn
 != 0);

65 i‡(
fwrôe
(
°r
, 
Àn
, 
cou¡
, 
out
) != count)

66 
Ârötf
(
°dîr
, "Error in writing orÉnd of file.\n");

70 
fûe
 *
fûe_lookup
(c⁄° *
«me
);

71 *
xmÆloc
(
size_t
 
size
);

72 *
xˇŒoc
(
size_t
 
nmemb
, size_à
size
);

73 *
xªÆloc
(*
p
, 
size_t
 
size
);

74 *
x°rdup
(c⁄° *
s
);

75 *
x°∫dup
(c⁄° *
s
, 
size_t
 
n
);

78 
yyÀx
();

80 
	sg°r
 {

81 
size_t
 
	gÀn
;

82 *
	gs
;

87 
	gmax_width
;

89 
g°r
 
°r_√w
();

90 
°r_‰ì
(
g°r
 *
gs
);

91 
°r_≠≥nd
(
g°r
 *
gs
, c⁄° *
s
);

92 
°r_¥ötf
(
g°r
 *
gs
, c⁄° *
fmt
, ...);

93 c⁄° *
°r_gë
(
g°r
 *
gs
);

96 
_míu_öô
();

97 
míu_w¨n
(
míu
 *míu, c⁄° *
fmt
, ...);

98 
míu
 *
míu_add_míu
();

99 
míu_íd_míu
();

100 
míu_add_íåy
(
symbﬁ
 *
sym
);

101 
míu_add_dï
(
ex¥
 *
dï
);

102 
míu_add_visibûôy
(
ex¥
 *
dï
);

103 
¥›îty
 *
míu_add_¥om±
(
¥›_ty≥
 
ty≥
, *
¥om±
, 
ex¥
 *
dï
);

104 
míu_add_ex¥
(
¥›_ty≥
 
ty≥
, 
ex¥
 *ex¥, ex¥ *
dï
);

105 
míu_add_symbﬁ
(
¥›_ty≥
 
ty≥
, 
symbﬁ
 *
sym
, 
ex¥
 *
dï
);

106 
míu_add_›ti⁄_moduÀs
();

107 
míu_add_›ti⁄_defc⁄fig_li°
();

108 
míu_add_›ti⁄_Æ oc⁄fig_y
();

109 
míu_föÆize
(
míu
 *
∑ª¡
);

110 
míu_£t_ty≥
(
ty≥
);

112 
míu
 
roŸmíu
;

114 
boﬁ
 
míu_is_em±y
(
míu
 *menu);

115 
boﬁ
 
míu_is_visibÀ
(
míu
 *menu);

116 
boﬁ
 
míu_has_¥om±
(
míu
 *menu);

117 c⁄° *
míu_gë_¥om±
(
míu
 *menu);

118 
míu
 *
míu_gë_roŸ_míu
(menu *menu);

119 
míu
 *
míu_gë_∑ª¡_míu
(menu *menu);

120 
boﬁ
 
míu_has_hñp
(
míu
 *menu);

121 c⁄° *
míu_gë_hñp
(
míu
 *menu);

122 
g°r
 
gë_ªœti⁄s_°r
(
symbﬁ
 **
sym_¨r
, 
li°_hód
 *
hód
);

123 
míu_gë_ext_hñp
(
míu
 *míu, 
g°r
 *
hñp
);

126 
sym_˛ór_Æl_vÆid
();

127 
symbﬁ
 *
sym_choi˚_deÁu…
(symbﬁ *
sym
);

128 
¥›îty
 *
sym_gë_ønge_¥›
(
symbﬁ
 *
sym
);

129 c⁄° *
sym_gë_°rög_deÁu…
(
symbﬁ
 *
sym
);

130 
symbﬁ
 *
sym_check_dïs
(symbﬁ *
sym
);

131 
symbﬁ
 *
¥›_gë_symbﬁ
(
¥›îty
 *
¥›
);

133 
ölöe
 
åi°©e
 
sym_gë_åi°©e_vÆue
(
symbﬁ
 *
sym
)

135  
	gsym
->
	gcuº
.
	gåi
;

139 
ölöe
 
symbﬁ
 *
sym_gë_choi˚_vÆue
(symbﬁ *
sym
)

141  (
	gsymbﬁ
 *)
	gsym
->
	gcuº
.
	gvÆ
;

144 
ölöe
 
boﬁ
 
sym_£t_choi˚_vÆue
(
symbﬁ
 *
ch
, symbﬁ *
chvÆ
)

146  
sym_£t_åi°©e_vÆue
(
chvÆ
, 
yes
);

149 
ölöe
 
boﬁ
 
sym_is_choi˚
(
symbﬁ
 *
sym
)

151  
	gsym
->
	gÊags
 & 
	gSYMBOL_CHOICE
 ? 
	gåue
 : 
Ál£
;

154 
ölöe
 
boﬁ
 
sym_is_choi˚_vÆue
(
symbﬁ
 *
sym
)

156  
	gsym
->
	gÊags
 & 
	gSYMBOL_CHOICEVAL
 ? 
	gåue
 : 
Ál£
;

159 
ölöe
 
boﬁ
 
sym_is_›ti⁄Æ
(
symbﬁ
 *
sym
)

161  
	gsym
->
	gÊags
 & 
	gSYMBOL_OPTIONAL
 ? 
	gåue
 : 
Ál£
;

164 
ölöe
 
boﬁ
 
sym_has_vÆue
(
symbﬁ
 *
sym
)

166  
	gsym
->
	gÊags
 & 
	gSYMBOL_DEF_USER
 ? 
	gåue
 : 
Ál£
;

169 #ifde‡
__˝lu•lus


	@nemu/tools/kconfig/lkc_proto.h

2 
	~<°d¨g.h
>

5 
c⁄f_∑r£
(c⁄° *
«me
);

6 
c⁄f_ªad
(c⁄° *
«me
);

7 
c⁄f_ªad_sim∂e
(c⁄° *
«me
, );

8 
c⁄f_wrôe_defc⁄fig
(c⁄° *
«me
);

9 
c⁄f_wrôe
(c⁄° *
«me
);

10 
c⁄f_wrôe_autoc⁄f
(
ovîwrôe
);

11 
boﬁ
 
c⁄f_gë_ch™ged
();

12 
c⁄f_£t_ch™ged_ˇŒback
((*
‚
)());

13 
	`c⁄f_£t_mesßge_ˇŒback
((*
‚
)(c⁄° *
s
));

16 
symbﬁ
 * 
symbﬁ_hash
[
SYMBOL_HASHSIZE
];

18 
symbﬁ
 * 
	`sym_lookup
(c⁄° *
«me
, 
Êags
);

19 
symbﬁ
 * 
	`sym_föd
(c⁄° *
«me
);

20 c⁄° * 
	`sym_esˇ≥_°rög_vÆue
(c⁄° *
ö
);

21 
symbﬁ
 ** 
	`sym_ª_£¨ch
(c⁄° *
∑âîn
);

22 c⁄° * 
	`sym_ty≥_«me
(
symbﬁ_ty≥
 
ty≥
);

23 
	`sym_ˇlc_vÆue
(
symbﬁ
 *
sym
);

24 
symbﬁ_ty≥
 
	`sym_gë_ty≥
(
symbﬁ
 *
sym
);

25 
boﬁ
 
	`sym_åi°©e_wôhö_ønge
(
symbﬁ
 *
sym
,
åi°©e
 
åi
);

26 
boﬁ
 
	`sym_£t_åi°©e_vÆue
(
symbﬁ
 *
sym
,
åi°©e
 
åi
);

27 
åi°©e
 
	`sym_toggÀ_åi°©e_vÆue
(
symbﬁ
 *
sym
);

28 
boﬁ
 
	`sym_°rög_vÆid
(
symbﬁ
 *
sym
, c⁄° *
√wvÆ
);

29 
boﬁ
 
	`sym_°rög_wôhö_ønge
(
symbﬁ
 *
sym
, c⁄° *
°r
);

30 
boﬁ
 
	`sym_£t_°rög_vÆue
(
symbﬁ
 *
sym
, c⁄° *
√wvÆ
);

31 
boﬁ
 
	`sym_is_ch™góbÀ
(
symbﬁ
 *
sym
);

32 
¥›îty
 * 
	`sym_gë_choi˚_¥›
(
symbﬁ
 *
sym
);

33 c⁄° * 
	`sym_gë_°rög_vÆue
(
symbﬁ
 *
sym
);

35 c⁄° * 
	`¥›_gë_ty≥_«me
(
¥›_ty≥
 
ty≥
);

38 
	ev¨übÀ_Êav‹
 {

39 
VAR_SIMPLE
,

40 
VAR_RECURSIVE
,

41 
VAR_APPEND
,

43 
	`ív_wrôe_dï
(
FILE
 *
f
, c⁄° *
auto_c⁄f_«me
);

44 
	`v¨übÀ_add
(c⁄° *
«me
, c⁄° *
vÆue
,

45 
v¨übÀ_Êav‹
 
Êav‹
);

46 
	`v¨übÀ_Æl_dñ
();

47 *
	`ex∑nd_dﬁœr
(c⁄° **
°r
);

48 *
	`ex∑nd_⁄e_tokí
(c⁄° **
°r
);

51 
	`ex¥_¥öt
(
ex¥
 *
e
, (*
‚
)(*, 
symbﬁ
 *, c⁄° *), *
d©a
, 
¥evtokí
);

	@nemu/tools/kconfig/lxdialog/checklist.c

11 
	~"dülog.h
"

13 
	gli°_width
, 
	gcheck_x
, 
	gôem_x
;

18 
	$¥öt_ôem
(
WINDOW
 * 
wö
, 
choi˚
, 
£À˘ed
)

20 
i
;

21 *
li°_ôem
 = 
	`mÆloc
(
li°_width
 + 1);

23 
	`°∫˝y
(
li°_ôem
, 
	`ôem_°r
(), 
li°_width
 - 
ôem_x
);

24 
li°_ôem
[
li°_width
 - 
ôem_x
] = '\0';

27 
	`w©å£t
(
wö
, 
dlg
.
míubox
.
©r
);

28 
	`wmove
(
wö
, 
choi˚
, 0);

29 
i
 = 0; i < 
li°_width
; i++)

30 
	`waddch
(
wö
, ' ');

32 
	`wmove
(
wö
, 
choi˚
, 
check_x
);

33 
	`w©å£t
(
wö
, 
£À˘ed
 ? 
dlg
.
check_£À˘ed
.
©r


34 : 
dlg
.
check
.
©r
);

35 i‡(!
	`ôem_is_èg
(':'))

36 
	`w¥ötw
(
wö
, "(%c)", 
	`ôem_is_èg
('X') ? 'X' : ' ');

38 
	`w©å£t
(
wö
, 
£À˘ed
 ? 
dlg
.
èg_£À˘ed
.
©r
 : dlg.
èg
.atr);

39 
	`mvwaddch
(
wö
, 
choi˚
, 
ôem_x
, 
li°_ôem
[0]);

40 
	`w©å£t
(
wö
, 
£À˘ed
 ? 
dlg
.
ôem_£À˘ed
.
©r
 : dlg.
ôem
.atr);

41 
	`wadd°r
(
wö
, 
li°_ôem
 + 1);

42 i‡(
£À˘ed
) {

43 
	`wmove
(
wö
, 
choi˚
, 
check_x
 + 1);

44 
	`wª‰esh
(
wö
);

46 
	`‰ì
(
li°_ôem
);

47 
	}
}

52 
	$¥öt_¨rows
(
WINDOW
 * 
wö
, 
choi˚
, 
ôem_no
, 
s¸ﬁl
,

53 
y
, 
x
, 
height
)

55 
	`wmove
(
wö
, 
y
, 
x
);

57 i‡(
s¸ﬁl
 > 0) {

58 
	`w©å£t
(
wö
, 
dlg
.
u¨row
.
©r
);

59 
	`waddch
(
wö
, 
ACS_UARROW
);

60 
	`wadd°r
(
wö
, "(-)");

62 
	`w©å£t
(
wö
, 
dlg
.
míubox
.
©r
);

63 
	`waddch
(
wö
, 
ACS_HLINE
);

64 
	`waddch
(
wö
, 
ACS_HLINE
);

65 
	`waddch
(
wö
, 
ACS_HLINE
);

66 
	`waddch
(
wö
, 
ACS_HLINE
);

69 
y
 = y + 
height
 + 1;

70 
	`wmove
(
wö
, 
y
, 
x
);

72 i‡((
height
 < 
ôem_no
Ë&& (
s¸ﬁl
 + 
choi˚
 < item_no - 1)) {

73 
	`w©å£t
(
wö
, 
dlg
.
d¨row
.
©r
);

74 
	`waddch
(
wö
, 
ACS_DARROW
);

75 
	`wadd°r
(
wö
, "(+)");

77 
	`w©å£t
(
wö
, 
dlg
.
míubox_b‹dî
.
©r
);

78 
	`waddch
(
wö
, 
ACS_HLINE
);

79 
	`waddch
(
wö
, 
ACS_HLINE
);

80 
	`waddch
(
wö
, 
ACS_HLINE
);

81 
	`waddch
(
wö
, 
ACS_HLINE
);

83 
	}
}

88 
	$¥öt_buâ⁄s
(
WINDOW
 * 
dülog
, 
height
, 
width
, 
£À˘ed
)

90 
x
 = 
width
 / 2 - 11;

91 
y
 = 
height
 - 2;

93 
	`¥öt_buâ⁄
(
dülog
, "Sñe˘", 
y
, 
x
, 
£À˘ed
 == 0);

94 
	`¥öt_buâ⁄
(
dülog
, " Hñ∞", 
y
, 
x
 + 14, 
£À˘ed
 == 1);

96 
	`wmove
(
dülog
, 
y
, 
x
 + 1 + 14 * 
£À˘ed
);

97 
	`wª‰esh
(
dülog
);

98 
	}
}

104 
	$dülog_checkli°
(c⁄° *
tôÀ
, c⁄° *
¥om±
, 
height
,

105 
width
, 
li°_height
)

107 
i
, 
x
, 
y
, 
box_x
, 
box_y
;

108 
key
 = 0, 
buâ⁄
 = 0, 
choi˚
 = 0, 
s¸ﬁl
 = 0, 
max_choi˚
;

109 
WINDOW
 *
dülog
, *
li°
;

112 
	`ôem_f‹óch
() {

113 i‡(
	`ôem_is_èg
('X'))

114 
choi˚
 = 
	`ôem_n
();

115 i‡(
	`ôem_is_£À˘ed
()) {

116 
choi˚
 = 
	`ôem_n
();

121 
do_ªsize
:

122 i‡(
	`gëmaxy
(
°ds¸
Ë< (
height
 + 
CHECKLIST_HEIGTH_MIN
))

123  -
ERRDISPLAYTOOSMALL
;

124 i‡(
	`gëmaxx
(
°ds¸
Ë< (
width
 + 
CHECKLIST_WIDTH_MIN
))

125  -
ERRDISPLAYTOOSMALL
;

127 
max_choi˚
 = 
	`MIN
(
li°_height
, 
	`ôem_cou¡
());

130 
x
 = (
	`gëmaxx
(
°ds¸
Ë- 
width
) / 2;

131 
y
 = (
	`gëmaxy
(
°ds¸
Ë- 
height
) / 2;

133 
	`døw_shadow
(
°ds¸
, 
y
, 
x
, 
height
, 
width
);

135 
dülog
 = 
	`√wwö
(
height
, 
width
, 
y
, 
x
);

136 
	`key∑d
(
dülog
, 
TRUE
);

138 
	`døw_box
(
dülog
, 0, 0, 
height
, 
width
,

139 
dlg
.
dülog
.
©r
, dlg.
b‹dî
.atr);

140 
	`w©å£t
(
dülog
, 
dlg
.
b‹dî
.
©r
);

141 
	`mvwaddch
(
dülog
, 
height
 - 3, 0, 
ACS_LTEE
);

142 
i
 = 0; i < 
width
 - 2; i++)

143 
	`waddch
(
dülog
, 
ACS_HLINE
);

144 
	`w©å£t
(
dülog
, 
dlg
.dülog.
©r
);

145 
	`waddch
(
dülog
, 
ACS_RTEE
);

147 
	`¥öt_tôÀ
(
dülog
, 
tôÀ
, 
width
);

149 
	`w©å£t
(
dülog
, 
dlg
.dülog.
©r
);

150 
	`¥öt_autowøp
(
dülog
, 
¥om±
, 
width
 - 2, 1, 3);

152 
li°_width
 = 
width
 - 6;

153 
box_y
 = 
height
 - 
li°_height
 - 5;

154 
box_x
 = (
width
 - 
li°_width
) / 2 - 1;

157 
li°
 = 
	`subwö
(
dülog
, 
li°_height
, 
li°_width
, 
y
 + 
box_y
 + 1,

158 
x
 + 
box_x
 + 1);

160 
	`key∑d
(
li°
, 
TRUE
);

163 
	`døw_box
(
dülog
, 
box_y
, 
box_x
, 
li°_height
 + 2, 
li°_width
 + 2,

164 
dlg
.
míubox_b‹dî
.
©r
, dlg.
míubox
.atr);

167 
check_x
 = 0;

168 
	`ôem_f‹óch
()

169 
check_x
 = 
	`MAX
(check_x, 
	`°æí
(
	`ôem_°r
()) + 4);

170 
check_x
 = 
	`MIN
(check_x, 
li°_width
);

172 
check_x
 = (
li°_width
 - check_x) / 2;

173 
ôem_x
 = 
check_x
 + 4;

175 i‡(
choi˚
 >
li°_height
) {

176 
s¸ﬁl
 = 
choi˚
 - 
li°_height
 + 1;

177 
choi˚
 -
s¸ﬁl
;

181 
i
 = 0; i < 
max_choi˚
; i++) {

182 
	`ôem_£t
(
s¸ﬁl
 + 
i
);

183 
	`¥öt_ôem
(
li°
, 
i
, i =
choi˚
);

186 
	`¥öt_¨rows
(
dülog
, 
choi˚
, 
	`ôem_cou¡
(), 
s¸ﬁl
,

187 
box_y
, 
box_x
 + 
check_x
 + 5, 
li°_height
);

189 
	`¥öt_buâ⁄s
(
dülog
, 
height
, 
width
, 0);

191 
	`wnouåe‰esh
(
dülog
);

192 
	`wnouåe‰esh
(
li°
);

193 
	`doupd©e
();

195 
key
 !
KEY_ESC
) {

196 
key
 = 
	`wgëch
(
dülog
);

198 
i
 = 0; i < 
max_choi˚
; i++) {

199 
	`ôem_£t
(
i
 + 
s¸ﬁl
);

200 i‡(
	`touµî
(
key
Ë=touµî(
	`ôem_°r
()[0]))

204 i‡(
i
 < 
max_choi˚
 || 
key
 =
KEY_UP
 || key =
KEY_DOWN
 ||

205 
key
 == '+' || key == '-') {

206 i‡(
key
 =
KEY_UP
 || key == '-') {

207 i‡(!
choi˚
) {

208 i‡(!
s¸ﬁl
)

211 i‡(
li°_height
 > 1) {

213 
	`ôem_£t
(
s¸ﬁl
);

214 
	`¥öt_ôem
(
li°
, 0, 
FALSE
);

215 
	`s¸ﬁlok
(
li°
, 
TRUE
);

216 
	`ws¸l
(
li°
, -1);

217 
	`s¸ﬁlok
(
li°
, 
FALSE
);

219 
s¸ﬁl
--;

220 
	`ôem_£t
(
s¸ﬁl
);

221 
	`¥öt_ôem
(
li°
, 0, 
TRUE
);

222 
	`¥öt_¨rows
(
dülog
, 
choi˚
, 
	`ôem_cou¡
(),

223 
s¸ﬁl
, 
box_y
, 
box_x
 + 
check_x
 + 5, 
li°_height
);

225 
	`wnouåe‰esh
(
dülog
);

226 
	`wª‰esh
(
li°
);

230 
i
 = 
choi˚
 - 1;

231 } i‡(
key
 =
KEY_DOWN
 || key == '+') {

232 i‡(
choi˚
 =
max_choi˚
 - 1) {

233 i‡(
s¸ﬁl
 + 
choi˚
 >
	`ôem_cou¡
() - 1)

236 i‡(
li°_height
 > 1) {

238 
	`ôem_£t
(
s¸ﬁl
 + 
max_choi˚
 - 1);

239 
	`¥öt_ôem
(
li°
,

240 
max_choi˚
 - 1,

241 
FALSE
);

242 
	`s¸ﬁlok
(
li°
, 
TRUE
);

243 
	`ws¸l
(
li°
, 1);

244 
	`s¸ﬁlok
(
li°
, 
FALSE
);

246 
s¸ﬁl
++;

247 
	`ôem_£t
(
s¸ﬁl
 + 
max_choi˚
 - 1);

248 
	`¥öt_ôem
(
li°
, 
max_choi˚
 - 1, 
TRUE
);

250 
	`¥öt_¨rows
(
dülog
, 
choi˚
, 
	`ôem_cou¡
(),

251 
s¸ﬁl
, 
box_y
, 
box_x
 + 
check_x
 + 5, 
li°_height
);

253 
	`wnouåe‰esh
(
dülog
);

254 
	`wª‰esh
(
li°
);

258 
i
 = 
choi˚
 + 1;

260 i‡(
i
 !
choi˚
) {

262 
	`ôem_£t
(
s¸ﬁl
 + 
choi˚
);

263 
	`¥öt_ôem
(
li°
, 
choi˚
, 
FALSE
);

265 
choi˚
 = 
i
;

266 
	`ôem_£t
(
s¸ﬁl
 + 
choi˚
);

267 
	`¥öt_ôem
(
li°
, 
choi˚
, 
TRUE
);

268 
	`wnouåe‰esh
(
dülog
);

269 
	`wª‰esh
(
li°
);

273 
key
) {

277 
buâ⁄
 = 1;

283 
	`ôem_f‹óch
()

284 
	`ôem_£t_£À˘ed
(0);

285 
	`ôem_£t
(
s¸ﬁl
 + 
choi˚
);

286 
	`ôem_£t_£À˘ed
(1);

287 
	`dñwö
(
li°
);

288 
	`dñwö
(
dülog
);

289  
buâ⁄
;

290 
TAB
:

291 
KEY_LEFT
:

292 
KEY_RIGHT
:

293 
buâ⁄
 = ((
key
 =
KEY_LEFT
 ? --button : ++button) < 0)

294 ? 1 : (
buâ⁄
 > 1 ? 0 : button);

296 
	`¥öt_buâ⁄s
(
dülog
, 
height
, 
width
, 
buâ⁄
);

297 
	`wª‰esh
(
dülog
);

301 
key
 = 
KEY_ESC
;

303 
KEY_ESC
:

304 
key
 = 
	`⁄_key_esc
(
dülog
);

306 
KEY_RESIZE
:

307 
	`dñwö
(
li°
);

308 
	`dñwö
(
dülog
);

309 
	`⁄_key_ªsize
();

310 
do_ªsize
;

314 
	`doupd©e
();

316 
	`dñwö
(
li°
);

317 
	`dñwö
(
dülog
);

318  
key
;

319 
	}
}

	@nemu/tools/kconfig/lxdialog/dialog.h

8 
	~<sys/ty≥s.h
>

9 
	~<f˙é.h
>

10 
	~<uni°d.h
>

11 
	~<˘y≥.h
>

12 
	~<°dlib.h
>

13 
	~<°rög.h
>

14 
	~<°dboﬁ.h
>

16 #ifde‡
__sun__


17 
	#CURS_MACROS


	)

19 
	~<ncur£s.h
>

29 #i‡
deföed
(
NCURSES_VERSION
Ë&& deföed(
_NEED_WRAP
Ë&& !deföed(
GCC_PRINTFLIKE
)

30 
	#OLD_NCURSES
 1

	)

31 #unde‡
wbkgd£t


32 
	#wbkgd£t
(
w
,
p
Ë

	)

34 
	#OLD_NCURSES
 0

	)

37 
	#TR
(
∑øms
Ë
_åa˚f
 
	)
∑øms

39 
	#KEY_ESC
 27

	)

40 
	#TAB
 9

	)

41 
	#MAX_LEN
 2048

	)

42 
	#BUF_SIZE
 (10*1024)

	)

43 
	#MIN
(
x
,
y
Ë(x < y ? x : y)

	)

44 
	#MAX
(
x
,
y
Ë(x > y ? x : y)

	)

46 #i‚de‡
ACS_ULCORNER


47 
	#ACS_ULCORNER
 '+'

	)

49 #i‚de‡
ACS_LLCORNER


50 
	#ACS_LLCORNER
 '+'

	)

52 #i‚de‡
ACS_URCORNER


53 
	#ACS_URCORNER
 '+'

	)

55 #i‚de‡
ACS_LRCORNER


56 
	#ACS_LRCORNER
 '+'

	)

58 #i‚de‡
ACS_HLINE


59 
	#ACS_HLINE
 '-'

	)

61 #i‚de‡
ACS_VLINE


62 
	#ACS_VLINE
 '|'

	)

64 #i‚de‡
ACS_LTEE


65 
	#ACS_LTEE
 '+'

	)

67 #i‚de‡
ACS_RTEE


68 
	#ACS_RTEE
 '+'

	)

70 #i‚de‡
ACS_UARROW


71 
	#ACS_UARROW
 '^'

	)

73 #i‚de‡
ACS_DARROW


74 
	#ACS_DARROW
 'v'

	)

78 
	#ERRDISPLAYTOOSMALL
 (
KEY_MAX
 + 1)

	)

83 
	sdülog_cﬁ‹
 {

84 
chty≥
 
	m©r
;

85 
	mfg
;

86 
	mbg
;

87 
	mhl
;

90 
	ssubtôÀ_li°
 {

91 
subtôÀ_li°
 *
	m√xt
;

92 c⁄° *
	mãxt
;

95 
	sdülog_öfo
 {

96 c⁄° *
	mbacktôÀ
;

97 
subtôÀ_li°
 *
	msubtôÀs
;

98 
dülog_cﬁ‹
 
	ms¸ìn
;

99 
dülog_cﬁ‹
 
	mshadow
;

100 
dülog_cﬁ‹
 
	mdülog
;

101 
dülog_cﬁ‹
 
	mtôÀ
;

102 
dülog_cﬁ‹
 
	mb‹dî
;

103 
dülog_cﬁ‹
 
	mbuâ⁄_a˘ive
;

104 
dülog_cﬁ‹
 
	mbuâ⁄_öa˘ive
;

105 
dülog_cﬁ‹
 
	mbuâ⁄_key_a˘ive
;

106 
dülog_cﬁ‹
 
	mbuâ⁄_key_öa˘ive
;

107 
dülog_cﬁ‹
 
	mbuâ⁄_œbñ_a˘ive
;

108 
dülog_cﬁ‹
 
	mbuâ⁄_œbñ_öa˘ive
;

109 
dülog_cﬁ‹
 
	möputbox
;

110 
dülog_cﬁ‹
 
	möputbox_b‹dî
;

111 
dülog_cﬁ‹
 
	m£¨chbox
;

112 
dülog_cﬁ‹
 
	m£¨chbox_tôÀ
;

113 
dülog_cﬁ‹
 
	m£¨chbox_b‹dî
;

114 
dülog_cﬁ‹
 
	mposôi⁄_ödiˇt‹
;

115 
dülog_cﬁ‹
 
	mmíubox
;

116 
dülog_cﬁ‹
 
	mmíubox_b‹dî
;

117 
dülog_cﬁ‹
 
	môem
;

118 
dülog_cﬁ‹
 
	môem_£À˘ed
;

119 
dülog_cﬁ‹
 
	mèg
;

120 
dülog_cﬁ‹
 
	mèg_£À˘ed
;

121 
dülog_cﬁ‹
 
	mèg_key
;

122 
dülog_cﬁ‹
 
	mèg_key_£À˘ed
;

123 
dülog_cﬁ‹
 
	mcheck
;

124 
dülog_cﬁ‹
 
	mcheck_£À˘ed
;

125 
dülog_cﬁ‹
 
	mu¨row
;

126 
dülog_cﬁ‹
 
	md¨row
;

132 
dülog_öfo
 
dlg
;

133 
dülog_öput_ªsu…
[];

134 
ßved_x
, 
ßved_y
;

141 
ôem_ª£t
();

142 
ôem_make
(c⁄° *
fmt
, ...);

143 
ôem_add_°r
(c⁄° *
fmt
, ...);

144 
ôem_£t_èg
(
èg
);

145 
ôem_£t_d©a
(*
p
);

146 
ôem_£t_£À˘ed
(
vÆ
);

147 
ôem_a˘iv©e_£À˘ed
();

148 *
ôem_d©a
();

149 
ôem_èg
();

152 
	#MAXITEMSTR
 200

	)

153 
	sdülog_ôem
 {

154 
	m°r
[
MAXITEMSTR
];

155 
	mèg
;

156 *
	md©a
;

157 
	m£À˘ed
;

161 
	sdülog_li°
 {

162 
dülog_ôem
 
	mnode
;

163 
dülog_li°
 *
	m√xt
;

166 
dülog_li°
 *
ôem_cur
;

167 
dülog_li°
 
ôem_nû
;

168 
dülog_li°
 *
ôem_hód
;

170 
ôem_cou¡
();

171 
ôem_£t
(
n
);

172 
ôem_n
();

173 c⁄° *
ôem_°r
();

174 
ôem_is_£À˘ed
();

175 
ôem_is_èg
(
èg
);

176 
	#ôem_f‹óch
() \

177 
ôem_cur
 = 
ôem_hód
 ? item_head: item_cur; \

178 
ôem_cur
 && (ôem_cu∏!&
ôem_nû
); iãm_cu∏ôem_cur->
√xt
)

	)

181 
⁄_key_esc
(
WINDOW
 *
wö
);

182 
⁄_key_ªsize
();

185 
	#CHECKLIST_HEIGTH_MIN
 6

	)

186 
	#CHECKLIST_WIDTH_MIN
 6

	)

187 
	#INPUTBOX_HEIGTH_MIN
 2

	)

188 
	#INPUTBOX_WIDTH_MIN
 2

	)

189 
	#MENUBOX_HEIGTH_MIN
 15

	)

190 
	#MENUBOX_WIDTH_MIN
 65

	)

191 
	#TEXTBOX_HEIGTH_MIN
 8

	)

192 
	#TEXTBOX_WIDTH_MIN
 8

	)

193 
	#YESNO_HEIGTH_MIN
 4

	)

194 
	#YESNO_WIDTH_MIN
 4

	)

195 
	#WINDOW_HEIGTH_MIN
 19

	)

196 
	#WINDOW_WIDTH_MIN
 80

	)

198 
öô_dülog
(c⁄° *
backtôÀ
);

199 
£t_dülog_backtôÀ
(c⁄° *
backtôÀ
);

200 
£t_dülog_subtôÀs
(
subtôÀ_li°
 *
subtôÀs
);

201 
íd_dülog
(
x
, 
y
);

202 
©å_˛ór
(
WINDOW
 * 
wö
, 
height
, 
width
, 
chty≥
 
©å
);

203 
dülog_˛ór
();

204 
¥öt_autowøp
(
WINDOW
 * 
wö
, c⁄° *
¥om±
, 
width
, 
y
, 
x
);

205 
¥öt_buâ⁄
(
WINDOW
 * 
wö
, c⁄° *
œbñ
, 
y
, 
x
, 
£À˘ed
);

206 
¥öt_tôÀ
(
WINDOW
 *
dülog
, c⁄° *
tôÀ
, 
width
);

207 
døw_box
(
WINDOW
 * 
wö
, 
y
, 
x
, 
height
, 
width
, 
chty≥
 
box
,

208 
chty≥
 
b‹dî
);

209 
døw_shadow
(
WINDOW
 * 
wö
, 
y
, 
x
, 
height
, 
width
);

211 
fú°_Æpha
(c⁄° *
°rög
, c⁄° *
exem±
);

212 
dülog_ye¢o
(c⁄° *
tôÀ
, c⁄° *
¥om±
, 
height
, 
width
);

213 
dülog_msgbox
(c⁄° *
tôÀ
, c⁄° *
¥om±
, 
height
,

214 
width
, 
∑u£
);

217 (*
	tupd©e_ãxt_‚
)(*
	tbuf
, 
	tsize_t
 
	t°¨t
, size_à
	tíd
, 

218 *
	t_d©a
);

219 
	`dülog_ãxtbox
(c⁄° *
tôÀ
, *
tbuf
, 
öôül_height
,

220 
öôül_width
, *
keys
, *
_vs¸ﬁl
, *
_hs¸ﬁl
,

221 
upd©e_ãxt_‚
 
upd©e_ãxt
, *
d©a
);

222 
	`dülog_míu
(c⁄° *
tôÀ
, c⁄° *
¥om±
,

223 c⁄° *
£À˘ed
, *
s_s¸ﬁl
);

224 
	`dülog_checkli°
(c⁄° *
tôÀ
, c⁄° *
¥om±
, 
height
,

225 
width
, 
li°_height
);

226 
	`dülog_öputbox
(c⁄° *
tôÀ
, c⁄° *
¥om±
, 
height
,

227 
width
, c⁄° *
öô
);

238 
	#M_EVENT
 (
KEY_MAX
+1)

	)

	@nemu/tools/kconfig/lxdialog/inputbox.c

9 
	~"dülog.h
"

11 
	gdülog_öput_ªsu…
[
MAX_LEN
 + 1];

16 
	$¥öt_buâ⁄s
(
WINDOW
 * 
dülog
, 
height
, 
width
, 
£À˘ed
)

18 
x
 = 
width
 / 2 - 11;

19 
y
 = 
height
 - 2;

21 
	`¥öt_buâ⁄
(
dülog
, " Ok ", 
y
, 
x
, 
£À˘ed
 == 0);

22 
	`¥öt_buâ⁄
(
dülog
, " Hñ∞", 
y
, 
x
 + 14, 
£À˘ed
 == 1);

24 
	`wmove
(
dülog
, 
y
, 
x
 + 1 + 14 * 
£À˘ed
);

25 
	`wª‰esh
(
dülog
);

26 
	}
}

31 
	$dülog_öputbox
(c⁄° *
tôÀ
, c⁄° *
¥om±
, 
height
, 
width
,

32 c⁄° *
öô
)

34 
i
, 
x
, 
y
, 
box_y
, 
box_x
, 
box_width
;

35 
öput_x
 = 0, 
key
 = 0, 
buâ⁄
 = -1;

36 
show_x
, 
Àn
, 
pos
;

37 *
ö°r
 = 
dülog_öput_ªsu…
;

38 
WINDOW
 *
dülog
;

40 i‡(!
öô
)

41 
ö°r
[0] = '\0';

43 
	`°r˝y
(
ö°r
, 
öô
);

45 
do_ªsize
:

46 i‡(
	`gëmaxy
(
°ds¸
Ë<(
height
 - 
INPUTBOX_HEIGTH_MIN
))

47  -
ERRDISPLAYTOOSMALL
;

48 i‡(
	`gëmaxx
(
°ds¸
Ë<(
width
 - 
INPUTBOX_WIDTH_MIN
))

49  -
ERRDISPLAYTOOSMALL
;

52 
x
 = (
	`gëmaxx
(
°ds¸
Ë- 
width
) / 2;

53 
y
 = (
	`gëmaxy
(
°ds¸
Ë- 
height
) / 2;

55 
	`døw_shadow
(
°ds¸
, 
y
, 
x
, 
height
, 
width
);

57 
dülog
 = 
	`√wwö
(
height
, 
width
, 
y
, 
x
);

58 
	`key∑d
(
dülog
, 
TRUE
);

60 
	`døw_box
(
dülog
, 0, 0, 
height
, 
width
,

61 
dlg
.
dülog
.
©r
, dlg.
b‹dî
.atr);

62 
	`w©å£t
(
dülog
, 
dlg
.
b‹dî
.
©r
);

63 
	`mvwaddch
(
dülog
, 
height
 - 3, 0, 
ACS_LTEE
);

64 
i
 = 0; i < 
width
 - 2; i++)

65 
	`waddch
(
dülog
, 
ACS_HLINE
);

66 
	`w©å£t
(
dülog
, 
dlg
.dülog.
©r
);

67 
	`waddch
(
dülog
, 
ACS_RTEE
);

69 
	`¥öt_tôÀ
(
dülog
, 
tôÀ
, 
width
);

71 
	`w©å£t
(
dülog
, 
dlg
.dülog.
©r
);

72 
	`¥öt_autowøp
(
dülog
, 
¥om±
, 
width
 - 2, 1, 3);

75 
box_width
 = 
width
 - 6;

76 
	`gëyx
(
dülog
, 
y
, 
x
);

77 
box_y
 = 
y
 + 2;

78 
box_x
 = (
width
 - 
box_width
) / 2;

79 
	`døw_box
(
dülog
, 
y
 + 1, 
box_x
 - 1, 3, 
box_width
 + 2,

80 
dlg
.
dülog
.
©r
, dlg.
b‹dî
.atr);

82 
	`¥öt_buâ⁄s
(
dülog
, 
height
, 
width
, 0);

85 
	`wmove
(
dülog
, 
box_y
, 
box_x
);

86 
	`w©å£t
(
dülog
, 
dlg
.
öputbox
.
©r
);

88 
Àn
 = 
	`°æí
(
ö°r
);

89 
pos
 = 
Àn
;

91 i‡(
Àn
 >
box_width
) {

92 
show_x
 = 
Àn
 - 
box_width
 + 1;

93 
öput_x
 = 
box_width
 - 1;

94 
i
 = 0; i < 
box_width
 - 1; i++)

95 
	`waddch
(
dülog
, 
ö°r
[
show_x
 + 
i
]);

97 
show_x
 = 0;

98 
öput_x
 = 
Àn
;

99 
	`wadd°r
(
dülog
, 
ö°r
);

102 
	`wmove
(
dülog
, 
box_y
, 
box_x
 + 
öput_x
);

104 
	`wª‰esh
(
dülog
);

106 
key
 !
KEY_ESC
) {

107 
key
 = 
	`wgëch
(
dülog
);

109 i‡(
buâ⁄
 == -1) {

110 
key
) {

111 
TAB
:

112 
KEY_UP
:

113 
KEY_DOWN
:

115 
KEY_BACKSPACE
:

118 i‡(
pos
) {

119 
	`w©å£t
(
dülog
, 
dlg
.
öputbox
.
©r
);

120 i‡(
öput_x
 == 0) {

121 
show_x
--;

123 
öput_x
--;

125 i‡(
pos
 < 
Àn
) {

126 
i
 = 
pos
 - 1; i < 
Àn
; i++) {

127 
ö°r
[
i
] = instr[i+1];

131 
pos
--;

132 
Àn
--;

133 
ö°r
[
Àn
] = '\0';

134 
	`wmove
(
dülog
, 
box_y
, 
box_x
);

135 
i
 = 0; i < 
box_width
; i++) {

136 i‡(!
ö°r
[
show_x
 + 
i
]) {

137 
	`waddch
(
dülog
, ' ');

140 
	`waddch
(
dülog
, 
ö°r
[
show_x
 + 
i
]);

142 
	`wmove
(
dülog
, 
box_y
, 
öput_x
 + 
box_x
);

143 
	`wª‰esh
(
dülog
);

146 
KEY_LEFT
:

147 i‡(
pos
 > 0) {

148 i‡(
öput_x
 > 0) {

149 
	`wmove
(
dülog
, 
box_y
, --
öput_x
 + 
box_x
);

150 } i‡(
öput_x
 == 0) {

151 
show_x
--;

152 
	`wmove
(
dülog
, 
box_y
, 
box_x
);

153 
i
 = 0; i < 
box_width
; i++) {

154 i‡(!
ö°r
[
show_x
 + 
i
]) {

155 
	`waddch
(
dülog
, ' ');

158 
	`waddch
(
dülog
, 
ö°r
[
show_x
 + 
i
]);

160 
	`wmove
(
dülog
, 
box_y
, 
box_x
);

162 
pos
--;

165 
KEY_RIGHT
:

166 i‡(
pos
 < 
Àn
) {

167 i‡(
öput_x
 < 
box_width
 - 1) {

168 
	`wmove
(
dülog
, 
box_y
, ++
öput_x
 + 
box_x
);

169 } i‡(
öput_x
 =
box_width
 - 1) {

170 
show_x
++;

171 
	`wmove
(
dülog
, 
box_y
, 
box_x
);

172 
i
 = 0; i < 
box_width
; i++) {

173 i‡(!
ö°r
[
show_x
 + 
i
]) {

174 
	`waddch
(
dülog
, ' ');

177 
	`waddch
(
dülog
, 
ö°r
[
show_x
 + 
i
]);

179 
	`wmove
(
dülog
, 
box_y
, 
öput_x
 + 
box_x
);

181 
pos
++;

185 i‡(
key
 < 0x100 && 
	`i•röt
(key)) {

186 i‡(
Àn
 < 
MAX_LEN
) {

187 
	`w©å£t
(
dülog
, 
dlg
.
öputbox
.
©r
);

188 i‡(
pos
 < 
Àn
) {

189 
i
 = 
Àn
; i > 
pos
; i--)

190 
ö°r
[
i
] = instr[i-1];

191 
ö°r
[
pos
] = 
key
;

193 
ö°r
[
Àn
] = 
key
;

195 
pos
++;

196 
Àn
++;

197 
ö°r
[
Àn
] = '\0';

199 i‡(
öput_x
 =
box_width
 - 1) {

200 
show_x
++;

202 
öput_x
++;

205 
	`wmove
(
dülog
, 
box_y
, 
box_x
);

206 
i
 = 0; i < 
box_width
; i++) {

207 i‡(!
ö°r
[
show_x
 + 
i
]) {

208 
	`waddch
(
dülog
, ' ');

211 
	`waddch
(
dülog
, 
ö°r
[
show_x
 + 
i
]);

213 
	`wmove
(
dülog
, 
box_y
, 
öput_x
 + 
box_x
);

214 
	`wª‰esh
(
dülog
);

216 
	`Êash
();

221 
key
) {

224 
	`dñwö
(
dülog
);

228 
	`dñwö
(
dülog
);

230 
KEY_UP
:

231 
KEY_LEFT
:

232 
buâ⁄
) {

234 
buâ⁄
 = 1;

235 
	`¥öt_buâ⁄s
(
dülog
, 
height
, 
width
, 1);

238 
buâ⁄
 = -1;

239 
	`¥öt_buâ⁄s
(
dülog
, 
height
, 
width
, 0);

240 
	`wmove
(
dülog
, 
box_y
, 
box_x
 + 
öput_x
);

241 
	`wª‰esh
(
dülog
);

244 
buâ⁄
 = 0;

245 
	`¥öt_buâ⁄s
(
dülog
, 
height
, 
width
, 0);

249 
TAB
:

250 
KEY_DOWN
:

251 
KEY_RIGHT
:

252 
buâ⁄
) {

254 
buâ⁄
 = 0;

255 
	`¥öt_buâ⁄s
(
dülog
, 
height
, 
width
, 0);

258 
buâ⁄
 = 1;

259 
	`¥öt_buâ⁄s
(
dülog
, 
height
, 
width
, 1);

262 
buâ⁄
 = -1;

263 
	`¥öt_buâ⁄s
(
dülog
, 
height
, 
width
, 0);

264 
	`wmove
(
dülog
, 
box_y
, 
box_x
 + 
öput_x
);

265 
	`wª‰esh
(
dülog
);

271 
	`dñwö
(
dülog
);

272  (
buâ⁄
 == -1 ? 0 : button);

275 
key
 = 
KEY_ESC
;

277 
KEY_ESC
:

278 
key
 = 
	`⁄_key_esc
(
dülog
);

280 
KEY_RESIZE
:

281 
	`dñwö
(
dülog
);

282 
	`⁄_key_ªsize
();

283 
do_ªsize
;

287 
	`dñwö
(
dülog
);

288  
KEY_ESC
;

289 
	}
}

	@nemu/tools/kconfig/lxdialog/menubox.c

46 
	~"dülog.h
"

48 
	gmíu_width
, 
	gôem_x
;

53 
	$do_¥öt_ôem
(
WINDOW
 * 
wö
, c⁄° *
ôem
, 
löe_y
,

54 
£À˘ed
, 
hŸkey
)

56 
j
;

57 *
míu_ôem
 = 
	`mÆloc
(
míu_width
 + 1);

59 
	`°∫˝y
(
míu_ôem
, 
ôem
, 
míu_width
 - 
ôem_x
);

60 
míu_ôem
[
míu_width
 - 
ôem_x
] = '\0';

61 
j
 = 
	`fú°_Æpha
(
míu_ôem
, "YyNnMmHh");

64 
	`w©å£t
(
wö
, 
dlg
.
míubox
.
©r
);

65 
	`wmove
(
wö
, 
löe_y
, 0);

66 #i‡
OLD_NCURSES


68 
i
;

69 
i
 = 0; i < 
míu_width
; i++)

70 
	`waddch
(
wö
, ' ');

73 
	`w˛π€ﬁ
(
wö
);

75 
	`w©å£t
(
wö
, 
£À˘ed
 ? 
dlg
.
ôem_£À˘ed
.
©r
 : dlg.
ôem
.atr);

76 
	`mvwadd°r
(
wö
, 
löe_y
, 
ôem_x
, 
míu_ôem
);

77 i‡(
hŸkey
) {

78 
	`w©å£t
(
wö
, 
£À˘ed
 ? 
dlg
.
èg_key_£À˘ed
.
©r


79 : 
dlg
.
èg_key
.
©r
);

80 
	`mvwaddch
(
wö
, 
löe_y
, 
ôem_x
 + 
j
, 
míu_ôem
[j]);

82 i‡(
£À˘ed
) {

83 
	`wmove
(
wö
, 
löe_y
, 
ôem_x
 + 1);

85 
	`‰ì
(
míu_ôem
);

86 
	`wª‰esh
(
wö
);

87 
	}
}

89 
	#¥öt_ôem
(
ödex
, 
choi˚
, 
£À˘ed
) \

91 
	`ôem_£t
(
ödex
); \

92 
	`do_¥öt_ôem
(
míu
, 
	`ôem_°r
(), 
choi˚
, 
£À˘ed
, !
	`ôem_is_èg
(':')); \

93 } 0)

	)

98 
	$¥öt_¨rows
(
WINDOW
 * 
wö
, 
ôem_no
, 
s¸ﬁl
, 
y
, 
x
,

99 
height
)

101 
cur_y
, 
cur_x
;

103 
	`gëyx
(
wö
, 
cur_y
, 
cur_x
);

105 
	`wmove
(
wö
, 
y
, 
x
);

107 i‡(
s¸ﬁl
 > 0) {

108 
	`w©å£t
(
wö
, 
dlg
.
u¨row
.
©r
);

109 
	`waddch
(
wö
, 
ACS_UARROW
);

110 
	`wadd°r
(
wö
, "(-)");

112 
	`w©å£t
(
wö
, 
dlg
.
míubox
.
©r
);

113 
	`waddch
(
wö
, 
ACS_HLINE
);

114 
	`waddch
(
wö
, 
ACS_HLINE
);

115 
	`waddch
(
wö
, 
ACS_HLINE
);

116 
	`waddch
(
wö
, 
ACS_HLINE
);

119 
y
 = y + 
height
 + 1;

120 
	`wmove
(
wö
, 
y
, 
x
);

121 
	`wª‰esh
(
wö
);

123 i‡((
height
 < 
ôem_no
Ë&& (
s¸ﬁl
 + height < item_no)) {

124 
	`w©å£t
(
wö
, 
dlg
.
d¨row
.
©r
);

125 
	`waddch
(
wö
, 
ACS_DARROW
);

126 
	`wadd°r
(
wö
, "(+)");

128 
	`w©å£t
(
wö
, 
dlg
.
míubox_b‹dî
.
©r
);

129 
	`waddch
(
wö
, 
ACS_HLINE
);

130 
	`waddch
(
wö
, 
ACS_HLINE
);

131 
	`waddch
(
wö
, 
ACS_HLINE
);

132 
	`waddch
(
wö
, 
ACS_HLINE
);

135 
	`wmove
(
wö
, 
cur_y
, 
cur_x
);

136 
	`wª‰esh
(
wö
);

137 
	}
}

142 
	$¥öt_buâ⁄s
(
WINDOW
 * 
wö
, 
height
, 
width
, 
£À˘ed
)

144 
x
 = 
width
 / 2 - 28;

145 
y
 = 
height
 - 2;

147 
	`¥öt_buâ⁄
(
wö
, "Sñe˘", 
y
, 
x
, 
£À˘ed
 == 0);

148 
	`¥öt_buâ⁄
(
wö
, " Exô ", 
y
, 
x
 + 12, 
£À˘ed
 == 1);

149 
	`¥öt_buâ⁄
(
wö
, " Hñ∞", 
y
, 
x
 + 24, 
£À˘ed
 == 2);

150 
	`¥öt_buâ⁄
(
wö
, " Savê", 
y
, 
x
 + 36, 
£À˘ed
 == 3);

151 
	`¥öt_buâ⁄
(
wö
, " Lﬂd ", 
y
, 
x
 + 48, 
£À˘ed
 == 4);

153 
	`wmove
(
wö
, 
y
, 
x
 + 1 + 12 * 
£À˘ed
);

154 
	`wª‰esh
(
wö
);

155 
	}
}

158 
	$do_s¸ﬁl
(
WINDOW
 *
wö
, *
s¸ﬁl
, 
n
)

161 
	`s¸ﬁlok
(
wö
, 
TRUE
);

162 
	`ws¸l
(
wö
, 
n
);

163 
	`s¸ﬁlok
(
wö
, 
FALSE
);

164 *
s¸ﬁl
 = *s¸ﬁ»+ 
n
;

165 
	`wª‰esh
(
wö
);

166 
	}
}

171 
	$dülog_míu
(c⁄° *
tôÀ
, c⁄° *
¥om±
,

172 c⁄° *
£À˘ed
, *
s_s¸ﬁl
)

174 
i
, 
j
, 
x
, 
y
, 
box_x
, 
box_y
;

175 
height
, 
width
, 
míu_height
;

176 
key
 = 0, 
buâ⁄
 = 0, 
s¸ﬁl
 = 0, 
choi˚
 = 0;

177 
fú°_ôem
 = 0, 
max_choi˚
;

178 
WINDOW
 *
dülog
, *
míu
;

180 
do_ªsize
:

181 
height
 = 
	`gëmaxy
(
°ds¸
);

182 
width
 = 
	`gëmaxx
(
°ds¸
);

183 i‡(
height
 < 
MENUBOX_HEIGTH_MIN
 || 
width
 < 
MENUBOX_WIDTH_MIN
)

184  -
ERRDISPLAYTOOSMALL
;

186 
height
 -= 4;

187 
width
 -= 5;

188 
míu_height
 = 
height
 - 10;

190 
max_choi˚
 = 
	`MIN
(
míu_height
, 
	`ôem_cou¡
());

193 
x
 = (
	`gëmaxx
(
°ds¸
Ë- 
width
) / 2;

194 
y
 = (
	`gëmaxy
(
°ds¸
Ë- 
height
) / 2;

196 
	`døw_shadow
(
°ds¸
, 
y
, 
x
, 
height
, 
width
);

198 
dülog
 = 
	`√wwö
(
height
, 
width
, 
y
, 
x
);

199 
	`key∑d
(
dülog
, 
TRUE
);

201 
	`døw_box
(
dülog
, 0, 0, 
height
, 
width
,

202 
dlg
.
dülog
.
©r
, dlg.
b‹dî
.atr);

203 
	`w©å£t
(
dülog
, 
dlg
.
b‹dî
.
©r
);

204 
	`mvwaddch
(
dülog
, 
height
 - 3, 0, 
ACS_LTEE
);

205 
i
 = 0; i < 
width
 - 2; i++)

206 
	`waddch
(
dülog
, 
ACS_HLINE
);

207 
	`w©å£t
(
dülog
, 
dlg
.dülog.
©r
);

208 
	`wbkgd£t
(
dülog
, 
dlg
.dülog.
©r
 & 
A_COLOR
);

209 
	`waddch
(
dülog
, 
ACS_RTEE
);

211 
	`¥öt_tôÀ
(
dülog
, 
tôÀ
, 
width
);

213 
	`w©å£t
(
dülog
, 
dlg
.dülog.
©r
);

214 
	`¥öt_autowøp
(
dülog
, 
¥om±
, 
width
 - 2, 1, 3);

216 
míu_width
 = 
width
 - 6;

217 
box_y
 = 
height
 - 
míu_height
 - 5;

218 
box_x
 = (
width
 - 
míu_width
) / 2 - 1;

221 
míu
 = 
	`subwö
(
dülog
, 
míu_height
, 
míu_width
,

222 
y
 + 
box_y
 + 1, 
x
 + 
box_x
 + 1);

223 
	`key∑d
(
míu
, 
TRUE
);

226 
	`døw_box
(
dülog
, 
box_y
, 
box_x
, 
míu_height
 + 2, 
míu_width
 + 2,

227 
dlg
.
míubox_b‹dî
.
©r
, dlg.
míubox
.atr);

229 i‡(
míu_width
 >= 80)

230 
ôem_x
 = (
míu_width
 - 70) / 2;

232 
ôem_x
 = 4;

235 
	`ôem_f‹óch
()

236 i‡(
£À˘ed
 && (£À˘ed =
	`ôem_d©a
()))

237 
choi˚
 = 
	`ôem_n
();

239 
s¸ﬁl
 = *
s_s¸ﬁl
;

240 i‡((
s¸ﬁl
 <
choi˚
Ë&& (s¸ﬁ»+ 
max_choi˚
 > choice) &&

241 (
s¸ﬁl
 >0Ë&& (s¸ﬁ»+ 
max_choi˚
 <
	`ôem_cou¡
())) {

242 
fú°_ôem
 = 
s¸ﬁl
;

243 
choi˚
 = choi˚ - 
s¸ﬁl
;

245 
s¸ﬁl
 = 0;

247 i‡((
choi˚
 >
max_choi˚
)) {

248 i‡(
choi˚
 >
	`ôem_cou¡
(Ë- 
max_choi˚
 / 2)

249 
s¸ﬁl
 = 
fú°_ôem
 = 
	`ôem_cou¡
(Ë- 
max_choi˚
;

251 
s¸ﬁl
 = 
fú°_ôem
 = 
choi˚
 - 
max_choi˚
 / 2;

252 
choi˚
 = choi˚ - 
s¸ﬁl
;

256 
i
 = 0; i < 
max_choi˚
; i++) {

257 
	`¥öt_ôem
(
fú°_ôem
 + 
i
, i, i =
choi˚
);

260 
	`wnouåe‰esh
(
míu
);

262 
	`¥öt_¨rows
(
dülog
, 
	`ôem_cou¡
(), 
s¸ﬁl
,

263 
box_y
, 
box_x
 + 
ôem_x
 + 1, 
míu_height
);

265 
	`¥öt_buâ⁄s
(
dülog
, 
height
, 
width
, 0);

266 
	`wmove
(
míu
, 
choi˚
, 
ôem_x
 + 1);

267 
	`wª‰esh
(
míu
);

269 
key
 !
KEY_ESC
) {

270 
key
 = 
	`wgëch
(
míu
);

272 i‡(
key
 < 256 && 
	`ißÕha
(key))

273 
key
 = 
	`tﬁowî
(key);

275 i‡(
	`°rchr
("ynmh", 
key
))

276 
i
 = 
max_choi˚
;

278 
i
 = 
choi˚
 + 1; i < 
max_choi˚
; i++) {

279 
	`ôem_£t
(
s¸ﬁl
 + 
i
);

280 
j
 = 
	`fú°_Æpha
(
	`ôem_°r
(), "YyNnMmHh");

281 i‡(
key
 =
	`tﬁowî
(
	`ôem_°r
()[
j
]))

284 i‡(
i
 =
max_choi˚
)

285 
i
 = 0; i < 
max_choi˚
; i++) {

286 
	`ôem_£t
(
s¸ﬁl
 + 
i
);

287 
j
 = 
	`fú°_Æpha
(
	`ôem_°r
(), "YyNnMmHh");

288 i‡(
key
 =
	`tﬁowî
(
	`ôem_°r
()[
j
]))

293 i‡(
	`ôem_cou¡
() != 0 &&

294 (
i
 < 
max_choi˚
 ||

295 
key
 =
KEY_UP
 || key =
KEY_DOWN
 ||

296 
key
 == '-' || key == '+' ||

297 
key
 =
KEY_PPAGE
 || key =
KEY_NPAGE
)) {

299 
	`¥öt_ôem
(
s¸ﬁl
 + 
choi˚
, choi˚, 
FALSE
);

301 i‡(
key
 =
KEY_UP
 || key == '-') {

302 i‡(
choi˚
 < 2 && 
s¸ﬁl
) {

304 
	`do_s¸ﬁl
(
míu
, &
s¸ﬁl
, -1);

306 
	`¥öt_ôem
(
s¸ﬁl
, 0, 
FALSE
);

308 
choi˚
 = 
	`MAX
(choice - 1, 0);

310 } i‡(
key
 =
KEY_DOWN
 || key == '+') {

311 
	`¥öt_ôem
(
s¸ﬁl
+
choi˚
, choi˚, 
FALSE
);

313 i‡((
choi˚
 > 
max_choi˚
 - 3) &&

314 (
s¸ﬁl
 + 
max_choi˚
 < 
	`ôem_cou¡
())) {

316 
	`do_s¸ﬁl
(
míu
, &
s¸ﬁl
, 1);

318 
	`¥öt_ôem
(
s¸ﬁl
+
max_choi˚
 - 1,

319 
max_choi˚
 - 1, 
FALSE
);

321 
choi˚
 = 
	`MIN
(choi˚ + 1, 
max_choi˚
 - 1);

323 } i‡(
key
 =
KEY_PPAGE
) {

324 
	`s¸ﬁlok
(
míu
, 
TRUE
);

325 
i
 = 0; (ò< 
max_choi˚
); i++) {

326 i‡(
s¸ﬁl
 > 0) {

327 
	`do_s¸ﬁl
(
míu
, &
s¸ﬁl
, -1);

328 
	`¥öt_ôem
(
s¸ﬁl
, 0, 
FALSE
);

330 i‡(
choi˚
 > 0)

331 
choi˚
--;

335 } i‡(
key
 =
KEY_NPAGE
) {

336 
i
 = 0; (ò< 
max_choi˚
); i++) {

337 i‡(
s¸ﬁl
 + 
max_choi˚
 < 
	`ôem_cou¡
()) {

338 
	`do_s¸ﬁl
(
míu
, &
s¸ﬁl
, 1);

339 
	`¥öt_ôem
(
s¸ﬁl
+
max_choi˚
-1,

340 
max_choi˚
 - 1, 
FALSE
);

342 i‡(
choi˚
 + 1 < 
max_choi˚
)

343 
choi˚
++;

347 
choi˚
 = 
i
;

349 
	`¥öt_ôem
(
s¸ﬁl
 + 
choi˚
, choi˚, 
TRUE
);

351 
	`¥öt_¨rows
(
dülog
, 
	`ôem_cou¡
(), 
s¸ﬁl
,

352 
box_y
, 
box_x
 + 
ôem_x
 + 1, 
míu_height
);

354 
	`wnouåe‰esh
(
dülog
);

355 
	`wª‰esh
(
míu
);

360 
key
) {

361 
KEY_LEFT
:

362 
TAB
:

363 
KEY_RIGHT
:

364 
buâ⁄
 = ((
key
 =
KEY_LEFT
 ? --button : ++button) < 0)

365 ? 4 : (
buâ⁄
 > 4 ? 0 : button);

367 
	`¥öt_buâ⁄s
(
dülog
, 
height
, 
width
, 
buâ⁄
);

368 
	`wª‰esh
(
míu
);

381 *
s_s¸ﬁl
 = 
s¸ﬁl
;

382 
	`dñwö
(
míu
);

383 
	`dñwö
(
dülog
);

384 
	`ôem_£t
(
s¸ﬁl
 + 
choi˚
);

385 
	`ôem_£t_£À˘ed
(1);

386 
key
) {

404  
buâ⁄
;

409 
key
 = 
KEY_ESC
;

411 
KEY_ESC
:

412 
key
 = 
	`⁄_key_esc
(
míu
);

414 
KEY_RESIZE
:

415 
	`⁄_key_ªsize
();

416 
	`dñwö
(
míu
);

417 
	`dñwö
(
dülog
);

418 
do_ªsize
;

421 
	`dñwö
(
míu
);

422 
	`dñwö
(
dülog
);

423  
key
;

424 
	}
}

	@nemu/tools/kconfig/lxdialog/textbox.c

9 
	~"dülog.h
"

11 
back_löes
(
n
);

12 
¥öt_∑ge
(
WINDOW
 *
wö
, 
height
, 
width
, 
upd©e_ãxt_‚


13 
upd©e_ãxt
, *
d©a
);

14 
¥öt_löe
(
WINDOW
 *
wö
, 
row
, 
width
);

15 *
gë_löe
();

16 
¥öt_posôi⁄
(
WINDOW
 * 
wö
);

18 
	ghs¸ﬁl
;

19 
	gbegö_ªached
, 
	gíd_ªached
, 
	g∑ge_Àngth
;

20 *
	gbuf
;

21 *
	g∑ge
;

26 
	$ª‰esh_ãxt_box
(
WINDOW
 *
dülog
, WINDOW *
box
, 
boxh
, 
boxw
,

27 
cur_y
, 
cur_x
, 
upd©e_ãxt_‚
 
upd©e_ãxt
,

28 *
d©a
)

30 
	`¥öt_∑ge
(
box
, 
boxh
, 
boxw
, 
upd©e_ãxt
, 
d©a
);

31 
	`¥öt_posôi⁄
(
dülog
);

32 
	`wmove
(
dülog
, 
cur_y
, 
cur_x
);

33 
	`wª‰esh
(
dülog
);

34 
	}
}

43 
	$dülog_ãxtbox
(c⁄° *
tôÀ
, *
tbuf
, 
öôül_height
,

44 
öôül_width
, *
keys
, *
_vs¸ﬁl
, *
_hs¸ﬁl
,

45 
upd©e_ãxt_‚
 
upd©e_ãxt
, *
d©a
)

47 
i
, 
x
, 
y
, 
cur_x
, 
cur_y
, 
key
 = 0;

48 
height
, 
width
, 
boxh
, 
boxw
;

49 
WINDOW
 *
dülog
, *
box
;

50 
boﬁ
 
d⁄e
 = 
Ál£
;

52 
begö_ªached
 = 1;

53 
íd_ªached
 = 0;

54 
∑ge_Àngth
 = 0;

55 
hs¸ﬁl
 = 0;

56 
buf
 = 
tbuf
;

57 
∑ge
 = 
buf
;

59 i‡(
_vs¸ﬁl
 && *_vscroll) {

60 
begö_ªached
 = 0;

62 
i
 = 0; i < *
_vs¸ﬁl
; i++)

63 
	`gë_löe
();

65 i‡(
_hs¸ﬁl
)

66 
hs¸ﬁl
 = *
_hs¸ﬁl
;

68 
do_ªsize
:

69 
	`gëmaxyx
(
°ds¸
, 
height
, 
width
);

70 i‡(
height
 < 
TEXTBOX_HEIGTH_MIN
 || 
width
 < 
TEXTBOX_WIDTH_MIN
)

71  -
ERRDISPLAYTOOSMALL
;

72 i‡(
öôül_height
 != 0)

73 
height
 = 
öôül_height
;

75 i‡(
height
 > 4)

76 
height
 -= 4;

78 
height
 = 0;

79 i‡(
öôül_width
 != 0)

80 
width
 = 
öôül_width
;

82 i‡(
width
 > 5)

83 
width
 -= 5;

85 
width
 = 0;

88 
x
 = (
	`gëmaxx
(
°ds¸
Ë- 
width
) / 2;

89 
y
 = (
	`gëmaxy
(
°ds¸
Ë- 
height
) / 2;

91 
	`døw_shadow
(
°ds¸
, 
y
, 
x
, 
height
, 
width
);

93 
dülog
 = 
	`√wwö
(
height
, 
width
, 
y
, 
x
);

94 
	`key∑d
(
dülog
, 
TRUE
);

97 
boxh
 = 
height
 - 4;

98 
boxw
 = 
width
 - 2;

99 
box
 = 
	`subwö
(
dülog
, 
boxh
, 
boxw
, 
y
 + 1, 
x
 + 1);

100 
	`w©å£t
(
box
, 
dlg
.
dülog
.
©r
);

101 
	`wbkgd£t
(
box
, 
dlg
.
dülog
.
©r
 & 
A_COLOR
);

103 
	`key∑d
(
box
, 
TRUE
);

106 
	`døw_box
(
dülog
, 0, 0, 
height
, 
width
,

107 
dlg
.
dülog
.
©r
, dlg.
b‹dî
.atr);

109 
	`w©å£t
(
dülog
, 
dlg
.
b‹dî
.
©r
);

110 
	`mvwaddch
(
dülog
, 
height
 - 3, 0, 
ACS_LTEE
);

111 
i
 = 0; i < 
width
 - 2; i++)

112 
	`waddch
(
dülog
, 
ACS_HLINE
);

113 
	`w©å£t
(
dülog
, 
dlg
.dülog.
©r
);

114 
	`wbkgd£t
(
dülog
, 
dlg
.dülog.
©r
 & 
A_COLOR
);

115 
	`waddch
(
dülog
, 
ACS_RTEE
);

117 
	`¥öt_tôÀ
(
dülog
, 
tôÀ
, 
width
);

119 
	`¥öt_buâ⁄
(
dülog
, " Exô ", 
height
 - 2, 
width
 / 2 - 4, 
TRUE
);

120 
	`wnouåe‰esh
(
dülog
);

121 
	`gëyx
(
dülog
, 
cur_y
, 
cur_x
);

124 
	`©å_˛ór
(
box
, 
boxh
, 
boxw
, 
dlg
.
dülog
.
©r
);

125 
	`ª‰esh_ãxt_box
(
dülog
, 
box
, 
boxh
, 
boxw
, 
cur_y
, 
cur_x
, 
upd©e_ãxt
,

126 
d©a
);

128 !
d⁄e
) {

129 
key
 = 
	`wgëch
(
dülog
);

130 
key
) {

137 
d⁄e
 = 
åue
;

140 
KEY_HOME
:

141 i‡(!
begö_ªached
) {

142 
begö_ªached
 = 1;

143 
∑ge
 = 
buf
;

144 
	`ª‰esh_ãxt_box
(
dülog
, 
box
, 
boxh
, 
boxw
,

145 
cur_y
, 
cur_x
, 
upd©e_ãxt
,

146 
d©a
);

150 
KEY_END
:

152 
íd_ªached
 = 1;

154 
∑ge
 = 
buf
 + 
	`°æí
(buf);

155 
	`back_löes
(
boxh
);

156 
	`ª‰esh_ãxt_box
(
dülog
, 
box
, 
boxh
, 
boxw
, 
cur_y
,

157 
cur_x
, 
upd©e_ãxt
, 
d©a
);

161 
KEY_UP
:

162 i‡(
begö_ªached
)

165 
	`back_löes
(
∑ge_Àngth
 + 1);

166 
	`ª‰esh_ãxt_box
(
dülog
, 
box
, 
boxh
, 
boxw
, 
cur_y
,

167 
cur_x
, 
upd©e_ãxt
, 
d©a
);

172 
KEY_PPAGE
:

173 i‡(
begö_ªached
)

175 
	`back_löes
(
∑ge_Àngth
 + 
boxh
);

176 
	`ª‰esh_ãxt_box
(
dülog
, 
box
, 
boxh
, 
boxw
, 
cur_y
,

177 
cur_x
, 
upd©e_ãxt
, 
d©a
);

181 
KEY_DOWN
:

182 i‡(
íd_ªached
)

185 
	`back_löes
(
∑ge_Àngth
 - 1);

186 
	`ª‰esh_ãxt_box
(
dülog
, 
box
, 
boxh
, 
boxw
, 
cur_y
,

187 
cur_x
, 
upd©e_ãxt
, 
d©a
);

189 
KEY_NPAGE
:

192 i‡(
íd_ªached
)

195 
begö_ªached
 = 0;

196 
	`ª‰esh_ãxt_box
(
dülog
, 
box
, 
boxh
, 
boxw
, 
cur_y
,

197 
cur_x
, 
upd©e_ãxt
, 
d©a
);

202 
KEY_LEFT
:

203 i‡(
hs¸ﬁl
 <= 0)

206 i‡(
key
 == '0')

207 
hs¸ﬁl
 = 0;

209 
hs¸ﬁl
--;

211 
	`back_löes
(
∑ge_Àngth
);

212 
	`ª‰esh_ãxt_box
(
dülog
, 
box
, 
boxh
, 
boxw
, 
cur_y
,

213 
cur_x
, 
upd©e_ãxt
, 
d©a
);

217 
KEY_RIGHT
:

218 i‡(
hs¸ﬁl
 >
MAX_LEN
)

220 
hs¸ﬁl
++;

222 
	`back_löes
(
∑ge_Àngth
);

223 
	`ª‰esh_ãxt_box
(
dülog
, 
box
, 
boxh
, 
boxw
, 
cur_y
,

224 
cur_x
, 
upd©e_ãxt
, 
d©a
);

226 
KEY_ESC
:

227 i‡(
	`⁄_key_esc
(
dülog
Ë=
KEY_ESC
)

228 
d⁄e
 = 
åue
;

230 
KEY_RESIZE
:

231 
	`back_löes
(
height
);

232 
	`dñwö
(
box
);

233 
	`dñwö
(
dülog
);

234 
	`⁄_key_ªsize
();

235 
do_ªsize
;

237 
i
 = 0; 
keys
[i]; i++) {

238 i‡(
key
 =
keys
[
i
]) {

239 
d⁄e
 = 
åue
;

245 
	`dñwö
(
box
);

246 
	`dñwö
(
dülog
);

247 i‡(
_vs¸ﬁl
) {

248 c⁄° *
s
;

250 
s
 = 
buf
;

251 *
_vs¸ﬁl
 = 0;

252 
	`back_löes
(
∑ge_Àngth
);

253 
s
 < 
∑ge
 && (†
	`°rchr
(s, '\n'))) {

254 (*
_vs¸ﬁl
)++;

255 
s
++;

258 i‡(
_hs¸ﬁl
)

259 *
_hs¸ﬁl
 = 
hs¸ﬁl
;

260  
key
;

261 
	}
}

267 
	$back_löes
(
n
)

269 
i
;

271 
begö_ªached
 = 0;

273 
i
 = 0; i < 
n
; i++) {

274 i‡(*
∑ge
 == '\0') {

275 i‡(
íd_ªached
) {

276 
íd_ªached
 = 0;

280 i‡(
∑ge
 =
buf
) {

281 
begö_ªached
 = 1;

284 
∑ge
--;

286 i‡(
∑ge
 =
buf
) {

287 
begö_ªached
 = 1;

290 
∑ge
--;

291 } *
∑ge
 != '\n');

292 
∑ge
++;

294 
	}
}

299 
	$¥öt_∑ge
(
WINDOW
 *
wö
, 
height
, 
width
, 
upd©e_ãxt_‚


300 
upd©e_ãxt
, *
d©a
)

302 
i
, 
∑s£d_íd
 = 0;

304 i‡(
upd©e_ãxt
) {

305 *
íd
;

307 
i
 = 0; i < 
height
; i++)

308 
	`gë_löe
();

309 
íd
 = 
∑ge
;

310 
	`back_löes
(
height
);

311 
	`upd©e_ãxt
(
buf
, 
∑ge
 - buf, 
íd
 - buf, 
d©a
);

314 
∑ge_Àngth
 = 0;

315 
i
 = 0; i < 
height
; i++) {

316 
	`¥öt_löe
(
wö
, 
i
, 
width
);

317 i‡(!
∑s£d_íd
)

318 
∑ge_Àngth
++;

319 i‡(
íd_ªached
 && !
∑s£d_íd
)

320 
∑s£d_íd
 = 1;

322 
	`wnouåe‰esh
(
wö
);

323 
	}
}

328 
	$¥öt_löe
(
WINDOW
 * 
wö
, 
row
, 
width
)

330 *
löe
;

332 
löe
 = 
	`gë_löe
();

333 
löe
 +
	`MIN
(
	`°æí
÷öe), 
hs¸ﬁl
);

334 
	`wmove
(
wö
, 
row
, 0);

335 
	`waddch
(
wö
, ' ');

336 
	`waddn°r
(
wö
, 
löe
, 
	`MIN
(
	`°æí
÷öe), 
width
 - 2));

339 #i‡
OLD_NCURSES


341 
x
 = 
	`gëcurx
(
wö
);

342 
i
;

343 
i
 = 0; i < 
width
 - 
x
; i++)

344 
	`waddch
(
wö
, ' ');

347 
	`w˛π€ﬁ
(
wö
);

349 
	}
}

356 *
	$gë_löe
()

358 
i
 = 0;

359 
löe
[
MAX_LEN
 + 1];

361 
íd_ªached
 = 0;

362 *
∑ge
 != '\n') {

363 i‡(*
∑ge
 == '\0') {

364 
íd_ªached
 = 1;

366 } i‡(
i
 < 
MAX_LEN
)

367 
löe
[
i
++] = *(
∑ge
++);

370 i‡(
i
 =
MAX_LEN
)

371 
löe
[
i
++] = '\0';

372 
∑ge
++;

375 i‡(
i
 <
MAX_LEN
)

376 
löe
[
i
] = '\0';

377 i‡(!
íd_ªached
)

378 
∑ge
++;

380  
löe
;

381 
	}
}

386 
	$¥öt_posôi⁄
(
WINDOW
 * 
wö
)

388 
≥r˚¡
;

390 
	`w©å£t
(
wö
, 
dlg
.
posôi⁄_ödiˇt‹
.
©r
);

391 
	`wbkgd£t
(
wö
, 
dlg
.
posôi⁄_ödiˇt‹
.
©r
 & 
A_COLOR
);

392 
≥r˚¡
 = (
∑ge
 - 
buf
Ë* 100 / 
	`°æí
(buf);

393 
	`wmove
(
wö
, 
	`gëmaxy
(wöË- 3, 
	`gëmaxx
(win) - 9);

394 
	`w¥ötw
(
wö
, "(%3d%%)", 
≥r˚¡
);

395 
	}
}

	@nemu/tools/kconfig/lxdialog/util.c

9 
	~<°d¨g.h
>

11 
	~"dülog.h
"

14 
	gßved_x
, 
	gßved_y
;

16 
dülog_öfo
 
	gdlg
;

18 
	$£t_m⁄o_theme
()

20 
dlg
.
s¸ìn
.
©r
 = 
A_NORMAL
;

21 
dlg
.
shadow
.
©r
 = 
A_NORMAL
;

22 
dlg
.
dülog
.
©r
 = 
A_NORMAL
;

23 
dlg
.
tôÀ
.
©r
 = 
A_BOLD
;

24 
dlg
.
b‹dî
.
©r
 = 
A_NORMAL
;

25 
dlg
.
buâ⁄_a˘ive
.
©r
 = 
A_REVERSE
;

26 
dlg
.
buâ⁄_öa˘ive
.
©r
 = 
A_DIM
;

27 
dlg
.
buâ⁄_key_a˘ive
.
©r
 = 
A_REVERSE
;

28 
dlg
.
buâ⁄_key_öa˘ive
.
©r
 = 
A_BOLD
;

29 
dlg
.
buâ⁄_œbñ_a˘ive
.
©r
 = 
A_REVERSE
;

30 
dlg
.
buâ⁄_œbñ_öa˘ive
.
©r
 = 
A_NORMAL
;

31 
dlg
.
öputbox
.
©r
 = 
A_NORMAL
;

32 
dlg
.
öputbox_b‹dî
.
©r
 = 
A_NORMAL
;

33 
dlg
.
£¨chbox
.
©r
 = 
A_NORMAL
;

34 
dlg
.
£¨chbox_tôÀ
.
©r
 = 
A_BOLD
;

35 
dlg
.
£¨chbox_b‹dî
.
©r
 = 
A_NORMAL
;

36 
dlg
.
posôi⁄_ödiˇt‹
.
©r
 = 
A_BOLD
;

37 
dlg
.
míubox
.
©r
 = 
A_NORMAL
;

38 
dlg
.
míubox_b‹dî
.
©r
 = 
A_NORMAL
;

39 
dlg
.
ôem
.
©r
 = 
A_NORMAL
;

40 
dlg
.
ôem_£À˘ed
.
©r
 = 
A_REVERSE
;

41 
dlg
.
èg
.
©r
 = 
A_BOLD
;

42 
dlg
.
èg_£À˘ed
.
©r
 = 
A_REVERSE
;

43 
dlg
.
èg_key
.
©r
 = 
A_BOLD
;

44 
dlg
.
èg_key_£À˘ed
.
©r
 = 
A_REVERSE
;

45 
dlg
.
check
.
©r
 = 
A_BOLD
;

46 
dlg
.
check_£À˘ed
.
©r
 = 
A_REVERSE
;

47 
dlg
.
u¨row
.
©r
 = 
A_BOLD
;

48 
dlg
.
d¨row
.
©r
 = 
A_BOLD
;

49 
	}
}

51 
	#DLG_COLOR
(
dülog
, 
f
, 
b
, 
h
) \

53 
dlg
.
dülog
.
fg
 = (
f
); \

54 
dlg
.
dülog
.
bg
 = (
b
); \

55 
dlg
.
dülog
.
hl
 = (
h
); \

56 } 0)

	)

58 
	$£t_˛assic_theme
()

60 
	`DLG_COLOR
(
s¸ìn
, 
COLOR_CYAN
, 
COLOR_BLUE
, 
åue
);

61 
	`DLG_COLOR
(
shadow
, 
COLOR_BLACK
, COLOR_BLACK, 
åue
);

62 
	`DLG_COLOR
(
dülog
, 
COLOR_BLACK
, 
COLOR_WHITE
, 
Ál£
);

63 
	`DLG_COLOR
(
tôÀ
, 
COLOR_YELLOW
, 
COLOR_WHITE
, 
åue
);

64 
	`DLG_COLOR
(
b‹dî
, 
COLOR_WHITE
, COLOR_WHITE, 
åue
);

65 
	`DLG_COLOR
(
buâ⁄_a˘ive
, 
COLOR_WHITE
, 
COLOR_BLUE
, 
åue
);

66 
	`DLG_COLOR
(
buâ⁄_öa˘ive
, 
COLOR_BLACK
, 
COLOR_WHITE
, 
Ál£
);

67 
	`DLG_COLOR
(
buâ⁄_key_a˘ive
, 
COLOR_WHITE
, 
COLOR_BLUE
, 
åue
);

68 
	`DLG_COLOR
(
buâ⁄_key_öa˘ive
, 
COLOR_RED
, 
COLOR_WHITE
, 
Ál£
);

69 
	`DLG_COLOR
(
buâ⁄_œbñ_a˘ive
, 
COLOR_YELLOW
, 
COLOR_BLUE
, 
åue
);

70 
	`DLG_COLOR
(
buâ⁄_œbñ_öa˘ive
, 
COLOR_BLACK
, 
COLOR_WHITE
, 
åue
);

71 
	`DLG_COLOR
(
öputbox
, 
COLOR_BLACK
, 
COLOR_WHITE
, 
Ál£
);

72 
	`DLG_COLOR
(
öputbox_b‹dî
, 
COLOR_BLACK
, 
COLOR_WHITE
, 
Ál£
);

73 
	`DLG_COLOR
(
£¨chbox
, 
COLOR_BLACK
, 
COLOR_WHITE
, 
Ál£
);

74 
	`DLG_COLOR
(
£¨chbox_tôÀ
, 
COLOR_YELLOW
, 
COLOR_WHITE
, 
åue
);

75 
	`DLG_COLOR
(
£¨chbox_b‹dî
, 
COLOR_WHITE
, COLOR_WHITE, 
åue
);

76 
	`DLG_COLOR
(
posôi⁄_ödiˇt‹
, 
COLOR_YELLOW
, 
COLOR_WHITE
, 
åue
);

77 
	`DLG_COLOR
(
míubox
, 
COLOR_BLACK
, 
COLOR_WHITE
, 
Ál£
);

78 
	`DLG_COLOR
(
míubox_b‹dî
, 
COLOR_WHITE
, COLOR_WHITE, 
åue
);

79 
	`DLG_COLOR
(
ôem
, 
COLOR_BLACK
, 
COLOR_WHITE
, 
Ál£
);

80 
	`DLG_COLOR
(
ôem_£À˘ed
, 
COLOR_WHITE
, 
COLOR_BLUE
, 
åue
);

81 
	`DLG_COLOR
(
èg
, 
COLOR_YELLOW
, 
COLOR_WHITE
, 
åue
);

82 
	`DLG_COLOR
(
èg_£À˘ed
, 
COLOR_YELLOW
, 
COLOR_BLUE
, 
åue
);

83 
	`DLG_COLOR
(
èg_key
, 
COLOR_YELLOW
, 
COLOR_WHITE
, 
åue
);

84 
	`DLG_COLOR
(
èg_key_£À˘ed
, 
COLOR_YELLOW
, 
COLOR_BLUE
, 
åue
);

85 
	`DLG_COLOR
(
check
, 
COLOR_BLACK
, 
COLOR_WHITE
, 
Ál£
);

86 
	`DLG_COLOR
(
check_£À˘ed
, 
COLOR_WHITE
, 
COLOR_BLUE
, 
åue
);

87 
	`DLG_COLOR
(
u¨row
, 
COLOR_GREEN
, 
COLOR_WHITE
, 
åue
);

88 
	`DLG_COLOR
(
d¨row
, 
COLOR_GREEN
, 
COLOR_WHITE
, 
åue
);

89 
	}
}

91 
	$£t_bœckbg_theme
()

93 
	`DLG_COLOR
(
s¸ìn
, 
COLOR_RED
, 
COLOR_BLACK
, 
åue
);

94 
	`DLG_COLOR
(
shadow
, 
COLOR_BLACK
, COLOR_BLACK, 
Ál£
);

95 
	`DLG_COLOR
(
dülog
, 
COLOR_WHITE
, 
COLOR_BLACK
, 
Ál£
);

96 
	`DLG_COLOR
(
tôÀ
, 
COLOR_RED
, 
COLOR_BLACK
, 
Ál£
);

97 
	`DLG_COLOR
(
b‹dî
, 
COLOR_BLACK
, COLOR_BLACK, 
åue
);

99 
	`DLG_COLOR
(
buâ⁄_a˘ive
, 
COLOR_YELLOW
, 
COLOR_RED
, 
Ál£
);

100 
	`DLG_COLOR
(
buâ⁄_öa˘ive
, 
COLOR_YELLOW
, 
COLOR_BLACK
, 
Ál£
);

101 
	`DLG_COLOR
(
buâ⁄_key_a˘ive
, 
COLOR_YELLOW
, 
COLOR_RED
, 
åue
);

102 
	`DLG_COLOR
(
buâ⁄_key_öa˘ive
, 
COLOR_RED
, 
COLOR_BLACK
, 
Ál£
);

103 
	`DLG_COLOR
(
buâ⁄_œbñ_a˘ive
, 
COLOR_WHITE
, 
COLOR_RED
, 
Ál£
);

104 
	`DLG_COLOR
(
buâ⁄_œbñ_öa˘ive
, 
COLOR_BLACK
, COLOR_BLACK, 
åue
);

106 
	`DLG_COLOR
(
öputbox
, 
COLOR_YELLOW
, 
COLOR_BLACK
, 
Ál£
);

107 
	`DLG_COLOR
(
öputbox_b‹dî
, 
COLOR_YELLOW
, 
COLOR_BLACK
, 
Ál£
);

109 
	`DLG_COLOR
(
£¨chbox
, 
COLOR_YELLOW
, 
COLOR_BLACK
, 
Ál£
);

110 
	`DLG_COLOR
(
£¨chbox_tôÀ
, 
COLOR_YELLOW
, 
COLOR_BLACK
, 
åue
);

111 
	`DLG_COLOR
(
£¨chbox_b‹dî
, 
COLOR_BLACK
, COLOR_BLACK, 
åue
);

113 
	`DLG_COLOR
(
posôi⁄_ödiˇt‹
, 
COLOR_RED
, 
COLOR_BLACK
, 
Ál£
);

115 
	`DLG_COLOR
(
míubox
, 
COLOR_YELLOW
, 
COLOR_BLACK
, 
Ál£
);

116 
	`DLG_COLOR
(
míubox_b‹dî
, 
COLOR_BLACK
, COLOR_BLACK, 
åue
);

118 
	`DLG_COLOR
(
ôem
, 
COLOR_WHITE
, 
COLOR_BLACK
, 
Ál£
);

119 
	`DLG_COLOR
(
ôem_£À˘ed
, 
COLOR_WHITE
, 
COLOR_RED
, 
Ál£
);

121 
	`DLG_COLOR
(
èg
, 
COLOR_RED
, 
COLOR_BLACK
, 
Ál£
);

122 
	`DLG_COLOR
(
èg_£À˘ed
, 
COLOR_YELLOW
, 
COLOR_RED
, 
åue
);

123 
	`DLG_COLOR
(
èg_key
, 
COLOR_RED
, 
COLOR_BLACK
, 
Ál£
);

124 
	`DLG_COLOR
(
èg_key_£À˘ed
, 
COLOR_YELLOW
, 
COLOR_RED
, 
åue
);

126 
	`DLG_COLOR
(
check
, 
COLOR_YELLOW
, 
COLOR_BLACK
, 
Ál£
);

127 
	`DLG_COLOR
(
check_£À˘ed
, 
COLOR_YELLOW
, 
COLOR_RED
, 
åue
);

129 
	`DLG_COLOR
(
u¨row
, 
COLOR_RED
, 
COLOR_BLACK
, 
Ál£
);

130 
	`DLG_COLOR
(
d¨row
, 
COLOR_RED
, 
COLOR_BLACK
, 
Ál£
);

131 
	}
}

133 
	$£t_bluëôÀ_theme
()

135 
	`£t_˛assic_theme
();

136 
	`DLG_COLOR
(
tôÀ
, 
COLOR_BLUE
, 
COLOR_WHITE
, 
åue
);

137 
	`DLG_COLOR
(
buâ⁄_key_a˘ive
, 
COLOR_YELLOW
, 
COLOR_BLUE
, 
åue
);

138 
	`DLG_COLOR
(
buâ⁄_œbñ_a˘ive
, 
COLOR_WHITE
, 
COLOR_BLUE
, 
åue
);

139 
	`DLG_COLOR
(
£¨chbox_tôÀ
, 
COLOR_BLUE
, 
COLOR_WHITE
, 
åue
);

140 
	`DLG_COLOR
(
posôi⁄_ödiˇt‹
, 
COLOR_BLUE
, 
COLOR_WHITE
, 
åue
);

141 
	`DLG_COLOR
(
èg
, 
COLOR_BLUE
, 
COLOR_WHITE
, 
åue
);

142 
	`DLG_COLOR
(
èg_key
, 
COLOR_BLUE
, 
COLOR_WHITE
, 
åue
);

144 
	}
}

149 
	$£t_theme
(c⁄° *
theme
)

151 
u£_cﬁ‹
 = 1;

152 i‡(!
theme
)

153 
	`£t_bluëôÀ_theme
();

154 i‡(
	`°rcmp
(
theme
, "classic") == 0)

155 
	`£t_˛assic_theme
();

156 i‡(
	`°rcmp
(
theme
, "bluetitle") == 0)

157 
	`£t_bluëôÀ_theme
();

158 i‡(
	`°rcmp
(
theme
, "blackbg") == 0)

159 
	`£t_bœckbg_theme
();

160 i‡(
	`°rcmp
(
theme
, "mono") == 0)

161 
u£_cﬁ‹
 = 0;

163  
u£_cﬁ‹
;

164 
	}
}

166 
	$öô_⁄e_cﬁ‹
(
dülog_cﬁ‹
 *
cﬁ‹
)

168 
∑ú
 = 0;

170 
∑ú
++;

171 
	`öô_∑ú
(
∑ú
, 
cﬁ‹
->
fg
, cﬁ‹->
bg
);

172 i‡(
cﬁ‹
->
hl
)

173 
cﬁ‹
->
©r
 = 
A_BOLD
 | 
	`COLOR_PAIR
(
∑ú
);

175 
cﬁ‹
->
©r
 = 
	`COLOR_PAIR
(
∑ú
);

176 
	}
}

178 
	$öô_dülog_cﬁ‹s
()

180 
	`öô_⁄e_cﬁ‹
(&
dlg
.
s¸ìn
);

181 
	`öô_⁄e_cﬁ‹
(&
dlg
.
shadow
);

182 
	`öô_⁄e_cﬁ‹
(&
dlg
.
dülog
);

183 
	`öô_⁄e_cﬁ‹
(&
dlg
.
tôÀ
);

184 
	`öô_⁄e_cﬁ‹
(&
dlg
.
b‹dî
);

185 
	`öô_⁄e_cﬁ‹
(&
dlg
.
buâ⁄_a˘ive
);

186 
	`öô_⁄e_cﬁ‹
(&
dlg
.
buâ⁄_öa˘ive
);

187 
	`öô_⁄e_cﬁ‹
(&
dlg
.
buâ⁄_key_a˘ive
);

188 
	`öô_⁄e_cﬁ‹
(&
dlg
.
buâ⁄_key_öa˘ive
);

189 
	`öô_⁄e_cﬁ‹
(&
dlg
.
buâ⁄_œbñ_a˘ive
);

190 
	`öô_⁄e_cﬁ‹
(&
dlg
.
buâ⁄_œbñ_öa˘ive
);

191 
	`öô_⁄e_cﬁ‹
(&
dlg
.
öputbox
);

192 
	`öô_⁄e_cﬁ‹
(&
dlg
.
öputbox_b‹dî
);

193 
	`öô_⁄e_cﬁ‹
(&
dlg
.
£¨chbox
);

194 
	`öô_⁄e_cﬁ‹
(&
dlg
.
£¨chbox_tôÀ
);

195 
	`öô_⁄e_cﬁ‹
(&
dlg
.
£¨chbox_b‹dî
);

196 
	`öô_⁄e_cﬁ‹
(&
dlg
.
posôi⁄_ödiˇt‹
);

197 
	`öô_⁄e_cﬁ‹
(&
dlg
.
míubox
);

198 
	`öô_⁄e_cﬁ‹
(&
dlg
.
míubox_b‹dî
);

199 
	`öô_⁄e_cﬁ‹
(&
dlg
.
ôem
);

200 
	`öô_⁄e_cﬁ‹
(&
dlg
.
ôem_£À˘ed
);

201 
	`öô_⁄e_cﬁ‹
(&
dlg
.
èg
);

202 
	`öô_⁄e_cﬁ‹
(&
dlg
.
èg_£À˘ed
);

203 
	`öô_⁄e_cﬁ‹
(&
dlg
.
èg_key
);

204 
	`öô_⁄e_cﬁ‹
(&
dlg
.
èg_key_£À˘ed
);

205 
	`öô_⁄e_cﬁ‹
(&
dlg
.
check
);

206 
	`öô_⁄e_cﬁ‹
(&
dlg
.
check_£À˘ed
);

207 
	`öô_⁄e_cﬁ‹
(&
dlg
.
u¨row
);

208 
	`öô_⁄e_cﬁ‹
(&
dlg
.
d¨row
);

209 
	}
}

214 
	$cﬁ‹_£tup
(c⁄° *
theme
)

216 
u£_cﬁ‹
;

218 
u£_cﬁ‹
 = 
	`£t_theme
(
theme
);

219 i‡(
u£_cﬁ‹
 && 
	`has_cﬁ‹s
()) {

220 
	`°¨t_cﬁ‹
();

221 
	`öô_dülog_cﬁ‹s
();

223 
	`£t_m⁄o_theme
();

224 
	}
}

229 
	$©å_˛ór
(
WINDOW
 * 
wö
, 
height
, 
width
, 
chty≥
 
©å
)

231 
i
, 
j
;

233 
	`w©å£t
(
wö
, 
©å
);

234 
i
 = 0; i < 
height
; i++) {

235 
	`wmove
(
wö
, 
i
, 0);

236 
j
 = 0; j < 
width
; j++)

237 
	`waddch
(
wö
, ' ');

239 
	`touchwö
(
wö
);

240 
	}
}

242 
	$dülog_˛ór
()

244 
löes
, 
cﬁumns
;

246 
löes
 = 
	`gëmaxy
(
°ds¸
);

247 
cﬁumns
 = 
	`gëmaxx
(
°ds¸
);

249 
	`©å_˛ór
(
°ds¸
, 
löes
, 
cﬁumns
, 
dlg
.
s¸ìn
.
©r
);

251 i‡(
dlg
.
backtôÀ
 !
NULL
) {

252 
i
, 
Àn
 = 0, 
skù
 = 0;

253 
subtôÀ_li°
 *
pos
;

255 
	`w©å£t
(
°ds¸
, 
dlg
.
s¸ìn
.
©r
);

256 
	`mvwadd°r
(
°ds¸
, 0, 1, (*)
dlg
.
backtôÀ
);

258 
pos
 = 
dlg
.
subtôÀs
;Öo†!
NULL
;Öo†pos->
√xt
) {

260 
Àn
 +
	`°æí
(
pos
->
ãxt
) + 3;

263 
	`wmove
(
°ds¸
, 1, 1);

264 i‡(
Àn
 > 
cﬁumns
 - 2) {

265 c⁄° *
ñlùsis
 = "[...] ";

266 
	`wadd°r
(
°ds¸
, 
ñlùsis
);

267 
skù
 = 
Àn
 - (
cﬁumns
 - 2 - 
	`°æí
(
ñlùsis
));

270 
pos
 = 
dlg
.
subtôÀs
;Öo†!
NULL
;Öo†pos->
√xt
) {

271 i‡(
skù
 == 0)

272 
	`waddch
(
°ds¸
, 
ACS_RARROW
);

274 
skù
--;

276 i‡(
skù
 == 0)

277 
	`waddch
(
°ds¸
, ' ');

279 
skù
--;

281 i‡(
skù
 < 
	`°æí
(
pos
->
ãxt
)) {

282 
	`wadd°r
(
°ds¸
, 
pos
->
ãxt
 + 
skù
);

283 
skù
 = 0;

285 
skù
 -
	`°æí
(
pos
->
ãxt
);

287 i‡(
skù
 == 0)

288 
	`waddch
(
°ds¸
, ' ');

290 
skù
--;

293 
i
 = 
Àn
 + 1; i < 
cﬁumns
 - 1; i++)

294 
	`waddch
(
°ds¸
, 
ACS_HLINE
);

296 
	`wnouåe‰esh
(
°ds¸
);

297 
	}
}

302 
	$öô_dülog
(c⁄° *
backtôÀ
)

304 
height
, 
width
;

306 
	`öôs¸
();

309 
	`gëyx
(
°ds¸
, 
ßved_y
, 
ßved_x
);

311 
	`gëmaxyx
(
°ds¸
, 
height
, 
width
);

312 i‡(
height
 < 
WINDOW_HEIGTH_MIN
 || 
width
 < 
WINDOW_WIDTH_MIN
) {

313 
	`ídwö
();

314  -
ERRDISPLAYTOOSMALL
;

317 
dlg
.
backtôÀ
 = backtitle;

318 
	`cﬁ‹_£tup
(
	`gëív
("MENUCONFIG_COLOR"));

320 
	`key∑d
(
°ds¸
, 
TRUE
);

321 
	`cbªak
();

322 
	`n€cho
();

323 
	`dülog_˛ór
();

326 
	}
}

328 
	$£t_dülog_backtôÀ
(c⁄° *
backtôÀ
)

330 
dlg
.
backtôÀ
 = backtitle;

331 
	}
}

333 
	$£t_dülog_subtôÀs
(
subtôÀ_li°
 *
subtôÀs
)

335 
dlg
.
subtôÀs
 = subtitles;

336 
	}
}

341 
	$íd_dülog
(
x
, 
y
)

344 
	`move
(
y
, 
x
);

345 
	`ª‰esh
();

346 
	`ídwö
();

347 
	}
}

352 
	$¥öt_tôÀ
(
WINDOW
 *
dülog
, c⁄° *
tôÀ
, 
width
)

354 i‡(
tôÀ
) {

355 
éí
 = 
	`MIN
(
width
 - 2, 
	`°æí
(
tôÀ
));

356 
	`w©å£t
(
dülog
, 
dlg
.
tôÀ
.
©r
);

357 
	`mvwaddch
(
dülog
, 0, (
width
 - 
éí
) / 2 - 1, ' ');

358 
	`mvwaddn°r
(
dülog
, 0, (
width
 - 
éí
)/2, 
tôÀ
,Ålen);

359 
	`waddch
(
dülog
, ' ');

361 
	}
}

369 
	$¥öt_autowøp
(
WINDOW
 * 
wö
, c⁄° *
¥om±
, 
width
, 
y
, 
x
)

371 
√wl
, 
cur_x
, 
cur_y
;

372 
¥om±_Àn
, 
room
, 
wÀn
;

373 
ãmp°r
[
MAX_LEN
 + 1], *
w‹d
, *
•
, *
•2
, *
√wlöe_£∑øt‹
 = 0;

375 
	`°r˝y
(
ãmp°r
, 
¥om±
);

377 
¥om±_Àn
 = 
	`°æí
(
ãmp°r
);

379 i‡(
¥om±_Àn
 <
width
 - 
x
 * 2) {

380 
	`wmove
(
wö
, 
y
, (
width
 - 
¥om±_Àn
) / 2);

381 
	`wadd°r
(
wö
, 
ãmp°r
);

383 
cur_x
 = 
x
;

384 
cur_y
 = 
y
;

385 
√wl
 = 1;

386 
w‹d
 = 
ãmp°r
;

387 
w‹d
 && *word) {

388 
•
 = 
	`°Ωbrk
(
w‹d
, "\n ");

389 i‡(
•
 && *sp == '\n')

390 
√wlöe_£∑øt‹
 = 
•
;

392 i‡(
•
)

393 *
•
++ = 0;

398 
room
 = 
width
 - 
cur_x
;

399 
wÀn
 = 
	`°æí
(
w‹d
);

400 i‡(
wÀn
 > 
room
 ||

401 (
√wl
 && 
wÀn
 < 4 && 
•


402 && 
wÀn
 + 1 + 
	`°æí
(
•
Ë> 
room


403 && (!(
•2
 = 
	`°Ωbrk
(
•
, "\n "))

404 || 
wÀn
 + 1 + (
•2
 - 
•
Ë> 
room
))) {

405 
cur_y
++;

406 
cur_x
 = 
x
;

408 
	`wmove
(
wö
, 
cur_y
, 
cur_x
);

409 
	`wadd°r
(
wö
, 
w‹d
);

410 
	`gëyx
(
wö
, 
cur_y
, 
cur_x
);

413 i‡(
√wlöe_£∑øt‹
) {

414 
cur_y
++;

415 
cur_x
 = 
x
;

416 
√wlöe_£∑øt‹
 = 0;

418 
cur_x
++;

420 i‡(
•
 && *sp == ' ') {

421 
cur_x
++;

422 *++
•
 == ' ') ;

423 
√wl
 = 1;

425 
√wl
 = 0;

426 
w‹d
 = 
•
;

429 
	}
}

434 
	$¥öt_buâ⁄
(
WINDOW
 * 
wö
, c⁄° *
œbñ
, 
y
, 
x
, 
£À˘ed
)

436 
i
, 
ãmp
;

438 
	`wmove
(
wö
, 
y
, 
x
);

439 
	`w©å£t
(
wö
, 
£À˘ed
 ? 
dlg
.
buâ⁄_a˘ive
.
©r


440 : 
dlg
.
buâ⁄_öa˘ive
.
©r
);

441 
	`wadd°r
(
wö
, "<");

442 
ãmp
 = 
	`°r•n
(
œbñ
, " ");

443 
œbñ
 +
ãmp
;

444 
	`w©å£t
(
wö
, 
£À˘ed
 ? 
dlg
.
buâ⁄_œbñ_a˘ive
.
©r


445 : 
dlg
.
buâ⁄_œbñ_öa˘ive
.
©r
);

446 
i
 = 0; i < 
ãmp
; i++)

447 
	`waddch
(
wö
, ' ');

448 
	`w©å£t
(
wö
, 
£À˘ed
 ? 
dlg
.
buâ⁄_key_a˘ive
.
©r


449 : 
dlg
.
buâ⁄_key_öa˘ive
.
©r
);

450 
	`waddch
(
wö
, 
œbñ
[0]);

451 
	`w©å£t
(
wö
, 
£À˘ed
 ? 
dlg
.
buâ⁄_œbñ_a˘ive
.
©r


452 : 
dlg
.
buâ⁄_œbñ_öa˘ive
.
©r
);

453 
	`wadd°r
(
wö
, (*)
œbñ
 + 1);

454 
	`w©å£t
(
wö
, 
£À˘ed
 ? 
dlg
.
buâ⁄_a˘ive
.
©r


455 : 
dlg
.
buâ⁄_öa˘ive
.
©r
);

456 
	`wadd°r
(
wö
, ">");

457 
	`wmove
(
wö
, 
y
, 
x
 + 
ãmp
 + 1);

458 
	}
}

464 
	$døw_box
(
WINDOW
 * 
wö
, 
y
, 
x
, 
height
, 
width
,

465 
chty≥
 
box
, chty≥ 
b‹dî
)

467 
i
, 
j
;

469 
	`w©å£t
(
wö
, 0);

470 
i
 = 0; i < 
height
; i++) {

471 
	`wmove
(
wö
, 
y
 + 
i
, 
x
);

472 
j
 = 0; j < 
width
; j++)

473 i‡(!
i
 && !
j
)

474 
	`waddch
(
wö
, 
b‹dî
 | 
ACS_ULCORNER
);

475 i‡(
i
 =
height
 - 1 && !
j
)

476 
	`waddch
(
wö
, 
b‹dî
 | 
ACS_LLCORNER
);

477 i‡(!
i
 && 
j
 =
width
 - 1)

478 
	`waddch
(
wö
, 
box
 | 
ACS_URCORNER
);

479 i‡(
i
 =
height
 - 1 && 
j
 =
width
 - 1)

480 
	`waddch
(
wö
, 
box
 | 
ACS_LRCORNER
);

481 i‡(!
i
)

482 
	`waddch
(
wö
, 
b‹dî
 | 
ACS_HLINE
);

483 i‡(
i
 =
height
 - 1)

484 
	`waddch
(
wö
, 
box
 | 
ACS_HLINE
);

485 i‡(!
j
)

486 
	`waddch
(
wö
, 
b‹dî
 | 
ACS_VLINE
);

487 i‡(
j
 =
width
 - 1)

488 
	`waddch
(
wö
, 
box
 | 
ACS_VLINE
);

490 
	`waddch
(
wö
, 
box
 | ' ');

492 
	}
}

498 
	$døw_shadow
(
WINDOW
 * 
wö
, 
y
, 
x
, 
height
, 
width
)

500 
i
;

502 i‡(
	`has_cﬁ‹s
()) {

503 
	`w©å£t
(
wö
, 
dlg
.
shadow
.
©r
);

504 
	`wmove
(
wö
, 
y
 + 
height
, 
x
 + 2);

505 
i
 = 0; i < 
width
; i++)

506 
	`waddch
(
wö
, 
	`wöch
(wöË& 
A_CHARTEXT
);

507 
i
 = 
y
 + 1; i < y + 
height
 + 1; i++) {

508 
	`wmove
(
wö
, 
i
, 
x
 + 
width
);

509 
	`waddch
(
wö
, 
	`wöch
(wöË& 
A_CHARTEXT
);

510 
	`waddch
(
wö
, 
	`wöch
(wöË& 
A_CHARTEXT
);

512 
	`wnouåe‰esh
(
wö
);

514 
	}
}

519 
	$fú°_Æpha
(c⁄° *
°rög
, c⁄° *
exem±
)

521 
i
, 
ö_∑ªn
 = 0, 
c
;

523 
i
 = 0; i < 
	`°æí
(
°rög
); i++) {

524 
c
 = 
	`tﬁowî
(
°rög
[
i
]);

526 i‡(
	`°rchr
("<[(", 
c
))

527 ++
ö_∑ªn
;

528 i‡(
	`°rchr
(">])", 
c
Ë&& 
ö_∑ªn
 > 0)

529 --
ö_∑ªn
;

531 i‡((!
ö_∑ªn
Ë&& 
	`ißÕha
(
c
Ë&& 
	`°rchr
(
exem±
, c) == 0)

532  
i
;

536 
	}
}

547 
	$⁄_key_esc
(
WINDOW
 *
wö
)

549 
key
;

550 
key2
;

551 
key3
;

553 
	`nodñay
(
wö
, 
TRUE
);

554 
	`key∑d
(
wö
, 
FALSE
);

555 
key
 = 
	`wgëch
(
wö
);

556 
key2
 = 
	`wgëch
(
wö
);

558 
key3
 = 
	`wgëch
(
wö
);

559 } 
key3
 !
ERR
);

560 
	`nodñay
(
wö
, 
FALSE
);

561 
	`key∑d
(
wö
, 
TRUE
);

562 i‡(
key
 =
KEY_ESC
 && 
key2
 =
ERR
)

563  
KEY_ESC
;

564 i‡(
key
 !
ERR
 && key !
KEY_ESC
 && 
key2
 == ERR)

565 
	`ungëch
(
key
);

568 
	}
}

571 
	$⁄_key_ªsize
()

573 
	`dülog_˛ór
();

574  
KEY_RESIZE
;

575 
	}
}

577 
dülog_li°
 *
	gôem_cur
;

578 
dülog_li°
 
	gôem_nû
;

579 
dülog_li°
 *
	gôem_hód
;

581 
	$ôem_ª£t
()

583 
dülog_li°
 *
p
, *
√xt
;

585 
p
 = 
ôem_hód
;Ö;Ö = 
√xt
) {

586 
√xt
 = 
p
->next;

587 
	`‰ì
(
p
);

589 
ôem_hód
 = 
NULL
;

590 
ôem_cur
 = &
ôem_nû
;

591 
	}
}

593 
	$ôem_make
(c⁄° *
fmt
, ...)

595 
va_li°
 
≠
;

596 
dülog_li°
 *
p
 = 
	`mÆloc
((*p));

598 i‡(
ôem_hód
)

599 
ôem_cur
->
√xt
 = 
p
;

601 
ôem_hód
 = 
p
;

602 
ôem_cur
 = 
p
;

603 
	`mem£t
(
p
, 0, (*p));

605 
	`va_°¨t
(
≠
, 
fmt
);

606 
	`v¢¥ötf
(
ôem_cur
->
node
.
°r
, (ôem_cur->node.°r), 
fmt
, 
≠
);

607 
	`va_íd
(
≠
);

608 
	}
}

610 
	$ôem_add_°r
(c⁄° *
fmt
, ...)

612 
va_li°
 
≠
;

613 
size_t
 
avaû
;

615 
avaû
 = (
ôem_cur
->
node
.
°r
Ë- 
	`°æí
(item_cur->node.str);

617 
	`va_°¨t
(
≠
, 
fmt
);

618 
	`v¢¥ötf
(
ôem_cur
->
node
.
°r
 + 
	`°æí
(item_cur->node.str),

619 
avaû
, 
fmt
, 
≠
);

620 
ôem_cur
->
node
.
°r
[(item_cur->node.str) - 1] = '\0';

621 
	`va_íd
(
≠
);

622 
	}
}

624 
	$ôem_£t_èg
(
èg
)

626 
ôem_cur
->
node
.
èg
 =Åag;

627 
	}
}

628 
	$ôem_£t_d©a
(*
±r
)

630 
ôem_cur
->
node
.
d©a
 = 
±r
;

631 
	}
}

633 
	$ôem_£t_£À˘ed
(
vÆ
)

635 
ôem_cur
->
node
.
£À˘ed
 = 
vÆ
;

636 
	}
}

638 
	$ôem_a˘iv©e_£À˘ed
()

640 
	`ôem_f‹óch
()

641 i‡(
	`ôem_is_£À˘ed
())

644 
	}
}

646 *
	$ôem_d©a
()

648  
ôem_cur
->
node
.
d©a
;

649 
	}
}

651 
	$ôem_èg
()

653  
ôem_cur
->
node
.
èg
;

654 
	}
}

656 
	$ôem_cou¡
()

658 
n
 = 0;

659 
dülog_li°
 *
p
;

661 
p
 = 
ôem_hód
;Ö;Ö =Ö->
√xt
)

662 
n
++;

663  
n
;

664 
	}
}

666 
	$ôem_£t
(
n
)

668 
i
 = 0;

669 
	`ôem_f‹óch
()

670 i‡(
i
++ =
n
)

672 
	}
}

674 
	$ôem_n
()

676 
n
 = 0;

677 
dülog_li°
 *
p
;

679 
p
 = 
ôem_hód
;Ö;Ö =Ö->
√xt
) {

680 i‡(
p
 =
ôem_cur
)

681  
n
;

682 
n
++;

685 
	}
}

687 c⁄° *
	$ôem_°r
()

689  
ôem_cur
->
node
.
°r
;

690 
	}
}

692 
	$ôem_is_£À˘ed
()

694  (
ôem_cur
->
node
.
£À˘ed
 != 0);

695 
	}
}

697 
	$ôem_is_èg
(
èg
)

699  (
ôem_cur
->
node
.
èg
 ==Åag);

700 
	}
}

	@nemu/tools/kconfig/lxdialog/yesno.c

9 
	~"dülog.h
"

14 
	$¥öt_buâ⁄s
(
WINDOW
 * 
dülog
, 
height
, 
width
, 
£À˘ed
)

16 
x
 = 
width
 / 2 - 10;

17 
y
 = 
height
 - 2;

19 
	`¥öt_buâ⁄
(
dülog
, " Ye†", 
y
, 
x
, 
£À˘ed
 == 0);

20 
	`¥öt_buâ⁄
(
dülog
, " Nÿ ", 
y
, 
x
 + 13, 
£À˘ed
 == 1);

22 
	`wmove
(
dülog
, 
y
, 
x
 + 1 + 13 * 
£À˘ed
);

23 
	`wª‰esh
(
dülog
);

24 
	}
}

29 
	$dülog_ye¢o
(c⁄° *
tôÀ
, c⁄° *
¥om±
, 
height
, 
width
)

31 
i
, 
x
, 
y
, 
key
 = 0, 
buâ⁄
 = 0;

32 
WINDOW
 *
dülog
;

34 
do_ªsize
:

35 i‡(
	`gëmaxy
(
°ds¸
Ë< (
height
 + 
YESNO_HEIGTH_MIN
))

36  -
ERRDISPLAYTOOSMALL
;

37 i‡(
	`gëmaxx
(
°ds¸
Ë< (
width
 + 
YESNO_WIDTH_MIN
))

38  -
ERRDISPLAYTOOSMALL
;

41 
x
 = (
	`gëmaxx
(
°ds¸
Ë- 
width
) / 2;

42 
y
 = (
	`gëmaxy
(
°ds¸
Ë- 
height
) / 2;

44 
	`døw_shadow
(
°ds¸
, 
y
, 
x
, 
height
, 
width
);

46 
dülog
 = 
	`√wwö
(
height
, 
width
, 
y
, 
x
);

47 
	`key∑d
(
dülog
, 
TRUE
);

49 
	`døw_box
(
dülog
, 0, 0, 
height
, 
width
,

50 
dlg
.
dülog
.
©r
, dlg.
b‹dî
.atr);

51 
	`w©å£t
(
dülog
, 
dlg
.
b‹dî
.
©r
);

52 
	`mvwaddch
(
dülog
, 
height
 - 3, 0, 
ACS_LTEE
);

53 
i
 = 0; i < 
width
 - 2; i++)

54 
	`waddch
(
dülog
, 
ACS_HLINE
);

55 
	`w©å£t
(
dülog
, 
dlg
.dülog.
©r
);

56 
	`waddch
(
dülog
, 
ACS_RTEE
);

58 
	`¥öt_tôÀ
(
dülog
, 
tôÀ
, 
width
);

60 
	`w©å£t
(
dülog
, 
dlg
.dülog.
©r
);

61 
	`¥öt_autowøp
(
dülog
, 
¥om±
, 
width
 - 2, 1, 3);

63 
	`¥öt_buâ⁄s
(
dülog
, 
height
, 
width
, 0);

65 
key
 !
KEY_ESC
) {

66 
key
 = 
	`wgëch
(
dülog
);

67 
key
) {

70 
	`dñwö
(
dülog
);

74 
	`dñwö
(
dülog
);

77 
TAB
:

78 
KEY_LEFT
:

79 
KEY_RIGHT
:

80 
buâ⁄
 = ((
key
 =
KEY_LEFT
 ? --button : ++button) < 0) ? 1 : (button > 1 ? 0 : button);

82 
	`¥öt_buâ⁄s
(
dülog
, 
height
, 
width
, 
buâ⁄
);

83 
	`wª‰esh
(
dülog
);

87 
	`dñwö
(
dülog
);

88  
buâ⁄
;

89 
KEY_ESC
:

90 
key
 = 
	`⁄_key_esc
(
dülog
);

92 
KEY_RESIZE
:

93 
	`dñwö
(
dülog
);

94 
	`⁄_key_ªsize
();

95 
do_ªsize
;

99 
	`dñwö
(
dülog
);

100  
key
;

101 
	}
}

	@nemu/tools/kconfig/mconf.c

11 
	~<˘y≥.h
>

12 
	~<î∫o.h
>

13 
	~<f˙é.h
>

14 
	~<limôs.h
>

15 
	~<°d¨g.h
>

16 
	~<°dlib.h
>

17 
	~<°rög.h
>

18 
	~<°rögs.h
>

19 
	~<sig«l.h
>

20 
	~<uni°d.h
>

22 
	~"lkc.h
"

23 
	~"lxdülog/dülog.h
"

25 c⁄° 
	gmc⁄f_ªadme
[] =

175 
	gmíu_ö°ru˘i⁄s
[] =

182 
	gødiﬁi°_ö°ru˘i⁄s
[] =

187 
	göputbox_ö°ru˘i⁄s_öt
[] =

191 
	göputbox_ö°ru˘i⁄s_hex
[] =

194 
	göputbox_ö°ru˘i⁄s_°rög
[] =

197 
	g£tmod_ãxt
[] =

200 
	glﬂd_c⁄fig_ãxt
[] =

204 
	glﬂd_c⁄fig_hñp
[] =

215 
	gßve_c⁄fig_ãxt
[] =

218 
	gßve_c⁄fig_hñp
[] =

229 
	g£¨ch_hñp
[] =

276 
	gödít
;

277 
míu
 *
	gcuºít_míu
;

278 
	gchûd_cou¡
;

279 
	gsögÀ_míu_mode
;

280 
	gshow_Æl_›ti⁄s
;

281 
	gßve_™d_exô
;

282 
	gsûít
;

284 
c⁄f
(
míu
 *míu, míu *
a˘ive_míu
);

285 
c⁄f_choi˚
(
míu
 *menu);

286 
c⁄f_°rög
(
míu
 *menu);

287 
c⁄f_lﬂd
();

288 
c⁄f_ßve
();

289 
show_ãxtbox_ext
(c⁄° *
tôÀ
, *
ãxt
, 
r
, 
c
,

290 *
keys
, *
vs¸ﬁl
, *
hs¸ﬁl
,

291 
upd©e_ãxt_‚
 
upd©e_ãxt
, *
d©a
);

292 
show_ãxtbox
(c⁄° *
tôÀ
, c⁄° *
ãxt
, 
r
, 
c
);

293 
show_hñ±ext
(c⁄° *
tôÀ
, c⁄° *
ãxt
);

294 
show_hñp
(
míu
 *menu);

296 
	gfûíame
[
PATH_MAX
+1];

297 
	$£t_c⁄fig_fûíame
(c⁄° *
c⁄fig_fûíame
)

299 
míu_backtôÀ
[
PATH_MAX
+128];

300 
size
;

302 
size
 = 
	`¢¥ötf
(
míu_backtôÀ
, (menu_backtitle),

303 "%†- %s", 
c⁄fig_fûíame
, 
roŸmíu
.
¥om±
->
ãxt
);

304 i‡(
size
 >(
míu_backtôÀ
))

305 
míu_backtôÀ
[(menu_backtitle)-1] = '\0';

306 
	`£t_dülog_backtôÀ
(
míu_backtôÀ
);

308 
size
 = 
	`¢¥ötf
(
fûíame
, (fûíame), "%s", 
c⁄fig_fûíame
);

309 i‡(
size
 >(
fûíame
))

310 
fûíame
[(filename)-1] = '\0';

311 
	}
}

313 
	ssubtôÀ_∑π
 {

314 
li°_hód
 
	míåõs
;

315 c⁄° *
	mãxt
;

317 
LIST_HEAD
(
åaû
);

319 
subtôÀ_li°
 *
	gsubtôÀs
;

320 
	$£t_subtôÀ
()

322 
subtôÀ_∑π
 *
•
;

323 
subtôÀ_li°
 *
pos
, *
tmp
;

325 
pos
 = 
subtôÀs
;Öo†!
NULL
;Öo†
tmp
) {

326 
tmp
 = 
pos
->
√xt
;

327 
	`‰ì
(
pos
);

330 
subtôÀs
 = 
NULL
;

331 
	`li°_f‹_óch_íåy
(
•
, &
åaû
, 
íåõs
) {

332 i‡(
•
->
ãxt
) {

333 i‡(
pos
) {

334 
pos
->
√xt
 = 
	`xˇŒoc
(1, (*pos));

335 
pos
 =Öos->
√xt
;

337 
subtôÀs
 = 
pos
 = 
	`xˇŒoc
(1, (*pos));

339 
pos
->
ãxt
 = 
•
->text;

343 
	`£t_dülog_subtôÀs
(
subtôÀs
);

344 
	}
}

346 
	$ª£t_subtôÀ
()

348 
subtôÀ_li°
 *
pos
, *
tmp
;

350 
pos
 = 
subtôÀs
;Öo†!
NULL
;Öo†
tmp
) {

351 
tmp
 = 
pos
->
√xt
;

352 
	`‰ì
(
pos
);

354 
subtôÀs
 = 
NULL
;

355 
	`£t_dülog_subtôÀs
(
subtôÀs
);

356 
	}
}

358 
	s£¨ch_d©a
 {

359 
li°_hód
 *
	mhód
;

360 
míu
 **
	mèrgës
;

361 *
	mkeys
;

364 
	$upd©e_ãxt
(*
buf
, 
size_t
 
°¨t
, size_à
íd
, *
_d©a
)

366 
£¨ch_d©a
 *
d©a
 = 
_d©a
;

367 
jump_key
 *
pos
;

368 
k
 = 0;

370 
	`li°_f‹_óch_íåy
(
pos
, 
d©a
->
hód
, 
íåõs
) {

371 i‡(
pos
->
off£t
 >
°¨t
 &&Öos->off£à< 
íd
) {

372 
hódî
[4];

374 i‡(
k
 < 
JUMP_NB
) {

375 
key
 = '0' + (
pos
->
ödex
 % 
JUMP_NB
) + 1;

377 
	`•rötf
(
hódî
, "(%c)", 
key
);

378 
d©a
->
keys
[
k
] = 
key
;

379 
d©a
->
èrgës
[
k
] = 
pos
->
èrgë
;

380 
k
++;

382 
	`•rötf
(
hódî
, " ");

385 
	`mem˝y
(
buf
 + 
pos
->
off£t
, 
hódî
, (header) - 1);

388 
d©a
->
keys
[
k
] = 0;

389 
	}
}

391 
	$£¨ch_c⁄f
()

393 
symbﬁ
 **
sym_¨r
;

394 
g°r
 
ªs
;

395 
g°r
 
tôÀ
;

396 *
dülog_öput
;

397 
dªs
, 
vs¸ﬁl
 = 0, 
hs¸ﬁl
 = 0;

398 
boﬁ
 
agaö
;

399 
g°r
 
°ãxt
;

400 
subtôÀ_∑π
 
°∑π
;

402 
tôÀ
 = 
	`°r_√w
();

403 
	`°r_¥ötf
–&
tôÀ
, "Enter (sub)string orÑegexpÅo search for "

404 "(wôh o∏wôhouà\"%s\")", 
CONFIG_
);

406 
agaö
:

407 
	`dülog_˛ór
();

408 
dªs
 = 
	`dülog_öputbox
("Search Configuration Parameter",

409 
	`°r_gë
(&
tôÀ
),

411 
dªs
) {

415 
	`show_hñ±ext
("Sórch C⁄figuøti⁄", 
£¨ch_hñp
);

416 
agaö
;

418 
	`°r_‰ì
(&
tôÀ
);

423 
dülog_öput
 = 
dülog_öput_ªsu…
;

424 i‡(
	`°∫ˇ£cmp
(
dülog_öput_ªsu…
, 
CONFIG_
, 
	`°æí
(CONFIG_)) == 0)

425 
dülog_öput
 +
	`°æí
(
CONFIG_
);

427 
°ãxt
 = 
	`°r_√w
();

428 
	`°r_¥ötf
(&
°ãxt
, "Sórch (%s)", 
dülog_öput_ªsu…
);

429 
°∑π
.
ãxt
 = 
	`°r_gë
(&
°ãxt
);

430 
	`li°_add_èû
(&
°∑π
.
íåõs
, &
åaû
);

432 
sym_¨r
 = 
	`sym_ª_£¨ch
(
dülog_öput
);

434 
	`LIST_HEAD
(
hód
);

435 
míu
 *
èrgës
[
JUMP_NB
];

436 
keys
[
JUMP_NB
 + 1], 
i
;

437 
£¨ch_d©a
 
d©a
 = {

438 .
hód
 = &head,

439 .
èrgës
 =Åargets,

440 .
keys
 = keys,

442 
jump_key
 *
pos
, *
tmp
;

444 
ªs
 = 
	`gë_ªœti⁄s_°r
(
sym_¨r
, &
hód
);

445 
	`£t_subtôÀ
();

446 
dªs
 = 
	`show_ãxtbox_ext
("Search Results", (*)

447 
	`°r_gë
(&
ªs
), 0, 0, 
keys
, &
vs¸ﬁl
,

448 &
hs¸ﬁl
, &
upd©e_ãxt
, (*)

449 &
d©a
);

450 
agaö
 = 
Ál£
;

451 
i
 = 0; i < 
JUMP_NB
 && 
keys
[i]; i++)

452 i‡(
dªs
 =
keys
[
i
]) {

453 
	`c⁄f
(
èrgës
[
i
]->
∑ª¡
,Åargets[i]);

454 
agaö
 = 
åue
;

456 
	`°r_‰ì
(&
ªs
);

457 
	`li°_f‹_óch_íåy_ß„
(
pos
, 
tmp
, &
hód
, 
íåõs
)

458 
	`‰ì
(
pos
);

459 } 
agaö
);

460 
	`‰ì
(
sym_¨r
);

461 
	`°r_‰ì
(&
tôÀ
);

462 
	`li°_dñ
(
åaû
.
¥ev
);

463 
	`°r_‰ì
(&
°ãxt
);

464 
	}
}

466 
	$buûd_c⁄f
(
míu
 *menu)

468 
symbﬁ
 *
sym
;

469 
¥›îty
 *
¥›
;

470 
míu
 *
chûd
;

471 
ty≥
, 
tmp
, 
doöt
 = 2;

472 
åi°©e
 
vÆ
;

473 
ch
;

474 
boﬁ
 
visibÀ
;

480 
visibÀ
 = 
	`míu_is_visibÀ
(
míu
);

481 i‡(
show_Æl_›ti⁄s
 && !
	`míu_has_¥om±
(
míu
))

483 i‡(!
show_Æl_›ti⁄s
 && !
visibÀ
)

486 
sym
 = 
míu
->sym;

487 
¥›
 = 
míu
->
¥om±
;

488 i‡(!
sym
) {

489 i‡(
¥›
 && 
míu
 !
cuºít_míu
) {

490 c⁄° *
¥om±
 = 
	`míu_gë_¥om±
(
míu
);

491 
¥›
->
ty≥
) {

492 
P_MENU
:

493 
chûd_cou¡
++;

494 i‡(
sögÀ_míu_mode
) {

495 
	`ôem_make
("%s%*c%s",

496 
míu
->
d©a
 ? "-->" : "++>",

497 
ödít
 + 1, ' ', 
¥om±
);

499 
	`ôem_make
(" %*c%s %s",

500 
ödít
 + 1, ' ', 
¥om±
,

501 
	`míu_is_em±y
(
míu
) ? "----" : "--->");

502 
	`ôem_£t_èg
('m');

503 
	`ôem_£t_d©a
(
míu
);

504 i‡(
sögÀ_míu_mode
 && 
míu
->
d©a
)

505 
c⁄f_chûds
;

507 
P_COMMENT
:

508 i‡(
¥om±
) {

509 
chûd_cou¡
++;

510 
	`ôem_make
(" %*c*** %†***", 
ödít
 + 1, ' ', 
¥om±
);

511 
	`ôem_£t_èg
(':');

512 
	`ôem_£t_d©a
(
míu
);

516 i‡(
¥om±
) {

517 
chûd_cou¡
++;

518 
	`ôem_make
("---%*c%s", 
ödít
 + 1, ' ', 
¥om±
);

519 
	`ôem_£t_èg
(':');

520 
	`ôem_£t_d©a
(
míu
);

524 
doöt
 = 0;

525 
c⁄f_chûds
;

528 
ty≥
 = 
	`sym_gë_ty≥
(
sym
);

529 i‡(
	`sym_is_choi˚
(
sym
)) {

530 
symbﬁ
 *
def_sym
 = 
	`sym_gë_choi˚_vÆue
(
sym
);

531 
míu
 *
def_míu
 = 
NULL
;

533 
chûd_cou¡
++;

534 
chûd
 = 
míu
->
li°
; chûd; chûd = chûd->
√xt
) {

535 i‡(
	`míu_is_visibÀ
(
chûd
Ë&& chûd->
sym
 =
def_sym
)

536 
def_míu
 = 
chûd
;

539 
vÆ
 = 
	`sym_gë_åi°©e_vÆue
(
sym
);

540 i‡(
	`sym_is_ch™góbÀ
(
sym
)) {

541 
ty≥
) {

542 
S_BOOLEAN
:

543 
	`ôem_make
("[%c]", 
vÆ
 =
no
 ? ' ' : '*');

545 
S_TRISTATE
:

546 
vÆ
) {

547 
yes
: 
ch
 = '*'; ;

548 
mod
: 
ch
 = 'M'; ;

549 : 
ch
 = ' '; ;

551 
	`ôem_make
("<%c>", 
ch
);

554 
	`ôem_£t_èg
('t');

555 
	`ôem_£t_d©a
(
míu
);

557 
	`ôem_make
(" ");

558 
	`ôem_£t_èg
(
def_míu
 ? 't' : ':');

559 
	`ôem_£t_d©a
(
míu
);

562 
	`ôem_add_°r
("%*c%s", 
ödít
 + 1, ' ', 
	`míu_gë_¥om±
(
míu
));

563 i‡(
vÆ
 =
yes
) {

564 i‡(
def_míu
) {

565 
	`ôem_add_°r
(" (%s)", 
	`míu_gë_¥om±
(
def_míu
));

566 
	`ôem_add_°r
(" --->");

567 i‡(
def_míu
->
li°
) {

568 
ödít
 += 2;

569 
	`buûd_c⁄f
(
def_míu
);

570 
ödít
 -= 2;

576 i‡(
míu
 =
cuºít_míu
) {

577 
	`ôem_make
("---%*c%s", 
ödít
 + 1, ' ', 
	`míu_gë_¥om±
(
míu
));

578 
	`ôem_£t_èg
(':');

579 
	`ôem_£t_d©a
(
míu
);

580 
c⁄f_chûds
;

582 
chûd_cou¡
++;

583 
vÆ
 = 
	`sym_gë_åi°©e_vÆue
(
sym
);

584 i‡(
	`sym_is_choi˚_vÆue
(
sym
Ë&& 
vÆ
 =
yes
) {

585 
	`ôem_make
(" ");

586 
	`ôem_£t_èg
(':');

587 
	`ôem_£t_d©a
(
míu
);

589 
ty≥
) {

590 
S_BOOLEAN
:

591 i‡(
	`sym_is_ch™góbÀ
(
sym
))

592 
	`ôem_make
("[%c]", 
vÆ
 =
no
 ? ' ' : '*');

594 
	`ôem_make
("-%c-", 
vÆ
 =
no
 ? ' ' : '*');

595 
	`ôem_£t_èg
('t');

596 
	`ôem_£t_d©a
(
míu
);

598 
S_TRISTATE
:

599 
vÆ
) {

600 
yes
: 
ch
 = '*'; ;

601 
mod
: 
ch
 = 'M'; ;

602 : 
ch
 = ' '; ;

604 i‡(
	`sym_is_ch™góbÀ
(
sym
)) {

605 i‡(
sym
->
ªv_dï
.
åi
 =
mod
)

606 
	`ôem_make
("{%c}", 
ch
);

608 
	`ôem_make
("<%c>", 
ch
);

610 
	`ôem_make
("-%c-", 
ch
);

611 
	`ôem_£t_èg
('t');

612 
	`ôem_£t_d©a
(
míu
);

615 
tmp
 = 2 + 
	`°æí
(
	`sym_gë_°rög_vÆue
(
sym
));

616 
	`ôem_make
("(%s)", 
	`sym_gë_°rög_vÆue
(
sym
));

617 
tmp
 = 
ödít
 -Åmp + 4;

618 i‡(
tmp
 < 0)

619 
tmp
 = 0;

620 
	`ôem_add_°r
("%*c%s%s", 
tmp
, ' ', 
	`míu_gë_¥om±
(
míu
),

621 (
	`sym_has_vÆue
(
sym
Ë|| !
	`sym_is_ch™góbÀ
(sym)) ?

623 
	`ôem_£t_èg
('s');

624 
	`ôem_£t_d©a
(
míu
);

625 
c⁄f_chûds
;

628 
	`ôem_add_°r
("%*c%s%s", 
ödít
 + 1, ' ', 
	`míu_gë_¥om±
(
míu
),

629 (
	`sym_has_vÆue
(
sym
Ë|| !
	`sym_is_ch™góbÀ
(sym)) ?

631 i‡(
míu
->
¥om±
->
ty≥
 =
P_MENU
) {

632 
	`ôem_add_°r
(" %s", 
	`míu_is_em±y
(
míu
) ? "----" : "--->");

637 
c⁄f_chûds
:

638 
ödít
 +
doöt
;

639 
chûd
 = 
míu
->
li°
; chûd; chûd = chûd->
√xt
)

640 
	`buûd_c⁄f
(
chûd
);

641 
ödít
 -
doöt
;

642 
	}
}

644 
	$c⁄f
(
míu
 *míu, míu *
a˘ive_míu
)

646 
míu
 *
submíu
;

647 c⁄° *
¥om±
 = 
	`míu_gë_¥om±
(
míu
);

648 
subtôÀ_∑π
 
°∑π
;

649 
symbﬁ
 *
sym
;

650 
ªs
;

651 
s_s¸ﬁl
 = 0;

653 i‡(
míu
 !&
roŸmíu
)

654 
°∑π
.
ãxt
 = 
	`míu_gë_¥om±
(
míu
);

656 
°∑π
.
ãxt
 = 
NULL
;

657 
	`li°_add_èû
(&
°∑π
.
íåõs
, &
åaû
);

660 
	`ôem_ª£t
();

661 
cuºít_míu
 = 
míu
;

662 
	`buûd_c⁄f
(
míu
);

663 i‡(!
chûd_cou¡
)

665 
	`£t_subtôÀ
();

666 
	`dülog_˛ór
();

667 
ªs
 = 
	`dülog_míu
(
¥om±
 ?Örompt : "Main Menu",

668 
míu_ö°ru˘i⁄s
,

669 
a˘ive_míu
, &
s_s¸ﬁl
);

670 i‡(
ªs
 =1 ||Ñe†=
KEY_ESC
 ||Ñe†=-
ERRDISPLAYTOOSMALL
)

672 i‡(
	`ôem_cou¡
() != 0) {

673 i‡(!
	`ôem_a˘iv©e_£À˘ed
())

675 i‡(!
	`ôem_èg
())

678 
submíu
 = 
	`ôem_d©a
();

679 
a˘ive_míu
 = 
	`ôem_d©a
();

680 i‡(
submíu
)

681 
sym
 = 
submíu
->sym;

683 
sym
 = 
NULL
;

685 
ªs
) {

687 
	`ôem_èg
()) {

689 i‡(
sögÀ_míu_mode
)

690 
submíu
->
d©a
 = (*) () !submenu->data;

692 
	`c⁄f
(
submíu
, 
NULL
);

695 i‡(
	`sym_is_choi˚
(
sym
Ë&& 
	`sym_gë_åi°©e_vÆue
(symË=
yes
)

696 
	`c⁄f_choi˚
(
submíu
);

697 i‡(
submíu
->
¥om±
->
ty≥
 =
P_MENU
)

698 
	`c⁄f
(
submíu
, 
NULL
);

701 
	`c⁄f_°rög
(
submíu
);

706 i‡(
sym
)

707 
	`show_hñp
(
submíu
);

709 
	`ª£t_subtôÀ
();

710 
	`show_hñ±ext
("README", 
mc⁄f_ªadme
);

714 
	`ª£t_subtôÀ
();

715 
	`c⁄f_ßve
();

718 
	`ª£t_subtôÀ
();

719 
	`c⁄f_lﬂd
();

722 i‡(
	`ôem_is_èg
('t')) {

723 i‡(
	`sym_£t_åi°©e_vÆue
(
sym
, 
yes
))

725 i‡(
	`sym_£t_åi°©e_vÆue
(
sym
, 
mod
))

726 
	`show_ãxtbox
(
NULL
, 
£tmod_ãxt
, 6, 74);

730 i‡(
	`ôem_is_èg
('t'))

731 
	`sym_£t_åi°©e_vÆue
(
sym
, 
no
);

734 i‡(
	`ôem_is_èg
('t'))

735 
	`sym_£t_åi°©e_vÆue
(
sym
, 
mod
);

738 i‡(
	`ôem_is_èg
('t'))

739 
	`sym_toggÀ_åi°©e_vÆue
(
sym
);

740 i‡(
	`ôem_is_èg
('m'))

741 
	`c⁄f
(
submíu
, 
NULL
);

744 
	`£¨ch_c⁄f
();

747 
show_Æl_›ti⁄s
 = !show_all_options;

752 
	`li°_dñ
(
åaû
.
¥ev
);

753 
	}
}

755 
	$show_ãxtbox_ext
(c⁄° *
tôÀ
, *
ãxt
, 
r
, 
c
, 

756 *
keys
, *
vs¸ﬁl
, *
hs¸ﬁl
, 
upd©e_ãxt_‚


757 
upd©e_ãxt
, *
d©a
)

759 
	`dülog_˛ór
();

760  
	`dülog_ãxtbox
(
tôÀ
, 
ãxt
, 
r
, 
c
, 
keys
, 
vs¸ﬁl
, 
hs¸ﬁl
,

761 
upd©e_ãxt
, 
d©a
);

762 
	}
}

764 
	$show_ãxtbox
(c⁄° *
tôÀ
, c⁄° *
ãxt
, 
r
, 
c
)

766 
	`show_ãxtbox_ext
(
tôÀ
, (*Ë
ãxt
, 
r
, 
c
, ([]Ë{0}, 
NULL
, NULL,

767 
NULL
, NULL);

768 
	}
}

770 
	$show_hñ±ext
(c⁄° *
tôÀ
, c⁄° *
ãxt
)

772 
	`show_ãxtbox
(
tôÀ
, 
ãxt
, 0, 0);

773 
	}
}

775 
	$c⁄f_mesßge_ˇŒback
(c⁄° *
s
)

777 i‡(
ßve_™d_exô
) {

778 i‡(!
sûít
)

779 
	`¥ötf
("%s", 
s
);

781 
	`show_ãxtbox
(
NULL
, 
s
, 6, 60);

783 
	}
}

785 
	$show_hñp
(
míu
 *menu)

787 
g°r
 
hñp
 = 
	`°r_√w
();

789 
hñp
.
max_width
 = 
	`gëmaxx
(
°ds¸
) - 10;

790 
	`míu_gë_ext_hñp
(
míu
, &
hñp
);

792 
	`show_hñ±ext
(
	`míu_gë_¥om±
(
míu
), 
	`°r_gë
(&
hñp
));

793 
	`°r_‰ì
(&
hñp
);

794 
	}
}

796 
	$c⁄f_choi˚
(
míu
 *menu)

798 c⁄° *
¥om±
 = 
	`míu_gë_¥om±
(
míu
);

799 
míu
 *
chûd
;

800 
symbﬁ
 *
a˘ive
;

802 
a˘ive
 = 
	`sym_gë_choi˚_vÆue
(
míu
->
sym
);

804 
ªs
;

805 
£À˘ed
;

806 
	`ôem_ª£t
();

808 
cuºít_míu
 = 
míu
;

809 
chûd
 = 
míu
->
li°
; chûd; chûd = chûd->
√xt
) {

810 i‡(!
	`míu_is_visibÀ
(
chûd
))

812 i‡(
chûd
->
sym
)

813 
	`ôem_make
("%s", 
	`míu_gë_¥om±
(
chûd
));

815 
	`ôem_make
("*** %†***", 
	`míu_gë_¥om±
(
chûd
));

816 
	`ôem_£t_èg
(':');

818 
	`ôem_£t_d©a
(
chûd
);

819 i‡(
chûd
->
sym
 =
a˘ive
)

820 
	`ôem_£t_£À˘ed
(1);

821 i‡(
chûd
->
sym
 =
	`sym_gë_choi˚_vÆue
(
míu
->sym))

822 
	`ôem_£t_èg
('X');

824 
	`dülog_˛ór
();

825 
ªs
 = 
	`dülog_checkli°
(
¥om±
 ?Örompt : "Main Menu",

826 
ødiﬁi°_ö°ru˘i⁄s
,

827 
MENUBOX_HEIGTH_MIN
,

828 
MENUBOX_WIDTH_MIN
,

829 
CHECKLIST_HEIGTH_MIN
);

830 
£À˘ed
 = 
	`ôem_a˘iv©e_£À˘ed
();

831 
ªs
) {

833 i‡(
£À˘ed
) {

834 
chûd
 = 
	`ôem_d©a
();

835 i‡(!
chûd
->
sym
)

838 
	`sym_£t_åi°©e_vÆue
(
chûd
->
sym
, 
yes
);

842 i‡(
£À˘ed
) {

843 
chûd
 = 
	`ôem_d©a
();

844 
	`show_hñp
(
chûd
);

845 
a˘ive
 = 
chûd
->
sym
;

847 
	`show_hñp
(
míu
);

849 
KEY_ESC
:

851 -
ERRDISPLAYTOOSMALL
:

855 
	}
}

857 
	$c⁄f_°rög
(
míu
 *menu)

859 c⁄° *
¥om±
 = 
	`míu_gë_¥om±
(
míu
);

862 
ªs
;

863 c⁄° *
hódög
;

865 
	`sym_gë_ty≥
(
míu
->
sym
)) {

866 
S_INT
:

867 
hódög
 = 
öputbox_ö°ru˘i⁄s_öt
;

869 
S_HEX
:

870 
hódög
 = 
öputbox_ö°ru˘i⁄s_hex
;

872 
S_STRING
:

873 
hódög
 = 
öputbox_ö°ru˘i⁄s_°rög
;

876 
hódög
 = "Internal mconfÉrror!";

878 
	`dülog_˛ór
();

879 
ªs
 = 
	`dülog_öputbox
(
¥om±
 ?Örompt : "Main Menu",

880 
hódög
, 10, 75,

881 
	`sym_gë_°rög_vÆue
(
míu
->
sym
));

882 
ªs
) {

884 i‡(
	`sym_£t_°rög_vÆue
(
míu
->
sym
, 
dülog_öput_ªsu…
))

886 
	`show_ãxtbox
(
NULL
, "You have madeán invalidÉntry.", 5, 43);

889 
	`show_hñp
(
míu
);

891 
KEY_ESC
:

895 
	}
}

897 
	$c⁄f_lﬂd
()

901 
ªs
;

902 
	`dülog_˛ór
();

903 
ªs
 = 
	`dülog_öputbox
(
NULL
, 
lﬂd_c⁄fig_ãxt
,

904 11, 55, 
fûíame
);

905 
ªs
) {

907 i‡(!
dülog_öput_ªsu…
[0])

909 i‡(!
	`c⁄f_ªad
(
dülog_öput_ªsu…
)) {

910 
	`£t_c⁄fig_fûíame
(
dülog_öput_ªsu…
);

911 
	`sym_£t_ch™ge_cou¡
(1);

914 
	`show_ãxtbox
(
NULL
, "File doesÇotÉxist!", 5, 38);

917 
	`show_hñ±ext
("Lﬂd A…î«ã C⁄figuøti⁄", 
lﬂd_c⁄fig_hñp
);

919 
KEY_ESC
:

923 
	}
}

925 
	$c⁄f_ßve
()

928 
ªs
;

929 
	`dülog_˛ór
();

930 
ªs
 = 
	`dülog_öputbox
(
NULL
, 
ßve_c⁄fig_ãxt
,

931 11, 55, 
fûíame
);

932 
ªs
) {

934 i‡(!
dülog_öput_ªsu…
[0])

936 i‡(!
	`c⁄f_wrôe
(
dülog_öput_ªsu…
)) {

937 
	`£t_c⁄fig_fûíame
(
dülog_öput_ªsu…
);

940 
	`show_ãxtbox
(
NULL
, "Can't create file!", 5, 60);

943 
	`show_hñ±ext
("SavêA…î«ã C⁄figuøti⁄", 
ßve_c⁄fig_hñp
);

945 
KEY_ESC
:

949 
	}
}

951 
	$h™dÀ_exô
()

953 
ªs
;

955 
ßve_™d_exô
 = 1;

956 
	`ª£t_subtôÀ
();

957 
	`dülog_˛ór
();

958 i‡(
	`c⁄f_gë_ch™ged
())

959 
ªs
 = 
	`dülog_ye¢o
(
NULL
,

964 
ªs
 = -1;

966 
	`íd_dülog
(
ßved_x
, 
ßved_y
);

968 
ªs
) {

970 i‡(
	`c⁄f_wrôe
(
fûíame
)) {

971 
	`Ârötf
(
°dîr
, "\n\n"

977 
	`c⁄f_wrôe_autoc⁄f
(0);

980 i‡(!
sûít
)

981 
	`¥ötf
("\n\n"

985 
ªs
 = 0;

988 i‡(!
sûít
)

989 
	`Ârötf
(
°dîr
, "\n\n"

992 i‡(
ªs
 !
KEY_ESC
)

993 
ªs
 = 0;

996  
ªs
;

997 
	}
}

999 
	$sig_h™dÀr
(
signo
)

1001 
	`exô
(
	`h™dÀ_exô
());

1002 
	}
}

1004 
	$maö
(
ac
, **
av
)

1006 *
mode
;

1007 
ªs
;

1009 
	`sig«l
(
SIGINT
, 
sig_h™dÀr
);

1011 i‡(
ac
 > 1 && 
	`°rcmp
(
av
[1], "-s") == 0) {

1012 
sûít
 = 1;

1014 
	`c⁄f_£t_mesßge_ˇŒback
(
NULL
);

1015 
av
++;

1017 
	`c⁄f_∑r£
(
av
[1]);

1018 
	`c⁄f_ªad
(
NULL
);

1020 
mode
 = 
	`gëív
("MENUCONFIG_MODE");

1021 i‡(
mode
) {

1022 i‡(!
	`°rˇ£cmp
(
mode
, "single_menu"))

1023 
sögÀ_míu_mode
 = 1;

1026 i‡(
	`öô_dülog
(
NULL
)) {

1027 
	`Ârötf
(
°dîr
, "Your display isÅoo smallÅoÑun Menuconfig!\n");

1028 
	`Ârötf
(
°dîr
, "It must beátÜeast 19Üines by 80 columns.\n");

1032 
	`£t_c⁄fig_fûíame
(
	`c⁄f_gë_c⁄fig«me
());

1033 
	`c⁄f_£t_mesßge_ˇŒback
(
c⁄f_mesßge_ˇŒback
);

1035 
	`c⁄f
(&
roŸmíu
, 
NULL
);

1036 
ªs
 = 
	`h™dÀ_exô
();

1037 } 
ªs
 =
KEY_ESC
);

1039  
ªs
;

1040 
	}
}

	@nemu/tools/kconfig/menu.c

6 
	~<˘y≥.h
>

7 
	~<°d¨g.h
>

8 
	~<°dlib.h
>

9 
	~<°rög.h
>

11 
	~"lkc.h
"

13 c⁄° 
	gnohñp_ãxt
[] = "There isÇo helpávailable forÅhis option.";

15 
míu
 
	groŸmíu
;

16 
míu
 **
	gœ°_íåy_±r
;

18 
fûe
 *
	gfûe_li°
;

19 
fûe
 *
	gcuºít_fûe
;

21 
	$míu_w¨n
(
míu
 *míu, c⁄° *
fmt
, ...)

23 
va_li°
 
≠
;

24 
	`va_°¨t
(
≠
, 
fmt
);

25 
	`Ârötf
(
°dîr
, "%s:%d:w¨nög: ", 
míu
->
fûe
->
«me
, míu->
löío
);

26 
	`vÂrötf
(
°dîr
, 
fmt
, 
≠
);

27 
	`Ârötf
(
°dîr
, "\n");

28 
	`va_íd
(
≠
);

29 
	}
}

31 
	$¥›_w¨n
(
¥›îty
 *
¥›
, c⁄° *
fmt
, ...)

33 
va_li°
 
≠
;

34 
	`va_°¨t
(
≠
, 
fmt
);

35 
	`Ârötf
(
°dîr
, "%s:%d:w¨nög: ", 
¥›
->
fûe
->
«me
,Ör›->
löío
);

36 
	`vÂrötf
(
°dîr
, 
fmt
, 
≠
);

37 
	`Ârötf
(
°dîr
, "\n");

38 
	`va_íd
(
≠
);

39 
	}
}

41 
	$_míu_öô
()

43 
cuºít_íåy
 = 
cuºít_míu
 = &
roŸmíu
;

44 
œ°_íåy_±r
 = &
roŸmíu
.
li°
;

45 
	}
}

47 
	$míu_add_íåy
(
symbﬁ
 *
sym
)

49 
míu
 *menu;

51 
míu
 = 
	`xmÆloc
((*menu));

52 
	`mem£t
(
míu
, 0, (*menu));

53 
míu
->
sym
 = sym;

54 
míu
->
∑ª¡
 = 
cuºít_míu
;

55 
míu
->
fûe
 = 
cuºít_fûe
;

56 
míu
->
löío
 = 
	`zc⁄f_löío
();

58 *
œ°_íåy_±r
 = 
míu
;

59 
œ°_íåy_±r
 = &
míu
->
√xt
;

60 
cuºít_íåy
 = 
míu
;

61 i‡(
sym
)

62 
	`míu_add_symbﬁ
(
P_SYMBOL
, 
sym
, 
NULL
);

63 
	}
}

65 
míu
 *
	$míu_add_míu
()

67 
œ°_íåy_±r
 = &
cuºít_íåy
->
li°
;

68 
cuºít_míu
 = 
cuºít_íåy
;

69  
cuºít_míu
;

70 
	}
}

72 
	$míu_íd_míu
()

74 
œ°_íåy_±r
 = &
cuºít_míu
->
√xt
;

75 
cuºít_míu
 = cuºít_míu->
∑ª¡
;

76 
	}
}

82 
ex¥
 *
	$ªwrôe_m
(
ex¥
 *
e
)

84 i‡(!
e
)

85  
e
;

87 
e
->
ty≥
) {

88 
E_NOT
:

89 
e
->
À·
.
ex¥
 = 
	`ªwrôe_m
(e->left.expr);

91 
E_OR
:

92 
E_AND
:

93 
e
->
À·
.
ex¥
 = 
	`ªwrôe_m
(e->left.expr);

94 
e
->
right
.
ex¥
 = 
	`ªwrôe_m
(e->right.expr);

96 
E_SYMBOL
:

98 i‡(
e
->
À·
.
sym
 =&
symbﬁ_mod
)

99  
	`ex¥_Æloc_™d
(
e
, 
	`ex¥_Æloc_symbﬁ
(
moduÀs_sym
));

104  
e
;

105 
	}
}

107 
	$míu_add_dï
(
ex¥
 *
dï
)

109 
cuºít_íåy
->
dï
 = 
	`ex¥_Æloc_™d
(current_entry->dep, dep);

110 
	}
}

112 
	$míu_£t_ty≥
(
ty≥
)

114 
symbﬁ
 *
sym
 = 
cuºít_íåy
->sym;

116 i‡(
sym
->
ty≥
 ==Åype)

118 i‡(
sym
->
ty≥
 =
S_UNKNOWN
) {

119 
sym
->
ty≥
 =Åype;

122 
	`míu_w¨n
(
cuºít_íåy
,

124 
sym
->
«me
 ? sym->name : "<choice>",

125 
	`sym_ty≥_«me
(
sym
->
ty≥
), sym_type_name(type));

126 
	}
}

128 
¥›îty
 *
	$míu_add_¥›
(
¥›_ty≥
 
ty≥
, 
ex¥
 *expr,

129 
ex¥
 *
dï
)

131 
¥›îty
 *
¥›
;

133 
¥›
 = 
	`xmÆloc
((*prop));

134 
	`mem£t
(
¥›
, 0, (*prop));

135 
¥›
->
ty≥
 =Åype;

136 
¥›
->
fûe
 = 
cuºít_fûe
;

137 
¥›
->
löío
 = 
	`zc⁄f_löío
();

138 
¥›
->
míu
 = 
cuºít_íåy
;

139 
¥›
->
ex¥
 =Éxpr;

140 
¥›
->
visibÀ
.
ex¥
 = 
dï
;

143 i‡(
cuºít_íåy
->
sym
) {

144 
¥›îty
 **
¥›p
;

146 
¥›p
 = &
cuºít_íåy
->
sym
->
¥›
;

147 *
¥›p
;

148 
¥›p
 = &(*¥›p)->
√xt
)

150 *
¥›p
 = 
¥›
;

153  
¥›
;

154 
	}
}

156 
¥›îty
 *
	$míu_add_¥om±
(
¥›_ty≥
 
ty≥
, *
¥om±
,

157 
ex¥
 *
dï
)

159 
¥›îty
 *
¥›
 = 
	`míu_add_¥›
(
ty≥
, 
NULL
, 
dï
);

161 i‡(
	`is•a˚
(*
¥om±
)) {

162 
	`¥›_w¨n
(
¥›
, "leading whitespace ignored");

163 
	`is•a˚
(*
¥om±
))

164 
¥om±
++;

166 i‡(
cuºít_íåy
->
¥om±
)

167 
	`¥›_w¨n
(
¥›
, "promptÑedefined");

170 i‡(
ty≥
 =
P_PROMPT
) {

171 
míu
 *míu = 
cuºít_íåy
;

173 (
míu
 = míu->
∑ª¡
Ë!
NULL
) {

174 
ex¥
 *
dup_ex¥
;

176 i‡(!
míu
->
visibûôy
)

185 
dup_ex¥
 = 
	`ex¥_c›y
(
míu
->
visibûôy
);

187 
¥›
->
visibÀ
.
ex¥
 = 
	`ex¥_Æloc_™d
(prop->visible.expr,

188 
dup_ex¥
);

192 
cuºít_íåy
->
¥om±
 = 
¥›
;

193 
¥›
->
ãxt
 = 
¥om±
;

195  
¥›
;

196 
	}
}

198 
	$míu_add_visibûôy
(
ex¥
 *expr)

200 
cuºít_íåy
->
visibûôy
 = 
	`ex¥_Æloc_™d
(current_entry->visibility,

201 
ex¥
);

202 
	}
}

204 
	$míu_add_ex¥
(
¥›_ty≥
 
ty≥
, 
ex¥
 *ex¥, ex¥ *
dï
)

206 
	`míu_add_¥›
(
ty≥
, 
ex¥
, 
dï
);

207 
	}
}

209 
	$míu_add_symbﬁ
(
¥›_ty≥
 
ty≥
, 
symbﬁ
 *
sym
, 
ex¥
 *
dï
)

211 
	`míu_add_¥›
(
ty≥
, 
	`ex¥_Æloc_symbﬁ
(
sym
), 
dï
);

212 
	}
}

214 
	$míu_add_›ti⁄_moduÀs
()

216 i‡(
moduÀs_sym
)

217 
	`zc⁄f_îr‹
("symbol '%s'Ñedefines option 'modules'álready defined by symbol '%s'",

218 
cuºít_íåy
->
sym
->
«me
, 
moduÀs_sym
->name);

219 
moduÀs_sym
 = 
cuºít_íåy
->
sym
;

220 
	}
}

222 
	$míu_add_›ti⁄_defc⁄fig_li°
()

224 i‡(!
sym_defc⁄fig_li°
)

225 
sym_defc⁄fig_li°
 = 
cuºít_íåy
->
sym
;

226 i‡(
sym_defc⁄fig_li°
 !
cuºít_íåy
->
sym
)

227 
	`zc⁄f_îr‹
("tryingÅoÑedefine defconfig symbol");

228 
sym_defc⁄fig_li°
->
Êags
 |
SYMBOL_NO_WRITE
;

229 
	}
}

231 
	$míu_add_›ti⁄_Æ oc⁄fig_y
()

233 
cuºít_íåy
->
sym
->
Êags
 |
SYMBOL_ALLNOCONFIG_Y
;

234 
	}
}

236 
	$míu_vÆid©e_numbî
(
symbﬁ
 *
sym
, symbﬁ *
sym2
)

238  
sym2
->
ty≥
 =
S_INT
 || sym2->ty≥ =
S_HEX
 ||

239 (
sym2
->
ty≥
 =
S_UNKNOWN
 && 
	`sym_°rög_vÆid
(
sym
, sym2->
«me
));

240 
	}
}

242 
	$sym_check_¥›
(
symbﬁ
 *
sym
)

244 
¥›îty
 *
¥›
;

245 
symbﬁ
 *
sym2
;

246 *
u£
;

248 
¥›
 = 
sym
->¥›;Ör›;Ör› =Ör›->
√xt
) {

249 
¥›
->
ty≥
) {

250 
P_DEFAULT
:

251 i‡((
sym
->
ty≥
 =
S_STRING
 || sym->ty≥ =
S_INT
 || sym->ty≥ =
S_HEX
) &&

252 
¥›
->
ex¥
->
ty≥
 !
E_SYMBOL
)

253 
	`¥›_w¨n
(
¥›
,

255 " mu° bê®sögÀ symbﬁ", 
sym
->
«me
);

256 i‡(
¥›
->
ex¥
->
ty≥
 !
E_SYMBOL
)

258 
sym2
 = 
	`¥›_gë_symbﬁ
(
¥›
);

259 i‡(
sym
->
ty≥
 =
S_HEX
 || sym->ty≥ =
S_INT
) {

260 i‡(!
	`míu_vÆid©e_numbî
(
sym
, 
sym2
))

261 
	`¥›_w¨n
(
¥›
,

263 
sym
->
«me
);

265 i‡(
	`sym_is_choi˚
(
sym
)) {

266 
¥›îty
 *
choi˚_¥›
 =

267 
	`sym_gë_choi˚_¥›
(
sym2
);

269 i‡(!
choi˚_¥›
 ||

270 
	`¥›_gë_symbﬁ
(
choi˚_¥›
Ë!
sym
)

271 
	`¥›_w¨n
(
¥›
,

273 
sym2
->
«me
);

276 
P_SELECT
:

277 
P_IMPLY
:

278 
u£
 = 
¥›
->
ty≥
 =
P_SELECT
 ? "select" : "imply";

279 
sym2
 = 
	`¥›_gë_symbﬁ
(
¥›
);

280 i‡(
sym
->
ty≥
 !
S_BOOLEAN
 && sym->ty≥ !
S_TRISTATE
)

281 
	`¥›_w¨n
(
¥›
,

283 "nŸ boﬁ o∏åi°©e", 
sym
->
«me
, 
u£
);

284 i‡(
sym2
->
ty≥
 !
S_UNKNOWN
 &&

285 
sym2
->
ty≥
 !
S_BOOLEAN
 &&

286 
sym2
->
ty≥
 !
S_TRISTATE
)

287 
	`¥›_w¨n
(
¥›
,

290 "åi°©êty≥", 
sym2
->
«me
, 
u£
);

292 
P_RANGE
:

293 i‡(
sym
->
ty≥
 !
S_INT
 && sym->ty≥ !
S_HEX
)

294 
	`¥›_w¨n
(
¥›
, "range is onlyállowed "

296 i‡(!
	`míu_vÆid©e_numbî
(
sym
, 
¥›
->
ex¥
->
À·
.sym) ||

297 !
	`míu_vÆid©e_numbî
(
sym
, 
¥›
->
ex¥
->
right
.sym))

298 
	`¥›_w¨n
(
¥›
, "range is invalid");

304 
	}
}

306 
	$míu_föÆize
(
míu
 *
∑ª¡
)

308 
míu
 *míu, *
œ°_míu
;

309 
symbﬁ
 *
sym
;

310 
¥›îty
 *
¥›
;

311 
ex¥
 *
∑ª¡dï
, *
ba£dï
, *
dï
, *
dï2
, **
ï
;

313 
sym
 = 
∑ª¡
->sym;

314 i‡(
∑ª¡
->
li°
) {

320 i‡(
sym
 && 
	`sym_is_choi˚
(sym)) {

321 i‡(
sym
->
ty≥
 =
S_UNKNOWN
) {

323 
cuºít_íåy
 = 
∑ª¡
;

324 
míu
 = 
∑ª¡
->
li°
; míu; míu = míu->
√xt
) {

325 i‡(
míu
->
sym
 && míu->sym->
ty≥
 !
S_UNKNOWN
) {

326 
	`míu_£t_ty≥
(
míu
->
sym
->
ty≥
);

332 
míu
 = 
∑ª¡
->
li°
; míu; míu = míu->
√xt
) {

333 
cuºít_íåy
 = 
míu
;

334 i‡(
míu
->
sym
 && míu->sym->
ty≥
 =
S_UNKNOWN
)

335 
	`míu_£t_ty≥
(
sym
->
ty≥
);

344 
∑ª¡dï
 = 
	`ex¥_Æloc_symbﬁ
(
sym
);

347 
∑ª¡dï
 = 
∑ª¡
->
dï
;

351 
míu
 = 
∑ª¡
->
li°
; míu; míu = míu->
√xt
) {

356 
ba£dï
 = 
	`ªwrôe_m
(
míu
->
dï
);

357 
ba£dï
 = 
	`ex¥_å™sf‹m
(basedep);

358 
ba£dï
 = 
	`ex¥_Æloc_™d
(
	`ex¥_c›y
(
∑ª¡dï
), basedep);

359 
ba£dï
 = 
	`ex¥_ñimö©e_dups
(basedep);

360 
míu
->
dï
 = 
ba£dï
;

362 i‡(
míu
->
sym
)

367 
¥›
 = 
míu
->
sym
->prop;

373 
¥›
 = 
míu
->
¥om±
;

376 ; 
¥›
;Ör› =Ör›->
√xt
) {

377 i‡(
¥›
->
míu
 != menu)

400 
dï
 = 
	`ªwrôe_m
(
¥›
->
visibÀ
.
ex¥
);

401 
dï
 = 
	`ex¥_å™sf‹m
(dep);

402 
dï
 = 
	`ex¥_Æloc_™d
(
	`ex¥_c›y
(
ba£dï
), dep);

403 
dï
 = 
	`ex¥_ñimö©e_dups
(dep);

404 i‡(
míu
->
sym
 && míu->sym->
ty≥
 !
S_TRISTATE
)

405 
dï
 = 
	`ex¥_å™s_boﬁ
(dep);

406 
¥›
->
visibÀ
.
ex¥
 = 
dï
;

412 i‡(
¥›
->
ty≥
 =
P_SELECT
) {

413 
symbﬁ
 *
es
 = 
	`¥›_gë_symbﬁ
(
¥›
);

414 
es
->
ªv_dï
.
ex¥
 = 
	`ex¥_Æloc_‹
(es->rev_dep.expr,

415 
	`ex¥_Æloc_™d
(
	`ex¥_Æloc_symbﬁ
(
míu
->
sym
), 
	`ex¥_c›y
(
dï
)));

416 } i‡(
¥›
->
ty≥
 =
P_IMPLY
) {

417 
symbﬁ
 *
es
 = 
	`¥›_gë_symbﬁ
(
¥›
);

418 
es
->
im∂õd
.
ex¥
 = 
	`ex¥_Æloc_‹
(es->implied.expr,

419 
	`ex¥_Æloc_™d
(
	`ex¥_Æloc_symbﬁ
(
míu
->
sym
), 
	`ex¥_c›y
(
dï
)));

424 i‡(
sym
 && 
	`sym_is_choi˚
(sym))

425 
	`ex¥_‰ì
(
∑ª¡dï
);

431 
míu
 = 
∑ª¡
->
li°
; míu; míu = míu->
√xt
)

432 
	`míu_föÆize
(
míu
);

433 } i‡(
sym
) {

456 
ba£dï
 = 
∑ª¡
->
¥om±
 ?Ö¨ít->¥om±->
visibÀ
.
ex¥
 : 
NULL
;

457 
ba£dï
 = 
	`ex¥_å™s_com∑ª
(ba£dï, 
E_UNEQUAL
, &
symbﬁ_no
);

458 
ba£dï
 = 
	`ex¥_ñimö©e_dups
(
	`ex¥_å™sf‹m
(basedep));

461 
œ°_míu
 = 
NULL
;

462 
míu
 = 
∑ª¡
->
√xt
; menu; menu = menu->next) {

463 
dï
 = 
míu
->
¥om±
 ? míu->¥om±->
visibÀ
.
ex¥
 : menu->dep;

464 i‡(!
	`ex¥_c⁄èös_symbﬁ
(
dï
, 
sym
))

467 i‡(
	`ex¥_dïíds_symbﬁ
(
dï
, 
sym
))

469 
√xt
;

480 
dï
 = 
	`ex¥_å™s_com∑ª
(dï, 
E_UNEQUAL
, &
symbﬁ_no
);

481 
dï
 = 
	`ex¥_ñimö©e_dups
(
	`ex¥_å™sf‹m
(dep));

482 
dï2
 = 
	`ex¥_c›y
(
ba£dï
);

483 
	`ex¥_ñimö©e_eq
(&
dï
, &
dï2
);

484 
	`ex¥_‰ì
(
dï
);

485 i‡(!
	`ex¥_is_yes
(
dï2
)) {

487 
	`ex¥_‰ì
(
dï2
);

491 
	`ex¥_‰ì
(
dï2
);

492 
√xt
:

493 
	`míu_föÆize
(
míu
);

494 
míu
->
∑ª¡
 =Öarent;

495 
œ°_míu
 = 
míu
;

497 
	`ex¥_‰ì
(
ba£dï
);

498 i‡(
œ°_míu
) {

499 
∑ª¡
->
li°
 =Ö¨ít->
√xt
;

500 
∑ª¡
->
√xt
 = 
œ°_míu
->next;

501 
œ°_míu
->
√xt
 = 
NULL
;

504 
sym
->
dú_dï
.
ex¥
 = 
	`ex¥_Æloc_‹
(sym->dú_dï.ex¥, 
∑ª¡
->
dï
);

506 
míu
 = 
∑ª¡
->
li°
; míu; míu = míu->
√xt
) {

507 i‡(
sym
 && 
	`sym_is_choi˚
(sym) &&

508 
míu
->
sym
 && !
	`sym_is_choi˚_vÆue
(menu->sym)) {

509 
cuºít_íåy
 = 
míu
;

510 
míu
->
sym
->
Êags
 |
SYMBOL_CHOICEVAL
;

511 i‡(!
míu
->
¥om±
)

512 
	`míu_w¨n
(
míu
, "choice value must haveáÖrompt");

513 
¥›
 = 
míu
->
sym
->¥›;Ör›;Ör› =Ör›->
√xt
) {

514 i‡(
¥›
->
ty≥
 =
P_DEFAULT
)

515 
	`¥›_w¨n
(
¥›
, "defaults for choice "

517 i‡(
¥›
->
míu
 == menu)

519 i‡(
¥›
->
ty≥
 =
P_PROMPT
 &&

520 
¥›
->
míu
->
∑ª¡
->
sym
 != sym)

521 
	`¥›_w¨n
(
¥›
, "choice value used outside its choice group");

529 i‡(
sym
->
ty≥
 =
S_TRISTATE
 && 
míu
->sym->type != S_TRISTATE) {

530 
ba£dï
 = 
	`ex¥_Æloc_comp
(
E_EQUAL
, 
sym
, &
symbﬁ_yes
);

531 
míu
->
dï
 = 
	`ex¥_Æloc_™d
(
ba£dï
, menu->dep);

532 
¥›
 = 
míu
->
sym
->¥›;Ör›;Ör› =Ör›->
√xt
) {

533 i‡(
¥›
->
míu
 != menu)

535 
¥›
->
visibÀ
.
ex¥
 = 
	`ex¥_Æloc_™d
(
	`ex¥_c›y
(
ba£dï
),

536 
¥›
->
visibÀ
.
ex¥
);

539 
	`míu_add_symbﬁ
(
P_CHOICE
, 
sym
, 
NULL
);

540 
¥›
 = 
	`sym_gë_choi˚_¥›
(
sym
);

541 
ï
 = &
¥›
->
ex¥
; *ï;É∞&(*ï)->
À·
.expr)

543 *
ï
 = 
	`ex¥_Æloc_⁄e
(
E_LIST
, 
NULL
);

544 (*
ï
)->
right
.
sym
 = 
míu
->sym;

575 i‡(
míu
->
li°
 && (!míu->
¥om±
 || !míu->¥om±->
ãxt
)) {

576 
œ°_míu
 = 
míu
->
li°
; ;Üa°_míu =Üa°_míu->
√xt
) {

577 
œ°_míu
->
∑ª¡
 =Öarent;

578 i‡(!
œ°_míu
->
√xt
)

581 
œ°_míu
->
√xt
 = 
míu
->next;

582 
míu
->
√xt
 = míu->
li°
;

583 
míu
->
li°
 = 
NULL
;

587 i‡(
sym
 && !(sym->
Êags
 & 
SYMBOL_WARNED
)) {

588 i‡(
sym
->
ty≥
 =
S_UNKNOWN
)

589 
	`míu_w¨n
(
∑ª¡
, "config symbol defined withoutÅype");

591 i‡(
	`sym_is_choi˚
(
sym
Ë&& !
∑ª¡
->
¥om±
)

592 
	`míu_w¨n
(
∑ª¡
, "choice must haveáÖrompt");

595 
	`sym_check_¥›
(
sym
);

596 
sym
->
Êags
 |
SYMBOL_WARNED
;

608 i‡(
sym
 && !
	`sym_is_›ti⁄Æ
(symË&& 
∑ª¡
->
¥om±
) {

609 
sym
->
ªv_dï
.
ex¥
 = 
	`ex¥_Æloc_‹
(sym->rev_dep.expr,

610 
	`ex¥_Æloc_™d
(
∑ª¡
->
¥om±
->
visibÀ
.
ex¥
,

611 
	`ex¥_Æloc_symbﬁ
(&
symbﬁ_mod
)));

613 
	}
}

615 
boﬁ
 
	$míu_has_¥om±
(
míu
 *menu)

617 i‡(!
míu
->
¥om±
)

618  
Ál£
;

619  
åue
;

620 
	}
}

627 
boﬁ
 
	$míu_is_em±y
(
míu
 *menu)

629 
míu
 *
chûd
;

631 
chûd
 = 
míu
->
li°
; chûd; chûd = chûd->
√xt
) {

632 i‡(
	`míu_is_visibÀ
(
chûd
))

633 (
Ál£
);

635 (
åue
);

636 
	}
}

638 
boﬁ
 
	$míu_is_visibÀ
(
míu
 *menu)

640 
míu
 *
chûd
;

641 
symbﬁ
 *
sym
;

642 
åi°©e
 
visibÀ
;

644 i‡(!
míu
->
¥om±
)

645  
Ál£
;

647 i‡(
míu
->
visibûôy
) {

648 i‡(
	`ex¥_ˇlc_vÆue
(
míu
->
visibûôy
Ë=
no
)

649  
Ál£
;

652 
sym
 = 
míu
->sym;

653 i‡(
sym
) {

654 
	`sym_ˇlc_vÆue
(
sym
);

655 
visibÀ
 = 
míu
->
¥om±
->visibÀ.
åi
;

657 
visibÀ
 = 
míu
->
¥om±
->visibÀ.
åi
 = 
	`ex¥_ˇlc_vÆue
(míu->¥om±->visibÀ.
ex¥
);

659 i‡(
visibÀ
 !
no
)

660  
åue
;

662 i‡(!
sym
 || 
	`sym_gë_åi°©e_vÆue
(
míu
->symË=
no
)

663  
Ál£
;

665 
chûd
 = 
míu
->
li°
; chûd; chûd = chûd->
√xt
) {

666 i‡(
	`míu_is_visibÀ
(
chûd
)) {

667 i‡(
sym
)

668 
sym
->
Êags
 |
SYMBOL_DEF_USER
;

669  
åue
;

673  
Ál£
;

674 
	}
}

676 c⁄° *
	$míu_gë_¥om±
(
míu
 *menu)

678 i‡(
míu
->
¥om±
)

679  
míu
->
¥om±
->
ãxt
;

680 i‡(
míu
->
sym
)

681  
míu
->
sym
->
«me
;

682  
NULL
;

683 
	}
}

685 
míu
 *
	$míu_gë_roŸ_míu
(
míu
 *menu)

687  &
roŸmíu
;

688 
	}
}

690 
míu
 *
	$míu_gë_∑ª¡_míu
(
míu
 *menu)

692 
¥›_ty≥
 
ty≥
;

694 ; 
míu
 !&
roŸmíu
; míu = míu->
∑ª¡
) {

695 
ty≥
 = 
míu
->
¥om±
 ? menu->prompt->type : 0;

696 i‡(
ty≥
 =
P_MENU
)

699  
míu
;

700 
	}
}

702 
boﬁ
 
	$míu_has_hñp
(
míu
 *menu)

704  
míu
->
hñp
 !
NULL
;

705 
	}
}

707 c⁄° *
	$míu_gë_hñp
(
míu
 *menu)

709 i‡(
míu
->
hñp
)

710  
míu
->
hñp
;

713 
	}
}

715 
	$gë_def_°r
(
g°r
 *
r
, 
míu
 *menu)

717 
	`°r_¥ötf
(
r
, "Definedát %s:%d\n",

718 
míu
->
fûe
->
«me
, míu->
löío
);

719 
	}
}

721 
	$gë_dï_°r
(
g°r
 *
r
, 
ex¥
 *ex¥, c⁄° *
¥efix
)

723 i‡(!
	`ex¥_is_yes
(
ex¥
)) {

724 
	`°r_≠≥nd
(
r
, 
¥efix
);

725 
	`ex¥_g°r_¥öt
(
ex¥
, 
r
);

726 
	`°r_≠≥nd
(
r
, "\n");

728 
	}
}

730 
	$gë_¥om±_°r
(
g°r
 *
r
, 
¥›îty
 *
¥›
,

731 
li°_hód
 *
hód
)

733 
i
, 
j
;

734 
míu
 *
submíu
[8], *míu, *
loˇti⁄
 = 
NULL
;

735 
jump_key
 *
jump
 = 
NULL
;

737 
	`°r_¥ötf
(
r
, " Prom±: %s\n", 
¥›
->
ãxt
);

739 
	`gë_dï_°r
(
r
, 
¥›
->
míu
->
dï
, " Depends on: ");

748 i‡(!
	`ex¥_eq
(
¥›
->
míu
->
dï
,Ör›->
visibÀ
.
ex¥
))

749 
	`gë_dï_°r
(
r
, 
¥›
->
visibÀ
.
ex¥
, " Visible if: ");

751 
míu
 = 
¥›
->míu->
∑ª¡
;

752 
i
 = 0; 
míu
 !&
roŸmíu
 && i < 8; míu = míu->
∑ª¡
) {

753 
boﬁ
 
ac˚ssibÀ
 = 
	`míu_is_visibÀ
(
míu
);

755 
submíu
[
i
++] = 
míu
;

756 i‡(
loˇti⁄
 =
NULL
 && 
ac˚ssibÀ
)

757 
loˇti⁄
 = 
míu
;

759 i‡(
hód
 && 
loˇti⁄
) {

760 
jump
 = 
	`xmÆloc
((
jump_key
));

762 i‡(
	`míu_is_visibÀ
(
¥›
->
míu
)) {

769 
jump
->
èrgë
 = 
¥›
->
míu
;

771 
jump
->
èrgë
 = 
loˇti⁄
;

773 i‡(
	`li°_em±y
(
hód
))

774 
jump
->
ödex
 = 0;

776 
jump
->
ödex
 = 
	`li°_íåy
(
hód
->
¥ev
, 
jump_key
,

777 
íåõs
)->
ödex
 + 1;

779 
	`li°_add_èû
(&
jump
->
íåõs
, 
hód
);

782 i‡(
i
 > 0) {

783 
	`°r_¥ötf
(
r
, " Location:\n");

784 
j
 = 4; --
i
 >= 0; j += 2) {

785 
míu
 = 
submíu
[
i
];

786 i‡(
jump
 && 
míu
 =
loˇti⁄
)

787 
jump
->
off£t
 = 
	`°æí
(
r
->
s
);

788 
	`°r_¥ötf
(
r
, "%*c-> %s", 
j
, ' ',

789 
	`míu_gë_¥om±
(
míu
));

790 i‡(
míu
->
sym
) {

791 
	`°r_¥ötf
(
r
, " (%†[=%s])", 
míu
->
sym
->
«me
 ?

792 
míu
->
sym
->
«me
 : "<choice>",

793 
	`sym_gë_°rög_vÆue
(
míu
->
sym
));

795 
	`°r_≠≥nd
(
r
, "\n");

798 
	}
}

800 
	$gë_symbﬁ_¥›s_°r
(
g°r
 *
r
, 
symbﬁ
 *
sym
,

801 
¥›_ty≥
 
tok
, c⁄° *
¥efix
)

803 
boﬁ
 
hô
 = 
Ál£
;

804 
¥›îty
 *
¥›
;

806 
	`f‹_Æl_¥›îtõs
(
sym
, 
¥›
, 
tok
) {

807 i‡(!
hô
) {

808 
	`°r_≠≥nd
(
r
, 
¥efix
);

809 
hô
 = 
åue
;

811 
	`°r_¥ötf
(
r
, " && ");

812 
	`ex¥_g°r_¥öt
(
¥›
->
ex¥
, 
r
);

814 i‡(
hô
)

815 
	`°r_≠≥nd
(
r
, "\n");

816 
	}
}

821 
	$gë_symbﬁ_°r
(
g°r
 *
r
, 
symbﬁ
 *
sym
,

822 
li°_hód
 *
hód
)

824 
¥›îty
 *
¥›
;

826 i‡(
sym
 && sym->
«me
) {

827 
	`°r_¥ötf
(
r
, "Symbﬁ: %†[=%s]\n", 
sym
->
«me
,

828 
	`sym_gë_°rög_vÆue
(
sym
));

829 
	`°r_¥ötf
(
r
, "Ty≥ : %s\n", 
	`sym_ty≥_«me
(
sym
->
ty≥
));

830 i‡(
sym
->
ty≥
 =
S_INT
 || sym->ty≥ =
S_HEX
) {

831 
¥›
 = 
	`sym_gë_ønge_¥›
(
sym
);

832 i‡(
¥›
) {

833 
	`°r_¥ötf
(
r
, "Range : ");

834 
	`ex¥_g°r_¥öt
(
¥›
->
ex¥
, 
r
);

835 
	`°r_≠≥nd
(
r
, "\n");

841 
	`f‹_Æl_¥›îtõs
(
sym
, 
¥›
, 
P_SYMBOL
) {

842 i‡(
¥›
->
míu
->
¥om±
) {

843 
	`gë_def_°r
(
r
, 
¥›
->
míu
);

844 
	`gë_¥om±_°r
(
r
, 
¥›
->
míu
->
¥om±
, 
hód
);

848 
	`f‹_Æl_¥›îtõs
(
sym
, 
¥›
, 
P_SYMBOL
) {

849 i‡(!
¥›
->
míu
->
¥om±
) {

850 
	`gë_def_°r
(
r
, 
¥›
->
míu
);

851 
	`gë_dï_°r
(
r
, 
¥›
->
míu
->
dï
, " Depends on: ");

855 
	`gë_symbﬁ_¥›s_°r
(
r
, 
sym
, 
P_SELECT
, "Selects: ");

856 i‡(
sym
->
ªv_dï
.
ex¥
) {

857 
	`ex¥_g°r_¥öt_ªvdï
(
sym
->
ªv_dï
.
ex¥
, 
r
, 
yes
, "Selected by [y]:\n");

858 
	`ex¥_g°r_¥öt_ªvdï
(
sym
->
ªv_dï
.
ex¥
, 
r
, 
mod
, "Selected by [m]:\n");

859 
	`ex¥_g°r_¥öt_ªvdï
(
sym
->
ªv_dï
.
ex¥
, 
r
, 
no
, "Selected by [n]:\n");

862 
	`gë_symbﬁ_¥›s_°r
(
r
, 
sym
, 
P_IMPLY
, "Implies: ");

863 i‡(
sym
->
im∂õd
.
ex¥
) {

864 
	`ex¥_g°r_¥öt_ªvdï
(
sym
->
im∂õd
.
ex¥
, 
r
, 
yes
, "Implied by [y]:\n");

865 
	`ex¥_g°r_¥öt_ªvdï
(
sym
->
im∂õd
.
ex¥
, 
r
, 
mod
, "Implied by [m]:\n");

866 
	`ex¥_g°r_¥öt_ªvdï
(
sym
->
im∂õd
.
ex¥
, 
r
, 
no
, "Implied by [n]:\n");

869 
	`°r_≠≥nd
(
r
, "\n\n");

870 
	}
}

872 
g°r
 
	$gë_ªœti⁄s_°r
(
symbﬁ
 **
sym_¨r
, 
li°_hód
 *
hód
)

874 
symbﬁ
 *
sym
;

875 
g°r
 
ªs
 = 
	`°r_√w
();

876 
i
;

878 
i
 = 0; 
sym_¨r
 && (
sym
 = sym_arr[i]); i++)

879 
	`gë_symbﬁ_°r
(&
ªs
, 
sym
, 
hód
);

880 i‡(!
i
)

881 
	`°r_≠≥nd
(&
ªs
, "No matches found.\n");

882  
ªs
;

883 
	}
}

886 
	$míu_gë_ext_hñp
(
míu
 *míu, 
g°r
 *
hñp
)

888 
symbﬁ
 *
sym
 = 
míu
->sym;

889 c⁄° *
hñp_ãxt
 = 
nohñp_ãxt
;

891 i‡(
	`míu_has_hñp
(
míu
)) {

892 i‡(
sym
->
«me
)

893 
	`°r_¥ötf
(
hñp
, "%s%s:\n\n", 
CONFIG_
, 
sym
->
«me
);

894 
hñp_ãxt
 = 
	`míu_gë_hñp
(
míu
);

896 
	`°r_¥ötf
(
hñp
, "%s\n", 
hñp_ãxt
);

897 i‡(
sym
)

898 
	`gë_symbﬁ_°r
(
hñp
, 
sym
, 
NULL
);

899 
	}
}

	@nemu/tools/kconfig/preprocess.c

5 
	~<˘y≥.h
>

6 
	~<°d¨g.h
>

7 
	~<°dboﬁ.h
>

8 
	~<°dio.h
>

9 
	~<°dlib.h
>

10 
	~<°rög.h
>

12 
	~"li°.h
"

13 
	~"lkc.h
"

15 
	#ARRAY_SIZE
(
¨r
Ë(◊ºË/ (◊º)[0]))

	)

17 *
ex∑nd_°rög_wôh_¨gs
(c⁄° *
ö
, 
¨gc
, *
¨gv
[]);

18 *
ex∑nd_°rög
(c⁄° *
ö
);

20 
__©åibuã__
((
n‹ëu∫
)Ë
	$µîr‹
(c⁄° *
f‹m©
, ...)

22 
va_li°
 
≠
;

24 
	`Ârötf
(
°dîr
, "%s:%d: ", 
cuºít_fûe
->
«me
, 
yylöío
);

25 
	`va_°¨t
(
≠
, 
f‹m©
);

26 
	`vÂrötf
(
°dîr
, 
f‹m©
, 
≠
);

27 
	`va_íd
(
≠
);

28 
	`Ârötf
(
°dîr
, "\n");

30 
	`exô
(1);

31 
	}
}

36 
LIST_HEAD
(
ív_li°
);

38 
	sív
 {

39 *
	m«me
;

40 *
	mvÆue
;

41 
li°_hód
 
	mnode
;

44 
	$ív_add
(c⁄° *
«me
, c⁄° *
vÆue
)

46 
ív
 *
e
;

48 
e
 = 
	`xmÆloc
((*e));

49 
e
->
«me
 = 
	`x°rdup
(name);

50 
e
->
vÆue
 = 
	`x°rdup
(value);

52 
	`li°_add_èû
(&
e
->
node
, &
ív_li°
);

53 
	}
}

55 
	$ív_dñ
(
ív
 *
e
)

57 
	`li°_dñ
(&
e
->
node
);

58 
	`‰ì
(
e
->
«me
);

59 
	`‰ì
(
e
->
vÆue
);

60 
	`‰ì
(
e
);

61 
	}
}

64 *
	$ív_ex∑nd
(c⁄° *
«me
)

66 
ív
 *
e
;

67 c⁄° *
vÆue
;

69 i‡(!*
«me
)

70  
NULL
;

72 
	`li°_f‹_óch_íåy
(
e
, &
ív_li°
, 
node
) {

73 i‡(!
	`°rcmp
(
«me
, 
e
->name))

74  
	`x°rdup
(
e
->
vÆue
);

77 
vÆue
 = 
	`gëív
(
«me
);

78 i‡(!
vÆue
)

79  
NULL
;

85 
	`ív_add
(
«me
, 
vÆue
);

87  
	`x°rdup
(
vÆue
);

88 
	}
}

90 
	$ív_wrôe_dï
(
FILE
 *
f
, c⁄° *
autoc⁄fig_«me
)

92 
ív
 *
e
, *
tmp
;

94 
	`li°_f‹_óch_íåy_ß„
(
e
, 
tmp
, &
ív_li°
, 
node
) {

95 
	`Ârötf
(
f
, "i‚eq \"$(%s)\" \"%s\"\n", 
e
->
«me
,É->
vÆue
);

96 
	`Ârötf
(
f
, "%s: FORCE\n", 
autoc⁄fig_«me
);

97 
	`Ârötf
(
f
, "endif\n");

98 
	`ív_dñ
(
e
);

100 
	}
}

105 
	sfun˘i⁄
 {

106 c⁄° *
	m«me
;

107 
	mmö_¨gs
;

108 
	mmax_¨gs
;

109 *(*
	mfunc
)(
	m¨gc
, *
	m¨gv
[]);

112 *
	$do_îr‹_if
(
¨gc
, *
¨gv
[])

114 i‡(!
	`°rcmp
(
¨gv
[0], "y"))

115 
	`µîr‹
("%s", 
¨gv
[1]);

117  
	`x°rdup
("");

118 
	}
}

120 *
	$do_fûíame
(
¨gc
, *
¨gv
[])

122  
	`x°rdup
(
cuºít_fûe
->
«me
);

123 
	}
}

125 *
	$do_öfo
(
¨gc
, *
¨gv
[])

127 
	`¥ötf
("%s\n", 
¨gv
[0]);

129  
	`x°rdup
("");

130 
	}
}

132 *
	$do_löío
(
¨gc
, *
¨gv
[])

134 
buf
[16];

136 
	`•rötf
(
buf
, "%d", 
yylöío
);

138  
	`x°rdup
(
buf
);

139 
	}
}

141 *
	$do_shñl
(
¨gc
, *
¨gv
[])

143 
FILE
 *
p
;

144 
buf
[256];

145 *
cmd
;

146 
size_t
 
ƒód
;

147 
i
;

149 
cmd
 = 
¨gv
[0];

151 
p
 = 
	`p›í
(
cmd
, "r");

152 i‡(!
p
) {

153 
	`≥º‹
(
cmd
);

154 
	`exô
(1);

157 
ƒód
 = 
	`‰ód
(
buf
, 1, (buf), 
p
);

158 i‡(
ƒód
 =(
buf
))

159 
ƒód
--;

162 
ƒód
 > 0 && 
buf
[nread - 1] == '\n')

163 
ƒód
--;

165 
buf
[
ƒód
] = 0;

168 
i
 = 0; i < 
ƒód
; i++) {

169 i‡(
buf
[
i
] == '\n')

170 
buf
[
i
] = ' ';

173 i‡(
	`p˛o£
(
p
) == -1) {

174 
	`≥º‹
(
cmd
);

175 
	`exô
(1);

178  
	`x°rdup
(
buf
);

179 
	}
}

181 *
	$do_w¨nög_if
(
¨gc
, *
¨gv
[])

183 i‡(!
	`°rcmp
(
¨gv
[0], "y"))

184 
	`Ârötf
(
°dîr
, "%s:%d: %s\n",

185 
cuºít_fûe
->
«me
, 
yylöío
, 
¨gv
[1]);

187  
	`x°rdup
("");

188 
	}
}

190 c⁄° 
fun˘i⁄
 
	gfun˘i⁄_èbÀ
[] = {

192 { "îr‹-if", 2, 2, 
do_îr‹_if
 },

193 { "fûíame", 0, 0, 
do_fûíame
 },

194 { "öfo", 1, 1, 
do_öfo
 },

195 { "löío", 0, 0, 
do_löío
 },

196 { "shñl", 1, 1, 
do_shñl
 },

197 { "w¨nög-if", 2, 2, 
do_w¨nög_if
 },

200 
	#FUNCTION_MAX_ARGS
 16

	)

202 *
	$fun˘i⁄_ex∑nd
(c⁄° *
«me
, 
¨gc
, *
¨gv
[])

204 c⁄° 
fun˘i⁄
 *
f
;

205 
i
;

207 
i
 = 0; i < 
	`ARRAY_SIZE
(
fun˘i⁄_èbÀ
); i++) {

208 
f
 = &
fun˘i⁄_èbÀ
[
i
];

209 i‡(
	`°rcmp
(
f
->
«me
,Çame))

212 i‡(
¨gc
 < 
f
->
mö_¨gs
)

213 
	`µîr‹
("too few functionárgumentsÖassedÅo '%s'",

214 
«me
);

216 i‡(
¨gc
 > 
f
->
max_¨gs
)

217 
	`µîr‹
("too many functionárgumentsÖassedÅo '%s'",

218 
«me
);

220  
f
->
	`func
(
¨gc
, 
¨gv
);

223  
NULL
;

224 
	}
}

229 
LIST_HEAD
(
v¨übÀ_li°
);

231 
	sv¨übÀ
 {

232 *
	m«me
;

233 *
	mvÆue
;

234 
v¨übÀ_Êav‹
 
	mÊav‹
;

235 
	mexp_cou¡
;

236 
li°_hód
 
	mnode
;

239 
v¨übÀ
 *
	$v¨übÀ_lookup
(c⁄° *
«me
)

241 
v¨übÀ
 *
v
;

243 
	`li°_f‹_óch_íåy
(
v
, &
v¨übÀ_li°
, 
node
) {

244 i‡(!
	`°rcmp
(
«me
, 
v
->name))

245  
v
;

248  
NULL
;

249 
	}
}

251 *
	$v¨übÀ_ex∑nd
(c⁄° *
«me
, 
¨gc
, *
¨gv
[])

253 
v¨übÀ
 *
v
;

254 *
ªs
;

256 
v
 = 
	`v¨übÀ_lookup
(
«me
);

257 i‡(!
v
)

258  
NULL
;

260 i‡(
¨gc
 =0 && 
v
->
exp_cou¡
)

261 
	`µîr‹
("Recursive variable '%s'Ñeferences itself (eventually)",

262 
«me
);

264 i‡(
v
->
exp_cou¡
 > 1000)

265 
	`µîr‹
("Too deepÑecursiveÉxpansion");

267 
v
->
exp_cou¡
++;

269 i‡(
v
->
Êav‹
 =
VAR_RECURSIVE
)

270 
ªs
 = 
	`ex∑nd_°rög_wôh_¨gs
(
v
->
vÆue
, 
¨gc
, 
¨gv
);

272 
ªs
 = 
	`x°rdup
(
v
->
vÆue
);

274 
v
->
exp_cou¡
--;

276  
ªs
;

277 
	}
}

279 
	$v¨übÀ_add
(c⁄° *
«me
, c⁄° *
vÆue
,

280 
v¨übÀ_Êav‹
 
Êav‹
)

282 
v¨übÀ
 *
v
;

283 *
√w_vÆue
;

284 
boﬁ
 
≠≥nd
 = 
Ál£
;

286 
v
 = 
	`v¨übÀ_lookup
(
«me
);

287 i‡(
v
) {

289 i‡(
Êav‹
 =
VAR_APPEND
) {

290 
Êav‹
 = 
v
->flavor;

291 
≠≥nd
 = 
åue
;

293 
	`‰ì
(
v
->
vÆue
);

297 i‡(
Êav‹
 =
VAR_APPEND
)

298 
Êav‹
 = 
VAR_RECURSIVE
;

300 
v
 = 
	`xmÆloc
((*v));

301 
v
->
«me
 = 
	`x°rdup
(name);

302 
v
->
exp_cou¡
 = 0;

303 
	`li°_add_èû
(&
v
->
node
, &
v¨übÀ_li°
);

306 
v
->
Êav‹
 = flavor;

308 i‡(
Êav‹
 =
VAR_SIMPLE
)

309 
√w_vÆue
 = 
	`ex∑nd_°rög
(
vÆue
);

311 
√w_vÆue
 = 
	`x°rdup
(
vÆue
);

313 i‡(
≠≥nd
) {

314 
v
->
vÆue
 = 
	`xªÆloc
(v->value,

315 
	`°æí
(
v
->
vÆue
Ë+ såÀn(
√w_vÆue
) + 2);

316 
	`°rˇt
(
v
->
vÆue
, " ");

317 
	`°rˇt
(
v
->
vÆue
, 
√w_vÆue
);

318 
	`‰ì
(
√w_vÆue
);

320 
v
->
vÆue
 = 
√w_vÆue
;

322 
	}
}

324 
	$v¨übÀ_dñ
(
v¨übÀ
 *
v
)

326 
	`li°_dñ
(&
v
->
node
);

327 
	`‰ì
(
v
->
«me
);

328 
	`‰ì
(
v
->
vÆue
);

329 
	`‰ì
(
v
);

330 
	}
}

332 
	$v¨übÀ_Æl_dñ
()

334 
v¨übÀ
 *
v
, *
tmp
;

336 
	`li°_f‹_óch_íåy_ß„
(
v
, 
tmp
, &
v¨übÀ_li°
, 
node
)

337 
	`v¨übÀ_dñ
(
v
);

338 
	}
}

346 *
	$evÆ_˛au£
(c⁄° *
°r
, 
size_t
 
Àn
, 
¨gc
, *
¨gv
[])

348 *
tmp
, *
«me
, *
ªs
, *
íd±r
, *
¥ev
, *
p
;

349 
√w_¨gc
 = 0;

350 *
√w_¨gv
[
FUNCTION_MAX_ARGS
];

351 
√°
 = 0;

352 
i
;

353 
n
;

355 
tmp
 = 
	`x°∫dup
(
°r
, 
Àn
);

362 
n
 = 
	`°πoul
(
tmp
, &
íd±r
, 10);

363 i‡(!*
íd±r
 && 
n
 > 0 &&Ç <
¨gc
) {

364 
ªs
 = 
	`x°rdup
(
¨gv
[
n
 - 1]);

365 
‰ì_tmp
;

368 
¥ev
 = 
p
 = 
tmp
;

384 *
p
) {

385 i‡(
√°
 =0 && *
p
 == ',') {

386 *
p
 = 0;

387 i‡(
√w_¨gc
 >
FUNCTION_MAX_ARGS
)

388 
	`µîr‹
("too many functionárguments");

389 
√w_¨gv
[
√w_¨gc
++] = 
¥ev
;

390 
¥ev
 = 
p
 + 1;

391 } i‡(*
p
 == '(') {

392 
√°
++;

393 } i‡(*
p
 == ')') {

394 
√°
--;

397 
p
++;

399 
√w_¨gv
[
√w_¨gc
++] = 
¥ev
;

407 
«me
 = 
	`ex∑nd_°rög_wôh_¨gs
(
√w_¨gv
[0], 
¨gc
, 
¨gv
);

408 
√w_¨gc
--;

409 
i
 = 0; i < 
√w_¨gc
; i++)

410 
√w_¨gv
[
i
] = 
	`ex∑nd_°rög_wôh_¨gs
(new_argv[i + 1],

411 
¨gc
, 
¨gv
);

414 
ªs
 = 
	`v¨übÀ_ex∑nd
(
«me
, 
√w_¨gc
, 
√w_¨gv
);

415 i‡(
ªs
)

416 
‰ì
;

419 
ªs
 = 
	`fun˘i⁄_ex∑nd
(
«me
, 
√w_¨gc
, 
√w_¨gv
);

420 i‡(
ªs
)

421 
‰ì
;

424 i‡(
√w_¨gc
 == 0) {

425 
ªs
 = 
	`ív_ex∑nd
(
«me
);

426 i‡(
ªs
)

427 
‰ì
;

430 
ªs
 = 
	`x°rdup
("");

431 
‰ì
:

432 
i
 = 0; i < 
√w_¨gc
; i++)

433 
	`‰ì
(
√w_¨gv
[
i
]);

434 
	`‰ì
(
«me
);

435 
‰ì_tmp
:

436 
	`‰ì
(
tmp
);

438  
ªs
;

439 
	}
}

453 *
	$ex∑nd_dﬁœr_wôh_¨gs
(c⁄° **
°r
, 
¨gc
, *
¨gv
[])

455 c⁄° *
p
 = *
°r
;

456 c⁄° *
q
;

457 
√°
 = 0;

464 i‡(*
p
 != '(') {

465 *
°r
 = 
p
;

466  
	`x°rdup
("$");

469 
p
++;

470 
q
 = 
p
;

471 *
q
) {

472 i‡(*
q
 == '(') {

473 
√°
++;

474 } i‡(*
q
 == ')') {

475 i‡(
√°
-- == 0)

478 
q
++;

481 i‡(!*
q
)

482 
	`µîr‹
("u¡îmö©edÑe„ªn˚Åÿ'%s': missög ')'", 
p
);

485 *
°r
 = 
q
 + 1;

487  
	`evÆ_˛au£
(
p
, 
q
 -Ö, 
¨gc
, 
¨gv
);

488 
	}
}

490 *
	$ex∑nd_dﬁœr
(c⁄° **
°r
)

492  
	`ex∑nd_dﬁœr_wôh_¨gs
(
°r
, 0, 
NULL
);

493 
	}
}

495 *
	$__ex∑nd_°rög
(c⁄° **
°r
, 
	$boﬁ
 (*
is_íd
)(
c
),

496 
¨gc
, *
¨gv
[])

498 c⁄° *
ö
, *
p
;

499 *
ex∑nsi⁄
, *
out
;

500 
size_t
 
ö_Àn
, 
out_Àn
;

502 
out
 = 
	`xmÆloc
(1);

503 *
out
 = 0;

504 
out_Àn
 = 1;

506 
p
 = 
ö
 = *
°r
;

509 i‡(*
p
 == '$') {

510 
ö_Àn
 = 
p
 - 
ö
;

511 
p
++;

512 
ex∑nsi⁄
 = 
	`ex∑nd_dﬁœr_wôh_¨gs
(&
p
, 
¨gc
, 
¨gv
);

513 
out_Àn
 +
ö_Àn
 + 
	`°æí
(
ex∑nsi⁄
);

514 
out
 = 
	`xªÆloc
(out, 
out_Àn
);

515 
	`°∫ˇt
(
out
, 
ö
, 
ö_Àn
);

516 
	`°rˇt
(
out
, 
ex∑nsi⁄
);

517 
	`‰ì
(
ex∑nsi⁄
);

518 
ö
 = 
p
;

522 i‡(
	`is_íd
(*
p
))

525 
p
++;

528 
ö_Àn
 = 
p
 - 
ö
;

529 
out_Àn
 +
ö_Àn
;

530 
out
 = 
	`xªÆloc
(out, 
out_Àn
);

531 
	`°∫ˇt
(
out
, 
ö
, 
ö_Àn
);

534 *
°r
 = 
p
;

536  
out
;

537 
	}
}

539 
boﬁ
 
	$is_íd_of_°r
(
c
)

541  !
c
;

542 
	}
}

549 *
	$ex∑nd_°rög_wôh_¨gs
(c⁄° *
ö
, 
¨gc
, *
¨gv
[])

551  
	`__ex∑nd_°rög
(&
ö
, 
is_íd_of_°r
, 
¨gc
, 
¨gv
);

552 
	}
}

554 *
	$ex∑nd_°rög
(c⁄° *
ö
)

556  
	`ex∑nd_°rög_wôh_¨gs
(
ö
, 0, 
NULL
);

557 
	}
}

559 
boﬁ
 
	$is_íd_of_tokí
(
c
)

561  !(
	`iß um
(
c
) || c == '_' || c == '-');

562 
	}
}

571 *
	$ex∑nd_⁄e_tokí
(c⁄° **
°r
)

573  
	`__ex∑nd_°rög
(
°r
, 
is_íd_of_tokí
, 0, 
NULL
);

574 
	}
}

	@nemu/tools/kconfig/symbol.c

6 
	~<˘y≥.h
>

7 
	~<°dlib.h
>

8 
	~<°rög.h
>

9 
	~<ªgex.h
>

10 
	~<sys/ut¢ame.h
>

12 
	~"lkc.h
"

14 
symbﬁ
 
	gsymbﬁ_yes
 = {

15 .
«me
 = "y",

16 .
	gcuº
 = { "y", 
yes
 },

17 .
	gÊags
 = 
SYMBOL_CONST
|
SYMBOL_VALID
,

20 
symbﬁ
 
	gsymbﬁ_mod
 = {

21 .
«me
 = "m",

22 .
	gcuº
 = { "m", 
mod
 },

23 .
	gÊags
 = 
SYMBOL_CONST
|
SYMBOL_VALID
,

26 
symbﬁ
 
	gsymbﬁ_no
 = {

27 .
«me
 = "n",

28 .
	gcuº
 = { "n", 
no
 },

29 .
	gÊags
 = 
SYMBOL_CONST
|
SYMBOL_VALID
,

32 
symbﬁ
 
	gsymbﬁ_em±y
 = {

33 .
«me
 = "",

34 .
	gcuº
 = { "", 
no
 },

35 .
	gÊags
 = 
SYMBOL_VALID
,

38 
symbﬁ
 *
	gsym_defc⁄fig_li°
;

39 
symbﬁ
 *
	gmoduÀs_sym
;

40 
åi°©e
 
	gmoduÀs_vÆ
;

42 
symbﬁ_ty≥
 
	$sym_gë_ty≥
(
symbﬁ
 *
sym
)

44 
symbﬁ_ty≥
 
ty≥
 = 
sym
->type;

46 i‡(
ty≥
 =
S_TRISTATE
) {

47 i‡(
	`sym_is_choi˚_vÆue
(
sym
Ë&& sym->
visibÀ
 =
yes
)

48 
ty≥
 = 
S_BOOLEAN
;

49 i‡(
moduÀs_vÆ
 =
no
)

50 
ty≥
 = 
S_BOOLEAN
;

52  
ty≥
;

53 
	}
}

55 c⁄° *
	$sym_ty≥_«me
(
symbﬁ_ty≥
 
ty≥
)

57 
ty≥
) {

58 
S_BOOLEAN
:

60 
S_TRISTATE
:

62 
S_INT
:

64 
S_HEX
:

66 
S_STRING
:

68 
S_UNKNOWN
:

72 
	}
}

74 
¥›îty
 *
	$sym_gë_choi˚_¥›
(
symbﬁ
 *
sym
)

76 
¥›îty
 *
¥›
;

78 
	`f‹_Æl_choi˚s
(
sym
, 
¥›
)

79  
¥›
;

80  
NULL
;

81 
	}
}

83 
¥›îty
 *
	$sym_gë_deÁu…_¥›
(
symbﬁ
 *
sym
)

85 
¥›îty
 *
¥›
;

87 
	`f‹_Æl_deÁu…s
(
sym
, 
¥›
) {

88 
¥›
->
visibÀ
.
åi
 = 
	`ex¥_ˇlc_vÆue
’r›->visibÀ.
ex¥
);

89 i‡(
¥›
->
visibÀ
.
åi
 !
no
)

90  
¥›
;

92  
NULL
;

93 
	}
}

95 
¥›îty
 *
	$sym_gë_ønge_¥›
(
symbﬁ
 *
sym
)

97 
¥›îty
 *
¥›
;

99 
	`f‹_Æl_¥›îtõs
(
sym
, 
¥›
, 
P_RANGE
) {

100 
¥›
->
visibÀ
.
åi
 = 
	`ex¥_ˇlc_vÆue
’r›->visibÀ.
ex¥
);

101 i‡(
¥›
->
visibÀ
.
åi
 !
no
)

102  
¥›
;

104  
NULL
;

105 
	}
}

107 
	$sym_gë_ønge_vÆ
(
symbﬁ
 *
sym
, 
ba£
)

109 
	`sym_ˇlc_vÆue
(
sym
);

110 
sym
->
ty≥
) {

111 
S_INT
:

112 
ba£
 = 10;

114 
S_HEX
:

115 
ba£
 = 16;

120  
	`°πﬁl
(
sym
->
cuº
.
vÆ
, 
NULL
, 
ba£
);

121 
	}
}

123 
	$sym_vÆid©e_ønge
(
symbﬁ
 *
sym
)

125 
¥›îty
 *
¥›
;

126 
ba£
;

127 
vÆ
, 
vÆ2
;

128 
°r
[64];

130 
sym
->
ty≥
) {

131 
S_INT
:

132 
ba£
 = 10;

134 
S_HEX
:

135 
ba£
 = 16;

140 
¥›
 = 
	`sym_gë_ønge_¥›
(
sym
);

141 i‡(!
¥›
)

143 
vÆ
 = 
	`°πﬁl
(
sym
->
cuº
.vÆ, 
NULL
, 
ba£
);

144 
vÆ2
 = 
	`sym_gë_ønge_vÆ
(
¥›
->
ex¥
->
À·
.
sym
, 
ba£
);

145 i‡(
vÆ
 >
vÆ2
) {

146 
vÆ2
 = 
	`sym_gë_ønge_vÆ
(
¥›
->
ex¥
->
right
.
sym
, 
ba£
);

147 i‡(
vÆ
 <
vÆ2
)

150 i‡(
sym
->
ty≥
 =
S_INT
)

151 
	`•rötf
(
°r
, "%Œd", 
vÆ2
);

153 
	`•rötf
(
°r
, "0x%Œx", 
vÆ2
);

154 
sym
->
cuº
.
vÆ
 = 
	`x°rdup
(
°r
);

155 
	}
}

157 
	$sym_£t_ch™ged
(
symbﬁ
 *
sym
)

159 
¥›îty
 *
¥›
;

161 
sym
->
Êags
 |
SYMBOL_CHANGED
;

162 
¥›
 = 
sym
->¥›;Ör›;Ör› =Ör›->
√xt
) {

163 i‡(
¥›
->
míu
)

164 
¥›
->
míu
->
Êags
 |
MENU_CHANGED
;

166 
	}
}

168 
	$sym_£t_Æl_ch™ged
()

170 
symbﬁ
 *
sym
;

171 
i
;

173 
	`f‹_Æl_symbﬁs
(
i
, 
sym
)

174 
	`sym_£t_ch™ged
(
sym
);

175 
	}
}

177 
	$sym_ˇlc_visibûôy
(
symbﬁ
 *
sym
)

179 
¥›îty
 *
¥›
;

180 
symbﬁ
 *
choi˚_sym
 = 
NULL
;

181 
åi°©e
 
åi
;

184 
åi
 = 
no
;

186 i‡(
	`sym_is_choi˚_vÆue
(
sym
))

187 
choi˚_sym
 = 
	`¥›_gë_symbﬁ
(
	`sym_gë_choi˚_¥›
(
sym
));

189 
	`f‹_Æl_¥om±s
(
sym
, 
¥›
) {

190 
¥›
->
visibÀ
.
åi
 = 
	`ex¥_ˇlc_vÆue
’r›->visibÀ.
ex¥
);

196 i‡(
choi˚_sym
 && 
sym
->
ty≥
 =
S_TRISTATE
 &&

197 
¥›
->
visibÀ
.
åi
 =
mod
 && 
choi˚_sym
->
cuº
.åò=
yes
)

198 
¥›
->
visibÀ
.
åi
 = 
no
;

200 
åi
 = 
	`EXPR_OR
—ri, 
¥›
->
visibÀ
.tri);

202 i‡(
åi
 =
mod
 && (
sym
->
ty≥
 !
S_TRISTATE
 || 
moduÀs_vÆ
 =
no
))

203 
åi
 = 
yes
;

204 i‡(
sym
->
visibÀ
 !
åi
) {

205 
sym
->
visibÀ
 = 
åi
;

206 
	`sym_£t_ch™ged
(
sym
);

208 i‡(
	`sym_is_choi˚_vÆue
(
sym
))

211 
åi
 = 
yes
;

212 i‡(
sym
->
dú_dï
.
ex¥
)

213 
åi
 = 
	`ex¥_ˇlc_vÆue
(
sym
->
dú_dï
.
ex¥
);

214 i‡(
åi
 =
mod
 && 
	`sym_gë_ty≥
(
sym
Ë=
S_BOOLEAN
)

215 
åi
 = 
yes
;

216 i‡(
sym
->
dú_dï
.
åi
 !=Åri) {

217 
sym
->
dú_dï
.
åi
 =Åri;

218 
	`sym_£t_ch™ged
(
sym
);

220 
åi
 = 
no
;

221 i‡(
sym
->
ªv_dï
.
ex¥
)

222 
åi
 = 
	`ex¥_ˇlc_vÆue
(
sym
->
ªv_dï
.
ex¥
);

223 i‡(
åi
 =
mod
 && 
	`sym_gë_ty≥
(
sym
Ë=
S_BOOLEAN
)

224 
åi
 = 
yes
;

225 i‡(
sym
->
ªv_dï
.
åi
 !=Åri) {

226 
sym
->
ªv_dï
.
åi
 =Åri;

227 
	`sym_£t_ch™ged
(
sym
);

229 
åi
 = 
no
;

230 i‡(
sym
->
im∂õd
.
ex¥
)

231 
åi
 = 
	`ex¥_ˇlc_vÆue
(
sym
->
im∂õd
.
ex¥
);

232 i‡(
åi
 =
mod
 && 
	`sym_gë_ty≥
(
sym
Ë=
S_BOOLEAN
)

233 
åi
 = 
yes
;

234 i‡(
sym
->
im∂õd
.
åi
 !=Åri) {

235 
sym
->
im∂õd
.
åi
 =Åri;

236 
	`sym_£t_ch™ged
(
sym
);

238 
	}
}

246 
symbﬁ
 *
	$sym_choi˚_deÁu…
(
symbﬁ
 *
sym
)

248 
symbﬁ
 *
def_sym
;

249 
¥›îty
 *
¥›
;

250 
ex¥
 *
e
;

253 
	`f‹_Æl_deÁu…s
(
sym
, 
¥›
) {

254 
¥›
->
visibÀ
.
åi
 = 
	`ex¥_ˇlc_vÆue
’r›->visibÀ.
ex¥
);

255 i‡(
¥›
->
visibÀ
.
åi
 =
no
)

257 
def_sym
 = 
	`¥›_gë_symbﬁ
(
¥›
);

258 i‡(
def_sym
->
visibÀ
 !
no
)

259  
def_sym
;

263 
¥›
 = 
	`sym_gë_choi˚_¥›
(
sym
);

264 
	`ex¥_li°_f‹_óch_sym
(
¥›
->
ex¥
, 
e
, 
def_sym
)

265 i‡(
def_sym
->
visibÀ
 !
no
)

266  
def_sym
;

269  
NULL
;

270 
	}
}

272 
symbﬁ
 *
	$sym_ˇlc_choi˚
(
symbﬁ
 *
sym
)

274 
symbﬁ
 *
def_sym
;

275 
¥›îty
 *
¥›
;

276 
ex¥
 *
e
;

277 
Êags
;

280 
Êags
 = 
sym
->flags;

281 
¥›
 = 
	`sym_gë_choi˚_¥›
(
sym
);

282 
	`ex¥_li°_f‹_óch_sym
(
¥›
->
ex¥
, 
e
, 
def_sym
) {

283 
	`sym_ˇlc_visibûôy
(
def_sym
);

284 i‡(
def_sym
->
visibÀ
 !
no
)

285 
Êags
 &
def_sym
->flags;

288 
sym
->
Êags
 &Êag†| ~
SYMBOL_DEF_USER
;

291 
def_sym
 = 
sym
->
def
[
S_DEF_USER
].
vÆ
;

292 i‡(
def_sym
 && def_sym->
visibÀ
 !
no
)

293  
def_sym
;

295 
def_sym
 = 
	`sym_choi˚_deÁu…
(
sym
);

297 i‡(
def_sym
 =
NULL
)

299 
sym
->
cuº
.
åi
 = 
no
;

301  
def_sym
;

302 
	}
}

304 
	$sym_w¨n_unmë_dï
(
symbﬁ
 *
sym
)

306 
g°r
 
gs
 = 
	`°r_√w
();

308 
	`°r_¥ötf
(&
gs
,

310 
sym
->
«me
);

311 
	`°r_¥ötf
(&
gs
,

313 
sym
->
dú_dï
.
åi
 =
mod
 ? 'm' : 'n');

314 
	`ex¥_g°r_¥öt
(
sym
->
dú_dï
.
ex¥
, &
gs
);

315 
	`°r_¥ötf
(&
gs
, "\n");

317 
	`ex¥_g°r_¥öt_ªvdï
(
sym
->
ªv_dï
.
ex¥
, &
gs
, 
yes
,

319 
	`ex¥_g°r_¥öt_ªvdï
(
sym
->
ªv_dï
.
ex¥
, &
gs
, 
mod
,

322 
	`Âuts
(
	`°r_gë
(&
gs
), 
°dîr
);

323 
	}
}

325 
	$sym_ˇlc_vÆue
(
symbﬁ
 *
sym
)

327 
symbﬁ_vÆue
 
√wvÆ
, 
ﬁdvÆ
;

328 
¥›îty
 *
¥›
;

329 
ex¥
 *
e
;

331 i‡(!
sym
)

334 i‡(
sym
->
Êags
 & 
SYMBOL_VALID
)

337 i‡(
	`sym_is_choi˚_vÆue
(
sym
) &&

338 
sym
->
Êags
 & 
SYMBOL_NEED_SET_CHOICE_VALUES
) {

339 
sym
->
Êags
 &~
SYMBOL_NEED_SET_CHOICE_VALUES
;

340 
¥›
 = 
	`sym_gë_choi˚_¥›
(
sym
);

341 
	`sym_ˇlc_vÆue
(
	`¥›_gë_symbﬁ
(
¥›
));

344 
sym
->
Êags
 |
SYMBOL_VALID
;

346 
ﬁdvÆ
 = 
sym
->
cuº
;

348 
sym
->
ty≥
) {

349 
S_INT
:

350 
S_HEX
:

351 
S_STRING
:

352 
√wvÆ
 = 
symbﬁ_em±y
.
cuº
;

354 
S_BOOLEAN
:

355 
S_TRISTATE
:

356 
√wvÆ
 = 
symbﬁ_no
.
cuº
;

359 
sym
->
cuº
.
vÆ
 = sym->
«me
;

360 
sym
->
cuº
.
åi
 = 
no
;

363 
sym
->
Êags
 &~
SYMBOL_WRITE
;

365 
	`sym_ˇlc_visibûôy
(
sym
);

367 i‡(
sym
->
visibÀ
 !
no
)

368 
sym
->
Êags
 |
SYMBOL_WRITE
;

371 
sym
->
cuº
 = 
√wvÆ
;

373 
	`sym_gë_ty≥
(
sym
)) {

374 
S_BOOLEAN
:

375 
S_TRISTATE
:

376 i‡(
	`sym_is_choi˚_vÆue
(
sym
Ë&& sym->
visibÀ
 =
yes
) {

377 
¥›
 = 
	`sym_gë_choi˚_¥›
(
sym
);

378 
√wvÆ
.
åi
 = (
	`¥›_gë_symbﬁ
(
¥›
)->
cuº
.
vÆ
 =
sym
Ë? 
yes
 : 
no
;

380 i‡(
sym
->
visibÀ
 !
no
) {

384 i‡(
	`sym_has_vÆue
(
sym
)) {

385 
√wvÆ
.
åi
 = 
	`EXPR_AND
(
sym
->
def
[
S_DEF_USER
].tri,

386 
sym
->
visibÀ
);

387 
ˇlc_√wvÆ
;

390 i‡(
sym
->
ªv_dï
.
åi
 !
no
)

391 
sym
->
Êags
 |
SYMBOL_WRITE
;

392 i‡(!
	`sym_is_choi˚
(
sym
)) {

393 
¥›
 = 
	`sym_gë_deÁu…_¥›
(
sym
);

394 i‡(
¥›
) {

395 
√wvÆ
.
åi
 = 
	`EXPR_AND
(
	`ex¥_ˇlc_vÆue
(
¥›
->
ex¥
),

396 
¥›
->
visibÀ
.
åi
);

397 i‡(
√wvÆ
.
åi
 !
no
)

398 
sym
->
Êags
 |
SYMBOL_WRITE
;

400 i‡(
sym
->
im∂õd
.
åi
 !
no
) {

401 
sym
->
Êags
 |
SYMBOL_WRITE
;

402 
√wvÆ
.
åi
 = 
	`EXPR_OR
“ewvÆ.åi, 
sym
->
im∂õd
.tri);

403 
√wvÆ
.
åi
 = 
	`EXPR_AND
(newval.tri,

404 
sym
->
dú_dï
.
åi
);

407 
ˇlc_√wvÆ
:

408 i‡(
sym
->
dú_dï
.
åi
 < sym->
ªv_dï
.tri)

409 
	`sym_w¨n_unmë_dï
(
sym
);

410 
√wvÆ
.
åi
 = 
	`EXPR_OR
“ewvÆ.åi, 
sym
->
ªv_dï
.tri);

412 i‡(
√wvÆ
.
åi
 =
mod
 && 
	`sym_gë_ty≥
(
sym
Ë=
S_BOOLEAN
)

413 
√wvÆ
.
åi
 = 
yes
;

415 
S_STRING
:

416 
S_HEX
:

417 
S_INT
:

418 i‡(
sym
->
visibÀ
 !
no
 && 
	`sym_has_vÆue
(sym)) {

419 
√wvÆ
.
vÆ
 = 
sym
->
def
[
S_DEF_USER
].val;

422 
¥›
 = 
	`sym_gë_deÁu…_¥›
(
sym
);

423 i‡(
¥›
) {

424 
symbﬁ
 *
ds
 = 
	`¥›_gë_symbﬁ
(
¥›
);

425 i‡(
ds
) {

426 
sym
->
Êags
 |
SYMBOL_WRITE
;

427 
	`sym_ˇlc_vÆue
(
ds
);

428 
√wvÆ
.
vÆ
 = 
ds
->
cuº
.val;

436 
sym
->
cuº
 = 
√wvÆ
;

437 i‡(
	`sym_is_choi˚
(
sym
Ë&& 
√wvÆ
.
åi
 =
yes
)

438 
sym
->
cuº
.
vÆ
 = 
	`sym_ˇlc_choi˚
(sym);

439 
	`sym_vÆid©e_ønge
(
sym
);

441 i‡(
	`memcmp
(&
ﬁdvÆ
, &
sym
->
cuº
, (oldval))) {

442 
	`sym_£t_ch™ged
(
sym
);

443 i‡(
moduÀs_sym
 =
sym
) {

444 
	`sym_£t_Æl_ch™ged
();

445 
moduÀs_vÆ
 = 
moduÀs_sym
->
cuº
.
åi
;

449 i‡(
	`sym_is_choi˚
(
sym
)) {

450 
symbﬁ
 *
choi˚_sym
;

452 
¥›
 = 
	`sym_gë_choi˚_¥›
(
sym
);

453 
	`ex¥_li°_f‹_óch_sym
(
¥›
->
ex¥
, 
e
, 
choi˚_sym
) {

454 i‡((
sym
->
Êags
 & 
SYMBOL_WRITE
) &&

455 
choi˚_sym
->
visibÀ
 !
no
)

456 
choi˚_sym
->
Êags
 |
SYMBOL_WRITE
;

457 i‡(
sym
->
Êags
 & 
SYMBOL_CHANGED
)

458 
	`sym_£t_ch™ged
(
choi˚_sym
);

462 i‡(
sym
->
Êags
 & 
SYMBOL_NO_WRITE
)

463 
sym
->
Êags
 &~
SYMBOL_WRITE
;

465 i‡(
sym
->
Êags
 & 
SYMBOL_NEED_SET_CHOICE_VALUES
)

466 
	`£t_Æl_choi˚_vÆues
(
sym
);

467 
	}
}

469 
	$sym_˛ór_Æl_vÆid
()

471 
symbﬁ
 *
sym
;

472 
i
;

474 
	`f‹_Æl_symbﬁs
(
i
, 
sym
)

475 
sym
->
Êags
 &~
SYMBOL_VALID
;

476 
	`sym_add_ch™ge_cou¡
(1);

477 
	`sym_ˇlc_vÆue
(
moduÀs_sym
);

478 
	}
}

480 
boﬁ
 
	$sym_åi°©e_wôhö_ønge
(
symbﬁ
 *
sym
, 
åi°©e
 
vÆ
)

482 
ty≥
 = 
	`sym_gë_ty≥
(
sym
);

484 i‡(
sym
->
visibÀ
 =
no
)

485  
Ál£
;

487 i‡(
ty≥
 !
S_BOOLEAN
 &&Åy≥ !
S_TRISTATE
)

488  
Ál£
;

490 i‡(
ty≥
 =
S_BOOLEAN
 && 
vÆ
 =
mod
)

491  
Ál£
;

492 i‡(
sym
->
visibÀ
 <sym->
ªv_dï
.
åi
)

493  
Ál£
;

494 i‡(
	`sym_is_choi˚_vÆue
(
sym
Ë&& sym->
visibÀ
 =
yes
)

495  
vÆ
 =
yes
;

496  
vÆ
 >
sym
->
ªv_dï
.
åi
 && vÆ <sym->
visibÀ
;

497 
	}
}

499 
boﬁ
 
	$sym_£t_åi°©e_vÆue
(
symbﬁ
 *
sym
, 
åi°©e
 
vÆ
)

501 
åi°©e
 
ﬁdvÆ
 = 
	`sym_gë_åi°©e_vÆue
(
sym
);

503 i‡(
ﬁdvÆ
 !
vÆ
 && !
	`sym_åi°©e_wôhö_ønge
(
sym
, val))

504  
Ál£
;

506 i‡(!(
sym
->
Êags
 & 
SYMBOL_DEF_USER
)) {

507 
sym
->
Êags
 |
SYMBOL_DEF_USER
;

508 
	`sym_£t_ch™ged
(
sym
);

514 i‡(
	`sym_is_choi˚_vÆue
(
sym
Ë&& 
vÆ
 =
yes
) {

515 
symbﬁ
 *
cs
 = 
	`¥›_gë_symbﬁ
(
	`sym_gë_choi˚_¥›
(
sym
));

516 
¥›îty
 *
¥›
;

517 
ex¥
 *
e
;

519 
cs
->
def
[
S_DEF_USER
].
vÆ
 = 
sym
;

520 
cs
->
Êags
 |
SYMBOL_DEF_USER
;

521 
¥›
 = 
	`sym_gë_choi˚_¥›
(
cs
);

522 
e
 = 
¥›
->
ex¥
;É;É =É->
À·
.expr) {

523 i‡(
e
->
right
.
sym
->
visibÀ
 !
no
)

524 
e
->
right
.
sym
->
Êags
 |
SYMBOL_DEF_USER
;

528 
sym
->
def
[
S_DEF_USER
].
åi
 = 
vÆ
;

529 i‡(
ﬁdvÆ
 !
vÆ
)

530 
	`sym_˛ór_Æl_vÆid
();

532  
åue
;

533 
	}
}

535 
åi°©e
 
	$sym_toggÀ_åi°©e_vÆue
(
symbﬁ
 *
sym
)

537 
åi°©e
 
ﬁdvÆ
, 
√wvÆ
;

539 
ﬁdvÆ
 = 
√wvÆ
 = 
	`sym_gë_åi°©e_vÆue
(
sym
);

541 
√wvÆ
) {

542 
no
:

543 
√wvÆ
 = 
mod
;

545 
mod
:

546 
√wvÆ
 = 
yes
;

548 
yes
:

549 
√wvÆ
 = 
no
;

552 i‡(
	`sym_£t_åi°©e_vÆue
(
sym
, 
√wvÆ
))

554 } 
ﬁdvÆ
 !
√wvÆ
);

555  
√wvÆ
;

556 
	}
}

558 
boﬁ
 
	$sym_°rög_vÆid
(
symbﬁ
 *
sym
, c⁄° *
°r
)

560 sig√d 
ch
;

562 
sym
->
ty≥
) {

563 
S_STRING
:

564  
åue
;

565 
S_INT
:

566 
ch
 = *
°r
++;

567 i‡(
ch
 == '-')

568 
ch
 = *
°r
++;

569 i‡(!
	`isdigô
(
ch
))

570  
Ál£
;

571 i‡(
ch
 ='0' && *
°r
 != 0)

572  
Ál£
;

573 (
ch
 = *
°r
++)) {

574 i‡(!
	`isdigô
(
ch
))

575  
Ál£
;

577  
åue
;

578 
S_HEX
:

579 i‡(
°r
[0] == '0' && (str[1] == 'x' || str[1] == 'X'))

580 
°r
 += 2;

581 
ch
 = *
°r
++;

583 i‡(!
	`isxdigô
(
ch
))

584  
Ál£
;

585 } (
ch
 = *
°r
++));

586  
åue
;

587 
S_BOOLEAN
:

588 
S_TRISTATE
:

589 
°r
[0]) {

593  
åue
;

595  
Ál£
;

597  
Ál£
;

599 
	}
}

601 
boﬁ
 
	$sym_°rög_wôhö_ønge
(
symbﬁ
 *
sym
, c⁄° *
°r
)

603 
¥›îty
 *
¥›
;

604 
vÆ
;

606 
sym
->
ty≥
) {

607 
S_STRING
:

608  
	`sym_°rög_vÆid
(
sym
, 
°r
);

609 
S_INT
:

610 i‡(!
	`sym_°rög_vÆid
(
sym
, 
°r
))

611  
Ál£
;

612 
¥›
 = 
	`sym_gë_ønge_¥›
(
sym
);

613 i‡(!
¥›
)

614  
åue
;

615 
vÆ
 = 
	`°πﬁl
(
°r
, 
NULL
, 10);

616  
vÆ
 >
	`sym_gë_ønge_vÆ
(
¥›
->
ex¥
->
À·
.
sym
, 10) &&

617 
vÆ
 <
	`sym_gë_ønge_vÆ
(
¥›
->
ex¥
->
right
.
sym
, 10);

618 
S_HEX
:

619 i‡(!
	`sym_°rög_vÆid
(
sym
, 
°r
))

620  
Ál£
;

621 
¥›
 = 
	`sym_gë_ønge_¥›
(
sym
);

622 i‡(!
¥›
)

623  
åue
;

624 
vÆ
 = 
	`°πﬁl
(
°r
, 
NULL
, 16);

625  
vÆ
 >
	`sym_gë_ønge_vÆ
(
¥›
->
ex¥
->
À·
.
sym
, 16) &&

626 
vÆ
 <
	`sym_gë_ønge_vÆ
(
¥›
->
ex¥
->
right
.
sym
, 16);

627 
S_BOOLEAN
:

628 
S_TRISTATE
:

629 
°r
[0]) {

631  
	`sym_åi°©e_wôhö_ønge
(
sym
, 
yes
);

633  
	`sym_åi°©e_wôhö_ønge
(
sym
, 
mod
);

635  
	`sym_åi°©e_wôhö_ønge
(
sym
, 
no
);

637  
Ál£
;

639  
Ál£
;

641 
	}
}

643 
boﬁ
 
	$sym_£t_°rög_vÆue
(
symbﬁ
 *
sym
, c⁄° *
√wvÆ
)

645 c⁄° *
ﬁdvÆ
;

646 *
vÆ
;

647 
size
;

649 
sym
->
ty≥
) {

650 
S_BOOLEAN
:

651 
S_TRISTATE
:

652 
√wvÆ
[0]) {

654  
	`sym_£t_åi°©e_vÆue
(
sym
, 
yes
);

656  
	`sym_£t_åi°©e_vÆue
(
sym
, 
mod
);

658  
	`sym_£t_åi°©e_vÆue
(
sym
, 
no
);

660  
Ál£
;

665 i‡(!
	`sym_°rög_wôhö_ønge
(
sym
, 
√wvÆ
))

666  
Ál£
;

668 i‡(!(
sym
->
Êags
 & 
SYMBOL_DEF_USER
)) {

669 
sym
->
Êags
 |
SYMBOL_DEF_USER
;

670 
	`sym_£t_ch™ged
(
sym
);

673 
ﬁdvÆ
 = 
sym
->
def
[
S_DEF_USER
].
vÆ
;

674 
size
 = 
	`°æí
(
√wvÆ
) + 1;

675 i‡(
sym
->
ty≥
 =
S_HEX
 && (
√wvÆ
[0] != '0' || (newval[1] != 'x' &&Çewval[1] != 'X'))) {

676 
size
 += 2;

677 
sym
->
def
[
S_DEF_USER
].
vÆ
 = vÆ = 
	`xmÆloc
(
size
);

678 *
vÆ
++ = '0';

679 *
vÆ
++ = 'x';

680 } i‡(!
ﬁdvÆ
 || 
	`°rcmp
(ﬁdvÆ, 
√wvÆ
))

681 
sym
->
def
[
S_DEF_USER
].
vÆ
 = vÆ = 
	`xmÆloc
(
size
);

683  
åue
;

685 
	`°r˝y
(
vÆ
, 
√wvÆ
);

686 
	`‰ì
((*)
ﬁdvÆ
);

687 
	`sym_˛ór_Æl_vÆid
();

689  
åue
;

690 
	}
}

699 c⁄° *
	$sym_gë_°rög_deÁu…
(
symbﬁ
 *
sym
)

701 
¥›îty
 *
¥›
;

702 
symbﬁ
 *
ds
;

703 c⁄° *
°r
;

704 
åi°©e
 
vÆ
;

706 
	`sym_ˇlc_visibûôy
(
sym
);

707 
	`sym_ˇlc_vÆue
(
moduÀs_sym
);

708 
vÆ
 = 
symbﬁ_no
.
cuº
.
åi
;

709 
°r
 = 
symbﬁ_em±y
.
cuº
.
vÆ
;

712 
¥›
 = 
	`sym_gë_deÁu…_¥›
(
sym
);

713 i‡(
¥›
 !
NULL
) {

714 
sym
->
ty≥
) {

715 
S_BOOLEAN
:

716 
S_TRISTATE
:

718 
vÆ
 = 
	`EXPR_AND
(
	`ex¥_ˇlc_vÆue
(
¥›
->
ex¥
),Ör›->
visibÀ
.
åi
);

726 
ds
 = 
	`¥›_gë_symbﬁ
(
¥›
);

727 i‡(
ds
 !
NULL
) {

728 
	`sym_ˇlc_vÆue
(
ds
);

729 
°r
 = (c⁄° *)
ds
->
cuº
.
vÆ
;

735 
vÆ
 = 
	`EXPR_OR
(vÆ, 
sym
->
ªv_dï
.
åi
);

738 i‡(
vÆ
 =
mod
)

739 i‡(!
	`sym_is_choi˚_vÆue
(
sym
Ë&& 
moduÀs_sym
->
cuº
.
åi
 =
no
)

740 
vÆ
 = 
yes
;

743 i‡(
sym
->
ty≥
 =
S_BOOLEAN
 && 
vÆ
 =
mod
)

744 
vÆ
 = 
yes
;

747 i‡(
vÆ
 < 
sym
->
im∂õd
.
åi
)

748 
vÆ
 = 
sym
->
im∂õd
.
åi
;

750 
sym
->
ty≥
) {

751 
S_BOOLEAN
:

752 
S_TRISTATE
:

753 
vÆ
) {

754 
no
:  "n";

755 
mod
:  "m";

756 
yes
:  "y";

758 
S_INT
:

759 
S_HEX
:

760  
°r
;

761 
S_STRING
:

762  
°r
;

763 
S_UNKNOWN
:

767 
	}
}

769 c⁄° *
	$sym_gë_°rög_vÆue
(
symbﬁ
 *
sym
)

771 
åi°©e
 
vÆ
;

773 
sym
->
ty≥
) {

774 
S_BOOLEAN
:

775 
S_TRISTATE
:

776 
vÆ
 = 
	`sym_gë_åi°©e_vÆue
(
sym
);

777 
vÆ
) {

778 
no
:

780 
mod
:

781 
	`sym_ˇlc_vÆue
(
moduÀs_sym
);

782  (
moduÀs_sym
->
cuº
.
åi
 =
no
) ? "n" : "m";

783 
yes
:

790  (c⁄° *)
sym
->
cuº
.
vÆ
;

791 
	}
}

793 
boﬁ
 
	$sym_is_ch™góbÀ
(
symbﬁ
 *
sym
)

795  
sym
->
visibÀ
 > sym->
ªv_dï
.
åi
;

796 
	}
}

798 
	$°rhash
(c⁄° *
s
)

801 
hash
 = 2166136261U;

802 ; *
s
; s++)

803 
hash
 = (hash ^ *
s
) * 0x01000193;

804  
hash
;

805 
	}
}

807 
symbﬁ
 *
	$sym_lookup
(c⁄° *
«me
, 
Êags
)

809 
symbﬁ
 *symbol;

810 *
√w_«me
;

811 
hash
;

813 i‡(
«me
) {

814 i‡(
«me
[0] && !name[1]) {

815 
«me
[0]) {

816 'y':  &
symbﬁ_yes
;

817 'm':  &
symbﬁ_mod
;

818 'n':  &
symbﬁ_no
;

821 
hash
 = 
	`°rhash
(
«me
Ë% 
SYMBOL_HASHSIZE
;

823 
symbﬁ
 = 
symbﬁ_hash
[
hash
]; symbﬁ; symbﬁ = symbﬁ->
√xt
) {

824 i‡(
symbﬁ
->
«me
 &&

825 !
	`°rcmp
(
symbﬁ
->
«me
,Çame) &&

826 (
Êags
 ? 
symbﬁ
->flags & flags

827 : !(
symbﬁ
->
Êags
 & (
SYMBOL_CONST
|
SYMBOL_CHOICE
))))

828  
symbﬁ
;

830 
√w_«me
 = 
	`x°rdup
(
«me
);

832 
√w_«me
 = 
NULL
;

833 
hash
 = 0;

836 
symbﬁ
 = 
	`xmÆloc
((*symbol));

837 
	`mem£t
(
symbﬁ
, 0, (*symbol));

838 
symbﬁ
->
«me
 = 
√w_«me
;

839 
symbﬁ
->
ty≥
 = 
S_UNKNOWN
;

840 
symbﬁ
->
Êags
 = flags;

842 
symbﬁ
->
√xt
 = 
symbﬁ_hash
[
hash
];

843 
symbﬁ_hash
[
hash
] = 
symbﬁ
;

845  
symbﬁ
;

846 
	}
}

848 
symbﬁ
 *
	$sym_föd
(c⁄° *
«me
)

850 
symbﬁ
 *symbﬁ = 
NULL
;

851 
hash
 = 0;

853 i‡(!
«me
)

854  
NULL
;

856 i‡(
«me
[0] && !name[1]) {

857 
«me
[0]) {

858 'y':  &
symbﬁ_yes
;

859 'm':  &
symbﬁ_mod
;

860 'n':  &
symbﬁ_no
;

863 
hash
 = 
	`°rhash
(
«me
Ë% 
SYMBOL_HASHSIZE
;

865 
symbﬁ
 = 
symbﬁ_hash
[
hash
]; symbﬁ; symbﬁ = symbﬁ->
√xt
) {

866 i‡(
symbﬁ
->
«me
 &&

867 !
	`°rcmp
(
symbﬁ
->
«me
,Çame) &&

868 !(
symbﬁ
->
Êags
 & 
SYMBOL_CONST
))

872  
symbﬁ
;

873 
	}
}

875 c⁄° *
	$sym_esˇ≥_°rög_vÆue
(c⁄° *
ö
)

877 c⁄° *
p
;

878 
size_t
 
ª¶í
;

879 *
ªs
;

880 
size_t
 
l
;

882 
ª¶í
 = 
	`°æí
(
ö
) + strlen("\"\"") + 1;

884 
p
 = 
ö
;

886 
l
 = 
	`°rc•n
(
p
, "\"\\");

887 
p
 +
l
;

889 i‡(
p
[0] == '\0')

892 
ª¶í
++;

893 
p
++;

896 
ªs
 = 
	`xmÆloc
(
ª¶í
);

897 
ªs
[0] = '\0';

899 
	`°rˇt
(
ªs
, "\"");

901 
p
 = 
ö
;

903 
l
 = 
	`°rc•n
(
p
, "\"\\");

904 
	`°∫ˇt
(
ªs
, 
p
, 
l
);

905 
p
 +
l
;

907 i‡(
p
[0] == '\0')

910 
	`°rˇt
(
ªs
, "\\");

911 
	`°∫ˇt
(
ªs
, 
p
++, 1);

914 
	`°rˇt
(
ªs
, "\"");

915  
ªs
;

916 
	}
}

918 
	ssym_m©ch
 {

919 
symbﬁ
 *
	msym
;

920 
off_t
 
	mso
, 
	meo
;

927 
	$sym_ªl_comp
(c⁄° *
sym1
, c⁄° *
sym2
)

929 c⁄° 
sym_m©ch
 *
s1
 = 
sym1
;

930 c⁄° 
sym_m©ch
 *
s2
 = 
sym2
;

931 
exa˘1
, 
exa˘2
;

942 
exa˘1
 = (
s1
->
eo
 - s1->
so
Ë=
	`°æí
(s1->
sym
->
«me
);

943 
exa˘2
 = (
s2
->
eo
 - s2->
so
Ë=
	`°æí
(s2->
sym
->
«me
);

944 i‡(
exa˘1
 && !
exa˘2
)

946 i‡(!
exa˘1
 && 
exa˘2
)

950  
	`°rcmp
(
s1
->
sym
->
«me
, 
s2
->sym->name);

951 
	}
}

953 
symbﬁ
 **
	$sym_ª_£¨ch
(c⁄° *
∑âîn
)

955 
symbﬁ
 *
sym
, **
sym_¨r
 = 
NULL
;

956 
sym_m©ch
 *
sym_m©ch_¨r
 = 
NULL
;

957 
i
, 
˙t
, 
size
;

958 
ªgex_t
 
ª
;

959 
ªgm©ch_t
 
m©ch
[1];

961 
˙t
 = 
size
 = 0;

963 i‡(
	`°æí
(
∑âîn
) == 0)

964  
NULL
;

965 i‡(
	`ªgcomp
(&
ª
, 
∑âîn
, 
REG_EXTENDED
|
REG_ICASE
))

966  
NULL
;

968 
	`f‹_Æl_symbﬁs
(
i
, 
sym
) {

969 i‡(
sym
->
Êags
 & 
SYMBOL_CONST
 || !sym->
«me
)

971 i‡(
	`ªgexec
(&
ª
, 
sym
->
«me
, 1, 
m©ch
, 0))

973 i‡(
˙t
 >
size
) {

974 *
tmp
;

975 
size
 += 16;

976 
tmp
 = 
	`ªÆloc
(
sym_m©ch_¨r
, 
size
 * (
sym_m©ch
));

977 i‡(!
tmp
)

978 
sym_ª_£¨ch_‰ì
;

979 
sym_m©ch_¨r
 = 
tmp
;

981 
	`sym_ˇlc_vÆue
(
sym
);

985 
sym_m©ch_¨r
[
˙t
].
so
 = 
m©ch
[0].
rm_so
;

986 
sym_m©ch_¨r
[
˙t
].
eo
 = 
m©ch
[0].
rm_eo
;

987 
sym_m©ch_¨r
[
˙t
++].
sym
 = sym;

989 i‡(
sym_m©ch_¨r
) {

990 
	`qs‹t
(
sym_m©ch_¨r
, 
˙t
, (
sym_m©ch
), 
sym_ªl_comp
);

991 
sym_¨r
 = 
	`mÆloc
((
˙t
+1Ë* (
symbﬁ
 *));

992 i‡(!
sym_¨r
)

993 
sym_ª_£¨ch_‰ì
;

994 
i
 = 0; i < 
˙t
; i++)

995 
sym_¨r
[
i
] = 
sym_m©ch_¨r
[i].
sym
;

996 
sym_¨r
[
˙t
] = 
NULL
;

998 
sym_ª_£¨ch_‰ì
:

1000 
	`‰ì
(
sym_m©ch_¨r
);

1001 
	`ªg‰ì
(&
ª
);

1003  
sym_¨r
;

1004 
	}
}

1012 
	sdï_°ack
 {

1013 
dï_°ack
 *
	m¥ev
, *
	m√xt
;

1014 
symbﬁ
 *
	msym
;

1015 
¥›îty
 *
	m¥›
;

1016 
ex¥
 **
	mex¥
;

1017 } *
	gcheck_t›
;

1019 
	$dï_°ack_ö£π
(
dï_°ack
 *
°ack
, 
symbﬁ
 *
sym
)

1021 
	`mem£t
(
°ack
, 0, (*stack));

1022 i‡(
check_t›
)

1023 
check_t›
->
√xt
 = 
°ack
;

1024 
°ack
->
¥ev
 = 
check_t›
;

1025 
°ack
->
sym
 = sym;

1026 
check_t›
 = 
°ack
;

1027 
	}
}

1029 
	$dï_°ack_ªmove
()

1031 
check_t›
 = check_t›->
¥ev
;

1032 i‡(
check_t›
)

1033 
check_t›
->
√xt
 = 
NULL
;

1034 
	}
}

1041 
	$sym_check_¥öt_ªcursive
(
symbﬁ
 *
œ°_sym
)

1043 
dï_°ack
 *
°ack
;

1044 
symbﬁ
 *
sym
, *
√xt_sym
;

1045 
míu
 *míu = 
NULL
;

1046 
¥›îty
 *
¥›
;

1047 
dï_°ack
 
cv_°ack
;

1049 i‡(
	`sym_is_choi˚_vÆue
(
œ°_sym
)) {

1050 
	`dï_°ack_ö£π
(&
cv_°ack
, 
œ°_sym
);

1051 
œ°_sym
 = 
	`¥›_gë_symbﬁ
(
	`sym_gë_choi˚_¥›
(last_sym));

1054 
°ack
 = 
check_t›
; sèck !
NULL
; sèck = sèck->
¥ev
)

1055 i‡(
°ack
->
sym
 =
œ°_sym
)

1057 i‡(!
°ack
) {

1058 
	`Ârötf
(
°dîr
, "unexpectedÑecursive dependencyÉrror\n");

1062 ; 
°ack
; sèck = sèck->
√xt
) {

1063 
sym
 = 
°ack
->sym;

1064 
√xt_sym
 = 
°ack
->
√xt
 ? sèck->√xt->
sym
 : 
œ°_sym
;

1065 
¥›
 = 
°ack
->prop;

1066 i‡(
¥›
 =
NULL
)

1067 
¥›
 = 
°ack
->
sym
->prop;

1070 i‡(
	`sym_is_choi˚
(
sym
Ë|| 
	`sym_is_choi˚_vÆue
(sym)) {

1071 
¥›
 = 
sym
->¥›;Ör›;Ör› =Ör›->
√xt
) {

1072 
míu
 = 
¥›
->menu;

1073 i‡(
¥›
->
míu
)

1077 i‡(
°ack
->
sym
 =
œ°_sym
)

1078 
	`Ârötf
(
°dîr
, "%s:%d:error:Ñecursive dependency detected!\n",

1079 
¥›
->
fûe
->
«me
,Ör›->
löío
);

1081 i‡(
	`sym_is_choi˚
(
sym
)) {

1082 
	`Ârötf
(
°dîr
, "%s:%d:\tchoice %s contains symbol %s\n",

1083 
míu
->
fûe
->
«me
, míu->
löío
,

1084 
sym
->
«me
 ? sym->name : "<choice>",

1085 
√xt_sym
->
«me
 ?Çext_sym->name : "<choice>");

1086 } i‡(
	`sym_is_choi˚_vÆue
(
sym
)) {

1087 
	`Ârötf
(
°dîr
, "%s:%d:\tsymbol %s isÖart of choice %s\n",

1088 
míu
->
fûe
->
«me
, míu->
löío
,

1089 
sym
->
«me
 ? sym->name : "<choice>",

1090 
√xt_sym
->
«me
 ?Çext_sym->name : "<choice>");

1091 } i‡(
°ack
->
ex¥
 =&
sym
->
dú_dï
.expr) {

1092 
	`Ârötf
(
°dîr
, "%s:%d:\tsymbol %s depends on %s\n",

1093 
¥›
->
fûe
->
«me
,Ör›->
löío
,

1094 
sym
->
«me
 ? sym->name : "<choice>",

1095 
√xt_sym
->
«me
 ?Çext_sym->name : "<choice>");

1096 } i‡(
°ack
->
ex¥
 =&
sym
->
ªv_dï
.expr) {

1097 
	`Ârötf
(
°dîr
, "%s:%d:\tsymbol %s is selected by %s\n",

1098 
¥›
->
fûe
->
«me
,Ör›->
löío
,

1099 
sym
->
«me
 ? sym->name : "<choice>",

1100 
√xt_sym
->
«me
 ?Çext_sym->name : "<choice>");

1101 } i‡(
°ack
->
ex¥
 =&
sym
->
im∂õd
.expr) {

1102 
	`Ârötf
(
°dîr
, "%s:%d:\tsymbol %s is implied by %s\n",

1103 
¥›
->
fûe
->
«me
,Ör›->
löío
,

1104 
sym
->
«me
 ? sym->name : "<choice>",

1105 
√xt_sym
->
«me
 ?Çext_sym->name : "<choice>");

1106 } i‡(
°ack
->
ex¥
) {

1107 
	`Ârötf
(
°dîr
, "%s:%d:\tsymbol %s %s value contains %s\n",

1108 
¥›
->
fûe
->
«me
,Ör›->
löío
,

1109 
sym
->
«me
 ? sym->name : "<choice>",

1110 
	`¥›_gë_ty≥_«me
(
¥›
->
ty≥
),

1111 
√xt_sym
->
«me
 ?Çext_sym->name : "<choice>");

1113 
	`Ârötf
(
°dîr
, "%s:%d:\tsymbol %s %s is visible depending on %s\n",

1114 
¥›
->
fûe
->
«me
,Ör›->
löío
,

1115 
sym
->
«me
 ? sym->name : "<choice>",

1116 
	`¥›_gë_ty≥_«me
(
¥›
->
ty≥
),

1117 
√xt_sym
->
«me
 ?Çext_sym->name : "<choice>");

1121 
	`Ârötf
(
°dîr
,

1126 i‡(
check_t›
 =&
cv_°ack
)

1127 
	`dï_°ack_ªmove
();

1128 
	}
}

1130 
symbﬁ
 *
	$sym_check_ex¥_dïs
(
ex¥
 *
e
)

1132 
symbﬁ
 *
sym
;

1134 i‡(!
e
)

1135  
NULL
;

1136 
e
->
ty≥
) {

1137 
E_OR
:

1138 
E_AND
:

1139 
sym
 = 
	`sym_check_ex¥_dïs
(
e
->
À·
.
ex¥
);

1140 i‡(
sym
)

1141  
sym
;

1142  
	`sym_check_ex¥_dïs
(
e
->
right
.
ex¥
);

1143 
E_NOT
:

1144  
	`sym_check_ex¥_dïs
(
e
->
À·
.
ex¥
);

1145 
E_EQUAL
:

1146 
E_GEQ
:

1147 
E_GTH
:

1148 
E_LEQ
:

1149 
E_LTH
:

1150 
E_UNEQUAL
:

1151 
sym
 = 
	`sym_check_dïs
(
e
->
À·
.sym);

1152 i‡(
sym
)

1153  
sym
;

1154  
	`sym_check_dïs
(
e
->
right
.
sym
);

1155 
E_SYMBOL
:

1156  
	`sym_check_dïs
(
e
->
À·
.
sym
);

1160 
	`Ârötf
(
°dîr
, "O›s! HowÅÿcheck %d?\n", 
e
->
ty≥
);

1161  
NULL
;

1162 
	}
}

1165 
symbﬁ
 *
	$sym_check_sym_dïs
(
symbﬁ
 *
sym
)

1167 
symbﬁ
 *
sym2
;

1168 
¥›îty
 *
¥›
;

1169 
dï_°ack
 
°ack
;

1171 
	`dï_°ack_ö£π
(&
°ack
, 
sym
);

1173 
°ack
.
ex¥
 = &
sym
->
dú_dï
.expr;

1174 
sym2
 = 
	`sym_check_ex¥_dïs
(
sym
->
dú_dï
.
ex¥
);

1175 i‡(
sym2
)

1176 
out
;

1178 
°ack
.
ex¥
 = &
sym
->
ªv_dï
.expr;

1179 
sym2
 = 
	`sym_check_ex¥_dïs
(
sym
->
ªv_dï
.
ex¥
);

1180 i‡(
sym2
)

1181 
out
;

1183 
°ack
.
ex¥
 = &
sym
->
im∂õd
.expr;

1184 
sym2
 = 
	`sym_check_ex¥_dïs
(
sym
->
im∂õd
.
ex¥
);

1185 i‡(
sym2
)

1186 
out
;

1188 
°ack
.
ex¥
 = 
NULL
;

1190 
¥›
 = 
sym
->¥›;Ör›;Ör› =Ör›->
√xt
) {

1191 i‡(
¥›
->
ty≥
 =
P_CHOICE
 ||Ör›->ty≥ =
P_SELECT
 ||

1192 
¥›
->
ty≥
 =
P_IMPLY
)

1194 
°ack
.
¥›
 =Örop;

1195 
sym2
 = 
	`sym_check_ex¥_dïs
(
¥›
->
visibÀ
.
ex¥
);

1196 i‡(
sym2
)

1198 i‡(
¥›
->
ty≥
 !
P_DEFAULT
 || 
	`sym_is_choi˚
(
sym
))

1200 
°ack
.
ex¥
 = &
¥›
->expr;

1201 
sym2
 = 
	`sym_check_ex¥_dïs
(
¥›
->
ex¥
);

1202 i‡(
sym2
)

1204 
°ack
.
ex¥
 = 
NULL
;

1207 
out
:

1208 
	`dï_°ack_ªmove
();

1210  
sym2
;

1211 
	}
}

1213 
symbﬁ
 *
	$sym_check_choi˚_dïs
(
symbﬁ
 *
choi˚
)

1215 
symbﬁ
 *
sym
, *
sym2
;

1216 
¥›îty
 *
¥›
;

1217 
ex¥
 *
e
;

1218 
dï_°ack
 
°ack
;

1220 
	`dï_°ack_ö£π
(&
°ack
, 
choi˚
);

1222 
¥›
 = 
	`sym_gë_choi˚_¥›
(
choi˚
);

1223 
	`ex¥_li°_f‹_óch_sym
(
¥›
->
ex¥
, 
e
, 
sym
)

1224 
sym
->
Êags
 |(
SYMBOL_CHECK
 | 
SYMBOL_CHECKED
);

1226 
choi˚
->
Êags
 |(
SYMBOL_CHECK
 | 
SYMBOL_CHECKED
);

1227 
sym2
 = 
	`sym_check_sym_dïs
(
choi˚
);

1228 
choi˚
->
Êags
 &~
SYMBOL_CHECK
;

1229 i‡(
sym2
)

1230 
out
;

1232 
	`ex¥_li°_f‹_óch_sym
(
¥›
->
ex¥
, 
e
, 
sym
) {

1233 
sym2
 = 
	`sym_check_sym_dïs
(
sym
);

1234 i‡(
sym2
)

1237 
out
:

1238 
	`ex¥_li°_f‹_óch_sym
(
¥›
->
ex¥
, 
e
, 
sym
)

1239 
sym
->
Êags
 &~
SYMBOL_CHECK
;

1241 i‡(
sym2
 && 
	`sym_is_choi˚_vÆue
(sym2) &&

1242 
	`¥›_gë_symbﬁ
(
	`sym_gë_choi˚_¥›
(
sym2
)Ë=
choi˚
)

1243 
sym2
 = 
choi˚
;

1245 
	`dï_°ack_ªmove
();

1247  
sym2
;

1248 
	}
}

1250 
symbﬁ
 *
	$sym_check_dïs
(
symbﬁ
 *
sym
)

1252 
symbﬁ
 *
sym2
;

1253 
¥›îty
 *
¥›
;

1255 i‡(
sym
->
Êags
 & 
SYMBOL_CHECK
) {

1256 
	`sym_check_¥öt_ªcursive
(
sym
);

1257  
sym
;

1259 i‡(
sym
->
Êags
 & 
SYMBOL_CHECKED
)

1260  
NULL
;

1262 i‡(
	`sym_is_choi˚_vÆue
(
sym
)) {

1263 
dï_°ack
 
°ack
;

1266 
	`dï_°ack_ö£π
(&
°ack
, 
sym
);

1267 
¥›
 = 
	`sym_gë_choi˚_¥›
(
sym
);

1268 
sym2
 = 
	`sym_check_dïs
(
	`¥›_gë_symbﬁ
(
¥›
));

1269 
	`dï_°ack_ªmove
();

1270 } i‡(
	`sym_is_choi˚
(
sym
)) {

1271 
sym2
 = 
	`sym_check_choi˚_dïs
(
sym
);

1273 
sym
->
Êags
 |(
SYMBOL_CHECK
 | 
SYMBOL_CHECKED
);

1274 
sym2
 = 
	`sym_check_sym_dïs
(
sym
);

1275 
sym
->
Êags
 &~
SYMBOL_CHECK
;

1278  
sym2
;

1279 
	}
}

1281 
symbﬁ
 *
	$¥›_gë_symbﬁ
(
¥›îty
 *
¥›
)

1283 i‡(
¥›
->
ex¥
 && (¥›->ex¥->
ty≥
 =
E_SYMBOL
 ||

1284 
¥›
->
ex¥
->
ty≥
 =
E_LIST
))

1285  
¥›
->
ex¥
->
À·
.
sym
;

1286  
NULL
;

1287 
	}
}

1289 c⁄° *
	$¥›_gë_ty≥_«me
(
¥›_ty≥
 
ty≥
)

1291 
ty≥
) {

1292 
P_PROMPT
:

1294 
P_COMMENT
:

1296 
P_MENU
:

1298 
P_DEFAULT
:

1300 
P_CHOICE
:

1302 
P_SELECT
:

1304 
P_IMPLY
:

1306 
P_RANGE
:

1308 
P_SYMBOL
:

1310 
P_UNKNOWN
:

1314 
	}
}

	@nemu/tools/kconfig/util.c

7 
	~<°d¨g.h
>

8 
	~<°dlib.h
>

9 
	~<°rög.h
>

10 
	~"lkc.h
"

13 
fûe
 *
	$fûe_lookup
(c⁄° *
«me
)

15 
fûe
 *file;

17 
fûe
 = 
fûe_li°
; fûe; fûêfûe->
√xt
) {

18 i‡(!
	`°rcmp
(
«me
, 
fûe
->name)) {

19  
fûe
;

23 
fûe
 = 
	`xmÆloc
((*file));

24 
	`mem£t
(
fûe
, 0, (*file));

25 
fûe
->
«me
 = 
	`x°rdup
(name);

26 
fûe
->
√xt
 = 
fûe_li°
;

27 
fûe_li°
 = 
fûe
;

28  
fûe
;

29 
	}
}

32 
g°r
 
	$°r_√w
()

34 
g°r
 
gs
;

35 
gs
.
s
 = 
	`xmÆloc
(() * 64);

36 
gs
.
Àn
 = 64;

37 
gs
.
max_width
 = 0;

38 
	`°r˝y
(
gs
.
s
, "\0");

39  
gs
;

40 
	}
}

43 
	$°r_‰ì
(
g°r
 *
gs
)

45 i‡(
gs
->
s
)

46 
	`‰ì
(
gs
->
s
);

47 
gs
->
s
 = 
NULL
;

48 
gs
->
Àn
 = 0;

49 
	}
}

52 
	$°r_≠≥nd
(
g°r
 *
gs
, c⁄° *
s
)

54 
size_t
 
l
;

55 i‡(
s
) {

56 
l
 = 
	`°æí
(
gs
->
s
) + strlen(s) + 1;

57 i‡(
l
 > 
gs
->
Àn
) {

58 
gs
->
s
 = 
	`xªÆloc
(gs->s, 
l
);

59 
gs
->
Àn
 = 
l
;

61 
	`°rˇt
(
gs
->
s
, s);

63 
	}
}

66 
	$°r_¥ötf
(
g°r
 *
gs
, c⁄° *
fmt
, ...)

68 
va_li°
 
≠
;

69 
s
[10000];

70 
	`va_°¨t
(
≠
, 
fmt
);

71 
	`v¢¥ötf
(
s
, (s), 
fmt
, 
≠
);

72 
	`°r_≠≥nd
(
gs
, 
s
);

73 
	`va_íd
(
≠
);

74 
	}
}

77 c⁄° *
	$°r_gë
(
g°r
 *
gs
)

79  
gs
->
s
;

80 
	}
}

82 *
	$xmÆloc
(
size_t
 
size
)

84 *
p
 = 
	`mÆloc
(
size
);

85 i‡(
p
)

86  
p
;

87 
	`Ârötf
(
°dîr
, "Out of memory.\n");

88 
	`exô
(1);

89 
	}
}

91 *
	$xˇŒoc
(
size_t
 
nmemb
, size_à
size
)

93 *
p
 = 
	`ˇŒoc
(
nmemb
, 
size
);

94 i‡(
p
)

95  
p
;

96 
	`Ârötf
(
°dîr
, "Out of memory.\n");

97 
	`exô
(1);

98 
	}
}

100 *
	$xªÆloc
(*
p
, 
size_t
 
size
)

102 
p
 = 
	`ªÆloc
’, 
size
);

103 i‡(
p
)

104  
p
;

105 
	`Ârötf
(
°dîr
, "Out of memory.\n");

106 
	`exô
(1);

107 
	}
}

109 *
	$x°rdup
(c⁄° *
s
)

111 *
p
;

113 
p
 = 
	`°rdup
(
s
);

114 i‡(
p
)

115  
p
;

116 
	`Ârötf
(
°dîr
, "Out of memory.\n");

117 
	`exô
(1);

118 
	}
}

120 *
	$x°∫dup
(c⁄° *
s
, 
size_t
 
n
)

122 *
p
;

124 
p
 = 
	`°∫dup
(
s
, 
n
);

125 i‡(
p
)

126  
p
;

127 
	`Ârötf
(
°dîr
, "Out of memory.\n");

128 
	`exô
(1);

129 
	}
}

	@nemu/tools/kvm-diff/include/paddr.h

	@nemu/tools/kvm-diff/src/kvm.c

2 
	~<mem‹y/∑ddr.h
>

3 
	~<iß-def.h
>

4 
	~<dif·e°-def.h
>

6 
	~<f˙é.h
>

7 
	~<î∫o.h
>

8 
	~<sys/io˘l.h
>

9 
	~<sys/mm™.h
>

10 
	~<löux/kvm.h
>

13 
	#CR0_PE
 1u

	)

14 
	#CR0_PG
 (1u << 31)

	)

16 
	#RFLAGS_ID
 (1u << 21)

	)

17 
	#RFLAGS_AC
 (1u << 18)

	)

18 
	#RFLAGS_RF
 (1u << 16)

	)

19 
	#RFLAGS_TF
 (1u << 8)

	)

20 
	#RFLAGS_AF
 (1u << 4)

	)

21 
	#RFLAGS_FIX_MASK
 (
RFLAGS_ID
 | 
RFLAGS_AC
 | 
RFLAGS_RF
 | 
RFLAGS_TF
 | 
RFLAGS_AF
)

	)

23 
	svm
 {

24 
	msys_fd
;

25 
	mfd
;

26 
uöt8_t
 *
	mmem
;

27 
uöt8_t
 *
	mmmio
;

30 
	sv˝u
 {

31 
	mfd
;

32 
kvm_run
 *
	mkvm_run
;

33 
	möt_wp_°©e
;

34 
	mhas_îr‹_code
;

35 
uöt32_t
 
	míåy
;

39 
	mSTATE_IDLE
,

40 
	mSTATE_INT_INST
,

41 
	mSTATE_IRET_INST
,

44 
vm
 
	gvm
;

45 
v˝u
 
	gv˝u
;

49 
	$kvm_£t_°ï_mode
(
boﬁ
 
w©ch
, 
uöt32_t
 
w©ch_addr
) {

50 
kvm_gue°_debug
 
debug
 = {};

51 
debug
.
c⁄åﬁ
 = 
KVM_GUESTDBG_ENABLE
 | 
KVM_GUESTDBG_SINGLESTEP
 | 
KVM_GUESTDBG_USE_HW_BP
;

52 
debug
.
¨ch
.
debugªg
[0] = 
w©ch_addr
;

53 
debug
.
¨ch
.
debugªg
[7] = (
w©ch
 ? 0x1 : 0x0);

54 i‡(
	`io˘l
(
v˝u
.
fd
, 
KVM_SET_GUEST_DEBUG
, &
debug
) < 0) {

55 
	`≥º‹
("KVM_SET_GUEST_DEBUG");

56 
	`as£π
(0);

58 
	}
}

60 
	$kvm_£åegs
(c⁄° 
kvm_ªgs
 *
r
) {

61 i‡(
	`io˘l
(
v˝u
.
fd
, 
KVM_SET_REGS
, 
r
) < 0) {

62 
	`≥º‹
("KVM_SET_REGS");

63 
	`as£π
(0);

65 
	`kvm_£t_°ï_mode
(
Ál£
, 0);

66 
	}
}

68 
	$kvm_gë§egs
(
kvm_§egs
 *
r
) {

69 i‡(
	`io˘l
(
v˝u
.
fd
, 
KVM_GET_SREGS
, 
r
) < 0) {

70 
	`≥º‹
("KVM_GET_SREGS");

71 
	`as£π
(0);

73 
	}
}

75 
	$kvm_£t§egs
(c⁄° 
kvm_§egs
 *
r
) {

76 i‡(
	`io˘l
(
v˝u
.
fd
, 
KVM_SET_SREGS
, 
r
) < 0) {

77 
	`≥º‹
("KVM_SET_SREGS");

78 
	`as£π
(0);

80 
	}
}

82 * 
	$¸óã_mem
(
¶Ÿ
, 
uöçå_t
 
ba£
, 
size_t
 
mem_size
) {

83 *
mem
 = 
	`mm≠
(
NULL
, 
mem_size
, 
PROT_READ
 | 
PROT_WRITE
,

84 
MAP_PRIVATE
 | 
MAP_ANONYMOUS
 | 
MAP_NORESERVE
, -1, 0);

85 i‡(
mem
 =
MAP_FAILED
) {

86 
	`≥º‹
("mmap mem");

87 
	`as£π
(0);

90 
	`madvi£
(
mem
, 
mem_size
, 
MADV_MERGEABLE
);

92 
kvm_u£r•a˚_mem‹y_ªgi⁄
 
memªg
;

93 
memªg
.
¶Ÿ
 = slot;

94 
memªg
.
Êags
 = 0;

95 
memªg
.
gue°_phys_addr
 = 
ba£
;

96 
memªg
.
mem‹y_size
 = 
mem_size
;

97 
memªg
.
u£r•a˚_addr
 = ()
mem
;

98 i‡(
	`io˘l
(
vm
.
fd
, 
KVM_SET_USER_MEMORY_REGION
, &
memªg
) < 0) {

99 
	`≥º‹
("KVM_SET_USER_MEMORY_REGION");

100 
	`as£π
(0);

102  
mem
;

103 
	}
}

105 
	$vm_öô
(
size_t
 
mem_size
) {

106 
≠i_vî
;

108 
vm
.
sys_fd
 = 
	`›í
("/dev/kvm", 
O_RDWR
);

109 i‡(
vm
.
sys_fd
 < 0) {

110 
	`≥º‹
("open /dev/kvm");

111 
	`as£π
(0);

114 
≠i_vî
 = 
	`io˘l
(
vm
.
sys_fd
, 
KVM_GET_API_VERSION
, 0);

115 i‡(
≠i_vî
 < 0) {

116 
	`≥º‹
("KVM_GET_API_VERSION");

117 
	`as£π
(0);

120 i‡(
≠i_vî
 !
KVM_API_VERSION
) {

121 
	`Ârötf
(
°dîr
, "Got KVMápi version %d,Éxpected %d\n",

122 
≠i_vî
, 
KVM_API_VERSION
);

123 
	`as£π
(0);

126 
vm
.
fd
 = 
	`io˘l
(vm.
sys_fd
, 
KVM_CREATE_VM
, 0);

127 i‡(
vm
.
fd
 < 0) {

128 
	`≥º‹
("KVM_CREATE_VM");

129 
	`as£π
(0);

132 i‡(
	`io˘l
(
vm
.
fd
, 
KVM_SET_TSS_ADDR
, 0xfffbd000) < 0) {

133 
	`≥º‹
("KVM_SET_TSS_ADDR");

134 
	`as£π
(0);

137 
vm
.
mem
 = 
	`¸óã_mem
(0, 0, 
mem_size
);

138 
vm
.
mmio
 = 
	`¸óã_mem
(1, 0xa1000000, 0x1000);

139 
	}
}

141 
	$v˝u_öô
() {

142 
v˝u_mm≠_size
;

144 
v˝u
.
fd
 = 
	`io˘l
(
vm
.fd, 
KVM_CREATE_VCPU
, 0);

145 i‡(
v˝u
.
fd
 < 0) {

146 
	`≥º‹
("KVM_CREATE_VCPU");

147 
	`as£π
(0);

150 
v˝u_mm≠_size
 = 
	`io˘l
(
vm
.
sys_fd
, 
KVM_GET_VCPU_MMAP_SIZE
, 0);

151 i‡(
v˝u_mm≠_size
 <= 0) {

152 
	`≥º‹
("KVM_GET_VCPU_MMAP_SIZE");

153 
	`as£π
(0);

156 
v˝u
.
kvm_run
 = 
	`mm≠
(
NULL
, 
v˝u_mm≠_size
, 
PROT_READ
 | 
PROT_WRITE
,

157 
MAP_SHARED
, 
v˝u
.
fd
, 0);

158 i‡(
v˝u
.
kvm_run
 =
MAP_FAILED
) {

159 
	`≥º‹
("mmap kvm_run");

160 
	`as£π
(0);

163 
v˝u
.
kvm_run
->
kvm_vÆid_ªgs
 = 
KVM_SYNC_X86_REGS
 | 
KVM_SYNC_X86_SREGS
;

164 
v˝u
.
öt_wp_°©e
 = 
STATE_IDLE
;

165 
	}
}

167 c⁄° 
uöt8_t
 
	gmbr
[] = {

184 
	$£tup_¥Ÿe˘ed_mode
(
kvm_§egs
 *
§egs
) {

185 
kvm_£gmít
 
£g
 = {

186 .
ba£
 = 0,

187 .
limô
 = 0xffffffff,

188 .
£À˘‹
 = 1 << 3,

189 .
¥e£¡
 = 1,

190 .
ty≥
 = 11,

191 .
d∂
 = 0,

192 .
db
 = 1,

193 .
s
 = 1,

194 .
l
 = 0,

195 .
g
 = 1,

198 
§egs
->
¸0
 |
CR0_PE
;

200 
§egs
->
cs
 = 
£g
;

202 
£g
.
ty≥
 = 3;

203 
£g
.
£À˘‹
 = 2 << 3;

204 
§egs
->
ds
 = sªgs->
es
 = sªgs->
fs
 = sªgs->
gs
 = sªgs->
ss
 = 
£g
;

205 
	}
}

207 
uöt64_t
 
	$va2∑
(
uöt64_t
 
va
) {

208 i‡(
v˝u
.
kvm_run
->
s
.
ªgs
.
§egs
.
¸0
 & 
CR0_PG
) {

209 
kvm_å™¶©i⁄
 
t
 = { .
löór_addªss
 = 
va
 };

210 
ªt
 = 
	`io˘l
(
v˝u
.
fd
, 
KVM_TRANSLATE
, &
t
);

211 
	`as£π
(
ªt
 == 0);

212  
t
.
vÆid
 ?Å.
physiˇl_addªss
 : -1ull;

214  
va
;

215 
	}
}

217 
	$∑tchög
() {

219 
uöt32_t
 
pc
 = 
	`va2∑
(
v˝u
.
kvm_run
->
s
.
ªgs
.ªgs.
rù
);

220 i‡(
pc
 == 0xffffffff)  0;

221 i‡(
vm
.
mem
[
pc
] == 0x9c) {

222 i‡(
v˝u
.
öt_wp_°©e
 =
STATE_INT_INST
)  0;

223 
v˝u
.
kvm_run
->
s
.
ªgs
.ªgs.
r•
 -= 4;

224 
uöt32_t
 
e•
 = 
	`va2∑
(
v˝u
.
kvm_run
->
s
.
ªgs
.ªgs.
r•
);

225 *(
uöt32_t
 *)(
vm
.
mem
 + 
e•
Ë
v˝u
.
kvm_run
->
s
.
ªgs
.ªgs.
rÊags
 & ~
RFLAGS_FIX_MASK
;

226 
v˝u
.
kvm_run
->
s
.
ªgs
.ªgs.
rÊags
 |
RFLAGS_TF
;

227 
v˝u
.
kvm_run
->
s
.
ªgs
.ªgs.
rù
 ++;

228 
v˝u
.
kvm_run
->
kvm_dúty_ªgs
 = 
KVM_SYNC_X86_REGS
;

231 i‡(
vm
.
mem
[
pc
] == 0x9d) {

232 i‡(
v˝u
.
öt_wp_°©e
 =
STATE_INT_INST
)  0;

233 
uöt32_t
 
e•
 = 
	`va2∑
(
v˝u
.
kvm_run
->
s
.
ªgs
.ªgs.
r•
);

234 
v˝u
.
kvm_run
->
s
.
ªgs
.ªgs.
rÊags
 = *(
uöt32_t
 *)(
vm
.
mem
 + 
e•
Ë| 
RFLAGS_TF
 | 2;

235 
v˝u
.
kvm_run
->
s
.
ªgs
.ªgs.
r•
 += 4;

236 
v˝u
.
kvm_run
->
s
.
ªgs
.ªgs.
rù
 ++;

237 
v˝u
.
kvm_run
->
kvm_dúty_ªgs
 = 
KVM_SYNC_X86_REGS
;

240 i‡(
vm
.
mem
[
pc
] == 0xcf) {

241 
uöt32_t
 
ªt_addr
 = 
	`va2∑
(
v˝u
.
kvm_run
->
s
.
ªgs
.ªgs.
r•
);

242 
uöt32_t
 
eù
 = *(uöt32_à*)(
vm
.
mem
 + 
ªt_addr
);

243 
v˝u
.
íåy
 = 
eù
;

244 
	`kvm_£t_°ï_mode
(
åue
, 
eù
);

245 
v˝u
.
öt_wp_°©e
 = 
STATE_IRET_INST
;

249 
	}
}

251 
	$fix_push_§eg
() {

252 
uöt32_t
 
e•
 = 
	`va2∑
(
v˝u
.
kvm_run
->
s
.
ªgs
.ªgs.
r•
);

253 *(
uöt32_t
 *)(
vm
.
mem
 + 
e•
) &= 0x0000ffff;

254 
	}
}

256 
	$∑tchög_a·î
(
uöt64_t
 
œ°_pc
) {

257 
uöt32_t
 
pc
 = 
	`va2∑
(
œ°_pc
);

258 i‡(
pc
 == 0xffffffff) ;

259 
uöt8_t
 
›code
 = 
vm
.
mem
[
pc
];

260 i‡(
›code
 == 0x1e || opcode == 0x06) {

261 
	`fix_push_§eg
();

262 
	`as£π
(
v˝u
.
kvm_run
->
s
.
ªgs
.ªgs.
rù
 =
œ°_pc
 + 1);

264 i‡(
›code
 == 0x0f) {

265 
uöt8_t
 
›code2
 = 
vm
.
mem
[
pc
 + 1];

266 i‡(
›code2
 == 0xa0) {

267 
	`fix_push_§eg
();

268 
	`as£π
(
v˝u
.
kvm_run
->
s
.
ªgs
.ªgs.
rù
 =
œ°_pc
 + 2);

271 
	}
}

273 
	$kvm_exec
(
uöt64_t
 
n
) {

274 ; 
n
 > 0;Ç --) {

275 i‡(
	`∑tchög
()) ;

277 
uöt64_t
 
pc
 = 
v˝u
.
kvm_run
->
s
.
ªgs
.ªgs.
rù
;

278 i‡(
	`io˘l
(
v˝u
.
fd
, 
KVM_RUN
, 0) < 0) {

279 i‡(
î∫o
 =
EINTR
) {

280 
n
 ++;

283 
	`≥º‹
("KVM_RUN");

284 
	`as£π
(0);

287 i‡(
v˝u
.
kvm_run
->
exô_ªas⁄
 !
KVM_EXIT_DEBUG
) {

288 i‡(
v˝u
.
kvm_run
->
exô_ªas⁄
 =
KVM_EXIT_HLT
) ;

289 
	`Ârötf
(
°dîr
, "GotÉxit_reason %dátÖc = 0x%llx,Éxpected KVM_EXIT_DEBUG (%d)\n",

290 
v˝u
.
kvm_run
->
exô_ªas⁄
, v˝u.kvm_run->
s
.
ªgs
.ªgs.
rù
, 
KVM_EXIT_DEBUG
);

291 
	`as£π
(0);

293 
	`∑tchög_a·î
(
pc
);

294 i‡(
v˝u
.
öt_wp_°©e
 =
STATE_INT_INST
) {

295 
uöt32_t
 
eÊag_off£t
 = 8 + (
v˝u
.
has_îr‹_code
 ? 4 : 0);

296 
uöt32_t
 
eÊag_addr
 = 
	`va2∑
(
v˝u
.
kvm_run
->
s
.
ªgs
.ªgs.
r•
 + 
eÊag_off£t
);

297 *(
uöt32_t
 *)(
vm
.
mem
 + 
eÊag_addr
Ë&~
RFLAGS_FIX_MASK
;

299 
	`As£π
(
v˝u
.
íåy
 =v˝u.
kvm_run
->
debug
.
¨ch
.
pc
,

300 "íåyÇŸ m©ch,Ñighà0x%Œx, wr⁄g = 0x%x", 
v˝u
.
kvm_run
->
debug
.
¨ch
.
pc
, v˝u.
íåy
);

301 
	`kvm_£t_°ï_mode
(
Ál£
, 0);

302 
v˝u
.
öt_wp_°©e
 = 
STATE_IDLE
;

305 } i‡(
v˝u
.
öt_wp_°©e
 =
STATE_IRET_INST
) {

306 
	`As£π
(
v˝u
.
íåy
 =v˝u.
kvm_run
->
debug
.
¨ch
.
pc
,

307 "íåyÇŸ m©ch,Ñighà0x%Œx, wr⁄g = 0x%x", 
v˝u
.
kvm_run
->
debug
.
¨ch
.
pc
, v˝u.
íåy
);

308 
	`kvm_£t_°ï_mode
(
Ál£
, 0);

309 
v˝u
.
öt_wp_°©e
 = 
STATE_IDLE
;

313 
	}
}

315 
	$run_¥Ÿe˘ed_mode
() {

316 
kvm_§egs
 
§egs
;

317 
	`kvm_gë§egs
(&
§egs
);

318 
	`£tup_¥Ÿe˘ed_mode
(&
§egs
);

319 
	`kvm_£t§egs
(&
§egs
);

321 
kvm_ªgs
 
ªgs
;

322 
	`mem£t
(&
ªgs
, 0, (regs));

323 
ªgs
.
rÊags
 = 2;

324 
ªgs
.
rù
 = 0x7c00;

326 
	`kvm_£åegs
(&
ªgs
);

328 
	`mem˝y
(
vm
.
mem
 + 0x7c00, 
mbr
, (mbr));

330 
	`kvm_exec
(10);

331 
	}
}

333 
	$dif·e°_mem˝y
(
∑ddr_t
 
addr
, *
buf
, 
size_t
 
n
, 
boﬁ
 
dúe˘i⁄
) {

334 i‡(
dúe˘i⁄
 =
DIFFTEST_TO_REF
Ë
	`mem˝y
(
vm
.
mem
 + 
addr
, 
buf
, 
n
);

335 
	`mem˝y
(
buf
, 
vm
.
mem
 + 
addr
, 
n
);

336 
	}
}

338 
	$dif·e°_ªg˝y
(*
r
, 
boﬁ
 
dúe˘i⁄
) {

339 
kvm_ªgs
 *
ªf
 = &(
v˝u
.
kvm_run
->
s
.
ªgs
.regs);

340 
x86_CPU_°©e
 *
x86
 = 
r
;

341 i‡(
dúe˘i⁄
 =
DIFFTEST_TO_REF
) {

342 
ªf
->
øx
 = 
x86
->
óx
;

343 
ªf
->
rbx
 = 
x86
->
ebx
;

344 
ªf
->
rcx
 = 
x86
->
ecx
;

345 
ªf
->
rdx
 = 
x86
->
edx
;

346 
ªf
->
r•
 = 
x86
->
e•
;

347 
ªf
->
rbp
 = 
x86
->
ebp
;

348 
ªf
->
rsi
 = 
x86
->
esi
;

349 
ªf
->
rdi
 = 
x86
->
edi
;

350 
ªf
->
rù
 = 
x86
->
pc
;

351 
ªf
->
rÊags
 |
RFLAGS_TF
;

352 
v˝u
.
kvm_run
->
kvm_dúty_ªgs
 = 
KVM_SYNC_X86_REGS
;

354 
x86
->
óx
 = 
ªf
->
øx
;

355 
x86
->
ebx
 = 
ªf
->
rbx
;

356 
x86
->
ecx
 = 
ªf
->
rcx
;

357 
x86
->
edx
 = 
ªf
->
rdx
;

358 
x86
->
e•
 = 
ªf
->
r•
;

359 
x86
->
ebp
 = 
ªf
->
rbp
;

360 
x86
->
esi
 = 
ªf
->
rsi
;

361 
x86
->
edi
 = 
ªf
->
rdi
;

362 
x86
->
pc
 = 
ªf
->
rù
;

364 
	}
}

366 
	$dif·e°_exec
(
uöt64_t
 
n
) {

367 
	`kvm_exec
(
n
);

368 
	}
}

370 
	$dif·e°_øi£_öå
(
w‹d_t
 
NO
) {

371 
uöt32_t
 
pg©e_vaddr
 = 
v˝u
.
kvm_run
->
s
.
ªgs
.
§egs
.
idt
.
ba£
 + 
NO
 * 8;

372 
uöt32_t
 
pg©e
 = 
	`va2∑
(
pg©e_vaddr
);

374 
uöt32_t
 
íåy
 = 
vm
.
mem
[
pg©e
] | (vm.mem[pgate + 1] << 8) |

375 (
vm
.
mem
[
pg©e
 + 6] << 16) | (vm.mem[pgate + 7] << 24);

376 
	`kvm_£t_°ï_mode
(
åue
, 
íåy
);

377 
v˝u
.
öt_wp_°©e
 = 
STATE_INT_INST
;

378 
v˝u
.
has_îr‹_code
 = (
NO
 == 14);

379 
v˝u
.
íåy
 =Éntry;

381 i‡(
NO
 == 48) {

383 
kvm_öãºu±
 
öå
 = { .
úq
 = 
NO
 };

384 
ªt
 = 
	`io˘l
(
v˝u
.
fd
, 
KVM_INTERRUPT
, &
öå
);

385 
	`as£π
(
ªt
 == 0);

387 
	}
}

389 
	$dif·e°_öô
(
p‹t
) {

390 
	`vm_öô
(
CONFIG_MSIZE
);

391 
	`v˝u_öô
();

392 
	`run_¥Ÿe˘ed_mode
();

393 
	}
}

	@nemu/tools/qemu-diff/include/common.h

1 #i‚de‡
__COMMON_H__


2 
	#__COMMON_H__


	)

4 
	~<°döt.h
>

5 
	~<°dboﬁ.h
>

6 
	~<as£π.h
>

7 
	~<°rög.h
>

8 
	~<°dio.h
>

9 
	~<uni°d.h
>

10 
	~<°dlib.h
>

12 
uöt32_t
 
	t∑ddr_t
;

14 
	~"iß.h
"

15 
	~"¥Ÿocﬁ.h
"

	@nemu/tools/qemu-diff/include/isa.h

1 #i‚de‡
__ISA_H__


2 
	#__ISA_H__


	)

4 #i‡
deföed
(
CONFIG_ISA_mùs32
)

5 
	#ISA_QEMU_BIN
 "qemu-sy°em-mù£l"

	)

6 
	#ISA_QEMU_ARGS
 "-machine", "mipssim",\

7 "-kî√l", 
NEMU_HOME
 "/ªsour˚/mùs-ñf/mùs.dummy",

	)

8 #ñi‡
deföed
(
CONFIG_ISA_riscv32
)

9 
	#ISA_QEMU_BIN
 "qemu-sy°em-riscv32"

	)

10 
	#ISA_QEMU_ARGS
 "-bios", "n⁄e",

	)

11 #ñi‡
deföed
(
CONFIG_ISA_riscv64
)

12 
	#ISA_QEMU_BIN
 "qemu-sy°em-riscv64"

	)

13 
	#ISA_QEMU_ARGS


	)

14 #ñi‡
deföed
(
CONFIG_ISA_x86
)

15 
	#ISA_QEMU_BIN
 "qemu-sy°em-i386"

	)

16 
	#ISA_QEMU_ARGS


	)

18 #îr‹ 
Unsuµ‹t
 
ISA


21 
	uiß_gdb_ªgs
 {

23 #i‡
deföed
(
CONFIG_ISA_mùs32
)

24 
uöt32_t
 
	mg¥
[32];

25 
uöt32_t
 
	m°©us
, 
	mlo
, 
	mhi
, 
	mbadvaddr
, 
	mˇu£
, 
	mpc
;

26 #ñi‡
deföed
(
CONFIG_ISA_riscv32
)

27 
uöt32_t
 
	mg¥
[32];

28 
uöt32_t
 
	mpc
;

29 #ñi‡
deföed
(
CONFIG_ISA_riscv64
)

30 
uöt64_t
 
	mg¥
[32];

31 
uöt64_t
 
	mÂr
[32];

32 
uöt64_t
 
	mpc
;

33 #ñi‡
deföed
(
CONFIG_ISA_x86
)

34 
uöt32_t
 
	móx
, 
	mecx
, 
	medx
, 
	mebx
, 
	me•
, 
	mebp
, 
	mesi
, 
	medi
;

35 
uöt32_t
 
	meù
, 
	meÊags
;

36 
uöt32_t
 
	mcs
, 
	mss
, 
	mds
, 
	mes
, 
	mfs
, 
	mgs
;

40 
uöt32_t
 
	m¨øy
[77];

	@nemu/tools/qemu-diff/include/protocol.h

20 
	~<°döt.h
>

22 
	ggdb_c⁄n
;

24 
uöt16_t
 
gdb_decode_hex
(
uöt8_t
 
msb
, uöt8_à
lsb
);

25 
uöt64_t
 
gdb_decode_hex_°r
(
uöt8_t
 *
byãs
);

27 
uöt8_t
 
hex_ícode
(uöt8_à
digô
);

29 
gdb_c⁄n
 *
gdb_begö_öë
(c⁄° *
addr
, 
uöt16_t
 
p‹t
);

31 
gdb_íd
(
gdb_c⁄n
 *
c⁄n
);

33 
gdb_£nd
(
gdb_c⁄n
 *
c⁄n
, c⁄° 
uöt8_t
 *
comm™d
, 
size_t
 
size
);

35 
uöt8_t
 *
gdb_ªcv
(
gdb_c⁄n
 *
c⁄n
, 
size_t
 *
size
);

37 c⁄° * 
gdb_°¨t_nﬂck
(
gdb_c⁄n
 *
c⁄n
);

	@nemu/tools/qemu-diff/src/diff-test.c

1 
	~"comm⁄.h
"

2 
	~<dif·e°-def.h
>

3 
	~<sys/¥˘l.h
>

4 
	~<sig«l.h
>

6 
boﬁ
 
gdb_c⁄√˘_qemu
();

7 
boﬁ
 
gdb_mem˝y_to_qemu
(
uöt32_t
, *, );

8 
boﬁ
 
gdb_gëªgs
(
iß_gdb_ªgs
 *);

9 
boﬁ
 
gdb_£åegs
(
iß_gdb_ªgs
 *);

10 
boﬁ
 
gdb_si
();

11 
gdb_exô
();

13 
öô_iß
();

15 
	$dif·e°_mem˝y
(
∑ddr_t
 
addr
, *
buf
, 
size_t
 
n
, 
boﬁ
 
dúe˘i⁄
) {

16 
	`as£π
(
dúe˘i⁄
 =
DIFFTEST_TO_REF
);

17 i‡(
dúe˘i⁄
 =
DIFFTEST_TO_REF
) {

18 
boﬁ
 
ok
 = 
	`gdb_mem˝y_to_qemu
(
addr
, 
buf
, 
n
);

19 
	`as£π
(
ok
 == 1);

21 
	}
}

23 
	$dif·e°_ªg˝y
(*
dut
, 
boﬁ
 
dúe˘i⁄
) {

24 
iß_gdb_ªgs
 
qemu_r
;

25 
	`gdb_gëªgs
(&
qemu_r
);

26 i‡(
dúe˘i⁄
 =
DIFFTEST_TO_REF
) {

27 
	`mem˝y
(&
qemu_r
, 
dut
, 
DIFFTEST_REG_SIZE
);

28 
	`gdb_£åegs
(&
qemu_r
);

30 
	`mem˝y
(
dut
, &
qemu_r
, 
DIFFTEST_REG_SIZE
);

32 
	}
}

34 
	$dif·e°_exec
(
uöt64_t
 
n
) {

35 
n
 --Ë
	`gdb_si
();

36 
	}
}

38 
	$dif·e°_öô
(
p‹t
) {

39 
buf
[32];

40 
	`•rötf
(
buf
, "t˝::%d", 
p‹t
);

42 
µid_bef‹e_f‹k
 = 
	`gëpid
();

43 
pid
 = 
	`f‹k
();

44 i‡(
pid
 == -1) {

45 
	`≥º‹
("fork");

46 
	`as£π
(0);

48 i‡(
pid
 == 0) {

52 
r
 = 
	`¥˘l
(
PR_SET_PDEATHSIG
, 
SIGTERM
);

53 i‡(
r
 == -1) {

54 
	`≥º‹
("prctlÉrror");

55 
	`as£π
(0);

58 i‡(
	`gëµid
(Ë!
µid_bef‹e_f‹k
) {

59 
	`¥ötf
("parent has died!\n");

60 
	`as£π
(0);

63 
	`˛o£
(
STDIN_FILENO
);

64 
	`exe˛p
(
ISA_QEMU_BIN
, ISA_QEMU_BIN, 
ISA_QEMU_ARGS
 "-S", "-gdb", 
buf
, "-nographic",

65 "-£rül", "n⁄e", "-m⁄ô‹", "n⁄e", 
NULL
);

66 
	`≥º‹
("exec");

67 
	`as£π
(0);

72 
	`gdb_c⁄√˘_qemu
(
p‹t
);

73 
	`¥ötf
("C⁄√˘ÅÿQEMU wôh %†suc˚ssfuŒy\n", 
buf
);

75 
	`©exô
(
gdb_exô
);

77 
	`öô_iß
();

79 
	}
}

81 
	$dif·e°_øi£_öå
(
uöt64_t
 
NO
) {

82 
	`¥ötf
("raise_intr isÇot supported\n");

83 
	`as£π
(0);

84 
	}
}

	@nemu/tools/qemu-diff/src/gdb-host.c

1 
	~"comm⁄.h
"

3 
gdb_c⁄n
 *
	gc⁄n
;

5 
boﬁ
 
	$gdb_c⁄√˘_qemu
(
p‹t
) {

7 (
c⁄n
 = 
	`gdb_begö_öë
("127.0.0.1", 
p‹t
)Ë=
NULL
) {

8 
	`u¶ìp
(1);

11  
åue
;

12 
	}
}

14 
boﬁ
 
	$gdb_mem˝y_to_qemu_smÆl
(
uöt32_t
 
de°
, *
§c
, 
Àn
) {

15 *
buf
 = 
	`mÆloc
(
Àn
 * 2 + 128);

16 
	`as£π
(
buf
 !
NULL
);

17 
p
 = 
	`•rötf
(
buf
, "M0x%x,%x:", 
de°
, 
Àn
);

18 
i
;

19 
i
 = 0; i < 
Àn
; i ++) {

20 
p
 +
	`•rötf
(
buf
 +Ö, "%c%c", 
	`hex_ícode
(((
uöt8_t
 *)
§c
)[
i
] >> 4), hex_encode(((uint8_t *)src)[i] & 0xf));

23 
	`gdb_£nd
(
c⁄n
, (c⁄° 
uöt8_t
 *)
buf
, 
	`°æí
(buf));

24 
	`‰ì
(
buf
);

26 
size_t
 
size
;

27 
uöt8_t
 *
ª∂y
 = 
	`gdb_ªcv
(
c⁄n
, &
size
);

28 
boﬁ
 
ok
 = !
	`°rcmp
((c⁄° *)
ª∂y
, "OK");

29 
	`‰ì
(
ª∂y
);

31  
ok
;

32 
	}
}

34 
boﬁ
 
	$gdb_mem˝y_to_qemu
(
uöt32_t
 
de°
, *
§c
, 
Àn
) {

35 c⁄° 
mtu
 = 1500;

36 
boﬁ
 
ok
 = 
åue
;

37 
Àn
 > 
mtu
) {

38 
ok
 &
	`gdb_mem˝y_to_qemu_smÆl
(
de°
, 
§c
, 
mtu
);

39 
de°
 +
mtu
;

40 
§c
 +
mtu
;

41 
Àn
 -
mtu
;

43 
ok
 &
	`gdb_mem˝y_to_qemu_smÆl
(
de°
, 
§c
, 
Àn
);

44  
ok
;

45 
	}
}

47 
boﬁ
 
	$gdb_gëªgs
(
iß_gdb_ªgs
 *
r
) {

48 
	`gdb_£nd
(
c⁄n
, (c⁄° 
uöt8_t
 *)"g", 1);

49 
size_t
 
size
;

50 
uöt8_t
 *
ª∂y
 = 
	`gdb_ªcv
(
c⁄n
, &
size
);

52 
i
;

53 
uöt8_t
 *
p
 = 
ª∂y
;

54 
uöt8_t
 
c
;

55 
i
 = 0; i < (
iß_gdb_ªgs
Ë/ (
uöt32_t
); i ++) {

56 
c
 = 
p
[8];

57 
p
[8] = '\0';

58 
r
->
¨øy
[
i
] = 
	`gdb_decode_hex_°r
(
p
);

59 
p
[8] = 
c
;

60 
p
 += 8;

63 
	`‰ì
(
ª∂y
);

65  
åue
;

66 
	}
}

68 
boﬁ
 
	$gdb_£åegs
(
iß_gdb_ªgs
 *
r
) {

69 
Àn
 = (
iß_gdb_ªgs
);

70 *
buf
 = 
	`mÆloc
(
Àn
 * 2 + 128);

71 
	`as£π
(
buf
 !
NULL
);

72 
buf
[0] = 'G';

74 *
§c
 = 
r
;

75 
p
 = 1;

76 
i
;

77 
i
 = 0; i < 
Àn
; i ++) {

78 
p
 +
	`•rötf
(
buf
 +Ö, "%c%c", 
	`hex_ícode
(((
uöt8_t
 *)
§c
)[
i
] >> 4), hex_encode(((uint8_t *)src)[i] & 0xf));

81 
	`gdb_£nd
(
c⁄n
, (c⁄° 
uöt8_t
 *)
buf
, 
	`°æí
(buf));

82 
	`‰ì
(
buf
);

84 
size_t
 
size
;

85 
uöt8_t
 *
ª∂y
 = 
	`gdb_ªcv
(
c⁄n
, &
size
);

86 
boﬁ
 
ok
 = !
	`°rcmp
((c⁄° *)
ª∂y
, "OK");

87 
	`‰ì
(
ª∂y
);

89  
ok
;

90 
	}
}

92 
boﬁ
 
	$gdb_si
() {

93 
buf
[] = "vCont;s:1";

94 
	`gdb_£nd
(
c⁄n
, (c⁄° 
uöt8_t
 *)
buf
, 
	`°æí
(buf));

95 
size_t
 
size
;

96 
uöt8_t
 *
ª∂y
 = 
	`gdb_ªcv
(
c⁄n
, &
size
);

97 
	`‰ì
(
ª∂y
);

98  
åue
;

99 
	}
}

101 
	$gdb_exô
() {

102 
	`gdb_íd
(
c⁄n
);

103 
	}
}

	@nemu/tools/qemu-diff/src/isa.c

1 
	~"comm⁄.h
"

3 #i‡
deföed
(
CONFIG_ISA_x86
)

5 
boﬁ
 
gdb_mem˝y_to_qemu
(
uöt32_t
, *, );

6 
boﬁ
 
gdb_gëªgs
(
iß_gdb_ªgs
 *);

7 
boﬁ
 
gdb_£åegs
(
iß_gdb_ªgs
 *);

8 
dif·e°_exec
(
uöt64_t
 
n
);

10 
uöt8_t
 
	gmbr
[] = {

40 
	$öô_iß
() {

42 
boﬁ
 
ok
 = 
	`gdb_mem˝y_to_qemu
(0x7c00, 
mbr
, (mbr));

43 
	`as£π
(
ok
 == 1);

45 
iß_gdb_ªgs
 
r
;

46 
	`gdb_gëªgs
(&
r
);

49 
r
.
eù
 = 0x7c00;

50 
r
.
cs
 = 0x0000;

51 
ok
 = 
	`gdb_£åegs
(&
r
);

52 
	`as£π
(
ok
 == 1);

55 
	`dif·e°_exec
(20);

56 
	}
}

60 
	$öô_iß
() {

61 
	}
}

	@nemu/tools/qemu-diff/src/protocol.c

20 
	~"comm⁄.h
"

21 
	~<˘y≥.h
>

22 
	~<îr.h
>

24 
	~<¨∑/öë.h
>

26 
	~<√töë/ö.h
>

27 
	~<√töë/t˝.h
>

29 
	~<sys/sockë.h
>

30 
	~<sys/ty≥s.h
>

32 
	sgdb_c⁄n
 {

33 
FILE
 *
	mö
;

34 
FILE
 *
	mout
;

35 
boﬁ
 
	mack
;

39 
uöt8_t


40 
	$hex_nibbÀ
(
uöt8_t
 
hex
) {

41  
	`isdigô
(
hex
Ë? hex - '0' : 
	`tﬁowî
(hex) - 'a' + 10;

42 
	}
}

44 
uöt8_t
 
	$hex_ícode
(
uöt8_t
 
digô
) {

45  
digô
 > 9 ? 'a' + digit - 10 : '0' + digit;

46 
	}
}

48 
uöt16_t
 
	$gdb_decode_hex
(
uöt8_t
 
msb
, uöt8_à
lsb
) {

49 i‡(!
	`isxdigô
(
msb
Ë|| !isxdigô(
lsb
))

50  
UINT16_MAX
;

51  16 * 
	`hex_nibbÀ
(
msb
Ë+ hex_nibbÀ(
lsb
);

52 
	}
}

54 
uöt64_t
 
	$gdb_decode_hex_°r
(
uöt8_t
 *
byãs
) {

55 
uöt64_t
 
vÆue
 = 0;

56 
uöt64_t
 
weight
 = 1;

57 
	`isxdigô
(
byãs
[0]) && isxdigit(bytes[1])) {

58 
vÆue
 +
weight
 * 
	`gdb_decode_hex
(
byãs
[0], bytes[1]);

59 
byãs
 += 2;

60 
weight
 *= 16 * 16;

62  
vÆue
;

63 
	}
}

66 
gdb_c⁄n
* 
	$gdb_begö
(
fd
) {

67 
gdb_c⁄n
 *
c⁄n
 = 
	`ˇŒoc
(1, (gdb_conn));

68 i‡(
c⁄n
 =
NULL
)

69 
	`îr
(1, "calloc");

71 
c⁄n
->
ack
 = 
åue
;

74 
fd2
 = 
	`dup
(
fd
);

75 i‡(
fd2
 < 0)

76 
	`îr
(1, "dup");

79 
c⁄n
->
ö
 = 
	`fd›í
(
fd
, "rb");

80 i‡(
c⁄n
->
ö
 =
NULL
)

81 
	`îr
(1, "fdopen");

84 
c⁄n
->
out
 = 
	`fd›í
(
fd2
, "wb");

85 i‡(
c⁄n
->
out
 =
NULL
)

86 
	`îr
(1, "fdopen");

89 
	`Âutc
('+', 
c⁄n
->
out
);

90 
	`fÊush
(
c⁄n
->
out
);

92  
c⁄n
;

93 
	}
}

95 
gdb_c⁄n
* 
	$gdb_begö_öë
(c⁄° *
addr
, 
uöt16_t
 
p‹t
) {

97 
sockaddr_ö
 
ß
 = {

98 .
sö_Ámûy
 = 
AF_INET
,

99 .
sö_p‹t
 = 
	`ht⁄s
(
p‹t
),

101 i‡(
	`öë_©⁄
(
addr
, &
ß
.
sö_addr
) == 0)

102 
	`îrx
(1, "InvÆidáddªss: %s", 
addr
);

105 
fd
 = 
	`sockë
(
AF_INET
, 
SOCK_STREAM
, 0);

106 i‡(
fd
 < 0)

107 
	`îr
(1, "socket");

108 i‡(
	`c⁄√˘
(
fd
, (c⁄° 
sockaddr
 *)&
ß
, (sa)) != 0) {

109 
	`˛o£
(
fd
);

110  
NULL
;

113 
sockÀn_t
 
tmp
;

114 
tmp
 = 1;

115 
r
 = 
	`£tsock›t
(
fd
, 
SOL_SOCKET
, 
SO_KEEPALIVE
, (*)&
tmp
, (tmp));

116 i‡(
r
) {

117 
	`≥º‹
("setsockopt");

118 
	`as£π
(0);

120 
tmp
 = 1;

121 
r
 = 
	`£tsock›t
(
fd
, 
IPPROTO_TCP
, 
TCP_NODELAY
, (*)&
tmp
, (tmp));

122 i‡(
r
) {

123 
	`≥º‹
("setsockopt");

124 
	`as£π
(0);

128  
	`gdb_begö
(
fd
);

129 
	}
}

132 
	$gdb_íd
(
gdb_c⁄n
 *
c⁄n
) {

133 
	`f˛o£
(
c⁄n
->
ö
);

134 
	`f˛o£
(
c⁄n
->
out
);

135 
	`‰ì
(
c⁄n
);

136 
	}
}

138 
	$£nd_∑ckë
(
FILE
 *
out
, c⁄° 
uöt8_t
 *
comm™d
, 
size_t
 
size
) {

140 
uöt8_t
 
sum
 = 0;

141 
size_t
 
i
;

142 
i
 = 0; i < 
size
; ++i)

143 
sum
 +
comm™d
[
i
];

149 
	`Âutc
('$', 
out
);

150 
	`fwrôe
(
comm™d
, 1, 
size
, 
out
);

151 
	`Ârötf
(
out
, "#%02X", 
sum
);

152 
	`fÊush
(
out
);

154 i‡(
	`„º‹
(
out
))

155 
	`îr
(1, "send");

156 i‡(
	`„of
(
out
))

157 
	`îrx
(0, "send: Connection closed");

158 
	}
}

160 
	$gdb_£nd
(
gdb_c⁄n
 *
c⁄n
, c⁄° 
uöt8_t
 *
comm™d
, 
size_t
 
size
) {

161 
boﬁ
 
acked
 = 
Ál£
;

163 
	`£nd_∑ckë
(
c⁄n
->
out
, 
comm™d
, 
size
);

165 i‡(!
c⁄n
->
ack
)

169 
acked
 = 
	`fgëc
(
c⁄n
->
ö
) == '+';

170 } !
acked
);

171 
	}
}

173 
uöt8_t
* 
	$ªcv_∑ckë
(
FILE
 *
ö
, 
size_t
 *
ªt_size
, 
boﬁ
* 
ªt_sum_ok
) {

174 
size_t
 
i
 = 0;

175 
size_t
 
size
 = 4096;

176 
uöt8_t
 *
ª∂y
 = 
	`mÆloc
(
size
);

177 i‡(
ª∂y
 =
NULL
)

178 
	`îr
(1, "malloc");

180 
c
;

181 
uöt8_t
 
sum
 = 0;

182 
boﬁ
 
esˇ≥
 = 
Ál£
;

185 (
c
 = 
	`fgëc
(
ö
)Ë!
EOF
 && c != '$');

187 (
c
 = 
	`fgëc
(
ö
)Ë!
EOF
) {

188 
sum
 +
c
;

189 
c
) {

191 
i
 = 0;

192 
sum
 = 0;

193 
esˇ≥
 = 
Ál£
;

197 
sum
 -
c
;

199 
uöt8_t
 
msb
 = 
	`fgëc
(
ö
);

200 
uöt8_t
 
lsb
 = 
	`fgëc
(
ö
);

201 *
ªt_sum_ok
 = 
sum
 =
	`gdb_decode_hex
(
msb
, 
lsb
);

203 *
ªt_size
 = 
i
;

206 i‡(
i
 =
size
) {

207 
ª∂y
 = 
	`ªÆloc
‘ïly, 
size
 + 1);

208 i‡(
ª∂y
 =
NULL
)

209 
	`îr
(1, "realloc");

211 
ª∂y
[
i
] = '\0';

213  
ª∂y
;

216 
esˇ≥
 = 
åue
;

225 i‡(
i
 > 0) {

226 
c2
 = 
	`fgëc
(
ö
);

227 i‡(
c2
 < 29 || c2 > 126 || c2 == '$' || c2 == '#') {

229 
	`ungëc
(
c2
, 
ö
);

231 
cou¡
 = 
c2
 - 29;

234 i‡(
i
 + 
cou¡
 > 
size
) {

235 
size
 *= 2;

236 
ª∂y
 = 
	`ªÆloc
‘ïly, 
size
);

237 i‡(
ª∂y
 =
NULL
)

238 
	`îr
(1, "realloc");

242 
	`mem£t
(&
ª∂y
[
i
],Ñïly[ò- 1], 
cou¡
);

243 
i
 +
cou¡
;

244 
sum
 +
c2
;

251 i‡(
esˇ≥
) {

252 
c
 ^= 0x20;

253 
esˇ≥
 = 
Ál£
;

257 i‡(
i
 =
size
) {

258 
size
 *= 2;

259 
ª∂y
 = 
	`ªÆloc
‘ïly, 
size
);

260 i‡(
ª∂y
 =
NULL
)

261 
	`îr
(1, "realloc");

265 
ª∂y
[
i
++] = 
c
;

268 i‡(
	`„º‹
(
ö
))

269 
	`îr
(1, "recv");

270 i‡(
	`„of
(
ö
))

271 
	`îrx
(0, "recv: Connection closed");

273 
	`îrx
(1, "recv: Unknown connectionÉrror");

274 
	}
}

276 
uöt8_t
* 
	$gdb_ªcv
(
gdb_c⁄n
 *
c⁄n
, 
size_t
 *
size
) {

277 
uöt8_t
 *
ª∂y
;

278 
boﬁ
 
acked
 = 
Ál£
;

280 
ª∂y
 = 
	`ªcv_∑ckë
(
c⁄n
->
ö
, 
size
, &
acked
);

282 i‡(!
c⁄n
->
ack
)

286 
	`Âutc
(
acked
 ? '+' : '-', 
c⁄n
->
out
);

287 
	`fÊush
(
c⁄n
->
out
);

288 } !
acked
);

290  
ª∂y
;

291 
	}
}

293 c⁄° * 
	$gdb_°¨t_nﬂck
(
gdb_c⁄n
 *
c⁄n
) {

294 c⁄° 
cmd
[] = "QStartNoAckMode";

295 
	`gdb_£nd
(
c⁄n
, (c⁄° 
uöt8_t
 *)
cmd
, (cmd) - 1);

297 
size_t
 
size
;

298 
uöt8_t
 *
ª∂y
 = 
	`gdb_ªcv
(
c⁄n
, &
size
);

299 
boﬁ
 
ok
 = 
size
 =2 && !
	`°rcmp
((c⁄° *)
ª∂y
, "OK");

300 
	`‰ì
(
ª∂y
);

302 i‡(
ok
)

303 
c⁄n
->
ack
 = 
Ál£
;

304  
ok
 ? "OK" : "";

305 
	}
}

	@nemu/tools/spike-diff/difftest.cc

1 
	~"sim.h
"

2 
	~"../../ö˛ude/comm⁄.h
"

3 
	~<dif·e°-def.h
>

5 #ifde‡
CONFIG_ISA_riscv32


6 #unde‡
DEFAULT_ISA


7 
	#DEFAULT_ISA
 "RV32IM"

	)

10 
	g°d
::
ve˘‹
<
°d
::
∑ú
<
ªg_t
, 
	gab°ø˘_devi˚_t
*>> 
	gdif·e°_∂ugö_devi˚s
;

11 
	g°d
::
ve˘‹
<
°d
::
°rög
> 
dif·e°_htif_¨gs
;

12 
	g°d
::
ve˘‹
<
°d
::
∑ú
<
ªg_t
, 
	gmem_t
*>> 
dif·e°_mem
(

13 1, 
°d
::
make_∑ú
(
ªg_t
(
DRAM_BASE
), 
√w
 
mem_t
(
CONFIG_MSIZE
)));

14 
	g°d
::
ve˘‹
<> 
dif·e°_h¨tids
;

15 
debug_moduÀ_c⁄fig_t
 
	gdif·e°_dm_c⁄fig
 = {

16 .
¥ogbufsize
 = 2,

17 .
	gmax_bus_ma°î_bôs
 = 0,

18 .
	gªquúe_authítiˇti⁄
 = 
Ál£
,

19 .
	gab°ø˘_πi
 = 0,

20 .
	gsuµ‹t_ha£l
 = 
åue
,

21 .
	gsuµ‹t_ab°ø˘_c§_ac˚ss
 = 
åue
,

22 .
	gsuµ‹t_hÆtgroups
 = 
åue
,

23 .
	gsuµ‹t_im≥bªak
 = 
åue


26 
	sdiff_c⁄ãxt_t
 {

27 
w‹d_t
 
	mg¥
[32];

28 
w‹d_t
 
	mpc
;

31 
sim_t
* 
	gs
 = 
NULL
;

32 
¥o˚ss‹_t
 *
	gp
 = 
NULL
;

33 
°©e_t
 *
	g°©e
 = 
NULL
;

35 
	gsim_t
::
	$diff_öô
(
p‹t
) {

36 
p
 = 
	`gë_c‹e
("0");

37 
°©e
 = 
p
->
	`gë_°©e
();

38 
	}
}

40 
	gsim_t
::
	$diff_°ï
(
uöt64_t
 
n
) {

41 
	`°ï
(
n
);

42 
	}
}

44 
	gsim_t
::
	$diff_gë_ªgs
(* 
diff_c⁄ãxt
) {

45 
diff_c⁄ãxt_t
* 
˘x
 = (diff_c⁄ãxt_t*)
diff_c⁄ãxt
;

46 
i
 = 0; i < 
NXPR
; i++) {

47 
˘x
->
g¥
[
i
] = 
°©e
->
XPR
[i];

49 
˘x
->
pc
 = 
°©e
->pc;

50 
	}
}

52 
	gsim_t
::
	$diff_£t_ªgs
(* 
diff_c⁄ãxt
) {

53 
diff_c⁄ãxt_t
* 
˘x
 = (diff_c⁄ãxt_t*)
diff_c⁄ãxt
;

54 
i
 = 0; i < 
NXPR
; i++) {

55 
°©e
->
XPR
.
	`wrôe
(
i
, (
sw‹d_t
)
˘x
->
g¥
[i]);

57 
°©e
->
pc
 = 
˘x
->pc;

58 
	}
}

60 
	gsim_t
::
	$diff_mem˝y
(
ªg_t
 
de°
, * 
§c
, 
size_t
 
n
) {

61 
mmu_t
* 
mmu
 = 
p
->
	`gë_mmu
();

62 
size_t
 
i
 = 0; i < 
n
; i++) {

63 
mmu
->
	`°‹e_uöt8
(
de°
+
i
, *((
uöt8_t
*)
§c
+i));

65 
	}
}

69 
dif·e°_mem˝y
(
∑ddr_t
 
addr
, *
buf
, 
size_t
 
n
, 
boﬁ
 
dúe˘i⁄
) {

70 i‡(
dúe˘i⁄
 =
DIFFTEST_TO_REF
) {

71 
s
->
diff_mem˝y
(
addr
, 
buf
, 
n
);

73 
as£π
(0);

77 
dif·e°_ªg˝y
(* 
dut
, 
boﬁ
 
dúe˘i⁄
) {

78 i‡(
dúe˘i⁄
 =
DIFFTEST_TO_REF
) {

79 
s
->
diff_£t_ªgs
(
dut
);

81 
s
->
diff_gë_ªgs
(
dut
);

85 
dif·e°_exec
(
uöt64_t
 
n
) {

86 
s
->
diff_°ï
(
n
);

89 
dif·e°_öô
(
p‹t
) {

90 
dif·e°_htif_¨gs
.
push_back
("");

91 
s
 = 
√w
 
sim_t
(
DEFAULT_ISA
, 
DEFAULT_PRIV
, 
DEFAULT_VARCH
, 1, 
Ál£
, false,

92 0, 0, 
NULL
, 
ªg_t
(-1), 
dif·e°_mem
, 
dif·e°_∂ugö_devi˚s
, 
dif·e°_htif_¨gs
,

93 
°d
::
move
(
dif·e°_h¨tids
), 
dif·e°_dm_c⁄fig
, 
nuŒ±r
, 
Ál£
, 
NULL
, 
åue
);

94 
s
->
diff_öô
(
p‹t
);

97 
dif·e°_øi£_öå
(
uöt64_t
 
NO
) {

98 
å≠_t
 
t
(
NO
);

99 
p
->
èke_å≠_public
(
t
, 
°©e
->
pc
);

	@
1
.
0
555
18623
abstract-machine/am/include/am.h
abstract-machine/am/include/amdev.h
abstract-machine/am/include/arch/mips32-nemu.h
abstract-machine/am/include/arch/native.h
abstract-machine/am/include/arch/riscv32-nemu.h
abstract-machine/am/include/arch/riscv64-mycpu.h
abstract-machine/am/include/arch/riscv64-nemu.h
abstract-machine/am/include/arch/spike.h
abstract-machine/am/include/arch/x86-nemu.h
abstract-machine/am/include/arch/x86-qemu.h
abstract-machine/am/include/arch/x86_64-qemu.h
abstract-machine/am/src/mips/mips32.h
abstract-machine/am/src/mips/nemu/cte.c
abstract-machine/am/src/mips/nemu/vme.c
abstract-machine/am/src/native/cte.c
abstract-machine/am/src/native/ioe.c
abstract-machine/am/src/native/ioe/audio.c
abstract-machine/am/src/native/ioe/disk.c
abstract-machine/am/src/native/ioe/gpu.c
abstract-machine/am/src/native/ioe/input.c
abstract-machine/am/src/native/ioe/timer.c
abstract-machine/am/src/native/mpe.c
abstract-machine/am/src/native/platform.c
abstract-machine/am/src/native/platform.h
abstract-machine/am/src/native/trm.c
abstract-machine/am/src/native/vme.c
abstract-machine/am/src/platform/dummy/cte.c
abstract-machine/am/src/platform/dummy/ioe.c
abstract-machine/am/src/platform/dummy/mpe.c
abstract-machine/am/src/platform/dummy/trm.c
abstract-machine/am/src/platform/dummy/vme.c
abstract-machine/am/src/platform/nemu/include/nemu.h
abstract-machine/am/src/platform/nemu/ioe/audio.c
abstract-machine/am/src/platform/nemu/ioe/disk.c
abstract-machine/am/src/platform/nemu/ioe/gpu.c
abstract-machine/am/src/platform/nemu/ioe/input.c
abstract-machine/am/src/platform/nemu/ioe/ioe.c
abstract-machine/am/src/platform/nemu/ioe/timer.c
abstract-machine/am/src/platform/nemu/mpe.c
abstract-machine/am/src/platform/nemu/trm.c
abstract-machine/am/src/riscv/mycpu/cte.c
abstract-machine/am/src/riscv/mycpu/input.c
abstract-machine/am/src/riscv/mycpu/ioe.c
abstract-machine/am/src/riscv/mycpu/mpe.c
abstract-machine/am/src/riscv/mycpu/timer.c
abstract-machine/am/src/riscv/mycpu/trm.c
abstract-machine/am/src/riscv/mycpu/vme.c
abstract-machine/am/src/riscv/nemu/cte.c
abstract-machine/am/src/riscv/nemu/vme.c
abstract-machine/am/src/riscv/riscv.h
abstract-machine/am/src/riscv/spike/atomic.h
abstract-machine/am/src/riscv/spike/htif.c
abstract-machine/am/src/riscv/spike/htif.h
abstract-machine/am/src/riscv/spike/ioe.c
abstract-machine/am/src/riscv/spike/timer.c
abstract-machine/am/src/riscv/spike/trm.c
abstract-machine/am/src/x86/nemu/cte.c
abstract-machine/am/src/x86/nemu/vme.c
abstract-machine/am/src/x86/qemu/boot/main.c
abstract-machine/am/src/x86/qemu/cte.c
abstract-machine/am/src/x86/qemu/ioe.c
abstract-machine/am/src/x86/qemu/mpe.c
abstract-machine/am/src/x86/qemu/trm.c
abstract-machine/am/src/x86/qemu/vme.c
abstract-machine/am/src/x86/qemu/x86-qemu.h
abstract-machine/am/src/x86/x86.h
abstract-machine/klib/include/klib-macros.h
abstract-machine/klib/include/klib.h
abstract-machine/klib/src/cpp.c
abstract-machine/klib/src/int64.c
abstract-machine/klib/src/stdio.c
abstract-machine/klib/src/stdlib.c
abstract-machine/klib/src/string.c
am-kernels/benchmarks/coremark/include/core_portme.h
am-kernels/benchmarks/coremark/include/coremark.h
am-kernels/benchmarks/coremark/src/core_list_join.c
am-kernels/benchmarks/coremark/src/core_main.c
am-kernels/benchmarks/coremark/src/core_matrix.c
am-kernels/benchmarks/coremark/src/core_portme.c
am-kernels/benchmarks/coremark/src/core_state.c
am-kernels/benchmarks/coremark/src/core_util.c
am-kernels/benchmarks/dhrystone/dry.c
am-kernels/benchmarks/microbench/include/benchmark.h
am-kernels/benchmarks/microbench/src/15pz/15pz.cc
am-kernels/benchmarks/microbench/src/15pz/heap.h
am-kernels/benchmarks/microbench/src/15pz/puzzle.h
am-kernels/benchmarks/microbench/src/bench.c
am-kernels/benchmarks/microbench/src/bf/bf.c
am-kernels/benchmarks/microbench/src/dinic/dinic.cc
am-kernels/benchmarks/microbench/src/fib/fib.c
am-kernels/benchmarks/microbench/src/lzip/lzip.c
am-kernels/benchmarks/microbench/src/lzip/quicklz.c
am-kernels/benchmarks/microbench/src/lzip/quicklz.h
am-kernels/benchmarks/microbench/src/md5/md5.c
am-kernels/benchmarks/microbench/src/qsort/qsort.c
am-kernels/benchmarks/microbench/src/queen/queen.c
am-kernels/benchmarks/microbench/src/sieve/sieve.c
am-kernels/benchmarks/microbench/src/ssort/ssort.cc
am-kernels/kernels/hello/hello.c
am-kernels/kernels/litenes/src/common.c
am-kernels/kernels/litenes/src/common.h
am-kernels/kernels/litenes/src/cpu-addressing.c
am-kernels/kernels/litenes/src/cpu-internal.h
am-kernels/kernels/litenes/src/cpu.c
am-kernels/kernels/litenes/src/cpu.h
am-kernels/kernels/litenes/src/fce.c
am-kernels/kernels/litenes/src/fce.h
am-kernels/kernels/litenes/src/main.c
am-kernels/kernels/litenes/src/mario-rom.c
am-kernels/kernels/litenes/src/memory.c
am-kernels/kernels/litenes/src/memory.h
am-kernels/kernels/litenes/src/mmc.c
am-kernels/kernels/litenes/src/mmc.h
am-kernels/kernels/litenes/src/ppu.c
am-kernels/kernels/litenes/src/ppu.h
am-kernels/kernels/litenes/src/psg.c
am-kernels/kernels/litenes/src/psg.h
am-kernels/kernels/slider/main.c
am-kernels/kernels/thread-os/thread-os.c
am-kernels/kernels/typing-game/font.c
am-kernels/kernels/typing-game/game.c
am-kernels/tests/am-tests/include/amtest.h
am-kernels/tests/am-tests/src/main.c
am-kernels/tests/am-tests/src/tests/audio.c
am-kernels/tests/am-tests/src/tests/devscan.c
am-kernels/tests/am-tests/src/tests/hello.c
am-kernels/tests/am-tests/src/tests/intr.c
am-kernels/tests/am-tests/src/tests/keyboard.c
am-kernels/tests/am-tests/src/tests/mp.c
am-kernels/tests/am-tests/src/tests/rtc.c
am-kernels/tests/am-tests/src/tests/video.c
am-kernels/tests/am-tests/src/tests/vm.c
am-kernels/tests/cpu-tests/include/trap.h
am-kernels/tests/cpu-tests/tests/add-longlong.c
am-kernels/tests/cpu-tests/tests/add.c
am-kernels/tests/cpu-tests/tests/bit.c
am-kernels/tests/cpu-tests/tests/bubble-sort.c
am-kernels/tests/cpu-tests/tests/div.c
am-kernels/tests/cpu-tests/tests/dummy.c
am-kernels/tests/cpu-tests/tests/fact.c
am-kernels/tests/cpu-tests/tests/fib.c
am-kernels/tests/cpu-tests/tests/goldbach.c
am-kernels/tests/cpu-tests/tests/hello-str.c
am-kernels/tests/cpu-tests/tests/if-else.c
am-kernels/tests/cpu-tests/tests/leap-year.c
am-kernels/tests/cpu-tests/tests/load-store.c
am-kernels/tests/cpu-tests/tests/matrix-mul.c
am-kernels/tests/cpu-tests/tests/max.c
am-kernels/tests/cpu-tests/tests/min3.c
am-kernels/tests/cpu-tests/tests/mov-c.c
am-kernels/tests/cpu-tests/tests/movsx.c
am-kernels/tests/cpu-tests/tests/mul-longlong.c
am-kernels/tests/cpu-tests/tests/pascal.c
am-kernels/tests/cpu-tests/tests/prime.c
am-kernels/tests/cpu-tests/tests/quick-sort.c
am-kernels/tests/cpu-tests/tests/recursion.c
am-kernels/tests/cpu-tests/tests/select-sort.c
am-kernels/tests/cpu-tests/tests/shift.c
am-kernels/tests/cpu-tests/tests/shuixianhua.c
am-kernels/tests/cpu-tests/tests/string.c
am-kernels/tests/cpu-tests/tests/sub-longlong.c
am-kernels/tests/cpu-tests/tests/sum.c
am-kernels/tests/cpu-tests/tests/switch.c
am-kernels/tests/cpu-tests/tests/to-lower-case.c
am-kernels/tests/cpu-tests/tests/unalign.c
am-kernels/tests/cpu-tests/tests/wanshu.c
fceux-am/src/boards/01-222.cpp
fceux-am/src/boards/09-034a.cpp
fceux-am/src/boards/103.cpp
fceux-am/src/boards/106.cpp
fceux-am/src/boards/108.cpp
fceux-am/src/boards/112.cpp
fceux-am/src/boards/116.cpp
fceux-am/src/boards/117.cpp
fceux-am/src/boards/120.cpp
fceux-am/src/boards/121.cpp
fceux-am/src/boards/12in1.cpp
fceux-am/src/boards/15.cpp
fceux-am/src/boards/151.cpp
fceux-am/src/boards/156.cpp
fceux-am/src/boards/158B.cpp
fceux-am/src/boards/164.cpp
fceux-am/src/boards/168.cpp
fceux-am/src/boards/170.cpp
fceux-am/src/boards/175.cpp
fceux-am/src/boards/176.cpp
fceux-am/src/boards/177.cpp
fceux-am/src/boards/178.cpp
fceux-am/src/boards/18.cpp
fceux-am/src/boards/183.cpp
fceux-am/src/boards/185.cpp
fceux-am/src/boards/186.cpp
fceux-am/src/boards/187.cpp
fceux-am/src/boards/189.cpp
fceux-am/src/boards/190.cpp
fceux-am/src/boards/193.cpp
fceux-am/src/boards/199.cpp
fceux-am/src/boards/206.cpp
fceux-am/src/boards/208.cpp
fceux-am/src/boards/222.cpp
fceux-am/src/boards/225.cpp
fceux-am/src/boards/228.cpp
fceux-am/src/boards/230.cpp
fceux-am/src/boards/232.cpp
fceux-am/src/boards/234.cpp
fceux-am/src/boards/235.cpp
fceux-am/src/boards/244.cpp
fceux-am/src/boards/246.cpp
fceux-am/src/boards/252.cpp
fceux-am/src/boards/253.cpp
fceux-am/src/boards/28.cpp
fceux-am/src/boards/32.cpp
fceux-am/src/boards/33.cpp
fceux-am/src/boards/34.cpp
fceux-am/src/boards/36.cpp
fceux-am/src/boards/3d-block.cpp
fceux-am/src/boards/40.cpp
fceux-am/src/boards/41.cpp
fceux-am/src/boards/411120-c.cpp
fceux-am/src/boards/42.cpp
fceux-am/src/boards/43.cpp
fceux-am/src/boards/46.cpp
fceux-am/src/boards/50.cpp
fceux-am/src/boards/51.cpp
fceux-am/src/boards/57.cpp
fceux-am/src/boards/603-5052.cpp
fceux-am/src/boards/62.cpp
fceux-am/src/boards/65.cpp
fceux-am/src/boards/67.cpp
fceux-am/src/boards/68.cpp
fceux-am/src/boards/69.cpp
fceux-am/src/boards/71.cpp
fceux-am/src/boards/72.cpp
fceux-am/src/boards/77.cpp
fceux-am/src/boards/79.cpp
fceux-am/src/boards/80.cpp
fceux-am/src/boards/80013-B.cpp
fceux-am/src/boards/8157.cpp
fceux-am/src/boards/82.cpp
fceux-am/src/boards/8237.cpp
fceux-am/src/boards/830118C.cpp
fceux-am/src/boards/88.cpp
fceux-am/src/boards/8in1.cpp
fceux-am/src/boards/90.cpp
fceux-am/src/boards/91.cpp
fceux-am/src/boards/96.cpp
fceux-am/src/boards/99.cpp
fceux-am/src/boards/BMW8544.cpp
fceux-am/src/boards/F-15.cpp
fceux-am/src/boards/a9746.cpp
fceux-am/src/boards/ac-08.cpp
fceux-am/src/boards/addrlatch.cpp
fceux-am/src/boards/ax5705.cpp
fceux-am/src/boards/bandai.cpp
fceux-am/src/boards/bb.cpp
fceux-am/src/boards/bmc13in1jy110.cpp
fceux-am/src/boards/bmc42in1r.cpp
fceux-am/src/boards/bmc64in1nr.cpp
fceux-am/src/boards/bmc70in1.cpp
fceux-am/src/boards/bonza.cpp
fceux-am/src/boards/bs-5.cpp
fceux-am/src/boards/cheapocabra.cpp
fceux-am/src/boards/cityfighter.cpp
fceux-am/src/boards/coolboy.cpp
fceux-am/src/boards/dance2000.cpp
fceux-am/src/boards/datalatch.cpp
fceux-am/src/boards/dream.cpp
fceux-am/src/boards/edu2000.cpp
fceux-am/src/boards/eh8813a.cpp
fceux-am/src/boards/emu2413.c
fceux-am/src/boards/emu2413.h
fceux-am/src/boards/et-100.cpp
fceux-am/src/boards/et-4320.cpp
fceux-am/src/boards/famicombox.cpp
fceux-am/src/boards/ffe.cpp
fceux-am/src/boards/fk23c.cpp
fceux-am/src/boards/ghostbusters63in1.cpp
fceux-am/src/boards/gs-2004.cpp
fceux-am/src/boards/gs-2013.cpp
fceux-am/src/boards/h2288.cpp
fceux-am/src/boards/hp10xx_hp20xx.cpp
fceux-am/src/boards/hp898f.cpp
fceux-am/src/boards/inlnsf.cpp
fceux-am/src/boards/karaoke.cpp
fceux-am/src/boards/kof97.cpp
fceux-am/src/boards/ks7010.cpp
fceux-am/src/boards/ks7012.cpp
fceux-am/src/boards/ks7013.cpp
fceux-am/src/boards/ks7016.cpp
fceux-am/src/boards/ks7017.cpp
fceux-am/src/boards/ks7030.cpp
fceux-am/src/boards/ks7031.cpp
fceux-am/src/boards/ks7032.cpp
fceux-am/src/boards/ks7037.cpp
fceux-am/src/boards/ks7057.cpp
fceux-am/src/boards/le05.cpp
fceux-am/src/boards/lh32.cpp
fceux-am/src/boards/lh53.cpp
fceux-am/src/boards/malee.cpp
fceux-am/src/boards/mapinc.h
fceux-am/src/boards/mihunche.cpp
fceux-am/src/boards/mmc1.cpp
fceux-am/src/boards/mmc2and4.cpp
fceux-am/src/boards/mmc3.cpp
fceux-am/src/boards/mmc3.h
fceux-am/src/boards/mmc5.cpp
fceux-am/src/boards/n106.cpp
fceux-am/src/boards/n625092.cpp
fceux-am/src/boards/novel.cpp
fceux-am/src/boards/onebus.cpp
fceux-am/src/boards/pec-586.cpp
fceux-am/src/boards/rt-01.cpp
fceux-am/src/boards/sa-9602b.cpp
fceux-am/src/boards/sachen.cpp
fceux-am/src/boards/sb-2000.cpp
fceux-am/src/boards/sc-127.cpp
fceux-am/src/boards/sheroes.cpp
fceux-am/src/boards/sl1632.cpp
fceux-am/src/boards/subor.cpp
fceux-am/src/boards/super24.cpp
fceux-am/src/boards/supervision.cpp
fceux-am/src/boards/t-227-1.cpp
fceux-am/src/boards/t-262.cpp
fceux-am/src/boards/tengen.cpp
fceux-am/src/boards/tf-1201.cpp
fceux-am/src/boards/transformer.cpp
fceux-am/src/boards/unrom512.cpp
fceux-am/src/boards/vrc1.cpp
fceux-am/src/boards/vrc2and4.cpp
fceux-am/src/boards/vrc3.cpp
fceux-am/src/boards/vrc5.cpp
fceux-am/src/boards/vrc6.cpp
fceux-am/src/boards/vrc7.cpp
fceux-am/src/boards/vrc7p.cpp
fceux-am/src/boards/yoko.cpp
fceux-am/src/cart.cpp
fceux-am/src/cart.h
fceux-am/src/config.h
fceux-am/src/drawing.cpp
fceux-am/src/drawing.h
fceux-am/src/driver.h
fceux-am/src/drivers/common/vidblit.cpp
fceux-am/src/drivers/common/vidblit.h
fceux-am/src/drivers/sdl/dface.h
fceux-am/src/drivers/sdl/input.cpp
fceux-am/src/drivers/sdl/input.h
fceux-am/src/drivers/sdl/keyscan.h
fceux-am/src/drivers/sdl/main.h
fceux-am/src/drivers/sdl/sdl-icon.h
fceux-am/src/drivers/sdl/sdl-sound.cpp
fceux-am/src/drivers/sdl/sdl-throttle.cpp
fceux-am/src/drivers/sdl/sdl-video.cpp
fceux-am/src/drivers/sdl/sdl-video.h
fceux-am/src/drivers/sdl/sdl.cpp
fceux-am/src/drivers/sdl/sdl.h
fceux-am/src/drivers/sdl/throttle.h
fceux-am/src/emufile.cpp
fceux-am/src/emufile.h
fceux-am/src/fceu.cpp
fceux-am/src/fceu.h
fceux-am/src/fcoeffs.h
fceux-am/src/file.cpp
fceux-am/src/file.h
fceux-am/src/filter.cpp
fceux-am/src/filter.h
fceux-am/src/fir/c44100ntsc.h
fceux-am/src/fir/c44100pal.h
fceux-am/src/fir/c48000ntsc.h
fceux-am/src/fir/c48000pal.h
fceux-am/src/fir/c96000ntsc.h
fceux-am/src/fir/c96000pal.h
fceux-am/src/git.h
fceux-am/src/ines-bad.h
fceux-am/src/ines-correct.h
fceux-am/src/ines.cpp
fceux-am/src/ines.h
fceux-am/src/input.cpp
fceux-am/src/input.h
fceux-am/src/palette.cpp
fceux-am/src/palette.h
fceux-am/src/palettes/palettes.h
fceux-am/src/palettes/rp2c04001.h
fceux-am/src/palettes/rp2c04002.h
fceux-am/src/palettes/rp2c04003.h
fceux-am/src/palettes/rp2c05004.h
fceux-am/src/ppu.cpp
fceux-am/src/ppu.h
fceux-am/src/sound.cpp
fceux-am/src/sound.h
fceux-am/src/state.h
fceux-am/src/types.h
fceux-am/src/unif.h
fceux-am/src/unused.cpp
fceux-am/src/utils/general.cpp
fceux-am/src/utils/general.h
fceux-am/src/utils/md5.cpp
fceux-am/src/utils/md5.h
fceux-am/src/utils/memory.cpp
fceux-am/src/utils/memory.h
fceux-am/src/utils/valuearray.h
fceux-am/src/version.h
fceux-am/src/video.cpp
fceux-am/src/video.h
fceux-am/src/x6502.cpp
fceux-am/src/x6502.h
fceux-am/src/x6502abbrev.h
fceux-am/src/x6502struct.h
nemu/include/common.h
nemu/include/config/audio/ctl/mmio.h
nemu/include/config/cc.h
nemu/include/config/cc/debug.h
nemu/include/config/cc/gcc.h
nemu/include/config/cc/o2.h
nemu/include/config/cc/og.h
nemu/include/config/cc/opt.h
nemu/include/config/device.h
nemu/include/config/difftest/ref/name.h
nemu/include/config/difftest/ref/path.h
nemu/include/config/disk/ctl/mmio.h
nemu/include/config/disk/img/path.h
nemu/include/config/engine.h
nemu/include/config/engine/interpreter.h
nemu/include/config/fb/addr.h
nemu/include/config/has/audio.h
nemu/include/config/has/disk.h
nemu/include/config/has/keyboard.h
nemu/include/config/has/serial.h
nemu/include/config/has/timer.h
nemu/include/config/has/vga.h
nemu/include/config/i8042/data/mmio.h
nemu/include/config/isa.h
nemu/include/config/isa/riscv32.h
nemu/include/config/isa/riscv64.h
nemu/include/config/isa64.h
nemu/include/config/itrace.h
nemu/include/config/itrace/cond.h
nemu/include/config/mbase.h
nemu/include/config/mem/random.h
nemu/include/config/mode/system.h
nemu/include/config/msize.h
nemu/include/config/pc/reset/offset.h
nemu/include/config/pmem/garray.h
nemu/include/config/rt/check.h
nemu/include/config/rtc/mmio.h
nemu/include/config/sb/addr.h
nemu/include/config/sb/size.h
nemu/include/config/serial/mmio.h
nemu/include/config/target/native/elf.h
nemu/include/config/timer/gettimeofday.h
nemu/include/config/trace.h
nemu/include/config/trace/end.h
nemu/include/config/trace/start.h
nemu/include/config/vga/ctl/mmio.h
nemu/include/config/vga/show/screen.h
nemu/include/config/vga/size/400x300.h
nemu/include/cpu/cpu.h
nemu/include/cpu/decode.h
nemu/include/cpu/difftest.h
nemu/include/cpu/ifetch.h
nemu/include/debug.h
nemu/include/device/alarm.h
nemu/include/device/map.h
nemu/include/device/mmio.h
nemu/include/difftest-def.h
nemu/include/generated/autoconf.h
nemu/include/isa.h
nemu/include/macro.h
nemu/include/memory/host.h
nemu/include/memory/paddr.h
nemu/include/memory/vaddr.h
nemu/include/utils.h
nemu/resource/sdcard/nemu.c
nemu/src/cpu/cpu-exec.c
nemu/src/cpu/difftest/dut.c
nemu/src/device/alarm.c
nemu/src/device/audio.c
nemu/src/device/device.c
nemu/src/device/disk.c
nemu/src/device/intr.c
nemu/src/device/io/map.c
nemu/src/device/io/mmio.c
nemu/src/device/io/port-io.c
nemu/src/device/keyboard.c
nemu/src/device/mmc.h
nemu/src/device/sdcard.c
nemu/src/device/serial.c
nemu/src/device/timer.c
nemu/src/device/vga.c
nemu/src/engine/interpreter/hostcall.c
nemu/src/engine/interpreter/init.c
nemu/src/isa/riscv32/difftest/dut.c
nemu/src/isa/riscv32/include/isa-def.h
nemu/src/isa/riscv32/init.c
nemu/src/isa/riscv32/inst.c
nemu/src/isa/riscv32/local-include/reg.h
nemu/src/isa/riscv32/logo.c
nemu/src/isa/riscv32/reg.c
nemu/src/isa/riscv32/system/intr.c
nemu/src/isa/riscv32/system/mmu.c
nemu/src/isa/riscv64/difftest/dut.c
nemu/src/isa/riscv64/include/isa-def.h
nemu/src/isa/riscv64/init.c
nemu/src/isa/riscv64/inst.c
nemu/src/isa/riscv64/local-include/reg.h
nemu/src/isa/riscv64/logo.c
nemu/src/isa/riscv64/reg.c
nemu/src/isa/riscv64/system/intr.c
nemu/src/isa/riscv64/system/mmu.c
nemu/src/memory/paddr.c
nemu/src/memory/vaddr.c
nemu/src/monitor/monitor.c
nemu/src/monitor/sdb/expr.c
nemu/src/monitor/sdb/sdb.c
nemu/src/monitor/sdb/sdb.h
nemu/src/monitor/sdb/watchpoint.c
nemu/src/nemu-main.c
nemu/src/utils/disasm.cc
nemu/src/utils/log.c
nemu/src/utils/rand.c
nemu/src/utils/state.c
nemu/src/utils/timer.c
nemu/tools/fixdep/fixdep.c
nemu/tools/gen-expr/gen-expr.c
nemu/tools/kconfig/build/lexer.lex.c
nemu/tools/kconfig/build/parser.tab.c
nemu/tools/kconfig/build/parser.tab.h
nemu/tools/kconfig/conf.c
nemu/tools/kconfig/confdata.c
nemu/tools/kconfig/expr.c
nemu/tools/kconfig/expr.h
nemu/tools/kconfig/list.h
nemu/tools/kconfig/lkc.h
nemu/tools/kconfig/lkc_proto.h
nemu/tools/kconfig/lxdialog/checklist.c
nemu/tools/kconfig/lxdialog/dialog.h
nemu/tools/kconfig/lxdialog/inputbox.c
nemu/tools/kconfig/lxdialog/menubox.c
nemu/tools/kconfig/lxdialog/textbox.c
nemu/tools/kconfig/lxdialog/util.c
nemu/tools/kconfig/lxdialog/yesno.c
nemu/tools/kconfig/mconf.c
nemu/tools/kconfig/menu.c
nemu/tools/kconfig/preprocess.c
nemu/tools/kconfig/symbol.c
nemu/tools/kconfig/util.c
nemu/tools/kvm-diff/include/paddr.h
nemu/tools/kvm-diff/src/kvm.c
nemu/tools/qemu-diff/include/common.h
nemu/tools/qemu-diff/include/isa.h
nemu/tools/qemu-diff/include/protocol.h
nemu/tools/qemu-diff/src/diff-test.c
nemu/tools/qemu-diff/src/gdb-host.c
nemu/tools/qemu-diff/src/isa.c
nemu/tools/qemu-diff/src/protocol.c
nemu/tools/spike-diff/difftest.cc
